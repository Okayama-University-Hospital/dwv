{"version":3,"file":"dwv.min.js","mappings":"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IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC1skCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC9lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAMrpCS,eAAgB,CACdixmCU,WAAY,CACVZ,IAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KACpnCC,MAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAC3lCC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OCrMrgCW,EAAS,CAM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","sources":["webpack://dwv/webpack/universalModuleDefinition","webpack://dwv/external umd {\"root\":\"JSZip\",\"commonjs\":\"jszip\",\"commonjs2\":\"jszip\",\"amd\":\"jszip\"}","webpack://dwv/external umd {\"root\":\"Konva\",\"commonjs\":\"konva\",\"commonjs2\":\"konva\",\"amd\":\"konva\"}","webpack://dwv/external umd {\"root\":\"MagicWand\",\"commonjs\":\"magic-wand-tool\",\"commonjs2\":\"magic-wand-tool\",\"amd\":\"konmagic-wand-tool\"}","webpack://dwv/webpack/bootstrap","webpack://dwv/webpack/runtime/compat get default export","webpack://dwv/webpack/runtime/define property getters","webpack://dwv/webpack/runtime/hasOwnProperty shorthand","webpack://dwv/webpack/runtime/make namespace object","webpack://dwv/./src/math/index.js","webpack://dwv/./src/image/rescaleLut.js","webpack://dwv/./src/image/windowCenterAndWidth.js","webpack://dwv/./src/image/windowLut.js","webpack://dwv/./src/image/luts.js","webpack://dwv/./src/utils/logger.js","webpack://dwv/./src/utils/colour.js","webpack://dwv/./src/math/vector.js","webpack://dwv/./src/math/matrix.js","webpack://dwv/./src/math/point.js","webpack://dwv/./src/dicom/dictionary.js","webpack://dwv/./src/dicom/dicomTag.js","webpack://dwv/./src/dicom/dataReader.js","webpack://dwv/./src/utils/string.js","webpack://dwv/./src/utils/array.js","webpack://dwv/./src/dicom/dataElement.js","webpack://dwv/./src/dicom/dicomParser.js","webpack://dwv/./src/utils/listen.js","webpack://dwv/./src/image/iterator.js","webpack://dwv/./src/image/rsi.js","webpack://dwv/./src/image/size.js","webpack://dwv/./src/image/spacing.js","webpack://dwv/./src/image/geometry.js","webpack://dwv/./src/dicom/dicomElementsWrapper.js","webpack://dwv/./src/image/imageFactory.js","webpack://dwv/./src/image/maskFactory.js","webpack://dwv/./src/image/image.js","webpack://dwv/./src/image/viewFactory.js","webpack://dwv/./src/image/view.js","webpack://dwv/./src/image/viewMonochrome.js","webpack://dwv/./src/image/viewPaletteColor.js","webpack://dwv/./src/image/viewRgb.js","webpack://dwv/./src/image/viewYbrFull.js","webpack://dwv/./src/image/planeHelper.js","webpack://dwv/./src/gui/layerGroup.js","webpack://dwv/./src/image/maskSegmentHelper.js","webpack://dwv/./src/app/viewController.js","webpack://dwv/./src/gui/generic.js","webpack://dwv/./src/gui/viewLayer.js","webpack://dwv/./src/gui/style.js","webpack://dwv/./src/tools/drawCommands.js","webpack://dwv/./src/app/drawController.js","webpack://dwv/./src/gui/drawLayer.js","webpack://dwv/./src/gui/stage.js","webpack://dwv/./src/io/state.js","webpack://dwv/./src/utils/uri.js","webpack://dwv/./src/tools/undo.js","webpack://dwv/./src/app/toolboxController.js","webpack://dwv/./src/utils/progress.js","webpack://dwv/./src/io/urlsLoader.js","webpack://dwv/./src/utils/thread.js","webpack://dwv/./src/image/decoder.js","webpack://dwv/./src/image/dicomBufferToView.js","webpack://dwv/./src/io/memoryLoader.js","webpack://dwv/./src/image/domReader.js","webpack://dwv/./src/io/loaderList.js","webpack://dwv/./src/io/dicomDataLoader.js","webpack://dwv/./src/io/jsonTextLoader.js","webpack://dwv/./src/io/multipartLoader.js","webpack://dwv/./src/io/rawImageLoader.js","webpack://dwv/./src/io/rawVideoLoader.js","webpack://dwv/./src/io/zipLoader.js","webpack://dwv/./src/io/filesLoader.js","webpack://dwv/./src/app/loadController.js","webpack://dwv/./src/app/dataController.js","webpack://dwv/./src/utils/operator.js","webpack://dwv/./src/tools/scrollWheel.js","webpack://dwv/./src/utils/i18n.js","webpack://dwv/./src/math/line.js","webpack://dwv/./src/math/stats.js","webpack://dwv/./src/tools/editor.js","webpack://dwv/./src/tools/draw.js","webpack://dwv/./src/math/roi.js","webpack://dwv/./src/tools/roi.js","webpack://dwv/./src/math/path.js","webpack://dwv/./src/math/bucketQueue.js","webpack://dwv/./src/math/scissors.js","webpack://dwv/./src/math/circle.js","webpack://dwv/./src/math/ellipse.js","webpack://dwv/./src/math/rectangle.js","webpack://dwv/./src/image/filter.js","webpack://dwv/./src/tools/filter.js","webpack://dwv/./src/tools/index.js","webpack://dwv/./src/tools/windowLevel.js","webpack://dwv/./src/tools/scroll.js","webpack://dwv/./src/tools/zoomPan.js","webpack://dwv/./src/tools/opacity.js","webpack://dwv/./src/tools/floodfill.js","webpack://dwv/./src/tools/livewire.js","webpack://dwv/./src/tools/arrow.js","webpack://dwv/./src/tools/circle.js","webpack://dwv/./src/tools/ellipse.js","webpack://dwv/./src/tools/freeHand.js","webpack://dwv/./src/tools/protractor.js","webpack://dwv/./src/tools/rectangle.js","webpack://dwv/./src/tools/ruler.js","webpack://dwv/./src/app/application.js","webpack://dwv/./src/dicom/dataWriter.js","webpack://dwv/./src/dicom/dicomWriter.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"konva\", \"jszip\", \"konmagic-wand-tool\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"dwv\"] = factory(require(\"konva\"), require(\"jszip\"), require(\"magic-wand-tool\"));\n\telse\n\t\troot[\"dwv\"] = factory(root[\"Konva\"], root[\"JSZip\"], root[\"MagicWand\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE__436__, __WEBPACK_EXTERNAL_MODULE__626__, __WEBPACK_EXTERNAL_MODULE__812__) {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__626__;","module.exports = __WEBPACK_EXTERNAL_MODULE__436__;","module.exports = __WEBPACK_EXTERNAL_MODULE__812__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/**\r\n * Immutable index.\r\n * Warning: the input array is NOT cloned, modifying it will\r\n *  modify the index values.\r\n */\r\nexport class Index {\r\n\r\n  /**\r\n   * Index values.\r\n   *\r\n   * @type {number[]}\r\n   */\r\n  #values;\r\n\r\n  /**\r\n   * @param {number[]} values The index values.\r\n   */\r\n  constructor(values) {\r\n    if (!values || typeof values === 'undefined') {\r\n      throw new Error('Cannot create index with no values.');\r\n    }\r\n    if (values.length === 0) {\r\n      throw new Error('Cannot create index with empty values.');\r\n    }\r\n    const valueCheck = function (val) {\r\n      return !isNaN(val);\r\n    };\r\n    if (!values.every(valueCheck)) {\r\n      throw new Error('Cannot create index with non number values.');\r\n    }\r\n    this.#values = values;\r\n  }\r\n\r\n  /**\r\n   * Get the index value at the given array index.\r\n   *\r\n   * @param {number} i The index to get.\r\n   * @returns {number|undefined} The value or undefined if not in range.\r\n   */\r\n  get(i) {\r\n    return this.#values[i];\r\n  }\r\n\r\n  /**\r\n   * Get the length of the index.\r\n   *\r\n   * @returns {number} The length.\r\n   */\r\n  length() {\r\n    return this.#values.length;\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the Index.\r\n   *\r\n   * @returns {string} The Index as a string.\r\n   */\r\n  toString() {\r\n    return '(' + this.#values.toString() + ')';\r\n  }\r\n\r\n  /**\r\n   * Get the values of this index.\r\n   *\r\n   * @returns {number[]} The array of values.\r\n   */\r\n  getValues() {\r\n    return this.#values.slice();\r\n  }\r\n\r\n  /**\r\n   * Check if the input index can be compared to this one.\r\n   *\r\n   * @param {Index} rhs The index to compare to.\r\n   * @returns {boolean} True if both indices are comparable.\r\n   */\r\n  canCompare(rhs) {\r\n    // check input\r\n    if (!rhs) {\r\n      return false;\r\n    }\r\n    // check length\r\n    if (this.length() !== rhs.length()) {\r\n      return false;\r\n    }\r\n    // seems ok!\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Check for Index equality.\r\n   *\r\n   * @param {Index} rhs The index to compare to.\r\n   * @returns {boolean} True if both indices are equal.\r\n   */\r\n  equals(rhs) {\r\n    // check if can compare\r\n    if (!this.canCompare(rhs)) {\r\n      return false;\r\n    }\r\n    // check values\r\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\r\n      if (this.get(i) !== rhs.get(i)) {\r\n        return false;\r\n      }\r\n    }\r\n    // seems ok!\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Compare indices and return different dimensions.\r\n   *\r\n   * @param {Index} rhs The index to compare to.\r\n   * @returns {number[]} The list of different dimensions.\r\n   */\r\n  compare(rhs) {\r\n    // check if can compare\r\n    if (!this.canCompare(rhs)) {\r\n      return null;\r\n    }\r\n    // check values\r\n    const diffDims = [];\r\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\r\n      if (this.get(i) !== rhs.get(i)) {\r\n        diffDims.push(i);\r\n      }\r\n    }\r\n    return diffDims;\r\n  }\r\n\r\n  /**\r\n   * Add another index to this one.\r\n   *\r\n   * @param {Index} rhs The index to add.\r\n   * @returns {Index} The index representing the sum of both indices.\r\n   */\r\n  add(rhs) {\r\n    // check if can compare\r\n    if (!this.canCompare(rhs)) {\r\n      return null;\r\n    }\r\n    // add values\r\n    const values = [];\r\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\r\n      values.push(this.get(i) + rhs.get(i));\r\n    }\r\n    // seems ok!\r\n    return new Index(values);\r\n  }\r\n\r\n  /**\r\n   * Get the current index with a new 2D base.\r\n   *\r\n   * @param {number} i The new 0 index.\r\n   * @param {number} j The new 1 index.\r\n   * @returns {Index} The new index.\r\n   */\r\n  getWithNew2D(i, j) {\r\n    const values = [i, j];\r\n    for (let l = 2, lenl = this.length(); l < lenl; ++l) {\r\n      values.push(this.get(l));\r\n    }\r\n    return new Index(values);\r\n  }\r\n\r\n  /**\r\n   * Get a string id from the index values in the form of: '#0-1_#1-2'.\r\n   *\r\n   * @param {number[]} [dims] Optional list of dimensions to use.\r\n   * @returns {string} The string id.\r\n   */\r\n  toStringId(dims) {\r\n    if (typeof dims === 'undefined') {\r\n      dims = [];\r\n      for (let j = 0; j < this.length(); ++j) {\r\n        dims.push(j);\r\n      }\r\n    }\r\n    for (let ii = 0; ii < dims.length; ++ii) {\r\n      if (dims[ii] >= this.length()) {\r\n        throw new Error('Non valid dimension for toStringId.');\r\n      }\r\n    }\r\n    let res = '';\r\n    for (let i = 0; i < dims.length; ++i) {\r\n      if (i !== 0) {\r\n        res += '_';\r\n      }\r\n      res += '#' + dims[i] + '-' + this.get(dims[i]);\r\n    }\r\n    return res;\r\n  }\r\n\r\n} // Index class\r\n\r\n/**\r\n * Get an index with values set to 0 and the input size.\r\n *\r\n * @param {number} size The size of the index.\r\n * @returns {Index} The zero index.\r\n */\r\nexport function getZeroIndex(size) {\r\n  const values = new Array(size);\r\n  values.fill(0);\r\n  return new Index(values);\r\n}\r\n\r\n/**\r\n * Get an array sort callback.\r\n * f(a,b) > 0 -> b,a\r\n * f(a,b) < 0 -> a,b\r\n * f(a,b) = 0 -> original order\r\n *\r\n * @param {number} direction The direction to use to compare indices.\r\n * @returns {Function} A function that compares two Index.\r\n */\r\nexport function getIndexCompareFunction(direction) {\r\n  return function (a, b) {\r\n    return a.get(direction) - b.get(direction);\r\n  };\r\n}\r\n\r\n/**\r\n * Get an index from an id string in the form of: '#0-1_#1-2'\r\n * (result of index.toStringId).\r\n *\r\n * @param {string} inputStr The input string.\r\n * @returns {Index} The corresponding index.\r\n */\r\nexport function getIndexFromStringId(inputStr) {\r\n  // split ids\r\n  const strIds = inputStr.split('_');\r\n  // get the size of the index\r\n  let pointLength = 0;\r\n  let dim;\r\n  for (let i = 0; i < strIds.length; ++i) {\r\n    dim = parseInt(strIds[i].substring(1, 2), 10);\r\n    if (dim > pointLength) {\r\n      pointLength = dim;\r\n    }\r\n  }\r\n  if (pointLength === 0) {\r\n    throw new Error('No dimension found in point stringId');\r\n  }\r\n  // default values\r\n  const values = new Array(pointLength);\r\n  values.fill(0);\r\n  // get other values from the input string\r\n  for (let j = 0; j < strIds.length; ++j) {\r\n    dim = parseInt(strIds[j].substring(1, 3), 10);\r\n    const value = parseInt(strIds[j].substring(3), 10);\r\n    values[dim] = value;\r\n  }\r\n  return new Index(values);\r\n}\r\n","// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {RescaleSlopeAndIntercept} from './rsi';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Rescale LUT class.\r\n * Typically converts from integer to float.\r\n */\r\nexport class RescaleLut {\r\n\r\n  /**\r\n   * The rescale slope.\r\n   *\r\n   * @type {RescaleSlopeAndIntercept}\r\n   */\r\n  #rsi;\r\n\r\n  /**\r\n   * The internal array.\r\n   *\r\n   * @type {Float32Array}\r\n   */\r\n  #lut = null;\r\n\r\n  /**\r\n   * Flag to know if the lut is ready or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isReady = false;\r\n\r\n  /**\r\n   * The size of the LUT array.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #length;\r\n\r\n  /**\r\n   * @param {RescaleSlopeAndIntercept} rsi The rescale slope and intercept.\r\n   * @param {number} bitsStored The number of bits used to store the data.\r\n   */\r\n  constructor(rsi, bitsStored) {\r\n    this.#rsi = rsi;\r\n    this.#length = Math.pow(2, bitsStored);\r\n  }\r\n\r\n  /**\r\n   * Get the Rescale Slope and Intercept (RSI).\r\n   *\r\n   * @returns {RescaleSlopeAndIntercept} The rescale slope and intercept object.\r\n   */\r\n  getRSI() {\r\n    return this.#rsi;\r\n  }\r\n\r\n  /**\r\n   * Is the lut ready to use or not? If not, the user must\r\n   * call 'initialise'.\r\n   *\r\n   * @returns {boolean} True if the lut is ready to use.\r\n   */\r\n  isReady() {\r\n    return this.#isReady;\r\n  }\r\n\r\n  /**\r\n   * Initialise the LUT.\r\n   */\r\n  initialise() {\r\n    // check if already initialised\r\n    if (this.#isReady) {\r\n      return;\r\n    }\r\n    // create lut and fill it\r\n    this.#lut = new Float32Array(this.#length);\r\n    for (let i = 0; i < this.#length; ++i) {\r\n      this.#lut[i] = this.#rsi.apply(i);\r\n    }\r\n    // update ready flag\r\n    this.#isReady = true;\r\n  }\r\n\r\n  /**\r\n   * Get the length of the LUT array.\r\n   *\r\n   * @returns {number} The length of the LUT array.\r\n   */\r\n  getLength() {\r\n    return this.#length;\r\n  }\r\n\r\n  /**\r\n   * Get the value of the LUT at the given offset.\r\n   *\r\n   * @param {number} offset The input offset in [0,2^bitsStored] range.\r\n   * @returns {number} The float32 value of the LUT at the given offset.\r\n   */\r\n  getValue(offset) {\r\n    return this.#lut[offset];\r\n  }\r\n\r\n} // class RescaleLut\r\n","/**\r\n * Minimum window width value.\r\n *\r\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2\r\n */\r\nconst minWindowWidth = 1;\r\n\r\n/**\r\n * List of default window level presets.\r\n *\r\n * @type {Object.<string, Object.<string, {center: number, width: number}>>}\r\n */\r\nexport const defaultPresets = {\r\n  CT: {\r\n    mediastinum: {center: 40, width: 400},\r\n    lung: {center: -500, width: 1500},\r\n    bone: {center: 500, width: 2000},\r\n    brain: {center: 40, width: 80},\r\n    head: {center: 90, width: 350}\r\n  }\r\n};\r\n\r\n/**\r\n * Validate an input window width.\r\n *\r\n * @param {number} value The value to test.\r\n * @returns {number} A valid window width.\r\n */\r\nexport function validateWindowWidth(value) {\r\n  return value < minWindowWidth ? minWindowWidth : value;\r\n}\r\n\r\n/**\r\n * WindowCenterAndWidth class.\r\n * <br>Pseudo-code:\r\n * <pre>\r\n *  if (x &lt;= c - 0.5 - (w-1)/2), then y = ymin\r\n *  else if (x > c - 0.5 + (w-1)/2), then y = ymax,\r\n *  else y = ((x - (c - 0.5)) / (w-1) + 0.5) * (ymax - ymin) + ymin\r\n * </pre>\r\n *\r\n * @see DICOM doc for [Window Center and Window Width]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.11.html#sect_C.11.2.1.2}\r\n */\r\nexport class WindowCenterAndWidth {\r\n\r\n  /**\r\n   * The center.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #center;\r\n\r\n  /**\r\n   * The width.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #width;\r\n\r\n  /**\r\n   * @param {number} center The window center.\r\n   * @param {number} width The window width.\r\n   */\r\n  constructor(center, width) {\r\n    // check width\r\n    if (width < minWindowWidth) {\r\n      throw new Error('Window width shall always be greater than or equal to ' +\r\n        minWindowWidth);\r\n    }\r\n    this.#center = center;\r\n    this.#width = width;\r\n\r\n    this.#init();\r\n  }\r\n\r\n  /**\r\n   * Signed data offset. Defaults to 0.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #signedOffset = 0;\r\n\r\n  /**\r\n   * Output value minimum. Defaults to 0.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #ymin = 0;\r\n\r\n  /**\r\n   * Output value maximum. Defaults to 255.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #ymax = 255;\r\n\r\n  /**\r\n   * Input value minimum (calculated).\r\n   *\r\n   * @type {number}\r\n   */\r\n  #xmin = null;\r\n\r\n  /**\r\n   * Input value maximum (calculated).\r\n   *\r\n   * @type {number}\r\n   */\r\n  #xmax = null;\r\n\r\n  /**\r\n   * Window level equation slope (calculated).\r\n   *\r\n   * @type {number}\r\n   */\r\n  #slope = null;\r\n\r\n  /**\r\n   * Window level equation intercept (calculated).\r\n   *\r\n   * @type {number}\r\n   */\r\n  #inter = null;\r\n\r\n  /**\r\n   * Initialise members. Called at construction.\r\n   *\r\n   */\r\n  #init() {\r\n    const c = this.#center + this.#signedOffset;\r\n    // from the standard\r\n    this.#xmin = c - 0.5 - ((this.#width - 1) / 2);\r\n    this.#xmax = c - 0.5 + ((this.#width - 1) / 2);\r\n    // develop the equation:\r\n    // y = ( ( x - (c - 0.5) ) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\r\n    // y = ( x / (w-1) ) * (ymax - ymin) +\r\n    //     ( -(c - 0.5) / (w-1) + 0.5 ) * (ymax - ymin) + ymin\r\n    this.#slope = (this.#ymax - this.#ymin) / (this.#width - 1);\r\n    this.#inter = (-(c - 0.5) / (this.#width - 1) + 0.5) *\r\n      (this.#ymax - this.#ymin) + this.#ymin;\r\n  }\r\n\r\n  /**\r\n   * Get the window center.\r\n   *\r\n   * @returns {number} The window center.\r\n   */\r\n  getCenter() {\r\n    return this.#center;\r\n  }\r\n\r\n  /**\r\n   * Get the window width.\r\n   *\r\n   * @returns {number} The window width.\r\n   */\r\n  getWidth() {\r\n    return this.#width;\r\n  }\r\n\r\n  /**\r\n   * Set the output value range.\r\n   *\r\n   * @param {string} min The output value minimum.\r\n   * @param {string} max The output value maximum.\r\n   */\r\n  setRange(min, max) {\r\n    this.#ymin = parseInt(min, 10);\r\n    this.#ymax = parseInt(max, 10);\r\n    // re-initialise\r\n    this.#init();\r\n  }\r\n\r\n  /**\r\n   * Set the signed offset.\r\n   *\r\n   * @param {number} offset The signed data offset,\r\n   *   typically: slope * ( size / 2).\r\n   */\r\n  setSignedOffset(offset) {\r\n    this.#signedOffset = offset;\r\n    // re-initialise\r\n    this.#init();\r\n  }\r\n\r\n  /**\r\n   * Apply the window level on an input value.\r\n   *\r\n   * @param {number} value The value to rescale as an integer.\r\n   * @returns {number} The leveled value, in the\r\n   *  [ymin, ymax] range (default [0,255]).\r\n   */\r\n  apply(value) {\r\n    if (value <= this.#xmin) {\r\n      return this.#ymin;\r\n    } else if (value > this.#xmax) {\r\n      return this.#ymax;\r\n    } else {\r\n      return (value * this.#slope) + this.#inter;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check for window level equality.\r\n   *\r\n   * @param {WindowCenterAndWidth} rhs The other window level to compare to.\r\n   * @returns {boolean} True if both window level are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      this.getCenter() === rhs.getCenter() &&\r\n      this.getWidth() === rhs.getWidth();\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the window level.\r\n   *\r\n   * @returns {string} The window level as a string.\r\n   */\r\n  toString() {\r\n    return (this.getCenter() + ', ' + this.getWidth());\r\n  }\r\n\r\n} // class WindowLevel\r\n","// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {RescaleLut} from './rescaleLut';\r\nimport {WindowCenterAndWidth} from './windowCenterAndWidth';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Window LUT class.\r\n * Typically converts from float to integer.\r\n */\r\nexport class WindowLut {\r\n\r\n  /**\r\n   * The rescale LUT.\r\n   *\r\n   * @type {RescaleLut}\r\n   */\r\n  #rescaleLut;\r\n\r\n  /**\r\n   * Signed data flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isSigned;\r\n\r\n  /**\r\n   * The internal array: Uint8ClampedArray clamps between 0 and 255.\r\n   *\r\n   * @type {Uint8ClampedArray}\r\n   */\r\n  #lut = null;\r\n\r\n  /**\r\n   * The window level.\r\n   *\r\n   * @type {WindowCenterAndWidth}\r\n   */\r\n  #windowLevel = null;\r\n\r\n  /**\r\n   * Flag to know if the lut is ready or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isReady = false;\r\n\r\n  /**\r\n   * Shift for signed data.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #signedShift = 0;\r\n\r\n  /**\r\n   * @param {RescaleLut} rescaleLut The associated rescale LUT.\r\n   * @param {boolean} isSigned Flag to know if the data is signed or not.\r\n   */\r\n  constructor(rescaleLut, isSigned) {\r\n    this.#rescaleLut = rescaleLut;\r\n    this.#isSigned = isSigned;\r\n  }\r\n\r\n  /**\r\n   * Get the window / level.\r\n   *\r\n   * @returns {WindowCenterAndWidth} The window / level.\r\n   */\r\n  getWindowLevel() {\r\n    return this.#windowLevel;\r\n  }\r\n\r\n  /**\r\n   * Get the signed flag.\r\n   *\r\n   * @returns {boolean} The signed flag.\r\n   */\r\n  isSigned() {\r\n    return this.#isSigned;\r\n  }\r\n\r\n  /**\r\n   * Get the rescale lut.\r\n   *\r\n   * @returns {RescaleLut} The rescale lut.\r\n   */\r\n  getRescaleLut() {\r\n    return this.#rescaleLut;\r\n  }\r\n\r\n  /**\r\n   * Is the lut ready to use or not? If not, the user must\r\n   * call 'update'.\r\n   *\r\n   * @returns {boolean} True if the lut is ready to use.\r\n   */\r\n  isReady() {\r\n    return this.#isReady;\r\n  }\r\n\r\n  /**\r\n   * Set the window center and width.\r\n   *\r\n   * @param {WindowCenterAndWidth} wl The window level.\r\n   */\r\n  setWindowLevel(wl) {\r\n    // store the window values\r\n    this.#windowLevel = wl;\r\n    // possible signed shift\r\n    this.#signedShift = 0;\r\n    this.#windowLevel.setSignedOffset(0);\r\n    if (this.#isSigned) {\r\n      const size = this.#rescaleLut.getLength();\r\n      this.#signedShift = size / 2;\r\n      this.#windowLevel.setSignedOffset(\r\n        this.#rescaleLut.getRSI().getSlope() * this.#signedShift);\r\n    }\r\n    // update ready flag\r\n    this.#isReady = false;\r\n  }\r\n\r\n  /**\r\n   * Update the lut if needed..\r\n   */\r\n  update() {\r\n    // check if we need to update\r\n    if (this.#isReady) {\r\n      return;\r\n    }\r\n\r\n    // check rescale lut\r\n    if (!this.#rescaleLut.isReady()) {\r\n      this.#rescaleLut.initialise();\r\n    }\r\n    // create window lut\r\n    const size = this.#rescaleLut.getLength();\r\n    if (!this.#lut) {\r\n      // use clamped array (polyfilled in env.js)\r\n      this.#lut = new Uint8ClampedArray(size);\r\n    }\r\n    // by default WindowLevel returns a value in the [0,255] range\r\n    // this is ok with regular Arrays and ClampedArray.\r\n    for (let i = 0; i < size; ++i) {\r\n      this.#lut[i] = this.#windowLevel.apply(this.#rescaleLut.getValue(i));\r\n    }\r\n\r\n    // update ready flag\r\n    this.#isReady = true;\r\n  }\r\n\r\n  /**\r\n   * Get the length of the LUT array.\r\n   *\r\n   * @returns {number} The length of the LUT array.\r\n   */\r\n  getLength() {\r\n    return this.#lut.length;\r\n  }\r\n\r\n  /**\r\n   * Get the value of the LUT at the given offset.\r\n   *\r\n   * @param {number} offset The input offset in [0,2^bitsStored] range.\r\n   * @returns {number} The integer value (default [0,255]) of the LUT\r\n   *   at the given offset.\r\n   */\r\n  getValue(offset) {\r\n    return this.#lut[offset + this.#signedShift];\r\n  }\r\n\r\n} // class WindowLut\r\n","/**\r\n * Lookup tables for image colour display.\r\n */\r\n\r\nconst lut_range_max = 256;\r\n\r\n/**\r\n * Build a LUT of size lut_range_max.\r\n *\r\n * @param {Function} func The i to lut function.\r\n * @returns {Array} The LUT.\r\n */\r\nfunction buildLut(func) {\r\n  const lut = [];\r\n  for (let i = 0; i < lut_range_max; ++i) {\r\n    lut.push(func(i));\r\n  }\r\n  return lut;\r\n}\r\n\r\n/**\r\n * Ramp to lut_range_max minus one on the first third values.\r\n *\r\n * @param {number} i The input index.\r\n * @returns {number} The lut value.\r\n */\r\nfunction toMaxFirstThird(i) {\r\n  const val = i * 3;\r\n  if (val > lut_range_max - 1) {\r\n    return lut_range_max - 1;\r\n  }\r\n  return val;\r\n}\r\n\r\n/**\r\n * Ramp to lut_range_max minus one on the second third values.\r\n *  otherwise return 0 for the first third and\r\n *  lut_range_max minus one for the last third.\r\n *\r\n * @param {number} i The input index.\r\n * @returns {number} The lut value.\r\n */\r\nfunction toMaxSecondThird(i) {\r\n  const third = lut_range_max / 3;\r\n  let val = 0;\r\n  if (i >= third) {\r\n    val = (i - third) * 3;\r\n    if (val > lut_range_max - 1) {\r\n      return lut_range_max - 1;\r\n    }\r\n  }\r\n  return val;\r\n}\r\n\r\n/**\r\n * Ramp to lut_range_max minus one on the last third values.\r\n *  otherwise return 0.\r\n *\r\n * @param {number} i The input index.\r\n * @returns {number} The lut value.\r\n */\r\nfunction toMaxThirdThird(i) {\r\n  const third = lut_range_max / 3;\r\n  let val = 0;\r\n  if (i >= 2 * third) {\r\n    val = (i - 2 * third) * 3;\r\n    if (val > lut_range_max - 1) {\r\n      return lut_range_max - 1;\r\n    }\r\n  }\r\n  return val;\r\n}\r\n\r\n/**\r\n * Identity, returns i.\r\n *\r\n * @param {number} i The input index.\r\n * @returns {number} The lut value.\r\n */\r\nfunction id(i) {\r\n  return i;\r\n}\r\n\r\n/**\r\n * Returns lut_range_max minus one minus i.\r\n *\r\n * @param {number} i The input index.\r\n * @returns {number} The lut value.\r\n */\r\nfunction invId(i) {\r\n  return (lut_range_max - 1) - i;\r\n}\r\n\r\n/**\r\n * Colour map: red, green and blue components\r\n * to associate with intensity values.\r\n */\r\nexport class ColourMap {\r\n  /**\r\n   * Red component: 256 values in the [0, 255] range.\r\n   *\r\n   * @type {number[]}\r\n   */\r\n  red;\r\n  /**\r\n   * Green component: 256 values in the [0, 255] range.\r\n   *\r\n   * @type {number[]}\r\n   */\r\n  green;\r\n  /**\r\n   * Blue component: 256 values in the [0, 255] range.\r\n   *\r\n   * @type {number[]}\r\n   */\r\n  blue;\r\n\r\n  /**\r\n   * @param {number[]} red Red component.\r\n   * @param {number[]} green Green component.\r\n   * @param {number[]} blue Blue component.\r\n   */\r\n  constructor(red, green, blue) {\r\n    this.red = red;\r\n    this.green = green;\r\n    this.blue = blue;\r\n  }\r\n}\r\n\r\n/**\r\n * List of available lookup tables (lut).\r\n *\r\n * @type {Object<string, ColourMap>}\r\n */\r\nexport const luts = {\r\n  // plain\r\n  plain: {\r\n    red: buildLut(id),\r\n    green: buildLut(id),\r\n    blue: buildLut(id)\r\n  },\r\n\r\n  // inverse plain\r\n  invPlain: {\r\n    red: buildLut(invId),\r\n    green: buildLut(invId),\r\n    blue: buildLut(invId)\r\n  },\r\n\r\n  // rainbow\r\n  /* eslint-disable max-len */\r\n  rainbow: {\r\n    blue: [0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 247, 239, 231, 223, 215, 207, 199, 191, 183, 175, 167, 159, 151, 143, 135, 127, 119, 111, 103, 95, 87, 79, 71, 63, 55, 47, 39, 31, 23, 15, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 253, 251, 249, 247, 245, 243, 241, 239, 237, 235, 233, 231, 229, 227, 225, 223, 221, 219, 217, 215, 213, 211, 209, 207, 205, 203, 201, 199, 197, 195, 193, 192, 189, 186, 183, 180, 177, 174, 171, 168, 165, 162, 159, 156, 153, 150, 147, 144, 141, 138, 135, 132, 129, 126, 123, 120, 117, 114, 111, 108, 105, 102, 99, 96, 93, 90, 87, 84, 81, 78, 75, 72, 69, 66, 63, 60, 57, 54, 51, 48, 45, 42, 39, 36, 33, 30, 27, 24, 21, 18, 15, 12, 9, 6, 3],\r\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 62, 60, 58, 56, 54, 52, 50, 48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\r\n  },\r\n  /* eslint-enable max-len */\r\n\r\n  // hot\r\n  hot: {\r\n    red: buildLut(toMaxFirstThird),\r\n    green: buildLut(toMaxSecondThird),\r\n    blue: buildLut(toMaxThirdThird)\r\n  },\r\n\r\n  // hot iron\r\n  /* eslint-disable max-len */\r\n  hot_iron: {\r\n    red: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\r\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\r\n    bluer\n  },\r\n  /* eslint-enable max-len */\r\n\r\n  // pet\r\n  /* eslint-disable max-len */\r\n  pet: {\r\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\r\n    green: [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 128, 126, 124, 122, 120, 118, 116, 114, 112, 110, 108, 106, 104, 102, 100, 98, 96, 94, 92, 90, 88, 86, 84, 82, 80, 78, 76, 74, 72, 70, 68, 66, 64, 63, 61, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 29, 27, 25, 23, 21, 19, 17, 15, 13, 11, 9, 7, 5, 3, 1, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, 202, 204, 206, 208, 210, 212, 214, 216, 218, 220, 222, 224, 226, 228, 230, 232, 234, 236, 238, 240, 242, 244, 246, 248, 250, 252, 255],\r\n    blue: [0, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 89, 91, 93, 95, 97, 99, 101, 103, 105, 107, 109, 111, 113, 115, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 185, 187, 189, 191, 193, 195, 197, 199, 201, 203, 205, 207, 209, 211, 213, 215, 217, 219, 221, 223, 225, 227, 229, 231, 233, 235, 237, 239, 241, 243, 245, 247, 249, 251, 253, 255, 252, 248, 244, 240, 236, 232, 228, 224, 220, 216, 212, 208, 204, 200, 196, 192, 188, 184, 180, 176, 172, 168, 164, 160, 156, 152, 148, 144, 140, 136, 132, 128, 124, 120, 116, 112, 108, 104, 100, 96, 92, 88, 84, 80, 76, 72, 68, 64, 60, 56, 52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8, 4, 0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 85, 89, 93, 97, 101, 105, 109, 113, 117, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 170, 174, 178, 182, 186, 190, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 255]\r\n  },\r\n  /* eslint-enable max-len */\r\n\r\n  // hot metal blue\r\n  /* eslint-disable max-len */\r\n  hot_metal_blue: {\r\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 52, 55, 57, 59, 62, 64, 66, 69, 71, 74, 76, 78, 81, 83, 85, 88, 90, 93, 96, 99, 102, 105, 108, 111, 114, 116, 119, 122, 125, 128, 131, 134, 137, 140, 143, 146, 149, 152, 155, 158, 161, 164, 166, 169, 172, 175, 178, 181, 184, 187, 190, 194, 198, 201, 205, 209, 213, 217, 221, 224, 228, 232, 236, 240, 244, 247, 251, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\r\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 6, 8, 9, 11, 13, 15, 17, 19, 21, 23, 24, 26, 28, 30, 32, 34, 36, 38, 40, 41, 43, 45, 47, 49, 51, 53, 55, 56, 58, 60, 62, 64, 66, 68, 70, 72, 73, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 94, 96, 98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 117, 119, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 139, 141, 143, 145, 147, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 201, 203, 205, 207, 209, 211, 213, 215, 216, 218, 220, 222, 224, 226, 228, 229, 231, 233, 235, 237, 239, 240, 242, 244, 246, 248, 250, 251, 253, 255],\r\n    blue: [0, 2, 4, 6, 8, 10, 12, 14, 16, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 117, 119, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 157, 159, 161, 163, 165, 167, 169, 171, 173, 175, 177, 179, 181, 183, 184, 186, 188, 190, 192, 194, 196, 198, 200, 197, 194, 191, 188, 185, 182, 179, 176, 174, 171, 168, 165, 162, 159, 156, 153, 150, 144, 138, 132, 126, 121, 115, 109, 103, 97, 91, 85, 79, 74, 68, 62, 56, 50, 47, 44, 41, 38, 35, 32, 29, 26, 24, 21, 18, 15, 12, 9, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 6, 9, 12, 15, 18, 21, 24, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, 71, 74, 76, 79, 82, 85, 88, 91, 94, 97, 100, 103, 106, 109, 112, 115, 118, 121, 124, 126, 129, 132, 135, 138, 141, 144, 147, 150, 153, 156, 159, 162, 165, 168, 171, 174, 176, 179, 182, 185, 188, 191, 194, 197, 200, 203, 206, 210, 213, 216, 219, 223, 226, 229, 232, 236, 239, 242, 245, 249, 252, 255]\r\n  },\r\n  /* eslint-enable max-len */\r\n\r\n  // pet 20 step\r\n  /* eslint-disable max-len */\r\n  pet_20step: {\r\n    red: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\r\n    green: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 208, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 144, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255],\r\n    blue: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 112, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 128, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 176, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 192, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 224, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 48, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255]\r\n  }\r\n  /* eslint-enable max-len */\r\n};\r\n","export const logger = {\r\n  /**\r\n   * Available log levels.\r\n   * Note: need to activate verbose level in\r\n   *   Chrome console to see DEBUG messages.\r\n   */\r\n  levels: {\r\n    TRACE: 0,\r\n    DEBUG: 1,\r\n    INFO: 2,\r\n    WARN: 3,\r\n    ERROR: 4\r\n  },\r\n\r\n  /**\r\n   * Logger level: default to WARN.\r\n   */\r\n  level: 3,\r\n\r\n  /**\r\n   * Log a trace message.\r\n   *\r\n   * @param {string} msg The message to log.\r\n   */\r\n  trace: function (msg) {\r\n    if (this.level <= this.levels.TRACE) {\r\n      console.trace(msg);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log a debug message.\r\n   * Careful: depends on console settings.\r\n   *\r\n   * @param {string} msg The message to log.\r\n   */\r\n  debug: function (msg) {\r\n    if (this.level <= this.levels.DEBUG) {\r\n      console.debug(msg);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log an info message.\r\n   *\r\n   * @param {string} msg The message to log.\r\n   */\r\n  info: function (msg) {\r\n    if (this.level <= this.levels.INFO) {\r\n      console.info(msg);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log a warn message.\r\n   *\r\n   * @param {string} msg The message to log.\r\n   */\r\n  warn: function (msg) {\r\n    if (this.level <= this.levels.WARN) {\r\n      console.warn(msg);\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Log an error message.\r\n   *\r\n   * @param {string} msg The message to log.\r\n   */\r\n  error: function (msg) {\r\n    if (this.level <= this.levels.ERROR) {\r\n      console.error(msg);\r\n    }\r\n  }\r\n\r\n}; // logger\r\n","// example implementation: dcmtk/dcmiod/libsrc/cielabutil.cc\r\n// https://github.com/DCMTK/dcmtk/blob/DCMTK-3.6.6/dcmiod/libsrc/cielabutil.cc\r\n\r\n/**\r\n * Check if two rgb objects are equal.\r\n *\r\n * @param {object} c1 The first colour.\r\n * @param {object} c2 The second colour.\r\n * @returns {boolean} True if both colour are equal.\r\n */\r\nexport function isEqualRgb(c1, c2) {\r\n  return c1 !== null &&\r\n    c2 !== null &&\r\n    typeof c1 !== 'undefined' &&\r\n    typeof c2 !== 'undefined' &&\r\n    c1.r === c2.r &&\r\n    c1.g === c2.g &&\r\n    c1.b === c2.b;\r\n}\r\n\r\n/**\r\n * Convert YBR to RGB.\r\n *\r\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.7.html#sect_C.7.6.3.1.2\r\n * @see https://en.wikipedia.org/wiki/YCbCr#JPEG_conversion\r\n * @param {number} y The Y component.\r\n * @param {number} cb The Cb component.\r\n * @param {number} cr The Cr component.\r\n * @returns {object} RGB equivalent as {r,g,b}.\r\n */\r\nexport function ybrToRgb(y, cb, cr) {\r\n  return {\r\n    r: y + 1.402 * (cr - 128),\r\n    g: y - 0.34414 * (cb - 128) - 0.71414 * (cr - 128),\r\n    b: y + 1.772 * (cb - 128)\r\n  };\r\n}\r\n\r\n/**\r\n * Convert a hex color into RGB.\r\n *\r\n * @param {string} hexStr The hex color as '#ab01ef'.\r\n * @returns {object} The RGB values as {r,g,b}.\r\n */\r\nexport function hexToRgb(hexStr) {\r\n  return {\r\n    r: parseInt(hexStr.substring(1, 3), 16),\r\n    g: parseInt(hexStr.substring(3, 5), 16),\r\n    b: parseInt(hexStr.substring(5, 7), 16)\r\n  };\r\n}\r\n\r\n/**\r\n * Convert RGB to its hex equivalent.\r\n *\r\n * @param {object} rgb The RGB object as {r,g,b}.\r\n * @returns {string} A string representing the hex color as '#ab01ef'.\r\n */\r\nexport function rgbToHex(rgb) {\r\n  return '#' +\r\n    ((1 << 24) + (rgb.r << 16) + (rgb.g << 8) + rgb.b).toString(16).slice(1);\r\n}\r\n\r\n/**\r\n * Get the brightness of a RGB colour: calculates\r\n * the luma (Y) of the YIQ colour space.\r\n *\r\n * @see https://en.wikipedia.org/wiki/YIQ#From_RGB_to_YIQ\r\n * @param {object} rgbTriplet RGB triplet.\r\n * @returns {number} The brightness ([0,1]).\r\n */\r\nexport function getBrightness(rgbTriplet) {\r\n  // 0.001172549 = 0.299 / 255\r\n  // 0.002301961 = 0.587 / 255\r\n  // 0.000447059 = 0.114 / 255\r\n  return rgbTriplet.r * 0.001172549 +\r\n    rgbTriplet.g * 0.002301961 +\r\n    rgbTriplet.b * 0.000447059;\r\n}\r\n\r\n/**\r\n * Check if a colour given in hexadecimal format is dark.\r\n *\r\n * @param {string} hexColour The colour (as '#ab01ef').\r\n * @returns {boolean} True if the colour is dark (brightness < 0.5).\r\n */\r\nexport function isDarkColour(hexColour) {\r\n  return getBrightness(hexToRgb(hexColour)) < 0.5;\r\n}\r\n\r\n/**\r\n * Get the shadow colour of an input colour.\r\n *\r\n * @param {string} hexColour The colour (as '#ab01ef').\r\n * @returns {string} The shadow colour (white or black).\r\n */\r\nexport function getShadowColour(hexColour) {\r\n  return isDarkColour(hexColour) ? '#fff' : '#000';\r\n}\r\n\r\n/**\r\n * Unsigned int CIE LAB value ([0, 65535]) to CIE LAB value\r\n *   (L: [0, 100], a: [-128, 127], b: [-128, 127]).\r\n *\r\n * @param {object} triplet CIE LAB triplet as {l,a,b} with unsigned range.\r\n * @returns {object} CIE LAB triplet as {l,a,b} with CIE LAB range.\r\n */\r\nexport function uintLabToLab(triplet) {\r\n  // 0.001525902 = 100 / 65535\r\n  // 0.003891051 = 255 / 65535\r\n  return {\r\n    l: 0.001525902 * triplet.l,\r\n    a: 0.003891051 * triplet.a - 128,\r\n    b: 0.003891051 * triplet.b - 128,\r\n  };\r\n}\r\n\r\n/**\r\n * CIE LAB value (L: [0, 100], a: [-128, 127], b: [-128, 127]) to\r\n *   unsigned int CIE LAB ([0, 65535]).\r\n *\r\n * @param {object} triplet CIE XYZ triplet as {x,y,z} with CIE LAB range.\r\n * @returns {object} CIE LAB triplet as {l,a,b} with unsigned range.\r\n */\r\nexport function labToUintLab(triplet) {\r\n  // 655.35 = 65535 / 100\r\n  // aUint = (a + 128) * 65535 / 255\r\n  // 257 = 65535 / 255\r\n  // 32896 = 257 * 128\r\n  return {\r\n    l: 655.35 * triplet.l,\r\n    a: 257 * triplet.a + 32896,\r\n    b: 257 * triplet.b + 32896,\r\n  };\r\n}\r\n\r\n/**\r\n * CIE Standard Illuminant D65, standard 2° observer.\r\n *\r\n * @see https://en.wikipedia.org/wiki/Illuminant_D65\r\n */\r\nconst d65 = {\r\n  x: 95.0489,\r\n  y: 100,\r\n  z: 108.884\r\n};\r\n\r\n/**\r\n * Convert CIE LAB to CIE XYZ (standard illuminant D65, 2degree 1931).\r\n *\r\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIELAB_to_CIEXYZ\r\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\r\n * @returns {object} CIE XYZ triplet as {x,y,z}.\r\n */\r\nexport function cielabToCiexyz(triplet) {\r\n  /**\r\n   * Apply the inverse lab function.\r\n   *\r\n   * @param {number} x The input value.\r\n   * @returns {number} The result\r\n   */\r\n  function invLabFunc(x) {\r\n    let res = null;\r\n    // delta = 6 / 29 = 0.206896552\r\n    if (x > 0.206896552) {\r\n      res = Math.pow(x, 3);\r\n    } else {\r\n      // 0.128418549 = 3 * delta^2\r\n      // 0.017712903 = 3 * delta^2 * (4 / 29)\r\n      res = 0.128418549 * x - 0.017712903;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  const illuminant = d65;\r\n  const l0 = (triplet.l + 16) / 116;\r\n\r\n  return {\r\n    x: illuminant.x * invLabFunc(l0 + triplet.a / 500),\r\n    y: illuminant.y * invLabFunc(l0),\r\n    z: illuminant.z * invLabFunc(l0 - triplet.b / 200)\r\n  };\r\n}\r\n\r\n/**\r\n * Convert CIE XYZ to CIE LAB (standard illuminant D65, 2degree 1931).\r\n *\r\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#From_CIEXYZ_to_CIELAB\r\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\r\n * @returns {object} CIE LAB triplet as {l,a,b}.\r\n */\r\nexport function ciexyzToCielab(triplet) {\r\n  /**\r\n   * Apply the lab function.\r\n   *\r\n   * @param {number} x The input value.\r\n   * @returns {number} The result\r\n   */\r\n  function labFunc(x) {\r\n    let res = null;\r\n    // delta = 6 / 29 = 0.206896552\r\n    // delta^3 = 0.008856452\r\n    if (x > 0.008856452) {\r\n      res = Math.pow(x, 0.333333333);\r\n    } else {\r\n      // 7.787037037 = 1 / 3 * delta^2\r\n      // 0.137931034 = 4 / 29\r\n      res = 7.787037037 * x + 0.137931034;\r\n    }\r\n    return res;\r\n  }\r\n\r\n  const illuminant = d65;\r\n  const fy = labFunc(triplet.y / illuminant.y);\r\n\r\n  return {\r\n    l: 116 * fy - 16,\r\n    a: 500 * (labFunc(triplet.x / illuminant.x) - fy),\r\n    b: 200 * (fy - labFunc(triplet.z / illuminant.z))\r\n  };\r\n}\r\n\r\n/**\r\n * Convert CIE XYZ to sRGB.\r\n *\r\n * @see https://en.wikipedia.org/wiki/SRGB#From_CIE_XYZ_to_sRGB\r\n * @param {object} triplet CIE XYZ triplet as {x,y,z}.\r\n * @returns {object} sRGB triplet as {r,g,b}.\r\n */\r\nexport function ciexyzToSrgb(triplet) {\r\n  /**\r\n   * Apply the gamma function.\r\n   *\r\n   * @param {number} x The input value.\r\n   * @returns {number} The result\r\n   */\r\n  function gammaFunc(x) {\r\n    let res = null;\r\n    if (x <= 0.0031308) {\r\n      res = 12.92 * x;\r\n    } else {\r\n      // 0.416666667 = 1 / 2.4\r\n      res = 1.055 * Math.pow(x, 0.416666667) - 0.055;\r\n    }\r\n    // clip [0,1]\r\n    return Math.min(1, Math.max(0, res));\r\n  }\r\n\r\n  const x = triplet.x / 100;\r\n  const y = triplet.y / 100;\r\n  const z = triplet.z / 100;\r\n\r\n  return {\r\n    r: Math.round(255 * gammaFunc(3.2406 * x - 1.5372 * y - 0.4986 * z)),\r\n    g: Math.round(255 * gammaFunc(-0.9689 * x + 1.8758 * y + 0.0415 * z)),\r\n    b: Math.round(255 * gammaFunc(0.0557 * x - 0.2040 * y + 1.0570 * z))\r\n  };\r\n}\r\n\r\n/**\r\n * Convert sRGB to CIE XYZ.\r\n *\r\n * @see https://en.wikipedia.org/wiki/SRGB#From_sRGB_to_CIE_XYZ\r\n * @param {object} triplet sRGB triplet as {r,g,b}.\r\n * @returns {object} CIE XYZ triplet as {x,y,z}.\r\n */\r\nexport function srgbToCiexyz(triplet) {\r\n  /**\r\n   * Apply the inverse gamma function.\r\n   *\r\n   * @param {number} x The input value.\r\n   * @returns {number} The result\r\n   */\r\n  function invGammaFunc(x) {\r\n    let res = null;\r\n    if (x <= 0.04045) {\r\n      res = x / 12.92;\r\n    } else {\r\n      res = Math.pow((x + 0.055) / 1.055, 2.4);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  const rl = invGammaFunc(triplet.r / 255);\r\n  const gl = invGammaFunc(triplet.g / 255);\r\n  const bl = invGammaFunc(triplet.b / 255);\r\n\r\n  return {\r\n    x: 100 * (0.4124 * rl + 0.3576 * gl + 0.1805 * bl),\r\n    y: 100 * (0.2126 * rl + 0.7152 * gl + 0.0722 * bl),\r\n    z: 100 * (0.0193 * rl + 0.1192 * gl + 0.9505 * bl)\r\n  };\r\n}\r\n\r\n/**\r\n * Convert CIE LAB to sRGB (standard illuminant D65).\r\n *\r\n * @param {object} triplet CIE LAB triplet as {l,a,b}.\r\n * @returns {object} sRGB triplet as {r,g,b}.\r\n */\r\nexport function cielabToSrgb(triplet) {\r\n  return ciexyzToSrgb(cielabToCiexyz(triplet));\r\n}\r\n\r\n/**\r\n * Convert sRGB to CIE LAB (standard illuminant D65).\r\n *\r\n * @param {object} triplet sRGB triplet as {r,g,b}.\r\n * @returns {object} CIE LAB triplet as {l,a,b}.\r\n */\r\nexport function srgbToCielab(triplet) {\r\n  return ciexyzToCielab(srgbToCiexyz(triplet));\r\n}\r\n\r\n/**\r\n * Get the hex code of a string colour for a colour used in pre dwv v0.17.\r\n *\r\n * @param {string} name The name of a colour.\r\n * @returns {string} The hex representing the colour.\r\n */\r\nexport function colourNameToHex(name) {\r\n  // default colours used in dwv version < 0.17\r\n  const dict = {\r\n    Yellow: '#ffff00',\r\n    Red: '#ff0000',\r\n    White: '#ffffff',\r\n    Green: '#008000',\r\n    Blue: '#0000ff',\r\n    Lime: '#00ff00',\r\n    Fuchsia: '#ff00ff',\r\n    Black: '#000000'\r\n  };\r\n  let res = '#ffff00';\r\n  if (typeof dict[name] !== 'undefined') {\r\n    res = dict[name];\r\n  }\r\n  return res;\r\n}\r\n","/**\r\n * Immutable 3D vector.\r\n */\r\nexport class Vector3D {\r\n\r\n  /**\r\n   * X coordinate.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #x;\r\n\r\n  /**\r\n   * Y coordinate.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #y;\r\n\r\n  /**\r\n   * Z coordinate.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #z;\r\n\r\n  /**\r\n   * @param {number} x The X component of the vector.\r\n   * @param {number} y The Y component of the vector.\r\n   * @param {number} z The Z component of the vector.\r\n   */\r\n  constructor(x, y, z) {\r\n    this.#x = x;\r\n    this.#y = y;\r\n    this.#z = z;\r\n  }\r\n\r\n  /**\r\n   * Get the X component of the vector.\r\n   *\r\n   * @returns {number} The X component of the vector.\r\n   */\r\n  getX() {\r\n    return this.#x;\r\n  }\r\n\r\n  /**\r\n   * Get the Y component of the vector.\r\n   *\r\n   * @returns {number} The Y component of the vector.\r\n   */\r\n  getY() {\r\n    return this.#y;\r\n  }\r\n\r\n  /**\r\n   * Get the Z component of the vector.\r\n   *\r\n   * @returns {number} The Z component of the vector.\r\n   */\r\n  getZ() {\r\n    return this.#z;\r\n  }\r\n\r\n  /**\r\n   * Check for Vector3D equality.\r\n   *\r\n   * @param {Vector3D} rhs The other vector to compare to.\r\n   * @returns {boolean} True if both vectors are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      this.getX() === rhs.getX() &&\r\n      this.getY() === rhs.getY() &&\r\n      this.getZ() === rhs.getZ();\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the Vector3D.\r\n   *\r\n   * @returns {string} The vector as a string.\r\n   */\r\n  toString() {\r\n    return '(' + this.getX() +\r\n      ', ' + this.getY() +\r\n      ', ' + this.getZ() + ')';\r\n  }\r\n\r\n  /**\r\n   * Get the norm of the vector.\r\n   *\r\n   * @returns {number} The norm.\r\n   */\r\n  norm() {\r\n    return Math.sqrt(\r\n      (this.getX() * this.getX()) +\r\n      (this.getY() * this.getY()) +\r\n      (this.getZ() * this.getZ())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the cross product with another Vector3D, ie the\r\n   * vector that is perpendicular to both a and b.\r\n   * If both vectors are parallel, the cross product is a zero vector.\r\n   *\r\n   * @see https://en.wikipedia.org/wiki/Cross_product\r\n   * @param {Vector3D} vector3D The input vector.\r\n   * @returns {Vector3D} The result vector.\r\n   */\r\n  crossProduct(vector3D) {\r\n    return new Vector3D(\r\n      (this.getY() * vector3D.getZ()) - (vector3D.getY() * this.getZ()),\r\n      (this.getZ() * vector3D.getX()) - (vector3D.getZ() * this.getX()),\r\n      (this.getX() * vector3D.getY()) - (vector3D.getX() * this.getY()));\r\n  }\r\n\r\n  /**\r\n   * Get the dot product with another Vector3D.\r\n   *\r\n   * @see https://en.wikipedia.org/wiki/Dot_product\r\n   * @param {Vector3D} vector3D The input vector.\r\n   * @returns {number} The dot product.\r\n   */\r\n  dotProduct(vector3D) {\r\n    return (this.getX() * vector3D.getX()) +\r\n      (this.getY() * vector3D.getY()) +\r\n      (this.getZ() * vector3D.getZ());\r\n  }\r\n\r\n} // Vector3D class","import {Vector3D} from './vector';\r\nimport {Point3D} from './point';\r\nimport {Index} from './index';\r\nimport {logger} from '../utils/logger';\r\n\r\n// Number.EPSILON is difference between 1 and the smallest\r\n// floating point number greater than 1\r\n// -> ~2e-16\r\n// BIG_EPSILON -> ~2e-12\r\nexport const BIG_EPSILON = Number.EPSILON * 1e4;\r\n// 'real world', for example when comparing positions\r\nexport const REAL_WORLD_EPSILON = 1e-4;\r\n\r\n/**\r\n * Check if two numbers are similar.\r\n *\r\n * @param {number} a The first number.\r\n * @param {number} b The second number.\r\n * @param {number} tol The comparison tolerance,\r\n *   default to Number.EPSILON.\r\n * @returns {boolean} True if similar.\r\n */\r\nexport function isSimilar(a, b, tol) {\r\n  if (typeof tol === 'undefined') {\r\n    tol = Number.EPSILON;\r\n  }\r\n  return Math.abs(a - b) < tol;\r\n}\r\n\r\n/**\r\n * Immutable 3x3 Matrix.\r\n */\r\nexport class Matrix33 {\r\n\r\n  /**\r\n   * Matrix values.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #values;\r\n\r\n  /**\r\n   * Matrix inverse, calculated at first ask\r\n   *\r\n   * @type {Matrix33}\r\n   */\r\n  #inverse;\r\n\r\n  /**\r\n   * @param {Array} values row-major ordered 9 values.\r\n   */\r\n  constructor(values) {\r\n    this.#values = values;\r\n  }\r\n\r\n  /**\r\n   * Get a value of the matrix.\r\n   *\r\n   * @param {number} row The row at wich to get the value.\r\n   * @param {number} col The column at wich to get the value.\r\n   * @returns {number} The value at the position.\r\n   */\r\n  get(row, col) {\r\n    return this.#values[row * 3 + col];\r\n  }\r\n\r\n  /**\r\n   * Get the inverse of this matrix.\r\n   *\r\n   * @returns {Matrix33|undefined} The inverse matrix or undefined\r\n   *   if the determinant is zero.\r\n   */\r\n  getInverse() {\r\n    if (typeof this.#inverse === 'undefined') {\r\n      this.#inverse = getMatrixInverse(this);\r\n    }\r\n    return this.#inverse;\r\n  }\r\n\r\n  /**\r\n   * Check for Matrix33 equality.\r\n   *\r\n   * @param {Matrix33} rhs The other matrix to compare to.\r\n   * @param {number} [p] A numeric expression for the precision to use in check\r\n   *   (ex: 0.001). Defaults to Number.EPSILON if not provided.\r\n   * @returns {boolean} True if both matrices are equal.\r\n   */\r\n  equals(rhs, p) {\r\n    // TODO: add type check\r\n    // check values\r\n    for (let i = 0; i < 3; ++i) {\r\n      for (let j = 0; j < 3; ++j) {\r\n        if (!isSimilar(this.get(i, j), rhs.get(i, j), p)) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the Matrix33.\r\n   *\r\n   * @returns {string} The matrix as a string.\r\n   */\r\n  toString() {\r\n    let str = '[';\r\n    for (let i = 0; i < 3; ++i) {\r\n      if (i !== 0) {\r\n        str += ', \\n ';\r\n      }\r\n      for (let j = 0; j < 3; ++j) {\r\n        if (j !== 0) {\r\n          str += ', ';\r\n        }\r\n        str += this.get(i, j);\r\n      }\r\n    }\r\n    str += ']';\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * Multiply this matrix by another.\r\n   *\r\n   * @param {Matrix33} rhs The matrix to multiply by.\r\n   * @returns {Matrix33} The product matrix.\r\n   */\r\n  multiply(rhs) {\r\n    const values = [];\r\n    for (let i = 0; i < 3; ++i) {\r\n      for (let j = 0; j < 3; ++j) {\r\n        let tmp = 0;\r\n        for (let k = 0; k < 3; ++k) {\r\n          tmp += this.get(i, k) * rhs.get(k, j);\r\n        }\r\n        values.push(tmp);\r\n      }\r\n    }\r\n    return new Matrix33(values);\r\n  }\r\n\r\n  /**\r\n   * Get the absolute value of this matrix.\r\n   *\r\n   * @returns {Matrix33} The result matrix.\r\n   */\r\n  getAbs() {\r\n    const values = [];\r\n    for (let i = 0; i < 3; ++i) {\r\n      for (let j = 0; j < 3; ++j) {\r\n        values.push(Math.abs(this.get(i, j)));\r\n      }\r\n    }\r\n    return new Matrix33(values);\r\n  }\r\n\r\n  /**\r\n   * Multiply this matrix by a 3D array.\r\n   *\r\n   * @param {Array} array3D The input 3D array.\r\n   * @returns {Array} The result 3D array.\r\n   */\r\n  multiplyArray3D(array3D) {\r\n    if (array3D.length !== 3) {\r\n      throw new Error('Cannot multiply 3x3 matrix with non 3D array: ' +\r\n        array3D.length);\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < 3; ++i) {\r\n      let tmp = 0;\r\n      for (let j = 0; j < 3; ++j) {\r\n        tmp += this.get(i, j) * array3D[j];\r\n      }\r\n      values.push(tmp);\r\n    }\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Multiply this matrix by a 3D vector.\r\n   *\r\n   * @param {Vector3D} vector3D The input 3D vector.\r\n   * @returns {Vector3D} The result 3D vector.\r\n   */\r\n  multiplyVector3D(vector3D) {\r\n    const array3D = this.multiplyArray3D(\r\n      [vector3D.getX(), vector3D.getY(), vector3D.getZ()]\r\n    );\r\n    return new Vector3D(array3D[0], array3D[1], array3D[2]);\r\n  }\r\n\r\n  /**\r\n   * Multiply this matrix by a 3D point.\r\n   *\r\n   * @param {Point3D} point3D The input 3D point.\r\n   * @returns {Point3D} The result 3D point.\r\n   */\r\n  multiplyPoint3D(point3D) {\r\n    const array3D = this.multiplyArray3D(\r\n      [point3D.getX(), point3D.getY(), point3D.getZ()]\r\n    );\r\n    return new Point3D(array3D[0], array3D[1], array3D[2]);\r\n  }\r\n\r\n  /**\r\n   * Multiply this matrix by a 3D index.\r\n   *\r\n   * @param {Index} index3D The input 3D index.\r\n   * @returns {Index} The result 3D index.\r\n   */\r\n  multiplyIndex3D(index3D) {\r\n    const array3D = this.multiplyArray3D(index3D.getValues());\r\n    return new Index(array3D);\r\n  }\r\n\r\n  /**\r\n   * Get the index of the maximum in absolute value of a row.\r\n   *\r\n   * @param {number} row The row to get the maximum from.\r\n   * @returns {object} The {value,index} of the maximum.\r\n   */\r\n  getRowAbsMax(row) {\r\n    const values = [\r\n      Math.abs(this.get(row, 0)),\r\n      Math.abs(this.get(row, 1)),\r\n      Math.abs(this.get(row, 2))\r\n    ];\r\n    const absMax = Math.max.apply(null, values);\r\n    const index = values.indexOf(absMax);\r\n    return {\r\n      value: this.get(row, index),\r\n      index: index\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the index of the maximum in absolute value of a column.\r\n   *\r\n   * @param {number} col The column to get the maximum from.\r\n   * @returns {object} The {value,index} of the maximum.\r\n   */\r\n  getColAbsMax(col) {\r\n    const values = [\r\n      Math.abs(this.get(0, col)),\r\n      Math.abs(this.get(1, col)),\r\n      Math.abs(this.get(2, col))\r\n    ];\r\n    const absMax = Math.max.apply(null, values);\r\n    const index = values.indexOf(absMax);\r\n    return {\r\n      value: this.get(index, col),\r\n      index: index\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get this matrix with only zero and +/- ones instead of the maximum,\r\n   *\r\n   * @returns {Matrix33} The simplified matrix.\r\n   */\r\n  asOneAndZeros() {\r\n    const res = [];\r\n    for (let j = 0; j < 3; ++j) {\r\n      const max = this.getRowAbsMax(j);\r\n      const sign = max.value > 0 ? 1 : -1;\r\n      for (let i = 0; i < 3; ++i) {\r\n        if (i === max.index) {\r\n          //res.push(1);\r\n          res.push(1 * sign);\r\n        } else {\r\n          res.push(0);\r\n        }\r\n      }\r\n    }\r\n    return new Matrix33(res);\r\n  }\r\n\r\n  /**\r\n   * Get the third column direction index of an orientation matrix.\r\n   *\r\n   * @returns {number} The index of the absolute maximum of the last column.\r\n   */\r\n  getThirdColMajorDirection() {\r\n    return this.getColAbsMax(2).index;\r\n  }\r\n\r\n} // Matrix33\r\n\r\n/**\r\n * Get the inverse of an input 3*3 matrix.\r\n *\r\n * @param {Matrix33} m The input matrix.\r\n * @returns {Matrix33|undefined} The inverse matrix or undefined\r\n *   if the determinant is zero.\r\n * @see https://en.wikipedia.org/wiki/Invertible_matrix#Inversion_of_3_%C3%97_3_matrices\r\n * @see https://github.com/willnode/N-Matrix-Programmer\r\n */\r\nfunction getMatrixInverse(m) {\r\n  const m00 = m.get(0, 0);\r\n  const m01 = m.get(0, 1);\r\n  const m02 = m.get(0, 2);\r\n  const m10 = m.get(1, 0);\r\n  const m11 = m.get(1, 1);\r\n  const m12 = m.get(1, 2);\r\n  const m20 = m.get(2, 0);\r\n  const m21 = m.get(2, 1);\r\n  const m22 = m.get(2, 2);\r\n\r\n  const a1212 = m11 * m22 - m12 * m21;\r\n  const a2012 = m12 * m20 - m10 * m22;\r\n  const a0112 = m10 * m21 - m11 * m20;\r\n\r\n  let det = m00 * a1212 + m01 * a2012 + m02 * a0112;\r\n  if (det === 0) {\r\n    logger.warn('Cannot invert 3*3 matrix with zero determinant.');\r\n    return undefined;\r\n  }\r\n  det = 1 / det;\r\n\r\n  const values = [\r\n    det * a1212,\r\n    det * (m02 * m21 - m01 * m22),\r\n    det * (m01 * m12 - m02 * m11),\r\n    det * a2012,\r\n    det * (m00 * m22 - m02 * m20),\r\n    det * (m02 * m10 - m00 * m12),\r\n    det * a0112,\r\n    det * (m01 * m20 - m00 * m21),\r\n    det * (m00 * m11 - m01 * m10)\r\n  ];\r\n\r\n  return new Matrix33(values);\r\n}\r\n\r\n/**\r\n * Create a 3x3 identity matrix.\r\n *\r\n * @returns {Matrix33} The identity matrix.\r\n */\r\nexport function getIdentityMat33() {\r\n  /* eslint-disable array-element-newline */\r\n  return new Matrix33([\r\n    1, 0, 0,\r\n    0, 1, 0,\r\n    0, 0, 1\r\n  ]);\r\n  /* eslint-enable array-element-newline */\r\n}\r\n\r\n/**\r\n * Check if a matrix is a 3x3 identity matrix.\r\n *\r\n * @param {Matrix33} mat33 The matrix to test.\r\n * @returns {boolean} True if identity.\r\n */\r\nexport function isIdentityMat33(mat33) {\r\n  return mat33.equals(getIdentityMat33());\r\n}\r\n\r\n/**\r\n * Create a 3x3 coronal (xzy) matrix.\r\n *\r\n * @returns {Matrix33} The coronal matrix.\r\n */\r\nexport function getCoronalMat33() {\r\n  /* eslint-disable array-element-newline */\r\n  return new Matrix33([\r\n    1, 0, 0,\r\n    0, 0, 1,\r\n    0, -1, 0\r\n  ]);\r\n  /* eslint-enable array-element-newline */\r\n}\r\n\r\n/**\r\n * Create a 3x3 sagittal (yzx) matrix.\r\n *\r\n * @returns {Matrix33} The sagittal matrix.\r\n */\r\nexport function getSagittalMat33() {\r\n  /* eslint-disable array-element-newline */\r\n  return new Matrix33([\r\n    0, 0, -1,\r\n    1, 0, 0,\r\n    0, -1, 0\r\n  ]);\r\n  /* eslint-enable array-element-newline */\r\n}\r\n\r\n/**\r\n * Get an orientation matrix from a name.\r\n *\r\n * @param {string} name The orientation name.\r\n * @returns {Matrix33} The orientation matrix.\r\n */\r\nexport function getMatrixFromName(name) {\r\n  let matrix = null;\r\n  if (name === 'axial') {\r\n    matrix = getIdentityMat33();\r\n  } else if (name === 'coronal') {\r\n    matrix = getCoronalMat33();\r\n  } else if (name === 'sagittal') {\r\n    matrix = getSagittalMat33();\r\n  }\r\n  return matrix;\r\n}\r\n","import {isSimilar} from './matrix';\r\nimport {Vector3D} from './vector';\r\n\r\n/**\r\n * Immutable 2D point.\r\n */\r\nexport class Point2D {\r\n\r\n  /**\r\n   * X position.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #x;\r\n\r\n  /**\r\n   * Y position.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #y;\r\n\r\n  /**\r\n   * @param {number} x The X coordinate for the point.\r\n   * @param {number} y The Y coordinate for the point.\r\n   */\r\n  constructor(x, y) {\r\n    this.#x = x;\r\n    this.#y = y;\r\n  }\r\n\r\n  /**\r\n   * Get the X position of the point.\r\n   *\r\n   * @returns {number} The X position of the point.\r\n   */\r\n  getX() {\r\n    return this.#x;\r\n  }\r\n\r\n  /**\r\n   * Get the Y position of the point.\r\n   *\r\n   * @returns {number} The Y position of the point.\r\n   */\r\n  getY() {\r\n    return this.#y;\r\n  }\r\n\r\n  /**\r\n   * Check for Point2D equality.\r\n   *\r\n   * @param {Point2D} rhs The other point to compare to.\r\n   * @returns {boolean} True if both points are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      this.getX() === rhs.getX() &&\r\n      this.getY() === rhs.getY();\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the Point2D.\r\n   *\r\n   * @returns {string} The point as a string.\r\n   */\r\n  toString() {\r\n    return '(' + this.getX() + ', ' + this.getY() + ')';\r\n  }\r\n\r\n  /**\r\n   * Get the distance to another Point2D.\r\n   *\r\n   * @param {Point2D} point2D The input point.\r\n   * @returns {number} The distance to the input point.\r\n   */\r\n  getDistance(point2D) {\r\n    return Math.sqrt(\r\n      (this.getX() - point2D.getX()) * (this.getX() - point2D.getX()) +\r\n      (this.getY() - point2D.getY()) * (this.getY() - point2D.getY()));\r\n  }\r\n\r\n  /**\r\n   * Round a Point2D.\r\n   *\r\n   * @returns {Point2D} The rounded point.\r\n   */\r\n  getRound() {\r\n    return new Point2D(\r\n      Math.round(this.getX()),\r\n      Math.round(this.getY())\r\n    );\r\n  }\r\n\r\n} // Point2D class\r\n\r\n/**\r\n * Immutable 3D point.\r\n */\r\nexport class Point3D {\r\n\r\n  /**\r\n   * X position.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #x;\r\n\r\n  /**\r\n   * Y position.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #y;\r\n\r\n  /**\r\n   * Z position.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #z;\r\n\r\n  /**\r\n   * @param {number} x The X coordinate for the point.\r\n   * @param {number} y The Y coordinate for the point.\r\n   * @param {number} z The Z coordinate for the point.\r\n   */\r\n  constructor(x, y, z) {\r\n    this.#x = x;\r\n    this.#y = y;\r\n    this.#z = z;\r\n  }\r\n\r\n  /**\r\n   * Get the X position of the point.\r\n   *\r\n   * @returns {number} The X position of the point.\r\n   */\r\n  getX() {\r\n    return this.#x;\r\n  }\r\n\r\n  /**\r\n   * Get the Y position of the point.\r\n   *\r\n   * @returns {number} The Y position of the point.\r\n   */\r\n  getY() {\r\n    return this.#y;\r\n  }\r\n\r\n  /**\r\n   * Get the Z position of the point.\r\n   *\r\n   * @returns {number} The Z position of the point.\r\n   */\r\n  getZ() {\r\n    return this.#z;\r\n  }\r\n\r\n\r\n  /**\r\n   * Check for Point3D equality.\r\n   *\r\n   * @param {Point3D} rhs The other point to compare to.\r\n   * @returns {boolean} True if both points are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      this.getX() === rhs.getX() &&\r\n      this.getY() === rhs.getY() &&\r\n      this.getZ() === rhs.getZ();\r\n  }\r\n\r\n  /**\r\n   * Check for Point3D similarity.\r\n   *\r\n   * @param {Point3D} rhs The other point to compare to.\r\n   * @param {number} tol Optional comparison tolerance,\r\n   *   default to Number.EPSILON.\r\n   * @returns {boolean} True if both points are equal.\r\n   */\r\n  isSimilar(rhs, tol) {\r\n    return rhs !== null &&\r\n      isSimilar(this.getX(), rhs.getX(), tol) &&\r\n      isSimilar(this.getY(), rhs.getY(), tol) &&\r\n      isSimilar(this.getZ(), rhs.getZ(), tol);\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the Point3D.\r\n   *\r\n   * @returns {string} The point as a string.\r\n   */\r\n  toString() {\r\n    return '(' + this.getX() +\r\n      ', ' + this.getY() +\r\n      ', ' + this.getZ() + ')';\r\n  }\r\n\r\n  /**\r\n   * Get the distance to another Point3D.\r\n   *\r\n   * @param {Point3D} point3D The input point.\r\n   * @returns {number} Ths distance to the input point.\r\n   */\r\n  getDistance(point3D) {\r\n    return Math.sqrt(\r\n      (this.getX() - point3D.getX()) * (this.getX() - point3D.getX()) +\r\n      (this.getY() - point3D.getY()) * (this.getY() - point3D.getY()) +\r\n      (this.getZ() - point3D.getZ()) * (this.getZ() - point3D.getZ()));\r\n  }\r\n\r\n  /**\r\n   * Get the difference to another Point3D.\r\n   *\r\n   * @param {Point3D} point3D The input point.\r\n   * @returns {Vector3D} The 3D vector from the input point to this one.\r\n   */\r\n  minus(point3D) {\r\n    return new Vector3D(\r\n      (this.getX() - point3D.getX()),\r\n      (this.getY() - point3D.getY()),\r\n      (this.getZ() - point3D.getZ()));\r\n  }\r\n\r\n} // Point3D class\r\n\r\n/**\r\n * Get an array find callback for an equal input point.\r\n *\r\n * @param {Point3D} point The point to compare to.\r\n * @returns {Function} A function that compares, using `equals`,\r\n *   its input point to the one given as input to this function.\r\n */\r\nexport function getEqualPoint3DFunction(point) {\r\n  return function (element) {\r\n    return element.equals(point);\r\n  };\r\n}\r\n\r\n/**\r\n * Get an array find callback for a similar input point.\r\n *\r\n * @param {Point3D} point The point to compare to.\r\n * @param {number} tol The comparison tolerance\r\n *   default to Number.EPSILON.\r\n * @returns {Function} A function that compares, using `isSimilar`,\r\n *   its input point to the one given as input to this function.\r\n */\r\nexport function getSimilarPoint3DFunction(point, tol) {\r\n  return function (element) {\r\n    return element.isSimilar(point, tol);\r\n  };\r\n}\r\n\r\n/**\r\n * Immutable point.\r\n * Warning: the input array is NOT cloned, modifying it will\r\n *  modify the index values.\r\n */\r\nexport class Point {\r\n\r\n  /**\r\n   * Point values.\r\n   *\r\n   * @type {number[]}\r\n   */\r\n  #values;\r\n\r\n  /**\r\n   * @param {number[]} values The point values.\r\n   */\r\n  constructor(values) {\r\n    if (!values || typeof values === 'undefined') {\r\n      throw new Error('Cannot create point with no values.');\r\n    }\r\n    if (values.length === 0) {\r\n      throw new Error('Cannot create point with empty values.');\r\n    }\r\n    const valueCheck = function (val) {\r\n      return !isNaN(val);\r\n    };\r\n    if (!values.every(valueCheck)) {\r\n      throw new Error('Cannot create point with non number values.');\r\n    }\r\n    this.#values = values;\r\n  }\r\n\r\n  /**\r\n   * Get the index value at the given array index.\r\n   *\r\n   * @param {number} i The index to get.\r\n   * @returns {number} The value.\r\n   */\r\n  get(i) {\r\n    return this.#values[i];\r\n  }\r\n\r\n  /**\r\n   * Get the length of the index.\r\n   *\r\n   * @returns {number} The length.\r\n   */\r\n  length() {\r\n    return this.#values.length;\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the Index.\r\n   *\r\n   * @returns {string} The Index as a string.\r\n   */\r\n  toString() {\r\n    return '(' + this.#values.toString() + ')';\r\n  }\r\n\r\n  /**\r\n   * Get the values of this index.\r\n   *\r\n   * @returns {number[]} The array of values.\r\n   */\r\n  getValues() {\r\n    return this.#values.slice();\r\n  }\r\n\r\n  /**\r\n   * Check if the input point can be compared to this one.\r\n   *\r\n   * @param {Point} rhs The point to compare to.\r\n   * @returns {boolean} True if both points are comparable.\r\n   */\r\n  canCompare(rhs) {\r\n    // check input\r\n    if (!rhs) {\r\n      return false;\r\n    }\r\n    // check length\r\n    if (this.length() !== rhs.length()) {\r\n      return false;\r\n    }\r\n    // seems ok!\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Check for Point equality.\r\n   *\r\n   * @param {Point} rhs The point to compare to.\r\n   * @returns {boolean} True if both points are equal.\r\n   */\r\n  equals(rhs) {\r\n    // check if can compare\r\n    if (!this.canCompare(rhs)) {\r\n      return false;\r\n    }\r\n    // check values\r\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\r\n      if (this.get(i) !== rhs.get(i)) {\r\n        return false;\r\n      }\r\n    }\r\n    // seems ok!\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Compare points and return different dimensions.\r\n   *\r\n   * @param {Point} rhs The point to compare to.\r\n   * @returns {number[]} The list of different dimensions.\r\n   */\r\n  compare(rhs) {\r\n    // check if can compare\r\n    if (!this.canCompare(rhs)) {\r\n      return null;\r\n    }\r\n    // check values\r\n    const diffDims = [];\r\n    for (let i = 0, leni = this.length(); i < leni; ++i) {\r\n      if (this.get(i) !== rhs.get(i)) {\r\n        diffDims.push(i);\r\n      }\r\n    }\r\n    return diffDims;\r\n  }\r\n\r\n  /**\r\n   * Get the 3D part of this point.\r\n   *\r\n   * @returns {Point3D} The Point3D.\r\n   */\r\n  get3D() {\r\n    return new Point3D(this.get(0), this.get(1), this.get(2));\r\n  }\r\n\r\n  /**\r\n   * Add another point to this one.\r\n   *\r\n   * @param {Point} rhs The point to add.\r\n   * @returns {Point} The point representing the sum of both points.\r\n   */\r\n  add(rhs) {\r\n    // check if can compare\r\n    if (!this.canCompare(rhs)) {\r\n      return null;\r\n    }\r\n    const values = [];\r\n    const values0 = this.getValues();\r\n    const values1 = rhs.getValues();\r\n    for (let i = 0; i < values0.length; ++i) {\r\n      values.push(values0[i] + values1[i]);\r\n    }\r\n    return new Point(values);\r\n  }\r\n\r\n  /**\r\n   * Merge this point with a Point3D to create a new point.\r\n   *\r\n   * @param {Point3D} rhs The Point3D to merge with.\r\n   * @returns {Point} The merge result.\r\n   */\r\n  mergeWith3D(rhs) {\r\n    const values = this.getValues();\r\n    values[0] = rhs.getX();\r\n    values[1] = rhs.getY();\r\n    values[2] = rhs.getZ();\r\n    return new Point(values);\r\n  }\r\n\r\n} // Point class\r\n","/* eslint-disable quote-props */\r\n/* eslint max-len:0 */\r\n\r\n/**\r\n * DICOM tag dictionary 2022a.\r\n * Generated using xml standard conversion from {@link https://github.com/ivmartel/dcmStdToJs} v0.1.0.\r\n * Conversion changes:\r\n * - (vr) 'See Note' -> 'NONE'\r\n * - (vr) 'OB or OW' -> 'ox'\r\n * - (vr) 'US or SS' -> 'xs'\r\n * - (vr) 'US or OW' -> 'xx'\r\n * - (vr) 'US or SS or OW' -> 'xs'\r\n * - added 'GenericGroupLength' element to each group\r\n * Local changes:\r\n * - tag numbers with 'xx' were replaced with '00', 'xxx' with '001' and\r\n *  'xxxx' with '0004'\r\n */\r\nexport const dictionary = {\r\n  '0000': {\r\n    '0000': ['UL', '1', 'CommandGroupLength'],\r\n    '0001': ['UL', '1', 'CommandLengthToEnd'],\r\n    '0002': ['UI', '1', 'AffectedSOPClassUID'],\r\n    '0003': ['UI', '1', 'RequestedSOPClassUID'],\r\n    '0010': ['SH', '1', 'CommandRecognitionCode'],\r\n    '0100': ['US', '1', 'CommandField'],\r\n    '0110': ['US', '1', 'MessageID'],\r\n    '0120': ['US', '1', 'MessageIDBeingRespondedTo'],\r\n    '0200': ['AE', '1', 'Initiator'],\r\n    '0300': ['AE', '1', 'Receiver'],\r\n    '0400': ['AE', '1', 'FindLocation'],\r\n    '0600': ['AE', '1', 'MoveDestination'],\r\n    '0700': ['US', '1', 'Priority'],\r\n    '0800': ['US', '1', 'CommandDataSetType'],\r\n    '0850': ['US', '1', 'NumberOfMatches'],\r\n    '0860': ['US', '1', 'ResponseSequenceNumber'],\r\n    '0900': ['US', '1', 'Status'],\r\n    '0901': ['AT', '1-n', 'OffendingElement'],\r\n    '0902': ['LO', '1', 'ErrorComment'],\r\n    '0903': ['US', '1', 'ErrorID'],\r\n    '1000': ['UI', '1', 'AffectedSOPInstanceUID'],\r\n    '1001': ['UI', '1', 'RequestedSOPInstanceUID'],\r\n    '1002': ['US', '1', 'EventTypeID'],\r\n    '1005': ['AT', '1-n', 'AttributeIdentifierList'],\r\n    '1008': ['US', '1', 'ActionTypeID'],\r\n    '1020': ['US', '1', 'NumberOfRemainingSuboperations'],\r\n    '1021': ['US', '1', 'NumberOfCompletedSuboperations'],\r\n    '1022': ['US', '1', 'NumberOfFailedSuboperations'],\r\n    '1023': ['US', '1', 'NumberOfWarningSuboperations'],\r\n    '1030': ['AE', '1', 'MoveOriginatorApplicationEntityTitle'],\r\n    '1031': ['US', '1', 'MoveOriginatorMessageID'],\r\n    '4000': ['LT', '1', 'DialogReceiver'],\r\n    '4010': ['LT', '1', 'TerminalType'],\r\n    '5010': ['SH', '1', 'MessageSetID'],\r\n    '5020': ['SH', '1', 'EndMessageID'],\r\n    '5110': ['LT', '1', 'DisplayFormat'],\r\n    '5120': ['LT', '1', 'PagePositionID'],\r\n    '5130': ['CS', '1', 'TextFormatID'],\r\n    '5140': ['CS', '1', 'NormalReverse'],\r\n    '5150': ['CS', '1', 'AddGrayScale'],\r\n    '5160': ['CS', '1', 'Borders'],\r\n    '5170': ['IS', '1', 'Copies'],\r\n    '5180': ['CS', '1', 'CommandMagnificationType'],\r\n    '5190': ['CS', '1', 'Erase'],\r\n    '51A0': ['CS', '1', 'Print'],\r\n    '51B0': ['US', '1-n', 'Overlays']\r\n  },\r\n  '0002': {\r\n    '0000': ['UL', '1', 'FileMetaInformationGroupLength'],\r\n    '0001': ['OB', '1', 'FileMetaInformationVersion'],\r\n    '0002': ['UI', '1', 'MediaStorageSOPClassUID'],\r\n    '0003': ['UI', '1', 'MediaStorageSOPInstanceUID'],\r\n    '0010': ['UI', '1', 'TransferSyntaxUID'],\r\n    '0012': ['UI', '1', 'ImplementationClassUID'],\r\n    '0013': ['SH', '1', 'ImplementationVersionName'],\r\n    '0016': ['AE', '1', 'SourceApplicationEntityTitle'],\r\n    '0017': ['AE', '1', 'SendingApplicationEntityTitle'],\r\n    '0018': ['AE', '1', 'ReceivingApplicationEntityTitle'],\r\n    '0026': ['UR', '1', 'SourcePresentationAddress'],\r\n    '0027': ['UR', '1', 'SendingPresentationAddress'],\r\n    '0028': ['UR', '1', 'ReceivingPresentationAddress'],\r\n    '0031': ['OB', '1', 'RTVMetaInformationVersion'],\r\n    '0032': ['UI', '1', 'RTVCommunicationSOPClassUID'],\r\n    '0033': ['UI', '1', 'RTVCommunicationSOPInstanceUID'],\r\n    '0035': ['OB', '1', 'RTVSourceIdentifier'],\r\n    '0036': ['OB', '1', 'RTVFlowIdentifier'],\r\n    '0037': ['UL', '1', 'RTVFlowRTPSamplingRate'],\r\n    '0038': ['FD', '1', 'RTVFlowActualFrameDuration'],\r\n    '0100': ['UI', '1', 'PrivateInformationCreatorUID'],\r\n    '0102': ['OB', '1', 'PrivateInformation']\r\n  },\r\n  '0004': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '1130': ['CS', '1', 'FileSetID'],\r\n    '1141': ['CS', '1-8', 'FileSetDescriptorFileID'],\r\n    '1142': ['CS', '1', 'SpecificCharacterSetOfFileSetDescriptorFile'],\r\n    '1200': ['UL', '1', 'OffsetOfTheFirstDirectoryRecordOfTheRootDirectoryEntity'],\r\n    '1202': ['UL', '1', 'OffsetOfTheLastDirectoryRecordOfTheRootDirectoryEntity'],\r\n    '1212': ['US', '1', 'FileSetConsistencyFlag'],\r\n    '1220': ['SQ', '1', 'DirectoryRecordSequence'],\r\n    '1400': ['UL', '1', 'OffsetOfTheNextDirectoryRecord'],\r\n    '1410': ['US', '1', 'RecordInUseFlag'],\r\n    '1420': ['UL', '1', 'OffsetOfReferencedLowerLevelDirectoryEntity'],\r\n    '1430': ['CS', '1', 'DirectoryRecordType'],\r\n    '1432': ['UI', '1', 'PrivateRecordUID'],\r\n    '1500': ['CS', '1-8', 'ReferencedFileID'],\r\n    '1504': ['UL', '1', 'MRDRDirectoryRecordOffset'],\r\n    '1510': ['UI', '1', 'ReferencedSOPClassUIDInFile'],\r\n    '1511': ['UI', '1', 'ReferencedSOPInstanceUIDInFile'],\r\n    '1512': ['UI', '1', 'ReferencedTransferSyntaxUIDInFile'],\r\n    '151A': ['UI', '1-n', 'ReferencedRelatedGeneralSOPClassUIDInFile'],\r\n    '1600': ['UL', '1', 'NumberOfReferences']\r\n  },\r\n  '0008': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['UL', '1', 'LengthToEnd'],\r\n    '0005': ['CS', '1-n', 'SpecificCharacterSet'],\r\n    '0006': ['SQ', '1', 'LanguageCodeSequence'],\r\n    '0008': ['CS', '2-n', 'ImageType'],\r\n    '0010': ['SH', '1', 'RecognitionCode'],\r\n    '0012': ['DA', '1', 'InstanceCreationDate'],\r\n    '0013': ['TM', '1', 'InstanceCreationTime'],\r\n    '0014': ['UI', '1', 'InstanceCreatorUID'],\r\n    '0015': ['DT', '1', 'InstanceCoercionDateTime'],\r\n    '0016': ['UI', '1', 'SOPClassUID'],\r\n    '0018': ['UI', '1', 'SOPInstanceUID'],\r\n    '001A': ['UI', '1-n', 'RelatedGeneralSOPClassUID'],\r\n    '001B': ['UI', '1', 'OriginalSpecializedSOPClassUID'],\r\n    '0020': ['DA', '1', 'StudyDate'],\r\n    '0021': ['DA', '1', 'SeriesDate'],\r\n    '0022': ['DA', '1', 'AcquisitionDate'],\r\n    '0023': ['DA', '1', 'ContentDate'],\r\n    '0024': ['DA', '1', 'OverlayDate'],\r\n    '0025': ['DA', '1', 'CurveDate'],\r\n    '002A': ['DT', '1', 'AcquisitionDateTime'],\r\n    '0030': ['TM', '1', 'StudyTime'],\r\n    '0031': ['TM', '1', 'SeriesTime'],\r\n    '0032': ['TM', '1', 'AcquisitionTime'],\r\n    '0033': ['TM', '1', 'ContentTime'],\r\n    '0034': ['TM', '1', 'OverlayTime'],\r\n    '0035': ['TM', '1', 'CurveTime'],\r\n    '0040': ['US', '1', 'DataSetType'],\r\n    '0041': ['LO', '1', 'DataSetSubtype'],\r\n    '0042': ['CS', '1', 'NuclearMedicineSeriesType'],\r\n    '0050': ['SH', '1', 'AccessionNumber'],\r\n    '0051': ['SQ', '1', 'IssuerOfAccessionNumberSequence'],\r\n    '0052': ['CS', '1', 'QueryRetrieveLevel'],\r\n    '0053': ['CS', '1', 'QueryRetrieveView'],\r\n    '0054': ['AE', '1-n', 'RetrieveAETitle'],\r\n    '0055': ['AE', '1', 'StationAETitle'],\r\n    '0056': ['CS', '1', 'InstanceAvailability'],\r\n    '0058': ['UI', '1-n', 'FailedSOPInstanceUIDList'],\r\n    '0060': ['CS', '1', 'Modality'],\r\n    '0061': ['CS', '1-n', 'ModalitiesInStudy'],\r\n    '0062': ['UI', '1-n', 'SOPClassesInStudy'],\r\n    '0063': ['SQ', '1', 'AnatomicRegionsInStudyCodeSequence'],\r\n    '0064': ['CS', '1', 'ConversionType'],\r\n    '0068': ['CS', '1', 'PresentationIntentType'],\r\n    '0070': ['LO', '1', 'Manufacturer'],\r\n    '0080': ['LO', '1', 'InstitutionName'],\r\n    '0081': ['ST', '1', 'InstitutionAddress'],\r\n    '0082': ['SQ', '1', 'InstitutionCodeSequence'],\r\n    '0090': ['PN', '1', 'ReferringPhysicianName'],\r\n    '0092': ['ST', '1', 'ReferringPhysicianAddress'],\r\n    '0094': ['SH', '1-n', 'ReferringPhysicianTelephoneNumbers'],\r\n    '0096': ['SQ', '1', 'ReferringPhysicianIdentificationSequence'],\r\n    '009C': ['PN', '1-n', 'ConsultingPhysicianName'],\r\n    '009D': ['SQ', '1', 'ConsultingPhysicianIdentificationSequence'],\r\n    '0100': ['SH', '1', 'CodeValue'],\r\n    '0101': ['LO', '1', 'ExtendedCodeValue'],\r\n    '0102': ['SH', '1', 'CodingSchemeDesignator'],\r\n    '0103': ['SH', '1', 'CodingSchemeVersion'],\r\n    '0104': ['LO', '1', 'CodeMeaning'],\r\n    '0105': ['CS', '1', 'MappingResource'],\r\n    '0106': ['DT', '1', 'ContextGroupVersion'],\r\n    '0107': ['DT', '1', 'ContextGroupLocalVersion'],\r\n    '0108': ['LT', '1', 'ExtendedCodeMeaning'],\r\n    '0109': ['SQ', '1', 'CodingSchemeResourcesSequence'],\r\n    '010A': ['CS', '1', 'CodingSchemeURLType'],\r\n    '010B': ['CS', '1', 'ContextGroupExtensionFlag'],\r\n    '010C': ['UI', '1', 'CodingSchemeUID'],\r\n    '010D': ['UI', '1', 'ContextGroupExtensionCreatorUID'],\r\n    '010E': ['UR', '1', 'CodingSchemeURL'],\r\n    '010F': ['CS', '1', 'ContextIdentifier'],\r\n    '0110': ['SQ', '1', 'CodingSchemeIdentificationSequence'],\r\n    '0112': ['LO', '1', 'CodingSchemeRegistry'],\r\n    '0114': ['ST', '1', 'CodingSchemeExternalID'],\r\n    '0115': ['ST', '1', 'CodingSchemeName'],\r\n    '0116': ['ST', '1', 'CodingSchemeResponsibleOrganization'],\r\n    '0117': ['UI', '1', 'ContextUID'],\r\n    '0118': ['UI', '1', 'MappingResourceUID'],\r\n    '0119': ['UC', '1', 'LongCodeValue'],\r\n    '0120': ['UR', '1', 'URNCodeValue'],\r\n    '0121': ['SQ', '1', 'EquivalentCodeSequence'],\r\n    '0122': ['LO', '1', 'MappingResourceName'],\r\n    '0123': ['SQ', '1', 'ContextGroupIdentificationSequence'],\r\n    '0124': ['SQ', '1', 'MappingResourceIdentificationSequence'],\r\n    '0201': ['SH', '1', 'TimezoneOffsetFromUTC'],\r\n    '0202': ['', '', ''],\r\n    '0220': ['SQ', '1', 'ResponsibleGroupCodeSequence'],\r\n    '0221': ['CS', '1', 'EquipmentModality'],\r\n    '0222': ['LO', '1', 'ManufacturerRelatedModelGroup'],\r\n    '0300': ['SQ', '1', 'PrivateDataElementCharacteristicsSequence'],\r\n    '0301': ['US', '1', 'PrivateGroupReference'],\r\n    '0302': ['LO', '1', 'PrivateCreatorReference'],\r\n    '0303': ['CS', '1', 'BlockIdentifyingInformationStatus'],\r\n    '0304': ['US', '1-n', 'NonidentifyingPrivateElements'],\r\n    '0305': ['SQ', '1', 'DeidentificationActionSequence'],\r\n    '0306': ['US', '1-n', 'IdentifyingPrivateElements'],\r\n    '0307': ['CS', '1', 'DeidentificationAction'],\r\n    '0308': ['US', '1', 'PrivateDataElement'],\r\n    '0309': ['UL', '1-3', 'PrivateDataElementValueMultiplicity'],\r\n    '030A': ['CS', '1', 'PrivateDataElementValueRepresentation'],\r\n    '030B': ['UL', '1-2', 'PrivateDataElementNumberOfItems'],\r\n    '030C': ['UC', '1', 'PrivateDataElementName'],\r\n    '030D': ['UC', '1', 'PrivateDataElementKeyword'],\r\n    '030E': ['UT', '1', 'PrivateDataElementDescription'],\r\n    '030F': ['UT', '1', 'PrivateDataElementEncoding'],\r\n    '0310': ['SQ', '1', 'PrivateDataElementDefinitionSequence'],\r\n    '1000': ['AE', '1', 'NetworkID'],\r\n    '1010': ['SH', '1', 'StationName'],\r\n    '1030': ['LO', '1', 'StudyDescription'],\r\n    '1032': ['SQ', '1', 'ProcedureCodeSequence'],\r\n    '103E': ['LO', '1', 'SeriesDescription'],\r\n    '103F': ['SQ', '1', 'SeriesDescriptionCodeSequence'],\r\n    '1040': ['LO', '1', 'InstitutionalDepartmentName'],\r\n    '1041': ['SQ', '1', 'InstitutionalDepartmentTypeCodeSequence'],\r\n    '1048': ['PN', '1-n', 'PhysiciansOfRecord'],\r\n    '1049': ['SQ', '1', 'PhysiciansOfRecordIdentificationSequence'],\r\n    '1050': ['PN', '1-n', 'PerformingPhysicianName'],\r\n    '1052': ['SQ', '1', 'PerformingPhysicianIdentificationSequence'],\r\n    '1060': ['PN', '1-n', 'NameOfPhysiciansReadingStudy'],\r\n    '1062': ['SQ', '1', 'PhysiciansReadingStudyIdentificationSequence'],\r\n    '1070': ['PN', '1-n', 'OperatorsName'],\r\n    '1072': ['SQ', '1', 'OperatorIdentificationSequence'],\r\n    '1080': ['LO', '1-n', 'AdmittingDiagnosesDescription'],\r\n    '1084': ['SQ', '1', 'AdmittingDiagnosesCodeSequence'],\r\n    '1090': ['LO', '1', 'ManufacturerModelName'],\r\n    '1100': ['SQ', '1', 'ReferencedResultsSequence'],\r\n    '1110': ['SQ', '1', 'ReferencedStudySequence'],\r\n    '1111': ['SQ', '1', 'ReferencedPerformedProcedureStepSequence'],\r\n    '1115': ['SQ', '1', 'ReferencedSeriesSequence'],\r\n    '1120': ['SQ', '1', 'ReferencedPatientSequence'],\r\n    '1125': ['SQ', '1', 'ReferencedVisitSequence'],\r\n    '1130': ['SQ', '1', 'ReferencedOverlaySequence'],\r\n    '1134': ['SQ', '1', 'ReferencedStereometricInstanceSequence'],\r\n    '113A': ['SQ', '1', 'ReferencedWaveformSequence'],\r\n    '1140': ['SQ', '1', 'ReferencedImageSequence'],\r\n    '1145': ['SQ', '1', 'ReferencedCurveSequence'],\r\n    '114A': ['SQ', '1', 'ReferencedInstanceSequence'],\r\n    '114B': ['SQ', '1', 'ReferencedRealWorldValueMappingInstanceSequence'],\r\n    '1150': ['UI', '1', 'ReferencedSOPClassUID'],\r\n    '1155': ['UI', '1', 'ReferencedSOPInstanceUID'],\r\n    '1156': ['SQ', '1', 'DefinitionSourceSequence'],\r\n    '115A': ['UI', '1-n', 'SOPClassesSupported'],\r\n    '1160': ['IS', '1-n', 'ReferencedFrameNumber'],\r\n    '1161': ['UL', '1-n', 'SimpleFrameList'],\r\n    '1162': ['UL', '3-3n', 'CalculatedFrameList'],\r\n    '1163': ['FD', '2', 'TimeRange'],\r\n    '1164': ['SQ', '1', 'FrameExtractionSequence'],\r\n    '1167': ['UI', '1', 'MultiFrameSourceSOPInstanceUID'],\r\n    '1190': ['UR', '1', 'RetrieveURL'],\r\n    '1195': ['UI', '1', 'TransactionUID'],\r\n    '1196': ['US', '1', 'WarningReason'],\r\n    '1197': ['US', '1', 'FailureReason'],\r\n    '1198': ['SQ', '1', 'FailedSOPSequence'],\r\n    '1199': ['SQ', '1', 'ReferencedSOPSequence'],\r\n    '119A': ['SQ', '1', 'OtherFailuresSequence'],\r\n    '1200': ['SQ', '1', 'StudiesContainingOtherReferencedInstancesSequence'],\r\n    '1250': ['SQ', '1', 'RelatedSeriesSequence'],\r\n    '2110': ['CS', '1', 'LossyImageCompressionRetired'],\r\n    '2111': ['ST', '1', 'DerivationDescription'],\r\n    '2112': ['SQ', '1', 'SourceImageSequence'],\r\n    '2120': ['SH', '1', 'StageName'],\r\n    '2122': ['IS', '1', 'StageNumber'],\r\n    '2124': ['IS', '1', 'NumberOfStages'],\r\n    '2127': ['SH', '1', 'ViewName'],\r\n    '2128': ['IS', '1', 'ViewNumber'],\r\n    '2129': ['IS', '1', 'NumberOfEventTimers'],\r\n    '212A': ['IS', '1', 'NumberOfViewsInStage'],\r\n    '2130': ['DS', '1-n', 'EventElapsedTimes'],\r\n    '2132': ['LO', '1-n', 'EventTimerNames'],\r\n    '2133': ['SQ', '1', 'EventTimerSequence'],\r\n    '2134': ['FD', '1', 'EventTimeOffset'],\r\n    '2135': ['SQ', '1', 'EventCodeSequence'],\r\n    '2142': ['IS', '1', 'StartTrim'],\r\n    '2143': ['IS', '1', 'StopTrim'],\r\n    '2144': ['IS', '1', 'RecommendedDisplayFrameRate'],\r\n    '2200': ['CS', '1', 'TransducerPosition'],\r\n    '2204': ['CS', '1', 'TransducerOrientation'],\r\n    '2208': ['CS', '1', 'AnatomicStructure'],\r\n    '2218': ['SQ', '1', 'AnatomicRegionSequence'],\r\n    '2220': ['SQ', '1', 'AnatomicRegionModifierSequence'],\r\n    '2228': ['SQ', '1', 'PrimaryAnatomicStructureSequence'],\r\n    '2229': ['SQ', '1', 'AnatomicStructureSpaceOrRegionSequence'],\r\n    '2230': ['SQ', '1', 'PrimaryAnatomicStructureModifierSequence'],\r\n    '2240': ['SQ', '1', 'TransducerPositionSequence'],\r\n    '2242': ['SQ', '1', 'TransducerPositionModifierSequence'],\r\n    '2244': ['SQ', '1', 'TransducerOrientationSequence'],\r\n    '2246': ['SQ', '1', 'TransducerOrientationModifierSequence'],\r\n    '2251': ['SQ', '1', 'AnatomicStructureSpaceOrRegionCodeSequenceTrial'],\r\n    '2253': ['SQ', '1', 'AnatomicPortalOfEntranceCodeSequenceTrial'],\r\n    '2255': ['SQ', '1', 'AnatomicApproachDirectionCodeSequenceTrial'],\r\n    '2256': ['ST', '1', 'AnatomicPerspectiveDescriptionTrial'],\r\n    '2257': ['SQ', '1', 'AnatomicPerspectiveCodeSequenceTrial'],\r\n    '2258': ['ST', '1', 'AnatomicLocationOfExaminingInstrumentDescriptionTrial'],\r\n    '2259': ['SQ', '1', 'AnatomicLocationOfExaminingInstrumentCodeSequenceTrial'],\r\n    '225A': ['SQ', '1', 'AnatomicStructureSpaceOrRegionModifierCodeSequenceTrial'],\r\n    '225C': ['SQ', '1', 'OnAxisBackgroundAnatomicStructureCodeSequenceTrial'],\r\n    '3001': ['SQ', '1', 'AlternateRepresentationSequence'],\r\n    '3002': ['UI', '1-n', 'AvailableTransferSyntaxUID'],\r\n    '3010': ['UI', '1-n', 'IrradiationEventUID'],\r\n    '3011': ['SQ', '1', 'SourceIrradiationEventSequence'],\r\n    '3012': ['UI', '1', 'RadiopharmaceuticalAdministrationEventUID'],\r\n    '4000': ['LT', '1', 'IdentifyingComments'],\r\n    '9007': ['CS', '4', 'FrameType'],\r\n    '9092': ['SQ', '1', 'ReferencedImageEvidenceSequence'],\r\n    '9121': ['SQ', '1', 'ReferencedRawDataSequence'],\r\n    '9123': ['UI', '1', 'CreatorVersionUID'],\r\n    '9124': ['SQ', '1', 'DerivationImageSequence'],\r\n    '9154': ['SQ', '1', 'SourceImageEvidenceSequence'],\r\n    '9205': ['CS', '1', 'PixelPresentation'],\r\n    '9206': ['CS', '1', 'VolumetricProperties'],\r\n    '9207': ['CS', '1', 'VolumeBasedCalculationTechnique'],\r\n    '9208': ['CS', '1', 'ComplexImageComponent'],\r\n    '9209': ['CS', '1', 'AcquisitionContrast'],\r\n    '9215': ['SQ', '1', 'DerivationCodeSequence'],\r\n    '9237': ['SQ', '1', 'ReferencedPresentationStateSequence'],\r\n    '9410': ['SQ', '1', 'ReferencedOtherPlaneSequence'],\r\n    '9458': ['SQ', '1', 'FrameDisplaySequence'],\r\n    '9459': ['FL', '1', 'RecommendedDisplayFrameRateInFloat'],\r\n    '9460': ['CS', '1', 'SkipFrameRangeFlag']\r\n  },\r\n  '0010': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['PN', '1', 'PatientName'],\r\n    '0020': ['LO', '1', 'PatientID'],\r\n    '0021': ['LO', '1', 'IssuerOfPatientID'],\r\n    '0022': ['CS', '1', 'TypeOfPatientID'],\r\n    '0024': ['SQ', '1', 'IssuerOfPatientIDQualifiersSequence'],\r\n    '0026': ['SQ', '1', 'SourcePatientGroupIdentificationSequence'],\r\n    '0027': ['SQ', '1', 'GroupOfPatientsIdentificationSequence'],\r\n    '0028': ['US', '3', 'SubjectRelativePositionInImage'],\r\n    '0030': ['DA', '1', 'PatientBirthDate'],\r\n    '0032': ['TM', '1', 'PatientBirthTime'],\r\n    '0033': ['LO', '1', 'PatientBirthDateInAlternativeCalendar'],\r\n    '0034': ['LO', '1', 'PatientDeathDateInAlternativeCalendar'],\r\n    '0035': ['CS', '1', 'PatientAlternativeCalendar'],\r\n    '0040': ['CS', '1', 'PatientSex'],\r\n    '0050': ['SQ', '1', 'PatientInsurancePlanCodeSequence'],\r\n    '0101': ['SQ', '1', 'PatientPrimaryLanguageCodeSequence'],\r\n    '0102': ['SQ', '1', 'PatientPrimaryLanguageModifierCodeSequence'],\r\n    '0200': ['CS', '1', 'QualityControlSubject'],\r\n    '0201': ['SQ', '1', 'QualityControlSubjectTypeCodeSequence'],\r\n    '0212': ['UC', '1', 'StrainDescription'],\r\n    '0213': ['LO', '1', 'StrainNomenclature'],\r\n    '0214': ['LO', '1', 'StrainStockNumber'],\r\n    '0215': ['SQ', '1', 'StrainSourceRegistryCodeSequence'],\r\n    '0216': ['SQ', '1', 'StrainStockSequence'],\r\n    '0217': ['LO', '1', 'StrainSource'],\r\n    '0218': ['UT', '1', 'StrainAdditionalInformation'],\r\n    '0219': ['SQ', '1', 'StrainCodeSequence'],\r\n    '0221': ['SQ', '1', 'GeneticModificationsSequence'],\r\n    '0222': ['UC', '1', 'GeneticModificationsDescription'],\r\n    '0223': ['LO', '1', 'GeneticModificationsNomenclature'],\r\n    '0229': ['SQ', '1', 'GeneticModificationsCodeSequence'],\r\n    '1000': ['LO', '1-n', 'OtherPatientIDs'],\r\n    '1001': ['PN', '1-n', 'OtherPatientNames'],\r\n    '1002': ['SQ', '1', 'OtherPatientIDsSequence'],\r\n    '1005': ['PN', '1', 'PatientBirthName'],\r\n    '1010': ['AS', '1', 'PatientAge'],\r\n    '1020': ['DS', '1', 'PatientSize'],\r\n    '1021': ['SQ', '1', 'PatientSizeCodeSequence'],\r\n    '1022': ['DS', '1', 'PatientBodyMassIndex'],\r\n    '1023': ['DS', '1', 'MeasuredAPDimension'],\r\n    '1024': ['DS', '1', 'MeasuredLateralDimension'],\r\n    '1030': ['DS', '1', 'PatientWeight'],\r\n    '1040': ['LO', '1', 'PatientAddress'],\r\n    '1050': ['LO', '1-n', 'InsurancePlanIdentification'],\r\n    '1060': ['PN', '1', 'PatientMotherBirthName'],\r\n    '1080': ['LO', '1', 'MilitaryRank'],\r\n    '1081': ['LO', '1', 'BranchOfService'],\r\n    '1090': ['LO', '1', 'MedicalRecordLocator'],\r\n    '1100': ['SQ', '1', 'ReferencedPatientPhotoSequence'],\r\n    '2000': ['LO', '1-n', 'MedicalAlerts'],\r\n    '2110': ['LO', '1-n', 'Allergies'],\r\n    '2150': ['LO', '1', 'CountryOfResidence'],\r\n    '2152': ['LO', '1', 'RegionOfResidence'],\r\n    '2154': ['SH', '1-n', 'PatientTelephoneNumbers'],\r\n    '2155': ['LT', '1', 'PatientTelecomInformation'],\r\n    '2160': ['SH', '1', 'EthnicGroup'],\r\n    '2180': ['SH', '1', 'Occupation'],\r\n    '21A0': ['CS', '1', 'SmokingStatus'],\r\n    '21B0': ['LT', '1', 'AdditionalPatientHistory'],\r\n    '21C0': ['US', '1', 'PregnancyStatus'],\r\n    '21D0': ['DA', '1', 'LastMenstrualDate'],\r\n    '21F0': ['LO', '1', 'PatientReligiousPreference'],\r\n    '2201': ['LO', '1', 'PatientSpeciesDescription'],\r\n    '2202': ['SQ', '1', 'PatientSpeciesCodeSequence'],\r\n    '2203': ['CS', '1', 'PatientSexNeutered'],\r\n    '2210': ['CS', '1', 'AnatomicalOrientationType'],\r\n    '2292': ['LO', '1', 'PatientBreedDescription'],\r\n    '2293': ['SQ', '1', 'PatientBreedCodeSequence'],\r\n    '2294': ['SQ', '1', 'BreedRegistrationSequence'],\r\n    '2295': ['LO', '1', 'BreedRegistrationNumber'],\r\n    '2296': ['SQ', '1', 'BreedRegistryCodeSequence'],\r\n    '2297': ['PN', '1', 'ResponsiblePerson'],\r\n    '2298': ['CS', '1', 'ResponsiblePersonRole'],\r\n    '2299': ['LO', '1', 'ResponsibleOrganization'],\r\n    '4000': ['LT', '1', 'PatientComments'],\r\n    '9431': ['FL', '1', 'ExaminedBodyThickness']\r\n  },\r\n  '0012': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['LO', '1', 'ClinicalTrialSponsorName'],\r\n    '0020': ['LO', '1', 'ClinicalTrialProtocolID'],\r\n    '0021': ['LO', '1', 'ClinicalTrialProtocolName'],\r\n    '0030': ['LO', '1', 'ClinicalTrialSiteID'],\r\n    '0031': ['LO', '1', 'ClinicalTrialSiteName'],\r\n    '0040': ['LO', '1', 'ClinicalTrialSubjectID'],\r\n    '0042': ['LO', '1', 'ClinicalTrialSubjectReadingID'],\r\n    '0050': ['LO', '1', 'ClinicalTrialTimePointID'],\r\n    '0051': ['ST', '1', 'ClinicalTrialTimePointDescription'],\r\n    '0052': ['FD', '1', 'LongitudinalTemporalOffsetFromEvent'],\r\n    '0053': ['CS', '1', 'LongitudinalTemporalEventType'],\r\n    '0060': ['LO', '1', 'ClinicalTrialCoordinatingCenterName'],\r\n    '0062': ['CS', '1', 'PatientIdentityRemoved'],\r\n    '0063': ['LO', '1-n', 'DeidentificationMethod'],\r\n    '0064': ['SQ', '1', 'DeidentificationMethodCodeSequence'],\r\n    '0071': ['LO', '1', 'ClinicalTrialSeriesID'],\r\n    '0072': ['LO', '1', 'ClinicalTrialSeriesDescription'],\r\n    '0081': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeName'],\r\n    '0082': ['LO', '1', 'ClinicalTrialProtocolEthicsCommitteeApprovalNumber'],\r\n    '0083': ['SQ', '1', 'ConsentForClinicalTrialUseSequence'],\r\n    '0084': ['CS', '1', 'DistributionType'],\r\n    '0085': ['CS', '1', 'ConsentForDistributionFlag'],\r\n    '0086': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessStartDate'],\r\n    '0087': ['DA', '1', 'EthicsCommitteeApprovalEffectivenessEndDate']\r\n  },\r\n  '0014': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0023': ['ST', '1', 'CADFileFormat'],\r\n    '0024': ['ST', '1', 'ComponentReferenceSystem'],\r\n    '0025': ['ST', '1', 'ComponentManufacturingProcedure'],\r\n    '0028': ['ST', '1', 'ComponentManufacturer'],\r\n    '0030': ['DS', '1-n', 'MaterialThickness'],\r\n    '0032': ['DS', '1-n', 'MaterialPipeDiameter'],\r\n    '0034': ['DS', '1-n', 'MaterialIsolationDiameter'],\r\n    '0042': ['ST', '1', 'MaterialGrade'],\r\n    '0044': ['ST', '1', 'MaterialPropertiesDescription'],\r\n    '0045': ['ST', '1', 'MaterialPropertiesFileFormatRetired'],\r\n    '0046': ['LT', '1', 'MaterialNotes'],\r\n    '0050': ['CS', '1', 'ComponentShape'],\r\n    '0052': ['CS', '1', 'CurvatureType'],\r\n    '0054': ['DS', '1', 'OuterDiameter'],\r\n    '0056': ['DS', '1', 'InnerDiameter'],\r\n    '0100': ['LO', '1-n', 'ComponentWelderIDs'],\r\n    '0101': ['CS', '1', 'SecondaryApprovalStatus'],\r\n    '0102': ['DA', '1', 'SecondaryReviewDate'],\r\n    '0103': ['TM', '1', 'SecondaryReviewTime'],\r\n    '0104': ['PN', '1', 'SecondaryReviewerName'],\r\n    '0105': ['ST', '1', 'RepairID'],\r\n    '0106': ['SQ', '1', 'MultipleComponentApprovalSequence'],\r\n    '0107': ['CS', '1-n', 'OtherApprovalStatus'],\r\n    '0108': ['CS', '1-n', 'OtherSecondaryApprovalStatus'],\r\n    '1010': ['ST', '1', 'ActualEnvironmentalConditions'],\r\n    '1020': ['DA', '1', 'ExpiryDate'],\r\n    '1040': ['ST', '1', 'EnvironmentalConditions'],\r\n    '2002': ['SQ', '1', 'EvaluatorSequence'],\r\n    '2004': ['IS', '1', 'EvaluatorNumber'],\r\n    '2006': ['PN', '1', 'EvaluatorName'],\r\n    '2008': ['IS', '1', 'EvaluationAttempt'],\r\n    '2012': ['SQ', '1', 'IndicationSequence'],\r\n    '2014': ['IS', '1', 'IndicationNumber'],\r\n    '2016': ['SH', '1', 'IndicationLabel'],\r\n    '2018': ['ST', '1', 'IndicationDescription'],\r\n    '201A': ['CS', '1-n', 'IndicationType'],\r\n    '201C': ['CS', '1', 'IndicationDisposition'],\r\n    '201E': ['SQ', '1', 'IndicationROISequence'],\r\n    '2030': ['SQ', '1', 'IndicationPhysicalPropertySequence'],\r\n    '2032': ['SH', '1', 'PropertyLabel'],\r\n    '2202': ['IS', '1', 'CoordinateSystemNumberOfAxes'],\r\n    '2204': ['SQ', '1', 'CoordinateSystemAxesSequence'],\r\n    '2206': ['ST', '1', 'CoordinateSystemAxisDescription'],\r\n    '2208': ['CS', '1', 'CoordinateSystemDataSetMapping'],\r\n    '220A': ['IS', '1', 'CoordinateSystemAxisNumber'],\r\n    '220C': ['CS', '1', 'CoordinateSystemAxisType'],\r\n    '220E': ['CS', '1', 'CoordinateSystemAxisUnits'],\r\n    '2210': ['OB', '1', 'CoordinateSystemAxisValues'],\r\n    '2220': ['SQ', '1', 'CoordinateSystemTransformSequence'],\r\n    '2222': ['ST', '1', 'TransformDescription'],\r\n    '2224': ['IS', '1', 'TransformNumberOfAxes'],\r\n    '2226': ['IS', '1-n', 'TransformOrderOfAxes'],\r\n    '2228': ['CS', '1', 'TransformedAxisUnits'],\r\n    '222A': ['DS', '1-n', 'CoordinateSystemTransformRotationAndScaleMatrix'],\r\n    '222C': ['DS', '1-n', 'CoordinateSystemTransformTranslationMatrix'],\r\n    '3011': ['DS', '1', 'InternalDetectorFrameTime'],\r\n    '3012': ['DS', '1', 'NumberOfFramesIntegrated'],\r\n    '3020': ['SQ', '1', 'DetectorTemperatureSequence'],\r\n    '3022': ['ST', '1', 'SensorName'],\r\n    '3024': ['DS', '1', 'HorizontalOffsetOfSensor'],\r\n    '3026': ['DS', '1', 'VerticalOffsetOfSensor'],\r\n    '3028': ['DS', '1', 'SensorTemperature'],\r\n    '3040': ['SQ', '1', 'DarkCurrentSequence'],\r\n    '3050': ['ox', '1', 'DarkCurrentCounts'],\r\n    '3060': ['SQ', '1', 'GainCorrectionReferenceSequence'],\r\n    '3070': ['ox', '1', 'AirCounts'],\r\n    '3071': ['DS', '1', 'KVUsedInGainCalibration'],\r\n    '3072': ['DS', '1', 'MAUsedInGainCalibration'],\r\n    '3073': ['DS', '1', 'NumberOfFramesUsedForIntegration'],\r\n    '3074': ['LO', '1', 'FilterMaterialUsedInGainCalibration'],\r\n    '3075': ['DS', '1', 'FilterThicknessUsedInGainCalibration'],\r\n    '3076': ['DA', '1', 'DateOfGainCalibration'],\r\n    '3077': ['TM', '1', 'TimeOfGainCalibration'],\r\n    '3080': ['OB', '1', 'BadPixelImage'],\r\n    '3099': ['LT', '1', 'CalibrationNotes'],\r\n    '3100': ['LT', '1', 'LinearityCorrectionTechnique'],\r\n    '3101': ['LT', '1', 'BeamHardeningCorrectionTechnique'],\r\n    '4002': ['SQ', '1', 'PulserEquipmentSequence'],\r\n    '4004': ['CS', '1', 'PulserType'],\r\n    '4006': ['LT', '1', 'PulserNotes'],\r\n    '4008': ['SQ', '1', 'ReceiverEquipmentSequence'],\r\n    '400A': ['CS', '1', 'AmplifierType'],\r\n    '400C': ['LT', '1', 'ReceiverNotes'],\r\n    '400E': ['SQ', '1', 'PreAmplifierEquipmentSequence'],\r\n    '400F': ['LT', '1', 'PreAmplifierNotes'],\r\n    '4010': ['SQ', '1', 'TransmitTransducerSequence'],\r\n    '4011': ['SQ', '1', 'ReceiveTransducerSequence'],\r\n    '4012': ['US', '1', 'NumberOfElements'],\r\n    '4013': ['CS', '1', 'ElementShape'],\r\n    '4014': ['DS', '1', 'ElementDimensionA'],\r\n    '4015': ['DS', '1', 'ElementDimensionB'],\r\n    '4016': ['DS', '1', 'ElementPitchA'],\r\n    '4017': ['DS', '1', 'MeasuredBeamDimensionA'],\r\n    '4018': ['DS', '1', 'MeasuredBeamDimensionB'],\r\n    '4019': ['DS', '1', 'LocationOfMeasuredBeamDiameter'],\r\n    '401A': ['DS', '1', 'NominalFrequency'],\r\n    '401B': ['DS', '1', 'MeasuredCenterFrequency'],\r\n    '401C': ['DS', '1', 'MeasuredBandwidth'],\r\n    '401D': ['DS', '1', 'ElementPitchB'],\r\n    '4020': ['SQ', '1', 'PulserSettingsSequence'],\r\n    '4022': ['DS', '1', 'PulseWidth'],\r\n    '4024': ['DS', '1', 'ExcitationFrequency'],\r\n    '4026': ['CS', '1', 'ModulationType'],\r\n    '4028': ['DS', '1', 'Damping'],\r\n    '4030': ['SQ', '1', 'ReceiverSettingsSequence'],\r\n    '4031': ['DS', '1', 'AcquiredSoundpathLength'],\r\n    '4032': ['CS', '1', 'AcquisitionCompressionType'],\r\n    '4033': ['IS', '1', 'AcquisitionSampleSize'],\r\n    '4034': ['DS', '1', 'RectifierSmoothing'],\r\n    '4035': ['SQ', '1', 'DACSequence'],\r\n    '4036': ['CS', '1', 'DACType'],\r\n    '4038': ['DS', '1-n', 'DACGainPoints'],\r\n    '403A': ['DS', '1-n', 'DACTimePoints'],\r\n    '403C': ['DS', '1-n', 'DACAmplitude'],\r\n    '4040': ['SQ', '1', 'PreAmplifierSettingsSequence'],\r\n    '4050': ['SQ', '1', 'TransmitTransducerSettingsSequence'],\r\n    '4051': ['SQ', '1', 'ReceiveTransducerSettingsSequence'],\r\n    '4052': ['DS', '1', 'IncidentAngle'],\r\n    '4054': ['ST', '1', 'CouplingTechnique'],\r\n    '4056': ['ST', '1', 'CouplingMedium'],\r\n    '4057': ['DS', '1', 'CouplingVelocity'],\r\n    '4058': ['DS', '1', 'ProbeCenterLocationX'],\r\n    '4059': ['DS', '1', 'ProbeCenterLocationZ'],\r\n    '405A': ['DS', '1', 'SoundPathLength'],\r\n    '405C': ['ST', '1', 'DelayLawIdentifier'],\r\n    '4060': ['SQ', '1', 'GateSettingsSequence'],\r\n    '4062': ['DS', '1', 'GateThreshold'],\r\n    '4064': ['DS', '1', 'VelocityOfSound'],\r\n    '4070': ['SQ', '1', 'CalibrationSettingsSequence'],\r\n    '4072': ['ST', '1', 'CalibrationProcedure'],\r\n    '4074': ['SH', '1', 'ProcedureVersion'],\r\n    '4076': ['DA', '1', 'ProcedureCreationDate'],\r\n    '4078': ['DA', '1', 'ProcedureExpirationDate'],\r\n    '407A': ['DA', '1', 'ProcedureLastModifiedDate'],\r\n    '407C': ['TM', '1-n', 'CalibrationTime'],\r\n    '407E': ['DA', '1-n', 'CalibrationDate'],\r\n    '4080': ['SQ', '1', 'ProbeDriveEquipmentSequence'],\r\n    '4081': ['CS', '1', 'DriveType'],\r\n    '4082': ['LT', '1', 'ProbeDriveNotes'],\r\n    '4083': ['SQ', '1', 'DriveProbeSequence'],\r\n    '4084': ['DS', '1', 'ProbeInductance'],\r\n    '4085': ['DS', '1', 'ProbeResistance'],\r\n    '4086': ['SQ', '1', 'ReceiveProbeSequence'],\r\n    '4087': ['SQ', '1', 'ProbeDriveSettingsSequence'],\r\n    '4088': ['DS', '1', 'BridgeResistors'],\r\n    '4089': ['DS', '1', 'ProbeOrientationAngle'],\r\n    '408B': ['DS', '1', 'UserSelectedGainY'],\r\n    '408C': ['DS', '1', 'UserSelectedPhase'],\r\n    '408D': ['DS', '1', 'UserSelectedOffsetX'],\r\n    '408E': ['DS', '1', 'UserSelectedOffsetY'],\r\n    '4091': ['SQ', '1', 'ChannelSettingsSequence'],\r\n    '4092': ['DS', '1', 'ChannelThreshold'],\r\n    '409A': ['SQ', '1', 'ScannerSettingsSequence'],\r\n    '409B': ['ST', '1', 'ScanProcedure'],\r\n    '409C': ['DS', '1', 'TranslationRateX'],\r\n    '409D': ['DS', '1', 'TranslationRateY'],\r\n    '409F': ['DS', '1', 'ChannelOverlap'],\r\n    '40A0': ['LO', '1-n', 'ImageQualityIndicatorType'],\r\n    '40A1': ['LO', '1-n', 'ImageQualityIndicatorMaterial'],\r\n    '40A2': ['LO', '1-n', 'ImageQualityIndicatorSize'],\r\n    '5002': ['IS', '1', 'LINACEnergy'],\r\n    '5004': ['IS', '1', 'LINACOutput'],\r\n    '5100': ['US', '1', 'ActiveAperture'],\r\n    '5101': ['DS', '1', 'TotalAperture'],\r\n    '5102': ['DS', '1', 'ApertureElevation'],\r\n    '5103': ['DS', '1', 'MainLobeAngle'],\r\n    '5104': ['DS', '1', 'MainRoofAngle'],\r\n    '5105': ['CS', '1', 'ConnectorType'],\r\n    '5106': ['SH', '1', 'WedgeModelNumber'],\r\n    '5107': ['DS', '1', 'WedgeAngleFloat'],\r\n    '5108': ['DS', '1', 'WedgeRoofAngle'],\r\n    '5109': ['CS', '1', 'WedgeElement1Position'],\r\n    '510A': ['DS', '1', 'WedgeMaterialVelocity'],\r\n    '510B': ['SH', '1', 'WedgeMaterial'],\r\n    '510C': ['DS', '1', 'WedgeOffsetZ'],\r\n    '510D': ['DS', '1', 'WedgeOriginOffsetX'],\r\n    '510E': ['DS', '1', 'WedgeTimeDelay'],\r\n    '510F': ['SH', '1', 'WedgeName'],\r\n    '5110': ['SH', '1', 'WedgeManufacturerName'],\r\n    '5111': ['LO', '1', 'WedgeDescription'],\r\n    '5112': ['DS', '1', 'NominalBeamAngle'],\r\n    '5113': ['DS', '1', 'WedgeOffsetX'],\r\n    '5114': ['DS', '1', 'WedgeOffsetY'],\r\n    '5115': ['DS', '1', 'WedgeTotalLength'],\r\n    '5116': ['DS', '1', 'WedgeInContactLength'],\r\n    '5117': ['DS', '1', 'WedgeFrontGap'],\r\n    '5118': ['DS', '1', 'WedgeTotalHeight'],\r\n    '5119': ['DS', '1', 'WedgeFrontHeight'],\r\n    '511A': ['DS', '1', 'WedgeRearHeight'],\r\n    '511B': ['DS', '1', 'WedgeTotalWidth'],\r\n    '511C': ['DS', '1', 'WedgeInContactWidth'],\r\n    '511D': ['DS', '1', 'WedgeChamferHeight'],\r\n    '511E': ['CS', '1', 'WedgeCurve'],\r\n    '511F': ['DS', '1', 'RadiusAlongWedge']\r\n  },\r\n  '0016': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['DS', '1', 'WhitePoint'],\r\n    '0002': ['DS', '3', 'PrimaryChromaticities'],\r\n    '0003': ['UT', '1', 'BatteryLevel'],\r\n    '0004': ['DS', '1', 'ExposureTimeInSeconds'],\r\n    '0005': ['DS', '1', 'FNumber'],\r\n    '0006': ['IS', '1', 'OECFRows'],\r\n    '0007': ['IS', '1', 'OECFColumns'],\r\n    '0008': ['UC', '1-n', 'OECFColumnNames'],\r\n    '0009': ['DS', '1-n', 'OECFValues'],\r\n    '000A': ['IS', '1', 'SpatialFrequencyResponseRows'],\r\n    '000B': ['IS', '1', 'SpatialFrequencyResponseColumns'],\r\n    '000C': ['UC', '1-n', 'SpatialFrequencyResponseColumnNames'],\r\n    '000D': ['DS', '1-n', 'SpatialFrequencyResponseValues'],\r\n    '000E': ['IS', '1', 'ColorFilterArrayPatternRows'],\r\n    '000F': ['IS', '1', 'ColorFilterArrayPatternColumns'],\r\n    '0010': ['DS', '1-n', 'ColorFilterArrayPatternValues'],\r\n    '0011': ['US', '1', 'FlashFiringStatus'],\r\n    '0012': ['US', '1', 'FlashReturnStatus'],\r\n    '0013': ['US', '1', 'FlashMode'],\r\n    '0014': ['US', '1', 'FlashFunctionPresent'],\r\n    '0015': ['US', '1', 'FlashRedEyeMode'],\r\n    '0016': ['US', '1', 'ExposureProgram'],\r\n    '0017': ['UT', '1', 'SpectralSensitivity'],\r\n    '0018': ['IS', '1', 'PhotographicSensitivity'],\r\n    '0019': ['IS', '1', 'SelfTimerMode'],\r\n    '001A': ['US', '1', 'SensitivityType'],\r\n    '001B': ['IS', '1', 'StandardOutputSensitivity'],\r\n    '001C': ['IS', '1', 'RecommendedExposureIndex'],\r\n    '001D': ['IS', '1', 'ISOSpeed'],\r\n    '001E': ['IS', '1', 'ISOSpeedLatitudeyyy'],\r\n    '001F': ['IS', '1', 'ISOSpeedLatitudezzz'],\r\n    '0020': ['UT', '1', 'EXIFVersion'],\r\n    '0021': ['DS', '1', 'ShutterSpeedValue'],\r\n    '0022': ['DS', '1', 'ApertureValue'],\r\n    '0023': ['DS', '1', 'BrightnessValue'],\r\n    '0024': ['DS', '1', 'ExposureBiasValue'],\r\n    '0025': ['DS', '1', 'MaxApertureValue'],\r\n    '0026': ['DS', '1', 'SubjectDistance'],\r\n    '0027': ['US', '1', 'MeteringMode'],\r\n    '0028': ['US', '1', 'LightSource'],\r\n    '0029': ['DS', '1', 'FocalLength'],\r\n    '002A': ['IS', '2-4', 'SubjectArea'],\r\n    '002B': ['OB', '1', 'MakerNote'],\r\n    '0030': ['DS', '1', 'Temperature'],\r\n    '0031': ['DS', '1', 'Humidity'],\r\n    '0032': ['DS', '1', 'Pressure'],\r\n    '0033': ['DS', '1', 'WaterDepth'],\r\n    '0034': ['DS', '1', 'Acceleration'],\r\n    '0035': ['DS', '1', 'CameraElevationAngle'],\r\n    '0036': ['DS', '1-2', 'FlashEnergy'],\r\n    '0037': ['IS', '2', 'SubjectLocation'],\r\n    '0038': ['DS', '1', 'PhotographicExposureIndex'],\r\n    '0039': ['US', '1', 'SensingMethod'],\r\n    '003A': ['US', '1', 'FileSource'],\r\n    '003B': ['US', '1', 'SceneType'],\r\n    '0041': ['US', '1', 'CustomRendered'],\r\n    '0042': ['US', '1', 'ExposureMode'],\r\n    '0043': ['US', '1', 'WhiteBalance'],\r\n    '0044': ['DS', '1', 'DigitalZoomRatio'],\r\n    '0045': ['IS', '1', 'FocalLengthIn35mmFilm'],\r\n    '0046': ['US', '1', 'SceneCaptureType'],\r\n    '0047': ['US', '1', 'GainControl'],\r\n    '0048': ['US', '1', 'Contrast'],\r\n    '0049': ['US', '1', 'Saturation'],\r\n    '004A': ['US', '1', 'Sharpness'],\r\n    '004B': ['OB', '1', 'DeviceSettingDescription'],\r\n    '004C': ['US', '1', 'SubjectDistanceRange'],\r\n    '004D': ['UT', '1', 'CameraOwnerName'],\r\n    '004E': ['DS', '4', 'LensSpecification'],\r\n    '004F': ['UT', '1', 'LensMake'],\r\n    '0050': ['UT', '1', 'LensModel'],\r\n    '0051': ['UT', '1', 'LensSerialNumber'],\r\n    '0061': ['CS', '1', 'InteroperabilityIndex'],\r\n    '0062': ['OB', '1', 'InteroperabilityVersion'],\r\n    '0070': ['OB', '1', 'GPSVersionID'],\r\n    '0071': ['CS', '1', 'GPSLatitudeRef'],\r\n    '0072': ['DS', '3', 'GPSLatitude'],\r\n    '0073': ['CS', '1', 'GPSLongitudeRef'],\r\n    '0074': ['DS', '3', 'GPSLongitude'],\r\n    '0075': ['US', '1', 'GPSAltitudeRef'],\r\n    '0076': ['DS', '1', 'GPSAltitude'],\r\n    '0077': ['DT', '1', 'GPSTimeStamp'],\r\n    '0078': ['UT', '1', 'GPSSatellites'],\r\n    '0079': ['CS', '1', 'GPSStatus'],\r\n    '007A': ['CS', '1', 'GPSMeasureMode'],\r\n    '007B': ['DS', '1', 'GPSDOP'],\r\n    '007C': ['CS', '1', 'GPSSpeedRef'],\r\n    '007D': ['DS', '1', 'GPSSpeed'],\r\n    '007E': ['CS', '1', 'GPSTrackRef'],\r\n    '007F': ['DS', '1', 'GPSTrack'],\r\n    '0080': ['CS', '1', 'GPSImgDirectionRef'],\r\n    '0081': ['DS', '1', 'GPSImgDirection'],\r\n    '0082': ['UT', '1', 'GPSMapDatum'],\r\n    '0083': ['CS', '1', 'GPSDestLatitudeRef'],\r\n    '0084': ['DS', '3', 'GPSDestLatitude'],\r\n    '0085': ['CS', '1', 'GPSDestLongitudeRef'],\r\n    '0086': ['DS', '3', 'GPSDestLongitude'],\r\n    '0087': ['CS', '1', 'GPSDestBearingRef'],\r\n    '0088': ['DS', '1', 'GPSDestBearing'],\r\n    '0089': ['CS', '1', 'GPSDestDistanceRef'],\r\n    '008A': ['DS', '1', 'GPSDestDistance'],\r\n    '008B': ['OB', '1', 'GPSProcessingMethod'],\r\n    '008C': ['OB', '1', 'GPSAreaInformation'],\r\n    '008D': ['DT', '1', 'GPSDateStamp'],\r\n    '008E': ['IS', '1', 'GPSDifferential'],\r\n    '1001': ['CS', '1', 'LightSourcePolarization'],\r\n    '1002': ['DS', '1', 'EmitterColorTemperature'],\r\n    '1003': ['CS', '1', 'ContactMethod'],\r\n    '1004': ['CS', '1-n', 'ImmersionMedia'],\r\n    '1005': ['DS', '1', 'OpticalMagnificationFactor']\r\n  },\r\n  '0018': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['LO', '1', 'ContrastBolusAgent'],\r\n    '0012': ['SQ', '1', 'ContrastBolusAgentSequence'],\r\n    '0013': ['FL', '1', 'ContrastBolusT1Relaxivity'],\r\n    '0014': ['SQ', '1', 'ContrastBolusAdministrationRouteSequence'],\r\n    '0015': ['CS', '1', 'BodyPartExamined'],\r\n    '0020': ['CS', '1-n', 'ScanningSequence'],\r\n    '0021': ['CS', '1-n', 'SequenceVariant'],\r\n    '0022': ['CS', '1-n', 'ScanOptions'],\r\n    '0023': ['CS', '1', 'MRAcquisitionType'],\r\n    '0024': ['SH', '1', 'SequenceName'],\r\n    '0025': ['CS', '1', 'AngioFlag'],\r\n    '0026': ['SQ', '1', 'InterventionDrugInformationSequence'],\r\n    '0027': ['TM', '1', 'InterventionDrugStopTime'],\r\n    '0028': ['DS', '1', 'InterventionDrugDose'],\r\n    '0029': ['SQ', '1', 'InterventionDrugCodeSequence'],\r\n    '002A': ['SQ', '1', 'AdditionalDrugSequence'],\r\n    '0030': ['LO', '1-n', 'Radionuclide'],\r\n    '0031': ['LO', '1', 'Radiopharmaceutical'],\r\n    '0032': ['DS', '1', 'EnergyWindowCenterline'],\r\n    '0033': ['DS', '1-n', 'EnergyWindowTotalWidth'],\r\n    '0034': ['LO', '1', 'InterventionDrugName'],\r\n    '0035': ['TM', '1', 'InterventionDrugStartTime'],\r\n    '0036': ['SQ', '1', 'InterventionSequence'],\r\n    '0037': ['CS', '1', 'TherapyType'],\r\n    '0038': ['CS', '1', 'InterventionStatus'],\r\n    '0039': ['CS', '1', 'TherapyDescription'],\r\n    '003A': ['ST', '1', 'InterventionDescription'],\r\n    '0040': ['IS', '1', 'CineRate'],\r\n    '0042': ['CS', '1', 'InitialCineRunState'],\r\n    '0050': ['DS', '1', 'SliceThickness'],\r\n    '0060': ['DS', '1', 'KVP'],\r\n    '0061': ['DS', '1', ''],\r\n    '0070': ['IS', '1', 'CountsAccumulated'],\r\n    '0071': ['CS', '1', 'AcquisitionTerminationCondition'],\r\n    '0072': ['DS', '1', 'EffectiveDuration'],\r\n    '0073': ['CS', '1', 'AcquisitionStartCondition'],\r\n    '0074': ['IS', '1', 'AcquisitionStartConditionData'],\r\n    '0075': ['IS', '1', 'AcquisitionTerminationConditionData'],\r\n    '0080': ['DS', '1', 'RepetitionTime'],\r\n    '0081': ['DS', '1', 'EchoTime'],\r\n    '0082': ['DS', '1', 'InversionTime'],\r\n    '0083': ['DS', '1', 'NumberOfAverages'],\r\n    '0084': ['DS', '1', 'ImagingFrequency'],\r\n    '0085': ['SH', '1', 'ImagedNucleus'],\r\n    '0086': ['IS', '1-n', 'EchoNumbers'],\r\n    '0087': ['DS', '1', 'MagneticFieldStrength'],\r\n    '0088': ['DS', '1', 'SpacingBetweenSlices'],\r\n    '0089': ['IS', '1', 'NumberOfPhaseEncodingSteps'],\r\n    '0090': ['DS', '1', 'DataCollectionDiameter'],\r\n    '0091': ['IS', '1', 'EchoTrainLength'],\r\n    '0093': ['DS', '1', 'PercentSampling'],\r\n    '0094': ['DS', '1', 'PercentPhaseFieldOfView'],\r\n    '0095': ['DS', '1', 'PixelBandwidth'],\r\n    '1000': ['LO', '1', 'DeviceSerialNumber'],\r\n    '1002': ['UI', '1', 'DeviceUID'],\r\n    '1003': ['LO', '1', 'DeviceID'],\r\n    '1004': ['LO', '1', 'PlateID'],\r\n    '1005': ['LO', '1', 'GeneratorID'],\r\n    '1006': ['LO', '1', 'GridID'],\r\n    '1007': ['LO', '1', 'CassetteID'],\r\n    '1008': ['LO', '1', 'GantryID'],\r\n    '1009': ['UT', '1', 'UniqueDeviceIdentifier'],\r\n    '100A': ['SQ', '1', 'UDISequence'],\r\n    '100B': ['UI', '1-n', 'ManufacturerDeviceClassUID'],\r\n    '1010': ['LO', '1', 'SecondaryCaptureDeviceID'],\r\n    '1011': ['LO', '1', 'HardcopyCreationDeviceID'],\r\n    '1012': ['DA', '1', 'DateOfSecondaryCapture'],\r\n    '1014': ['TM', '1', 'TimeOfSecondaryCapture'],\r\n    '1016': ['LO', '1', 'SecondaryCaptureDeviceManufacturer'],\r\n    '1017': ['LO', '1', 'HardcopyDeviceManufacturer'],\r\n    '1018': ['LO', '1', 'SecondaryCaptureDeviceManufacturerModelName'],\r\n    '1019': ['LO', '1-n', 'SecondaryCaptureDeviceSoftwareVersions'],\r\n    '101A': ['LO', '1-n', 'HardcopyDeviceSoftwareVersion'],\r\n    '101B': ['LO', '1', 'HardcopyDeviceManufacturerModelName'],\r\n    '1020': ['LO', '1-n', 'SoftwareVersions'],\r\n    '1022': ['SH', '1', 'VideoImageFormatAcquired'],\r\n    '1023': ['LO', '1', 'DigitalImageFormatAcquired'],\r\n    '1030': ['LO', '1', 'ProtocolName'],\r\n    '1040': ['LO', '1', 'ContrastBolusRoute'],\r\n    '1041': ['DS', '1', 'ContrastBolusVolume'],\r\n    '1042': ['TM', '1', 'ContrastBolusStartTime'],\r\n    '1043': ['TM', '1', 'ContrastBolusStopTime'],\r\n    '1044': ['DS', '1', 'ContrastBolusTotalDose'],\r\n    '1045': ['IS', '1', 'SyringeCounts'],\r\n    '1046': ['DS', '1-n', 'ContrastFlowRate'],\r\n    '1047': ['DS', '1-n', 'ContrastFlowDuration'],\r\n    '1048': ['CS', '1', 'ContrastBolusIngredient'],\r\n    '1049': ['DS', '1', 'ContrastBolusIngredientConcentration'],\r\n    '1050': ['DS', '1', 'SpatialResolution'],\r\n    '1060': ['DS', '1', 'TriggerTime'],\r\n    '1061': ['LO', '1', 'TriggerSourceOrType'],\r\n    '1062': ['IS', '1', 'NominalInterval'],\r\n    '1063': ['DS', '1', 'FrameTime'],\r\n    '1064': ['LO', '1', 'CardiacFramingType'],\r\n    '1065': ['DS', '1-n', 'FrameTimeVector'],\r\n    '1066': ['DS', '1', 'FrameDelay'],\r\n    '1067': ['DS', '1', 'ImageTriggerDelay'],\r\n    '1068': ['DS', '1', 'MultiplexGroupTimeOffset'],\r\n    '1069': ['DS', '1', 'TriggerTimeOffset'],\r\n    '106A': ['CS', '1', 'SynchronizationTrigger'],\r\n    '106C': ['US', '2', 'SynchronizationChannel'],\r\n    '106E': ['UL', '1', 'TriggerSamplePosition'],\r\n    '1070': ['LO', '1', 'RadiopharmaceuticalRoute'],\r\n    '1071': ['DS', '1', 'RadiopharmaceuticalVolume'],\r\n    '1072': ['TM', '1', 'RadiopharmaceuticalStartTime'],\r\n    '1073': ['TM', '1', 'RadiopharmaceuticalStopTime'],\r\n    '1074': ['DS', '1', 'RadionuclideTotalDose'],\r\n    '1075': ['DS', '1', 'RadionuclideHalfLife'],\r\n    '1076': ['DS', '1', 'RadionuclidePositronFraction'],\r\n    '1077': ['DS', '1', 'RadiopharmaceuticalSpecificActivity'],\r\n    '1078': ['DT', '1', 'RadiopharmaceuticalStartDateTime'],\r\n    '1079': ['DT', '1', 'RadiopharmaceuticalStopDateTime'],\r\n    '1080': ['CS', '1', 'BeatRejectionFlag'],\r\n    '1081': ['IS', '1', 'LowRRValue'],\r\n    '1082': ['IS', '1', 'HighRRValue'],\r\n    '1083': ['IS', '1', 'IntervalsAcquired'],\r\n    '1084': ['IS', '1', 'IntervalsRejected'],\r\n    '1085': ['LO', '1', 'PVCRejection'],\r\n    '1086': ['IS', '1', 'SkipBeats'],\r\n    '1088': ['IS', '1', 'HeartRate'],\r\n    '1090': ['IS', '1', 'CardiacNumberOfImages'],\r\n    '1094': ['IS', '1', 'TriggerWindow'],\r\n    '1100': ['DS', '1', 'ReconstructionDiameter'],\r\n    '1110': ['DS', '1', 'DistanceSourceToDetector'],\r\n    '1111': ['DS', '1', 'DistanceSourceToPatient'],\r\n    '1114': ['DS', '1', 'EstimatedRadiographicMagnificationFactor'],\r\n    '1120': ['DS', '1', 'GantryDetectorTilt'],\r\n    '1121': ['DS', '1', 'GantryDetectorSlew'],\r\n    '1130': ['DS', '1', 'TableHeight'],\r\n    '1131': ['DS', '1', 'TableTraverse'],\r\n    '1134': ['CS', '1', 'TableMotion'],\r\n    '1135': ['DS', '1-n', 'TableVerticalIncrement'],\r\n    '1136': ['DS', '1-n', 'TableLateralIncrement'],\r\n    '1137': ['DS', '1-n', 'TableLongitudinalIncrement'],\r\n    '1138': ['DS', '1', 'TableAngle'],\r\n    '113A': ['CS', '1', 'TableType'],\r\n    '1140': ['CS', '1', 'RotationDirection'],\r\n    '1141': ['DS', '1', 'AngularPosition'],\r\n    '1142': ['DS', '1-n', 'RadialPosition'],\r\n    '1143': ['DS', '1', 'ScanArc'],\r\n    '1144': ['DS', '1', 'AngularStep'],\r\n    '1145': ['DS', '1', 'CenterOfRotationOffset'],\r\n    '1146': ['DS', '1-n', 'RotationOffset'],\r\n    '1147': ['CS', '1', 'FieldOfViewShape'],\r\n    '1149': ['IS', '1-2', 'FieldOfViewDimensions'],\r\n    '1150': ['IS', '1', 'ExposureTime'],\r\n    '1151': ['IS', '1', 'XRayTubeCurrent'],\r\n    '1152': ['IS', '1', 'Exposure'],\r\n    '1153': ['IS', '1', 'ExposureInuAs'],\r\n    '1154': ['DS', '1', 'AveragePulseWidth'],\r\n    '1155': ['CS', '1', 'RadiationSetting'],\r\n    '1156': ['CS', '1', 'RectificationType'],\r\n    '115A': ['CS', '1', 'RadiationMode'],\r\n    '115E': ['DS', '1', 'ImageAndFluoroscopyAreaDoseProduct'],\r\n    '1160': ['SH', '1', 'FilterType'],\r\n    '1161': ['LO', '1-n', 'TypeOfFilters'],\r\n    '1162': ['DS', '1', 'IntensifierSize'],\r\n    '1164': ['DS', '2', 'ImagerPixelSpacing'],\r\n    '1166': ['CS', '1-n', 'Grid'],\r\n    '1170': ['IS', '1', 'GeneratorPower'],\r\n    '1180': ['SH', '1', 'CollimatorGridName'],\r\n    '1181': ['CS', '1', 'CollimatorType'],\r\n    '1182': ['IS', '1-2', 'FocalDistance'],\r\n    '1183': ['DS', '1-2', 'XFocusCenter'],\r\n    '1184': ['DS', '1-2', 'YFocusCenter'],\r\n    '1190': ['DS', '1-n', 'FocalSpots'],\r\n    '1191': ['CS', '1', 'AnodeTargetMaterial'],\r\n    '11A0': ['DS', '1', 'BodyPartThickness'],\r\n    '11A2': ['DS', '1', 'CompressionForce'],\r\n    '11A3': ['DS', '1', 'CompressionPressure'],\r\n    '11A4': ['LO', '1', 'PaddleDescription'],\r\n    '11A5': ['DS', '1', 'CompressionContactArea'],\r\n    '11B0': ['LO', '1', 'AcquisitionMode'],\r\n    '11B1': ['LO', '1', 'DoseModeName'],\r\n    '11B2': ['CS', '1', 'AcquiredSubtractionMaskFlag'],\r\n    '11B3': ['CS', '1', 'FluoroscopyPersistenceFlag'],\r\n    '11B4': ['CS', '1', 'FluoroscopyLastImageHoldPersistenceFlag'],\r\n    '11B5': ['IS', '1', 'UpperLimitNumberOfPersistentFluoroscopyFrames'],\r\n    '11B6': ['CS', '1', 'ContrastBolusAutoInjectionTriggerFlag'],\r\n    '11B7': ['FD', '1', 'ContrastBolusInjectionDelay'],\r\n    '11B8': ['SQ', '1', 'XAAcquisitionPhaseDetailsSequence'],\r\n    '11B9': ['FD', '1', 'XAAcquisitionFrameRate'],\r\n    '11BA': ['SQ', '1', 'XAPlaneDetailsSequence'],\r\n    '11BB': ['LO', '1', 'AcquisitionFieldOfViewLabel'],\r\n    '11BC': ['SQ', '1', 'XRayFilterDetailsSequence'],\r\n    '11BD': ['FD', '1', 'XAAcquisitionDuration'],\r\n    '11BE': ['CS', '1', 'ReconstructionPipelineType'],\r\n    '11BF': ['SQ', '1', 'ImageFilterDetailsSequence'],\r\n    '11C0': ['CS', '1', 'AppliedMaskSubtractionFlag'],\r\n    '11C1': ['SQ', '1', 'RequestedSeriesDescriptionCodeSequence'],\r\n    '1200': ['DA', '1-n', 'DateOfLastCalibration'],\r\n    '1201': ['TM', '1-n', 'TimeOfLastCalibration'],\r\n    '1202': ['DT', '1', 'DateTimeOfLastCalibration'],\r\n    '1203': ['DT', '1', 'CalibrationDateTime'],\r\n    '1210': ['SH', '1-n', 'ConvolutionKernel'],\r\n    '1240': ['IS', '1-n', 'UpperLowerPixelValues'],\r\n    '1242': ['IS', '1', 'ActualFrameDuration'],\r\n    '1243': ['IS', '1', 'CountRate'],\r\n    '1244': ['US', '1', 'PreferredPlaybackSequencing'],\r\n    '1250': ['SH', '1', 'ReceiveCoilName'],\r\n    '1251': ['SH', '1', 'TransmitCoilName'],\r\n    '1260': ['SH', '1', 'PlateType'],\r\n    '1261': ['LO', '1', 'PhosphorType'],\r\n    '1271': ['FD', '1', 'WaterEquivalentDiameter'],\r\n    '1272': ['SQ', '1', 'WaterEquivalentDiameterCalculationMethodCodeSequence'],\r\n    '1300': ['DS', '1', 'ScanVelocity'],\r\n    '1301': ['CS', '1-n', 'WholeBodyTechnique'],\r\n    '1302': ['IS', '1', 'ScanLength'],\r\n    '1310': ['US', '4', 'AcquisitionMatrix'],\r\n    '1312': ['CS', '1', 'InPlanePhaseEncodingDirection'],\r\n    '1314': ['DS', '1', 'FlipAngle'],\r\n    '1315': ['CS', '1', 'VariableFlipAngleFlag'],\r\n    '1316': ['DS', '1', 'SAR'],\r\n    '1318': ['DS', '1', 'dBdt'],\r\n    '1320': ['FL', '1', 'B1rms'],\r\n    '1400': ['LO', '1', 'AcquisitionDeviceProcessingDescription'],\r\n    '1401': ['LO', '1', 'AcquisitionDeviceProcessingCode'],\r\n    '1402': ['CS', '1', 'CassetteOrientation'],\r\n    '1403': ['CS', '1', 'CassetteSize'],\r\n    '1404': ['US', '1', 'ExposuresOnPlate'],\r\n    '1405': ['IS', '1', 'RelativeXRayExposure'],\r\n    '1411': ['DS', '1', 'ExposureIndex'],\r\n    '1412': ['DS', '1', 'TargetExposureIndex'],\r\n    '1413': ['DS', '1', 'DeviationIndex'],\r\n    '1450': ['DS', '1', 'ColumnAngulation'],\r\n    '1460': ['DS', '1', 'TomoLayerHeight'],\r\n    '1470': ['DS', '1', 'TomoAngle'],\r\n    '1480': ['DS', '1', 'TomoTime'],\r\n    '1490': ['CS', '1', 'TomoType'],\r\n    '1491': ['CS', '1', 'TomoClass'],\r\n    '1495': ['IS', '1', 'NumberOfTomosynthesisSourceImages'],\r\n    '1500': ['CS', '1', 'PositionerMotion'],\r\n    '1508': ['CS', '1', 'PositionerType'],\r\n    '1510': ['DS', '1', 'PositionerPrimaryAngle'],\r\n    '1511': ['DS', '1', 'PositionerSecondaryAngle'],\r\n    '1520': ['DS', '1-n', 'PositionerPrimaryAngleIncrement'],\r\n    '1521': ['DS', '1-n', 'PositionerSecondaryAngleIncrement'],\r\n    '1530': ['DS', '1', 'DetectorPrimaryAngle'],\r\n    '1531': ['DS', '1', 'DetectorSecondaryAngle'],\r\n    '1600': ['CS', '1-3', 'ShutterShape'],\r\n    '1602': ['IS', '1', 'ShutterLeftVerticalEdge'],\r\n    '1604': ['IS', '1', 'ShutterRightVerticalEdge'],\r\n    '1606': ['IS', '1', 'ShutterUpperHorizontalEdge'],\r\n    '1608': ['IS', '1', 'ShutterLowerHorizontalEdge'],\r\n    '1610': ['IS', '2', 'CenterOfCircularShutter'],\r\n    '1612': ['IS', '1', 'RadiusOfCircularShutter'],\r\n    '1620': ['IS', '2-2n', 'VerticesOfThePolygonalShutter'],\r\n    '1622': ['US', '1', 'ShutterPresentationValue'],\r\n    '1623': ['US', '1', 'ShutterOverlayGroup'],\r\n    '1624': ['US', '3', 'ShutterPresentationColorCIELabValue'],\r\n    '1630': ['CS', '1', 'OutlineShapeType'],\r\n    '1631': ['FD', '1', 'OutlineLeftVerticalEdge'],\r\n    '1632': ['FD', '1', 'OutlineRightVerticalEdge'],\r\n    '1633': ['FD', '1', 'OutlineUpperHorizontalEdge'],\r\n    '1634': ['FD', '1', 'OutlineLowerHorizontalEdge'],\r\n    '1635': ['FD', '2', 'CenterOfCircularOutline'],\r\n    '1636': ['FD', '1', 'DiameterOfCircularOutline'],\r\n    '1637': ['UL', '1', 'NumberOfPolygonalVertices'],\r\n    '1638': ['OF', '1', 'VerticesOfThePolygonalOutline'],\r\n    '1700': ['CS', '1-3', 'CollimatorShape'],\r\n    '1702': ['IS', '1', 'CollimatorLeftVerticalEdge'],\r\n    '1704': ['IS', '1', 'CollimatorRightVerticalEdge'],\r\n    '1706': ['IS', '1', 'CollimatorUpperHorizontalEdge'],\r\n    '1708': ['IS', '1', 'CollimatorLowerHorizontalEdge'],\r\n    '1710': ['IS', '2', 'CenterOfCircularCollimator'],\r\n    '1712': ['IS', '1', 'RadiusOfCircularCollimator'],\r\n    '1720': ['IS', '2-2n', 'VerticesOfThePolygonalCollimator'],\r\n    '1800': ['CS', '1', 'AcquisitionTimeSynchronized'],\r\n    '1801': ['SH', '1', 'TimeSource'],\r\n    '1802': ['CS', '1', 'TimeDistributionProtocol'],\r\n    '1803': ['LO', '1', 'NTPSourceAddress'],\r\n    '2001': ['IS', '1-n', 'PageNumberVector'],\r\n    '2002': ['SH', '1-n', 'FrameLabelVector'],\r\n    '2003': ['DS', '1-n', 'FramePrimaryAngleVector'],\r\n    '2004': ['DS', '1-n', 'FrameSecondaryAngleVector'],\r\n    '2005': ['DS', '1-n', 'SliceLocationVector'],\r\n    '2006': ['SH', '1-n', 'DisplayWindowLabelVector'],\r\n    '2010': ['DS', '2', 'NominalScannedPixelSpacing'],\r\n    '2020': ['CS', '1', 'DigitizingDeviceTransportDirection'],\r\n    '2030': ['DS', '1', 'RotationOfScannedFilm'],\r\n    '2041': ['SQ', '1', 'BiopsyTargetSequence'],\r\n    '2042': ['UI', '1', 'TargetUID'],\r\n    '2043': ['FL', '2', 'LocalizingCursorPosition'],\r\n    '2044': ['FL', '3', 'CalculatedTargetPosition'],\r\n    '2045': ['SH', '1', 'TargetLabel'],\r\n    '2046': ['FL', '1', 'DisplayedZValue'],\r\n    '3100': ['CS', '1', 'IVUSAcquisition'],\r\n    '3101': ['DS', '1', 'IVUSPullbackRate'],\r\n    '3102': ['DS', '1', 'IVUSGatedRate'],\r\n    '3103': ['IS', '1', 'IVUSPullbackStartFrameNumber'],\r\n    '3104': ['IS', '1', 'IVUSPullbackStopFrameNumber'],\r\n    '3105': ['IS', '1-n', 'LesionNumber'],\r\n    '4000': ['LT', '1', 'AcquisitionComments'],\r\n    '5000': ['SH', '1-n', 'OutputPower'],\r\n    '5010': ['LO', '1-n', 'TransducerData'],\r\n    '5011': ['SQ', '1', 'TransducerIdentificationSequence'],\r\n    '5012': ['DS', '1', 'FocusDepth'],\r\n    '5020': ['LO', '1', 'ProcessingFunction'],\r\n    '5021': ['LO', '1', 'PostprocessingFunction'],\r\n    '5022': ['DS', '1', 'MechanicalIndex'],\r\n    '5024': ['DS', '1', 'BoneThermalIndex'],\r\n    '5026': ['DS', '1', 'CranialThermalIndex'],\r\n    '5027': ['DS', '1', 'SoftTissueThermalIndex'],\r\n    '5028': ['DS', '1', 'SoftTissueFocusThermalIndex'],\r\n    '5029': ['DS', '1', 'SoftTissueSurfaceThermalIndex'],\r\n    '5030': ['DS', '1', 'DynamicRange'],\r\n    '5040': ['DS', '1', 'TotalGain'],\r\n    '5050': ['IS', '1', 'DepthOfScanField'],\r\n    '5100': ['CS', '1', 'PatientPosition'],\r\n    '5101': ['CS', '1', 'ViewPosition'],\r\n    '5104': ['SQ', '1', 'ProjectionEponymousNameCodeSequence'],\r\n    '5210': ['DS', '6', 'ImageTransformationMatrix'],\r\n    '5212': ['DS', '3', 'ImageTranslationVector'],\r\n    '6000': ['DS', '1', 'Sensitivity'],\r\n    '6011': ['SQ', '1', 'SequenceOfUltrasoundRegions'],\r\n    '6012': ['US', '1', 'RegionSpatialFormat'],\r\n    '6014': ['US', '1', 'RegionDataType'],\r\n    '6016': ['UL', '1', 'RegionFlags'],\r\n    '6018': ['UL', '1', 'RegionLocationMinX0'],\r\n    '601A': ['UL', '1', 'RegionLocationMinY0'],\r\n    '601C': ['UL', '1', 'RegionLocationMaxX1'],\r\n    '601E': ['UL', '1', 'RegionLocationMaxY1'],\r\n    '6020': ['SL', '1', 'ReferencePixelX0'],\r\n    '6022': ['SL', '1', 'ReferencePixelY0'],\r\n    '6024': ['US', '1', 'PhysicalUnitsXDirection'],\r\n    '6026': ['US', '1', 'PhysicalUnitsYDirection'],\r\n    '6028': ['FD', '1', 'ReferencePixelPhysicalValueX'],\r\n    '602A': ['FD', '1', 'ReferencePixelPhysicalValueY'],\r\n    '602C': ['FD', '1', 'PhysicalDeltaX'],\r\n    '602E': ['FD', '1', 'PhysicalDeltaY'],\r\n    '6030': ['UL', '1', 'TransducerFrequency'],\r\n    '6031': ['CS', '1', 'TransducerType'],\r\n    '6032': ['UL', '1', 'PulseRepetitionFrequency'],\r\n    '6034': ['FD', '1', 'DopplerCorrectionAngle'],\r\n    '6036': ['FD', '1', 'SteeringAngle'],\r\n    '6038': ['UL', '1', 'DopplerSampleVolumeXPositionRetired'],\r\n    '6039': ['SL', '1', 'DopplerSampleVolumeXPosition'],\r\n    '603A': ['UL', '1', 'DopplerSampleVolumeYPositionRetired'],\r\n    '603B': ['SL', '1', 'DopplerSampleVolumeYPosition'],\r\n    '603C': ['UL', '1', 'TMLinePositionX0Retired'],\r\n    '603D': ['SL', '1', 'TMLinePositionX0'],\r\n    '603E': ['UL', '1', 'TMLinePositionY0Retired'],\r\n    '603F': ['SL', '1', 'TMLinePositionY0'],\r\n    '6040': ['UL', '1', 'TMLinePositionX1Retired'],\r\n    '6041': ['SL', '1', 'TMLinePositionX1'],\r\n    '6042': ['UL', '1', 'TMLinePositionY1Retired'],\r\n    '6043': ['SL', '1', 'TMLinePositionY1'],\r\n    '6044': ['US', '1', 'PixelComponentOrganization'],\r\n    '6046': ['UL', '1', 'PixelComponentMask'],\r\n    '6048': ['UL', '1', 'PixelComponentRangeStart'],\r\n    '604A': ['UL', '1', 'PixelComponentRangeStop'],\r\n    '604C': ['US', '1', 'PixelComponentPhysicalUnits'],\r\n    '604E': ['US', '1', 'PixelComponentDataType'],\r\n    '6050': ['UL', '1', 'NumberOfTableBreakPoints'],\r\n    '6052': ['UL', '1-n', 'TableOfXBreakPoints'],\r\n    '6054': ['FD', '1-n', 'TableOfYBreakPoints'],\r\n    '6056': ['UL', '1', 'NumberOfTableEntries'],\r\n    '6058': ['UL', '1-n', 'TableOfPixelValues'],\r\n    '605A': ['FL', '1-n', 'TableOfParameterValues'],\r\n    '6060': ['FL', '1-n', 'RWaveTimeVector'],\r\n    '6070': ['US', '1', 'ActiveImageAreaOverlayGroup'],\r\n    '7000': ['CS', '1', 'DetectorConditionsNominalFlag'],\r\n    '7001': ['DS', '1', 'DetectorTemperature'],\r\n    '7004': ['CS', '1', 'DetectorType'],\r\n    '7005': ['CS', '1', 'DetectorConfiguration'],\r\n    '7006': ['LT', '1', 'DetectorDescription'],\r\n    '7008': ['LT', '1', 'DetectorMode'],\r\n    '700A': ['SH', '1', 'DetectorID'],\r\n    '700C': ['DA', '1', 'DateOfLastDetectorCalibration'],\r\n    '700E': ['TM', '1', 'TimeOfLastDetectorCalibration'],\r\n    '7010': ['IS', '1', 'ExposuresOnDetectorSinceLastCalibration'],\r\n    '7011': ['IS', '1', 'ExposuresOnDetectorSinceManufactured'],\r\n    '7012': ['DS', '1', 'DetectorTimeSinceLastExposure'],\r\n    '7014': ['DS', '1', 'DetectorActiveTime'],\r\n    '7016': ['DS', '1', 'DetectorActivationOffsetFromExposure'],\r\n    '701A': ['DS', '2', 'DetectorBinning'],\r\n    '7020': ['DS', '2', 'DetectorElementPhysicalSize'],\r\n    '7022': ['DS', '2', 'DetectorElementSpacing'],\r\n    '7024': ['CS', '1', 'DetectorActiveShape'],\r\n    '7026': ['DS', '1-2', 'DetectorActiveDimensions'],\r\n    '7028': ['DS', '2', 'DetectorActiveOrigin'],\r\n    '702A': ['LO', '1', 'DetectorManufacturerName'],\r\n    '702B': ['LO', '1', 'DetectorManufacturerModelName'],\r\n    '7030': ['DS', '2', 'FieldOfViewOrigin'],\r\n    '7032': ['DS', '1', 'FieldOfViewRotation'],\r\n    '7034': ['CS', '1', 'FieldOfViewHorizontalFlip'],\r\n    '7036': ['FL', '2', 'PixelDataAreaOriginRelativeToFOV'],\r\n    '7038': ['FL', '1', 'PixelDataAreaRotationAngleRelativeToFOV'],\r\n    '7040': ['LT', '1', 'GridAbsorbingMaterial'],\r\n    '7041': ['LT', '1', 'GridSpacingMaterial'],\r\n    '7042': ['DS', '1', 'GridThickness'],\r\n    '7044': ['DS', '1', 'GridPitch'],\r\n    '7046': ['IS', '2', 'GridAspectRatio'],\r\n    '7048': ['DS', '1', 'GridPeriod'],\r\n    '704C': ['DS', '1', 'GridFocalDistance'],\r\n    '7050': ['CS', '1-n', 'FilterMaterial'],\r\n    '7052': ['DS', '1-n', 'FilterThicknessMinimum'],\r\n    '7054': ['DS', '1-n', 'FilterThicknessMaximum'],\r\n    '7056': ['FL', '1-n', 'FilterBeamPathLengthMinimum'],\r\n    '7058': ['FL', '1-n', 'FilterBeamPathLengthMaximum'],\r\n    '7060': ['CS', '1', 'ExposureControlMode'],\r\n    '7062': ['LT', '1', 'ExposureControlModeDescription'],\r\n    '7064': ['CS', '1', 'ExposureStatus'],\r\n    '7065': ['DS', '1', 'PhototimerSetting'],\r\n    '8150': ['DS', '1', 'ExposureTimeInuS'],\r\n    '8151': ['DS', '1', 'XRayTubeCurrentInuA'],\r\n    '9004': ['CS', '1', 'ContentQualification'],\r\n    '9005': ['SH', '1', 'PulseSequenceName'],\r\n    '9006': ['SQ', '1', 'MRImagingModifierSequence'],\r\n    '9008': ['CS', '1', 'EchoPulseSequence'],\r\n    '9009': ['CS', '1', 'InversionRecovery'],\r\n    '9010': ['CS', '1', 'FlowCompensation'],\r\n    '9011': ['CS', '1', 'MultipleSpinEcho'],\r\n    '9012': ['CS', '1', 'MultiPlanarExcitation'],\r\n    '9014': ['CS', '1', 'PhaseContrast'],\r\n    '9015': ['CS', '1', 'TimeOfFlightContrast'],\r\n    '9016': ['CS', '1', 'Spoiling'],\r\n    '9017': ['CS', '1', 'SteadyStatePulseSequence'],\r\n    '9018': ['CS', '1', 'EchoPlanarPulseSequence'],\r\n    '9019': ['FD', '1', 'TagAngleFirstAxis'],\r\n    '9020': ['CS', '1', 'MagnetizationTransfer'],\r\n    '9021': ['CS', '1', 'T2Preparation'],\r\n    '9022': ['CS', '1', 'BloodSignalNulling'],\r\n    '9024': ['CS', '1', 'SaturationRecovery'],\r\n    '9025': ['CS', '1', 'SpectrallySelectedSuppression'],\r\n    '9026': ['CS', '1', 'SpectrallySelectedExcitation'],\r\n    '9027': ['CS', '1', 'SpatialPresaturation'],\r\n    '9028': ['CS', '1', 'Tagging'],\r\n    '9029': ['CS', '1', 'OversamplingPhase'],\r\n    '9030': ['FD', '1', 'TagSpacingFirstDimension'],\r\n    '9032': ['CS', '1', 'GeometryOfKSpaceTraversal'],\r\n    '9033': ['CS', '1', 'SegmentedKSpaceTraversal'],\r\n    '9034': ['CS', '1', 'RectilinearPhaseEncodeReordering'],\r\n    '9035': ['FD', '1', 'TagThickness'],\r\n    '9036': ['CS', '1', 'PartialFourierDirection'],\r\n    '9037': ['CS', '1', 'CardiacSynchronizationTechnique'],\r\n    '9041': ['LO', '1', 'ReceiveCoilManufacturerName'],\r\n    '9042': ['SQ', '1', 'MRReceiveCoilSequence'],\r\n    '9043': ['CS', '1', 'ReceiveCoilType'],\r\n    '9044': ['CS', '1', 'QuadratureReceiveCoil'],\r\n    '9045': ['SQ', '1', 'MultiCoilDefinitionSequence'],\r\n    '9046': ['LO', '1', 'MultiCoilConfiguration'],\r\n    '9047': ['SH', '1', 'MultiCoilElementName'],\r\n    '9048': ['CS', '1', 'MultiCoilElementUsed'],\r\n    '9049': ['SQ', '1', 'MRTransmitCoilSequence'],\r\n    '9050': ['LO', '1', 'TransmitCoilManufacturerName'],\r\n    '9051': ['CS', '1', 'TransmitCoilType'],\r\n    '9052': ['FD', '1-2', 'SpectralWidth'],\r\n    '9053': ['FD', '1-2', 'ChemicalShiftReference'],\r\n    '9054': ['CS', '1', 'VolumeLocalizationTechnique'],\r\n    '9058': ['US', '1', 'MRAcquisitionFrequencyEncodingSteps'],\r\n    '9059': ['CS', '1', 'Decoupling'],\r\n    '9060': ['CS', '1-2', 'DecoupledNucleus'],\r\n    '9061': ['FD', '1-2', 'DecouplingFrequency'],\r\n    '9062': ['CS', '1', 'DecouplingMethod'],\r\n    '9063': ['FD', '1-2', 'DecouplingChemicalShiftReference'],\r\n    '9064': ['CS', '1', 'KSpaceFiltering'],\r\n    '9065': ['CS', '1-2', 'TimeDomainFiltering'],\r\n    '9066': ['US', '1-2', 'NumberOfZeroFills'],\r\n    '9067': ['CS', '1', 'BaselineCorrection'],\r\n    '9069': ['FD', '1', 'ParallelReductionFactorInPlane'],\r\n    '9070': ['FD', '1', 'CardiacRRIntervalSpecified'],\r\n    '9073': ['FD', '1', 'AcquisitionDuration'],\r\n    '9074': ['DT', '1', 'FrameAcquisitionDateTime'],\r\n    '9075': ['CS', '1', 'DiffusionDirectionality'],\r\n    '9076': ['SQ', '1', 'DiffusionGradientDirectionSequence'],\r\n    '9077': ['CS', '1', 'ParallelAcquisition'],\r\n    '9078': ['CS', '1', 'ParallelAcquisitionTechnique'],\r\n    '9079': ['FD', '1-n', 'InversionTimes'],\r\n    '9080': ['ST', '1', 'MetaboliteMapDescription'],\r\n    '9081': ['CS', '1', 'PartialFourier'],\r\n    '9082': ['FD', '1', 'EffectiveEchoTime'],\r\n    '9083': ['SQ', '1', 'MetaboliteMapCodeSequence'],\r\n    '9084': ['SQ', '1', 'ChemicalShiftSequence'],\r\n    '9085': ['CS', '1', 'CardiacSignalSource'],\r\n    '9087': ['FD', '1', 'DiffusionBValue'],\r\n    '9089': ['FD', '3', 'DiffusionGradientOrientation'],\r\n    '9090': ['FD', '3', 'VelocityEncodingDirection'],\r\n    '9091': ['FD', '1', 'VelocityEncodingMinimumValue'],\r\n    '9092': ['SQ', '1', 'VelocityEncodingAcquisitionSequence'],\r\n    '9093': ['US', '1', 'NumberOfKSpaceTrajectories'],\r\n    '9094': ['CS', '1', 'CoverageOfKSpace'],\r\n    '9095': ['UL', '1', 'SpectroscopyAcquisitionPhaseRows'],\r\n    '9096': ['FD', '1', 'ParallelReductionFactorInPlaneRetired'],\r\n    '9098': ['FD', '1-2', 'TransmitterFrequency'],\r\n    '9100': ['CS', '1-2', 'ResonantNucleus'],\r\n    '9101': ['CS', '1', 'FrequencyCorrection'],\r\n    '9103': ['SQ', '1', 'MRSpectroscopyFOVGeometrySequence'],\r\n    '9104': ['FD', '1', 'SlabThickness'],\r\n    '9105': ['FD', '3', 'SlabOrientation'],\r\n    '9106': ['FD', '3', 'MidSlabPosition'],\r\n    '9107': ['SQ', '1', 'MRSpatialSaturationSequence'],\r\n    '9112': ['SQ', '1', 'MRTimingAndRelatedParametersSequence'],\r\n    '9114': ['SQ', '1', 'MREchoSequence'],\r\n    '9115': ['SQ', '1', 'MRModifierSequence'],\r\n    '9117': ['SQ', '1', 'MRDiffusionSequence'],\r\n    '9118': ['SQ', '1', 'CardiacSynchronizationSequence'],\r\n    '9119': ['SQ', '1', 'MRAveragesSequence'],\r\n    '9125': ['SQ', '1', 'MRFOVGeometrySequence'],\r\n    '9126': ['SQ', '1', 'VolumeLocalizationSequence'],\r\n    '9127': ['UL', '1', 'SpectroscopyAcquisitionDataColumns'],\r\n    '9147': ['CS', '1', 'DiffusionAnisotropyType'],\r\n    '9151': ['DT', '1', 'FrameReferenceDateTime'],\r\n    '9152': ['SQ', '1', 'MRMetaboliteMapSequence'],\r\n    '9155': ['FD', '1', 'ParallelReductionFactorOutOfPlane'],\r\n    '9159': ['UL', '1', 'SpectroscopyAcquisitionOutOfPlanePhaseSteps'],\r\n    '9166': ['CS', '1', 'BulkMotionStatus'],\r\n    '9168': ['FD', '1', 'ParallelReductionFactorSecondInPlane'],\r\n    '9169': ['CS', '1', 'CardiacBeatRejectionTechnique'],\r\n    '9170': ['CS', '1', 'RespiratoryMotionCompensationTechnique'],\r\n    '9171': ['CS', '1', 'RespiratorySignalSource'],\r\n    '9172': ['CS', '1', 'BulkMotionCompensationTechnique'],\r\n    '9173': ['CS', '1', 'BulkMotionSignalSource'],\r\n    '9174': ['CS', '1', 'ApplicableSafetyStandardAgency'],\r\n    '9175': ['LO', '1', 'ApplicableSafetyStandardDescription'],\r\n    '9176': ['SQ', '1', 'OperatingModeSequence'],\r\n    '9177': ['CS', '1', 'OperatingModeType'],\r\n    '9178': ['CS', '1', 'OperatingMode'],\r\n    '9179': ['CS', '1', 'SpecificAbsorptionRateDefinition'],\r\n    '9180': ['CS', '1', 'GradientOutputType'],\r\n    '9181': ['FD', '1', 'SpecificAbsorptionRateValue'],\r\n    '9182': ['FD', '1', 'GradientOutput'],\r\n    '9183': ['CS', '1', 'FlowCompensationDirection'],\r\n    '9184': ['FD', '1', 'TaggingDelay'],\r\n    '9185': ['ST', '1', 'RespiratoryMotionCompensationTechniqueDescription'],\r\n    '9186': ['SH', '1', 'RespiratorySignalSourceID'],\r\n    '9195': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInHz'],\r\n    '9196': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInHz'],\r\n    '9197': ['SQ', '1', 'MRVelocityEncodingSequence'],\r\n    '9198': ['CS', '1', 'FirstOrderPhaseCorrection'],\r\n    '9199': ['CS', '1', 'WaterReferencedPhaseCorrection'],\r\n    '9200': ['CS', '1', 'MRSpectroscopyAcquisitionType'],\r\n    '9214': ['CS', '1', 'RespiratoryCyclePosition'],\r\n    '9217': ['FD', '1', 'VelocityEncodingMaximumValue'],\r\n    '9218': ['FD', '1', 'TagSpacingSecondDimension'],\r\n    '9219': ['SS', '1', 'TagAngleSecondAxis'],\r\n    '9220': ['FD', '1', 'FrameAcquisitionDuration'],\r\n    '9226': ['SQ', '1', 'MRImageFrameTypeSequence'],\r\n    '9227': ['SQ', '1', 'MRSpectroscopyFrameTypeSequence'],\r\n    '9231': ['US', '1', 'MRAcquisitionPhaseEncodingStepsInPlane'],\r\n    '9232': ['US', '1', 'MRAcquisitionPhaseEncodingStepsOutOfPlane'],\r\n    '9234': ['UL', '1', 'SpectroscopyAcquisitionPhaseColumns'],\r\n    '9236': ['CS', '1', 'CardiacCyclePosition'],\r\n    '9239': ['SQ', '1', 'SpecificAbsorptionRateSequence'],\r\n    '9240': ['US', '1', 'RFEchoTrainLength'],\r\n    '9241': ['US', '1', 'GradientEchoTrainLength'],\r\n    '9250': ['CS', '1', 'ArterialSpinLabelingContrast'],\r\n    '9251': ['SQ', '1', 'MRArterialSpinLabelingSequence'],\r\n    '9252': ['LO', '1', 'ASLTechniqueDescription'],\r\n    '9253': ['US', '1', 'ASLSlabNumber'],\r\n    '9254': ['FD', '1', 'ASLSlabThickness'],\r\n    '9255': ['FD', '3', 'ASLSlabOrientation'],\r\n    '9256': ['FD', '3', 'ASLMidSlabPosition'],\r\n    '9257': ['CS', '1', 'ASLContext'],\r\n    '9258': ['UL', '1', 'ASLPulseTrainDuration'],\r\n    '9259': ['CS', '1', 'ASLCrusherFlag'],\r\n    '925A': ['FD', '1', 'ASLCrusherFlowLimit'],\r\n    '925B': ['LO', '1', 'ASLCrusherDescription'],\r\n    '925C': ['CS', '1', 'ASLBolusCutoffFlag'],\r\n    '925D': ['SQ', '1', 'ASLBolusCutoffTimingSequence'],\r\n    '925E': ['LO', '1', 'ASLBolusCutoffTechnique'],\r\n    '925F': ['UL', '1', 'ASLBolusCutoffDelayTime'],\r\n    '9260': ['SQ', '1', 'ASLSlabSequence'],\r\n    '9295': ['FD', '1', 'ChemicalShiftMinimumIntegrationLimitInppm'],\r\n    '9296': ['FD', '1', 'ChemicalShiftMaximumIntegrationLimitInppm'],\r\n    '9297': ['CS', '1', 'WaterReferenceAcquisition'],\r\n    '9298': ['IS', '1', 'EchoPeakPosition'],\r\n    '9301': ['SQ', '1', 'CTAcquisitionTypeSequence'],\r\n    '9302': ['CS', '1', 'AcquisitionType'],\r\n    '9303': ['FD', '1', 'TubeAngle'],\r\n    '9304': ['SQ', '1', 'CTAcquisitionDetailsSequence'],\r\n    '9305': ['FD', '1', 'RevolutionTime'],\r\n    '9306': ['FD', '1', 'SingleCollimationWidth'],\r\n    '9307': ['FD', '1', 'TotalCollimationWidth'],\r\n    '9308': ['SQ', '1', 'CTTableDynamicsSequence'],\r\n    '9309': ['FD', '1', 'TableSpeed'],\r\n    '9310': ['FD', '1', 'TableFeedPerRotation'],\r\n    '9311': ['FD', '1', 'SpiralPitchFactor'],\r\n    '9312': ['SQ', '1', 'CTGeometrySequence'],\r\n    '9313': ['FD', '3', 'DataCollectionCenterPatient'],\r\n    '9314': ['SQ', '1', 'CTReconstructionSequence'],\r\n    '9315': ['CS', '1', 'ReconstructionAlgorithm'],\r\n    '9316': ['CS', '1', 'ConvolutionKernelGroup'],\r\n    '9317': ['FD', '2', 'ReconstructionFieldOfView'],\r\n    '9318': ['FD', '3', 'ReconstructionTargetCenterPatient'],\r\n    '9319': ['FD', '1', 'ReconstructionAngle'],\r\n    '9320': ['SH', '1', 'ImageFilter'],\r\n    '9321': ['SQ', '1', 'CTExposureSequence'],\r\n    '9322': ['FD', '2', 'ReconstructionPixelSpacing'],\r\n    '9323': ['CS', '1-n', 'ExposureModulationType'],\r\n    '9324': ['FD', '1', 'EstimatedDoseSaving'],\r\n    '9325': ['SQ', '1', 'CTXRayDetailsSequence'],\r\n    '9326': ['SQ', '1', 'CTPositionSequence'],\r\n    '9327': ['FD', '1', 'TablePosition'],\r\n    '9328': ['FD', '1', 'ExposureTimeInms'],\r\n    '9329': ['SQ', '1', 'CTImageFrameTypeSequence'],\r\n    '9330': ['FD', '1', 'XRayTubeCurrentInmA'],\r\n    '9332': ['FD', '1', 'ExposureInmAs'],\r\n    '9333': ['CS', '1', 'ConstantVolumeFlag'],\r\n    '9334': ['CS', '1', 'FluoroscopyFlag'],\r\n    '9335': ['FD', '1', 'DistanceSourceToDataCollectionCenter'],\r\n    '9337': ['US', '1', 'ContrastBolusAgentNumber'],\r\n    '9338': ['SQ', '1', 'ContrastBolusIngredientCodeSequence'],\r\n    '9340': ['SQ', '1', 'ContrastAdministrationProfileSequence'],\r\n    '9341': ['SQ', '1', 'ContrastBolusUsageSequence'],\r\n    '9342': ['CS', '1', 'ContrastBolusAgentAdministered'],\r\n    '9343': ['CS', '1', 'ContrastBolusAgentDetected'],\r\n    '9344': ['CS', '1', 'ContrastBolusAgentPhase'],\r\n    '9345': ['FD', '1', 'CTDIvol'],\r\n    '9346': ['SQ', '1', 'CTDIPhantomTypeCodeSequence'],\r\n    '9351': ['FL', '1', 'CalciumScoringMassFactorPatient'],\r\n    '9352': ['FL', '3', 'CalciumScoringMassFactorDevice'],\r\n    '9353': ['FL', '1', 'EnergyWeightingFactor'],\r\n    '9360': ['SQ', '1', 'CTAdditionalXRaySourceSequence'],\r\n    '9361': ['CS', '1', 'MultienergyCTAcquisition'],\r\n    '9362': ['SQ', '1', 'MultienergyCTAcquisitionSequence'],\r\n    '9363': ['SQ', '1', 'MultienergyCTProcessingSequence'],\r\n    '9364': ['SQ', '1', 'MultienergyCTCharacteristicsSequence'],\r\n    '9365': ['SQ', '1', 'MultienergyCTXRaySourceSequence'],\r\n    '9366': ['US', '1', 'XRaySourceIndex'],\r\n    '9367': ['UC', '1', 'XRaySourceID'],\r\n    '9368': ['CS', '1', 'MultienergySourceTechnique'],\r\n    '9369': ['DT', '1', 'SourceStartDateTime'],\r\n    '936A': ['DT', '1', 'SourceEndDateTime'],\r\n    '936B': ['US', '1', 'SwitchingPhaseNumber'],\r\n    '936C': ['DS', '1', 'SwitchingPhaseNominalDuration'],\r\n    '936D': ['DS', '1', 'SwitchingPhaseTransitionDuration'],\r\n    '936E': ['DS', '1', 'EffectiveBinEnergy'],\r\n    '936F': ['SQ', '1', 'MultienergyCTXRayDetectorSequence'],\r\n    '9370': ['US', '1', 'XRayDetectorIndex'],\r\n    '9371': ['UC', '1', 'XRayDetectorID'],\r\n    '9372': ['CS', '1', 'MultienergyDetectorType'],\r\n    '9373': ['ST', '1', 'XRayDetectorLabel'],\r\n    '9374': ['DS', '1', 'NominalMaxEnergy'],\r\n    '9375': ['DS', '1', 'NominalMinEnergy'],\r\n    '9376': ['US', '1-n', 'ReferencedXRayDetectorIndex'],\r\n    '9377': ['US', '1-n', 'ReferencedXRaySourceIndex'],\r\n    '9378': ['US', '1-n', 'ReferencedPathIndex'],\r\n    '9379': ['SQ', '1', 'MultienergyCTPathSequence'],\r\n    '937A': ['US', '1', 'MultienergyCTPathIndex'],\r\n    '937B': ['UT', '1', 'MultienergyAcquisitionDescription'],\r\n    '937C': ['FD', '1', 'MonoenergeticEnergyEquivalent'],\r\n    '937D': ['SQ', '1', 'MaterialCodeSequence'],\r\n    '937E': ['CS', '1', 'DecompositionMethod'],\r\n    '937F': ['UT', '1', 'DecompositionDescription'],\r\n    '9380': ['SQ', '1', 'DecompositionAlgorithmIdentificationSequence'],\r\n    '9381': ['SQ', '1', 'DecompositionMaterialSequence'],\r\n    '9382': ['SQ', '1', 'MaterialAttenuationSequence'],\r\n    '9383': ['DS', '1', 'PhotonEnergy'],\r\n    '9384': ['DS', '1', 'XRayMassAttenuationCoefficient'],\r\n    '9401': ['SQ', '1', 'ProjectionPixelCalibrationSequence'],\r\n    '9402': ['FL', '1', 'DistanceSourceToIsocenter'],\r\n    '9403': ['FL', '1', 'DistanceObjectToTableTop'],\r\n    '9404': ['FL', '2', 'ObjectPixelSpacingInCenterOfBeam'],\r\n    '9405': ['SQ', '1', 'PositionerPositionSequence'],\r\n    '9406': ['SQ', '1', 'TablePositionSequence'],\r\n    '9407': ['SQ', '1', 'CollimatorShapeSequence'],\r\n    '9410': ['CS', '1', 'PlanesInAcquisition'],\r\n    '9412': ['SQ', '1', 'XAXRFFrameCharacteristicsSequence'],\r\n    '9417': ['SQ', '1', 'FrameAcquisitionSequence'],\r\n    '9420': ['CS', '1', 'XRayReceptorType'],\r\n    '9423': ['LO', '1', 'AcquisitionProtocolName'],\r\n    '9424': ['LT', '1', 'AcquisitionProtocolDescription'],\r\n    '9425': ['CS', '1', 'ContrastBolusIngredientOpaque'],\r\n    '9426': ['FL', '1', 'DistanceReceptorPlaneToDetectorHousing'],\r\n    '9427': ['CS', '1', 'IntensifierActiveShape'],\r\n    '9428': ['FL', '1-2', 'IntensifierActiveDimensions'],\r\n    '9429': ['FL', '2', 'PhysicalDetectorSize'],\r\n    '9430': ['FL', '2', 'PositionOfIsocenterProjection'],\r\n    '9432': ['SQ', '1', 'FieldOfViewSequence'],\r\n    '9433': ['LO', '1', 'FieldOfViewDescription'],\r\n    '9434': ['SQ', '1', 'ExposureControlSensingRegionsSequence'],\r\n    '9435': ['CS', '1', 'ExposureControlSensingRegionShape'],\r\n    '9436': ['SS', '1', 'ExposureControlSensingRegionLeftVerticalEdge'],\r\n    '9437': ['SS', '1', 'ExposureControlSensingRegionRightVerticalEdge'],\r\n    '9438': ['SS', '1', 'ExposureControlSensingRegionUpperHorizontalEdge'],\r\n    '9439': ['SS', '1', 'ExposureControlSensingRegionLowerHorizontalEdge'],\r\n    '9440': ['SS', '2', 'CenterOfCircularExposureControlSensingRegion'],\r\n    '9441': ['US', '1', 'RadiusOfCircularExposureControlSensingRegion'],\r\n    '9442': ['SS', '2-n', 'VerticesOfThePolygonalExposureControlSensingRegion'],\r\n    '9445': ['', '', ''],\r\n    '9447': ['FL', '1', 'ColumnAngulationPatient'],\r\n    '9449': ['FL', '1', 'BeamAngle'],\r\n    '9451': ['SQ', '1', 'FrameDetectorParametersSequence'],\r\n    '9452': ['FL', '1', 'CalculatedAnatomyThickness'],\r\n    '9455': ['SQ', '1', 'CalibrationSequence'],\r\n    '9456': ['SQ', '1', 'ObjectThicknessSequence'],\r\n    '9457': ['CS', '1', 'PlaneIdentification'],\r\n    '9461': ['FL', '1-2', 'FieldOfViewDimensionsInFloat'],\r\n    '9462': ['SQ', '1', 'IsocenterReferenceSystemSequence'],\r\n    '9463': ['FL', '1', 'PositionerIsocenterPrimaryAngle'],\r\n    '9464': ['FL', '1', 'PositionerIsocenterSecondaryAngle'],\r\n    '9465': ['FL', '1', 'PositionerIsocenterDetectorRotationAngle'],\r\n    '9466': ['FL', '1', 'TableXPositionToIsocenter'],\r\n    '9467': ['FL', '1', 'TableYPositionToIsocenter'],\r\n    '9468': ['FL', '1', 'TableZPositionToIsocenter'],\r\n    '9469': ['FL', '1', 'TableHorizontalRotationAngle'],\r\n    '9470': ['FL', '1', 'TableHeadTiltAngle'],\r\n    '9471': ['FL', '1', 'TableCradleTiltAngle'],\r\n    '9472': ['SQ', '1', 'FrameDisplayShutterSequence'],\r\n    '9473': ['FL', '1', 'AcquiredImageAreaDoseProduct'],\r\n    '9474': ['CS', '1', 'CArmPositionerTabletopRelationship'],\r\n    '9476': ['SQ', '1', 'XRayGeometrySequence'],\r\n    '9477': ['SQ', '1', 'IrradiationEventIdentificationSequence'],\r\n    '9504': ['SQ', '1', 'XRay3DFrameTypeSequence'],\r\n    '9506': ['SQ', '1', 'ContributingSourcesSequence'],\r\n    '9507': ['SQ', '1', 'XRay3DAcquisitionSequence'],\r\n    '9508': ['FL', '1', 'PrimaryPositionerScanArc'],\r\n    '9509': ['FL', '1', 'SecondaryPositionerScanArc'],\r\n    '9510': ['FL', '1', 'PrimaryPositionerScanStartAngle'],\r\n    '9511': ['FL', '1', 'SecondaryPositionerScanStartAngle'],\r\n    '9514': ['FL', '1', 'PrimaryPositionerIncrement'],\r\n    '9515': ['FL', '1', 'SecondaryPositionerIncrement'],\r\n    '9516': ['DT', '1', 'StartAcquisitionDateTime'],\r\n    '9517': ['DT', '1', 'EndAcquisitionDateTime'],\r\n    '9518': ['SS', '1', 'PrimaryPositionerIncrementSign'],\r\n    '9519': ['SS', '1', 'SecondaryPositionerIncrementSign'],\r\n    '9524': ['LO', '1', 'ApplicationName'],\r\n    '9525': ['LO', '1', 'ApplicationVersion'],\r\n    '9526': ['LO', '1', 'ApplicationManufacturer'],\r\n    '9527': ['CS', '1', 'AlgorithmType'],\r\n    '9528': ['LO', '1', 'AlgorithmDescription'],\r\n    '9530': ['SQ', '1', 'XRay3DReconstructionSequence'],\r\n    '9531': ['LO', '1', 'ReconstructionDescription'],\r\n    '9538': ['SQ', '1', 'PerProjectionAcquisitionSequence'],\r\n    '9541': ['SQ', '1', 'DetectorPositionSequence'],\r\n    '9542': ['SQ', '1', 'XRayAcquisitionDoseSequence'],\r\n    '9543': ['FD', '1', 'XRaySourceIsocenterPrimaryAngle'],\r\n    '9544': ['FD', '1', 'XRaySourceIsocenterSecondaryAngle'],\r\n    '9545': ['FD', '1', 'BreastSupportIsocenterPrimaryAngle'],\r\n    '9546': ['FD', '1', 'BreastSupportIsocenterSecondaryAngle'],\r\n    '9547': ['FD', '1', 'BreastSupportXPositionToIsocenter'],\r\n    '9548': ['FD', '1', 'BreastSupportYPositionToIsocenter'],\r\n    '9549': ['FD', '1', 'BreastSupportZPositionToIsocenter'],\r\n    '9550': ['FD', '1', 'DetectorIsocenterPrimaryAngle'],\r\n    '9551': ['FD', '1', 'DetectorIsocenterSecondaryAngle'],\r\n    '9552': ['FD', '1', 'DetectorXPositionToIsocenter'],\r\n    '9553': ['FD', '1', 'DetectorYPositionToIsocenter'],\r\n    '9554': ['FD', '1', 'DetectorZPositionToIsocenter'],\r\n    '9555': ['SQ', '1', 'XRayGridSequence'],\r\n    '9556': ['SQ', '1', 'XRayFilterSequence'],\r\n    '9557': ['FD', '3', 'DetectorActiveAreaTLHCPosition'],\r\n    '9558': ['FD', '6', 'DetectorActiveAreaOrientation'],\r\n    '9559': ['CS', '1', 'PositionerPrimaryAngleDirection'],\r\n    '9601': ['SQ', '1', 'DiffusionBMatrixSequence'],\r\n    '9602': ['FD', '1', 'DiffusionBValueXX'],\r\n    '9603': ['FD', '1', 'DiffusionBValueXY'],\r\n    '9604': ['FD', '1', 'DiffusionBValueXZ'],\r\n    '9605': ['FD', '1', 'DiffusionBValueYY'],\r\n    '9606': ['FD', '1', 'DiffusionBValueYZ'],\r\n    '9607': ['FD', '1', 'DiffusionBValueZZ'],\r\n    '9621': ['SQ', '1', 'FunctionalMRSequence'],\r\n    '9622': ['CS', '1', 'FunctionalSettlingPhaseFramesPresent'],\r\n    '9623': ['DT', '1', 'FunctionalSyncPulse'],\r\n    '9624': ['CS', '1', 'SettlingPhaseFrame'],\r\n    '9701': ['DT', '1', 'DecayCorrectionDateTime'],\r\n    '9715': ['FD', '1', 'StartDensityThreshold'],\r\n    '9716': ['FD', '1', 'StartRelativeDensityDifferenceThreshold'],\r\n    '9717': ['FD', '1', 'StartCardiacTriggerCountThreshold'],\r\n    '9718': ['FD', '1', 'StartRespiratoryTriggerCountThreshold'],\r\n    '9719': ['FD', '1', 'TerminationCountsThreshold'],\r\n    '9720': ['FD', '1', 'TerminationDensityThreshold'],\r\n    '9721': ['FD', '1', 'TerminationRelativeDensityThreshold'],\r\n    '9722': ['FD', '1', 'TerminationTimeThreshold'],\r\n    '9723': ['FD', '1', 'TerminationCardiacTriggerCountThreshold'],\r\n    '9724': ['FD', '1', 'TerminationRespiratoryTriggerCountThreshold'],\r\n    '9725': ['CS', '1', 'DetectorGeometry'],\r\n    '9726': ['FD', '1', 'TransverseDetectorSeparation'],\r\n    '9727': ['FD', '1', 'AxialDetectorDimension'],\r\n    '9729': ['US', '1', 'RadiopharmaceuticalAgentNumber'],\r\n    '9732': ['SQ', '1', 'PETFrameAcquisitionSequence'],\r\n    '9733': ['SQ', '1', 'PETDetectorMotionDetailsSequence'],\r\n    '9734': ['SQ', '1', 'PETTableDynamicsSequence'],\r\n    '9735': ['SQ', '1', 'PETPositionSequence'],\r\n    '9736': ['SQ', '1', 'PETFrameCorrectionFactorsSequence'],\r\n    '9737': ['SQ', '1', 'RadiopharmaceuticalUsageSequence'],\r\n    '9738': ['CS', '1', 'AttenuationCorrectionSource'],\r\n    '9739': ['US', '1', 'NumberOfIterations'],\r\n    '9740': ['US', '1', 'NumberOfSubsets'],\r\n    '9749': ['SQ', '1', 'PETReconstructionSequence'],\r\n    '9751': ['SQ', '1', 'PETFrameTypeSequence'],\r\n    '9755': ['CS', '1', 'TimeOfFlightInformationUsed'],\r\n    '9756': ['CS', '1', 'ReconstructionType'],\r\n    '9758': ['CS', '1', 'DecayCorrected'],\r\n    '9759': ['CS', '1', 'AttenuationCorrected'],\r\n    '9760': ['CS', '1', 'ScatterCorrected'],\r\n    '9761': ['CS', '1', 'DeadTimeCorrected'],\r\n    '9762': ['CS', '1', 'GantryMotionCorrected'],\r\n    '9763': ['CS', '1', 'PatientMotionCorrected'],\r\n    '9764': ['CS', '1', 'CountLossNormalizationCorrected'],\r\n    '9765': ['CS', '1', 'RandomsCorrected'],\r\n    '9766': ['CS', '1', 'NonUniformRadialSamplingCorrected'],\r\n    '9767': ['CS', '1', 'SensitivityCalibrated'],\r\n    '9768': ['CS', '1', 'DetectorNormalizationCorrection'],\r\n    '9769': ['CS', '1', 'IterativeReconstructionMethod'],\r\n    '9770': ['CS', '1', 'AttenuationCorrectionTemporalRelationship'],\r\n    '9771': ['SQ', '1', 'PatientPhysiologicalStateSequence'],\r\n    '9772': ['SQ', '1', 'PatientPhysiologicalStateCodeSequence'],\r\n    '9801': ['FD', '1-n', 'DepthsOfFocus'],\r\n    '9803': ['SQ', '1', 'ExcludedIntervalsSequence'],\r\n    '9804': ['DT', '1', 'ExclusionStartDateTime'],\r\n    '9805': ['FD', '1', 'ExclusionDuration'],\r\n    '9806': ['SQ', '1', 'USImageDescriptionSequence'],\r\n    '9807': ['SQ', '1', 'ImageDataTypeSequence'],\r\n    '9808': ['CS', '1', 'DataType'],\r\n    '9809': ['SQ', '1', 'TransducerScanPatternCodeSequence'],\r\n    '980B': ['CS', '1', 'AliasedDataType'],\r\n    '980C': ['CS', '1', 'PositionMeasuringDeviceUsed'],\r\n    '980D': ['SQ', '1', 'TransducerGeometryCodeSequence'],\r\n    '980E': ['SQ', '1', 'TransducerBeamSteeringCodeSequence'],\r\n    '980F': ['SQ', '1', 'TransducerApplicationCodeSequence'],\r\n    '9810': ['xs', '1', 'ZeroVelocityPixelValue'],\r\n    '9900': ['LO', '1', 'ReferenceLocationLabel'],\r\n    '9901': ['UT', '1', 'ReferenceLocationDescription'],\r\n    '9902': ['SQ', '1', 'ReferenceBasisCodeSequence'],\r\n    '9903': ['SQ', '1', 'ReferenceGeometryCodeSequence'],\r\n    '9904': ['DS', '1', 'OffsetDistance'],\r\n    '9905': ['CS', '1', 'OffsetDirection'],\r\n    '9906': ['SQ', '1', 'PotentialScheduledProtocolCodeSequence'],\r\n    '9907': ['SQ', '1', 'PotentialRequestedProcedureCodeSequence'],\r\n    '9908': ['UC', '1-n', 'PotentialReasonsForProcedure'],\r\n    '9909': ['SQ', '1', 'PotentialReasonsForProcedureCodeSequence'],\r\n    '990A': ['UC', '1-n', 'PotentialDiagnosticTasks'],\r\n    '990B': ['SQ', '1', 'ContraindicationsCodeSequence'],\r\n    '990C': ['SQ', '1', 'ReferencedDefinedProtocolSequence'],\r\n    '990D': ['SQ', '1', 'ReferencedPerformedProtocolSequence'],\r\n    '990E': ['SQ', '1', 'PredecessorProtocolSequence'],\r\n    '990F': ['UT', '1', 'ProtocolPlanningInformation'],\r\n    '9910': ['UT', '1', 'ProtocolDesignRationale'],\r\n    '9911': ['SQ', '1', 'PatientSpecificationSequence'],\r\n    '9912': ['SQ', '1', 'ModelSpecificationSequence'],\r\n    '9913': ['SQ', '1', 'ParametersSpecificationSequence'],\r\n    '9914': ['SQ', '1', 'InstructionSequence'],\r\n    '9915': ['US', '1', 'InstructionIndex'],\r\n    '9916': ['LO', '1', 'InstructionText'],\r\n    '9917': ['UT', '1', 'InstructionDescription'],\r\n    '9918': ['CS', '1', 'InstructionPerformedFlag'],\r\n    '9919': ['DT', '1', 'InstructionPerformedDateTime'],\r\n    '991A': ['UT', '1', 'InstructionPerformanceComment'],\r\n    '991B': ['SQ', '1', 'PatientPositioningInstructionSequence'],\r\n    '991C': ['SQ', '1', 'PositioningMethodCodeSequence'],\r\n    '991D': ['SQ', '1', 'PositioningLandmarkSequence'],\r\n    '991E': ['UI', '1', 'TargetFrameOfReferenceUID'],\r\n    '991F': ['SQ', '1', 'AcquisitionProtocolElementSpecificationSequence'],\r\n    '9920': ['SQ', '1', 'AcquisitionProtocolElementSequence'],\r\n    '9921': ['US', '1', 'ProtocolElementNumber'],\r\n    '9922': ['LO', '1', 'ProtocolElementName'],\r\n    '9923': ['UT', '1', 'ProtocolElementCharacteristicsSummary'],\r\n    '9924': ['UT', '1', 'ProtocolElementPurpose'],\r\n    '9930': ['CS', '1', 'AcquisitionMotion'],\r\n    '9931': ['SQ', '1', 'AcquisitionStartLocationSequence'],\r\n    '9932': ['SQ', '1', 'AcquisitionEndLocationSequence'],\r\n    '9933': ['SQ', '1', 'ReconstructionProtocolElementSpecificationSequence'],\r\n    '9934': ['SQ', '1', 'ReconstructionProtocolElementSequence'],\r\n    '9935': ['SQ', '1', 'StorageProtocolElementSpecificationSequence'],\r\n    '9936': ['SQ', '1', 'StorageProtocolElementSequence'],\r\n    '9937': ['LO', '1', 'RequestedSeriesDescription'],\r\n    '9938': ['US', '1-n', 'SourceAcquisitionProtocolElementNumber'],\r\n    '9939': ['US', '1-n', 'SourceAcquisitionBeamNumber'],\r\n    '993A': ['US', '1-n', 'SourceReconstructionProtocolElementNumber'],\r\n    '993B': ['SQ', '1', 'ReconstructionStartLocationSequence'],\r\n    '993C': ['SQ', '1', 'ReconstructionEndLocationSequence'],\r\n    '993D': ['SQ', '1', 'ReconstructionAlgorithmSequence'],\r\n    '993E': ['SQ', '1', 'ReconstructionTargetCenterLocationSequence'],\r\n    '9941': ['UT', '1', 'ImageFilterDescription'],\r\n    '9942': ['FD', '1', 'CTDIvolNotificationTrigger'],\r\n    '9943': ['FD', '1', 'DLPNotificationTrigger'],\r\n    '9944': ['CS', '1', 'AutoKVPSelectionType'],\r\n    '9945': ['FD', '1', 'AutoKVPUpperBound'],\r\n    '9946': ['FD', '1', 'AutoKVPLowerBound'],\r\n    '9947': ['CS', '1', 'ProtocolDefinedPatientPosition'],\r\n    'A001': ['SQ', '1', 'ContributingEquipmentSequence'],\r\n    'A002': ['DT', '1', 'ContributionDateTime'],\r\n    'A003': ['ST', '1', 'ContributionDescription']\r\n  },\r\n  '0020': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '000D': ['UI', '1', 'StudyInstanceUID'],\r\n    '000E': ['UI', '1', 'SeriesInstanceUID'],\r\n    '0010': ['SH', '1', 'StudyID'],\r\n    '0011': ['IS', '1', 'SeriesNumber'],\r\n    '0012': ['IS', '1', 'AcquisitionNumber'],\r\n    '0013': ['IS', '1', 'InstanceNumber'],\r\n    '0014': ['IS', '1', 'IsotopeNumber'],\r\n    '0015': ['IS', '1', 'PhaseNumber'],\r\n    '0016': ['IS', '1', 'IntervalNumber'],\r\n    '0017': ['IS', '1', 'TimeSlotNumber'],\r\n    '0018': ['IS', '1', 'AngleNumber'],\r\n    '0019': ['IS', '1', 'ItemNumber'],\r\n    '0020': ['CS', '2', 'PatientOrientation'],\r\n    '0022': ['IS', '1', 'OverlayNumber'],\r\n    '0024': ['IS', '1', 'CurveNumber'],\r\n    '0026': ['IS', '1', 'LUTNumber'],\r\n    '0030': ['DS', '3', 'ImagePosition'],\r\n    '0032': ['DS', '3', 'ImagePositionPatient'],\r\n    '0035': ['DS', '6', 'ImageOrientation'],\r\n    '0037': ['DS', '6', 'ImageOrientationPatient'],\r\n    '0050': ['DS', '1', 'Location'],\r\n    '0052': ['UI', '1', 'FrameOfReferenceUID'],\r\n    '0060': ['CS', '1', 'Laterality'],\r\n    '0062': ['CS', '1', 'ImageLaterality'],\r\n    '0070': ['LO', '1', 'ImageGeometryType'],\r\n    '0080': ['CS', '1-n', 'MaskingImage'],\r\n    '00AA': ['IS', '1', 'ReportNumber'],\r\n    '0100': ['IS', '1', 'TemporalPositionIdentifier'],\r\n    '0105': ['IS', '1', 'NumberOfTemporalPositions'],\r\n    '0110': ['DS', '1', 'TemporalResolution'],\r\n    '0200': ['UI', '1', 'SynchronizationFrameOfReferenceUID'],\r\n    '0242': ['UI', '1', 'SOPInstanceUIDOfConcatenationSource'],\r\n    '1000': ['IS', '1', 'SeriesInStudy'],\r\n    '1001': ['IS', '1', 'AcquisitionsInSeries'],\r\n    '1002': ['IS', '1', 'ImagesInAcquisition'],\r\n    '1003': ['IS', '1', 'ImagesInSeries'],\r\n    '1004': ['IS', '1', 'AcquisitionsInStudy'],\r\n    '1005': ['IS', '1', 'ImagesInStudy'],\r\n    '1020': ['LO', '1-n', 'Reference'],\r\n    '103F': ['LO', '1', 'TargetPositionReferenceIndicator'],\r\n    '1040': ['LO', '1', 'PositionReferenceIndicator'],\r\n    '1041': ['DS', '1', 'SliceLocation'],\r\n    '1070': ['IS', '1-n', 'OtherStudyNumbers'],\r\n    '1200': ['IS', '1', 'NumberOfPatientRelatedStudies'],\r\n    '1202': ['IS', '1', 'NumberOfPatientRelatedSeries'],\r\n    '1204': ['IS', '1', 'NumberOfPatientRelatedInstances'],\r\n    '1206': ['IS', '1', 'NumberOfStudyRelatedSeries'],\r\n    '1208': ['IS', '1', 'NumberOfStudyRelatedInstances'],\r\n    '1209': ['IS', '1', 'NumberOfSeriesRelatedInstances'],\r\n    '3100': ['CS', '1-n', 'SourceImageIDs'],\r\n    '3401': ['CS', '1', 'ModifyingDeviceID'],\r\n    '3402': ['CS', '1', 'ModifiedImageID'],\r\n    '3403': ['DA', '1', 'ModifiedImageDate'],\r\n    '3404': ['LO', '1', 'ModifyingDeviceManufacturer'],\r\n    '3405': ['TM', '1', 'ModifiedImageTime'],\r\n    '3406': ['LO', '1', 'ModifiedImageDescription'],\r\n    '4000': ['LT', '1', 'ImageComments'],\r\n    '5000': ['AT', '1-n', 'OriginalImageIdentification'],\r\n    '5002': ['LO', '1-n', 'OriginalImageIdentificationNomenclature'],\r\n    '9056': ['SH', '1', 'StackID'],\r\n    '9057': ['UL', '1', 'InStackPositionNumber'],\r\n    '9071': ['SQ', '1', 'FrameAnatomySequence'],\r\n    '9072': ['CS', '1', 'FrameLaterality'],\r\n    '9111': ['SQ', '1', 'FrameContentSequence'],\r\n    '9113': ['SQ', '1', 'PlanePositionSequence'],\r\n    '9116': ['SQ', '1', 'PlaneOrientationSequence'],\r\n    '9128': ['UL', '1', 'TemporalPositionIndex'],\r\n    '9153': ['FD', '1', 'NominalCardiacTriggerDelayTime'],\r\n    '9154': ['FL', '1', 'NominalCardiacTriggerTimePriorToRPeak'],\r\n    '9155': ['FL', '1', 'ActualCardiacTriggerTimePriorToRPeak'],\r\n    '9156': ['US', '1', 'FrameAcquisitionNumber'],\r\n    '9157': ['UL', '1-n', 'DimensionIndexValues'],\r\n    '9158': ['LT', '1', 'FrameComments'],\r\n    '9161': ['UI', '1', 'ConcatenationUID'],\r\n    '9162': ['US', '1', 'InConcatenationNumber'],\r\n    '9163': ['US', '1', 'InConcatenationTotalNumber'],\r\n    '9164': ['UI', '1', 'DimensionOrganizationUID'],\r\n    '9165': ['AT', '1', 'DimensionIndexPointer'],\r\n    '9167': ['AT', '1', 'FunctionalGroupPointer'],\r\n    '9170': ['SQ', '1', 'UnassignedSharedConvertedAttributesSequence'],\r\n    '9171': ['SQ', '1', 'UnassignedPerFrameConvertedAttributesSequence'],\r\n    '9172': ['SQ', '1', 'ConversionSourceAttributesSequence'],\r\n    '9213': ['LO', '1', 'DimensionIndexPrivateCreator'],\r\n    '9221': ['SQ', '1', 'DimensionOrganizationSequence'],\r\n    '9222': ['SQ', '1', 'DimensionIndexSequence'],\r\n    '9228': ['UL', '1', 'ConcatenationFrameOffsetNumber'],\r\n    '9238': ['LO', '1', 'FunctionalGroupPrivateCreator'],\r\n    '9241': ['FL', '1', 'NominalPercentageOfCardiacPhase'],\r\n    '9245': ['FL', '1', 'NominalPercentageOfRespiratoryPhase'],\r\n    '9246': ['FL', '1', 'StartingRespiratoryAmplitude'],\r\n    '9247': ['CS', '1', 'StartingRespiratoryPhase'],\r\n    '9248': ['FL', '1', 'EndingRespiratoryAmplitude'],\r\n    '9249': ['CS', '1', 'EndingRespiratoryPhase'],\r\n    '9250': ['CS', '1', 'RespiratoryTriggerType'],\r\n    '9251': ['FD', '1', 'RRIntervalTimeNominal'],\r\n    '9252': ['FD', '1', 'ActualCardiacTriggerDelayTime'],\r\n    '9253': ['SQ', '1', 'RespiratorySynchronizationSequence'],\r\n    '9254': ['FD', '1', 'RespiratoryIntervalTime'],\r\n    '9255': ['FD', '1', 'NominalRespiratoryTriggerDelayTime'],\r\n    '9256': ['FD', '1', 'RespiratoryTriggerDelayThreshold'],\r\n    '9257': ['FD', '1', 'ActualRespiratoryTriggerDelayTime'],\r\n    '9301': ['FD', '3', 'ImagePositionVolume'],\r\n    '9302': ['FD', '6', 'ImageOrientationVolume'],\r\n    '9307': ['CS', '1', 'UltrasoundAcquisitionGeometry'],\r\n    '9308': ['FD', '3', 'ApexPosition'],\r\n    '9309': ['FD', '16', 'VolumeToTransducerMappingMatrix'],\r\n    '930A': ['FD', '16', 'VolumeToTableMappingMatrix'],\r\n    '930B': ['CS', '1', 'VolumeToTransducerRelationship'],\r\n    '930C': ['CS', '1', 'PatientFrameOfReferenceSource'],\r\n    '930D': ['FD', '1', 'TemporalPositionTimeOffset'],\r\n    '930E': ['SQ', '1', 'PlanePositionVolumeSequence'],\r\n    '930F': ['SQ', '1', 'PlaneOrientationVolumeSequence'],\r\n    '9310': ['SQ', '1', 'TemporalPositionSequence'],\r\n    '9311': ['CS', '1', 'DimensionOrganizationType'],\r\n    '9312': ['UI', '1', 'VolumeFrameOfReferenceUID'],\r\n    '9313': ['UI', '1', 'TableFrameOfReferenceUID'],\r\n    '9421': ['LO', '1', 'DimensionDescriptionLabel'],\r\n    '9450': ['SQ', '1', 'PatientOrientationInFrameSequence'],\r\n    '9453': ['LO', '1', 'FrameLabel'],\r\n    '9518': ['US', '1-n', 'AcquisitionIndex'],\r\n    '9529': ['SQ', '1', 'ContributingSOPInstancesReferenceSequence'],\r\n    '9536': ['US', '1', 'ReconstructionIndex']\r\n  },\r\n  '0022': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['US', '1', 'LightPathFilterPassThroughWavelength'],\r\n    '0002': ['US', '2', 'LightPathFilterPassBand'],\r\n    '0003': ['US', '1', 'ImagePathFilterPassThroughWavelength'],\r\n    '0004': ['US', '2', 'ImagePathFilterPassBand'],\r\n    '0005': ['CS', '1', 'PatientEyeMovementCommanded'],\r\n    '0006': ['SQ', '1', 'PatientEyeMovementCommandCodeSequence'],\r\n    '0007': ['FL', '1', 'SphericalLensPower'],\r\n    '0008': ['FL', '1', 'CylinderLensPower'],\r\n    '0009': ['FL', '1', 'CylinderAxis'],\r\n    '000A': ['FL', '1', 'EmmetropicMagnification'],\r\n    '000B': ['FL', '1', 'IntraOcularPressure'],\r\n    '000C': ['FL', '1', 'HorizontalFieldOfView'],\r\n    '000D': ['CS', '1', 'PupilDilated'],\r\n    '000E': ['FL', '1', 'DegreeOfDilation'],\r\n    '0010': ['FL', '1', 'StereoBaselineAngle'],\r\n    '0011': ['FL', '1', 'StereoBaselineDisplacement'],\r\n    '0012': ['FL', '1', 'StereoHorizontalPixelOffset'],\r\n    '0013': ['FL', '1', 'StereoVerticalPixelOffset'],\r\n    '0014': ['FL', '1', 'StereoRotation'],\r\n    '0015': ['SQ', '1', 'AcquisitionDeviceTypeCodeSequence'],\r\n    '0016': ['SQ', '1', 'IlluminationTypeCodeSequence'],\r\n    '0017': ['SQ', '1', 'LightPathFilterTypeStackCodeSequence'],\r\n    '0018': ['SQ', '1', 'ImagePathFilterTypeStackCodeSequence'],\r\n    '0019': ['SQ', '1', 'LensesCodeSequence'],\r\n    '001A': ['SQ', '1', 'ChannelDescriptionCodeSequence'],\r\n    '001B': ['SQ', '1', 'RefractiveStateSequence'],\r\n    '001C': ['SQ', '1', 'MydriaticAgentCodeSequence'],\r\n    '001D': ['SQ', '1', 'RelativeImagePositionCodeSequence'],\r\n    '001E': ['FL', '1', 'CameraAngleOfView'],\r\n    '0020': ['SQ', '1', 'StereoPairsSequence'],\r\n    '0021': ['SQ', '1', 'LeftImageSequence'],\r\n    '0022': ['SQ', '1', 'RightImageSequence'],\r\n    '0028': ['CS', '1', 'StereoPairsPresent'],\r\n    '0030': ['FL', '1', 'AxialLengthOfTheEye'],\r\n    '0031': ['SQ', '1', 'OphthalmicFrameLocationSequence'],\r\n    '0032': ['FL', '2-2n', 'ReferenceCoordinates'],\r\n    '0035': ['FL', '1', 'DepthSpatialResolution'],\r\n    '0036': ['FL', '1', 'MaximumDepthDistortion'],\r\n    '0037': ['FL', '1', 'AlongScanSpatialResolution'],\r\n    '0038': ['FL', '1', 'MaximumAlongScanDistortion'],\r\n    '0039': ['CS', '1', 'OphthalmicImageOrientation'],\r\n    '0041': ['FL', '1', 'DepthOfTransverseImage'],\r\n    '0042': ['SQ', '1', 'MydriaticAgentConcentrationUnitsSequence'],\r\n    '0048': ['FL', '1', 'AcrossScanSpatialResolution'],\r\n    '0049': ['FL', '1', 'MaximumAcrossScanDistortion'],\r\n    '004E': ['DS', '1', 'MydriaticAgentConcentration'],\r\n    '0055': ['FL', '1', 'IlluminationWaveLength'],\r\n    '0056': ['FL', '1', 'IlluminationPower'],\r\n    '0057': ['FL', '1', 'IlluminationBandwidth'],\r\n    '0058': ['SQ', '1', 'MydriaticAgentSequence'],\r\n    '1007': ['SQ', '1', 'OphthalmicAxialMeasurementsRightEyeSequence'],\r\n    '1008': ['SQ', '1', 'OphthalmicAxialMeasurementsLeftEyeSequence'],\r\n    '1009': ['CS', '1', 'OphthalmicAxialMeasurementsDeviceType'],\r\n    '1010': ['CS', '1', 'OphthalmicAxialLengthMeasurementsType'],\r\n    '1012': ['SQ', '1', 'OphthalmicAxialLengthSequence'],\r\n    '1019': ['FL', '1', 'OphthalmicAxialLength'],\r\n    '1024': ['SQ', '1', 'LensStatusCodeSequence'],\r\n    '1025': ['SQ', '1', 'VitreousStatusCodeSequence'],\r\n    '1028': ['SQ', '1', 'IOLFormulaCodeSequence'],\r\n    '1029': ['LO', '1', 'IOLFormulaDetail'],\r\n    '1033': ['FL', '1', 'KeratometerIndex'],\r\n    '1035': ['SQ', '1', 'SourceOfOphthalmicAxialLengthCodeSequence'],\r\n    '1036': ['SQ', '1', 'SourceOfCornealSizeDataCodeSequence'],\r\n    '1037': ['FL', '1', 'TargetRefraction'],\r\n    '1039': ['CS', '1', 'RefractiveProcedureOccurred'],\r\n    '1040': ['SQ', '1', 'RefractiveSurgeryTypeCodeSequence'],\r\n    '1044': ['SQ', '1', 'OphthalmicUltrasoundMethodCodeSequence'],\r\n    '1045': ['SQ', '1', 'SurgicallyInducedAstigmatismSequence'],\r\n    '1046': ['CS', '1', 'TypeOfOpticalCorrection'],\r\n    '1047': ['SQ', '1', 'ToricIOLPowerSequence'],\r\n    '1048': ['SQ', '1', 'PredictedToricErrorSequence'],\r\n    '1049': ['CS', '1', 'PreSelectedForImplantation'],\r\n    '104A': ['SQ', '1', 'ToricIOLPowerForExactEmmetropiaSequence'],\r\n    '104B': ['SQ', '1', 'ToricIOLPowerForExactTargetRefractionSequence'],\r\n    '1050': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSequence'],\r\n    '1053': ['FL', '1', 'IOLPower'],\r\n    '1054': ['FL', '1', 'PredictedRefractiveError'],\r\n    '1059': ['FL', '1', 'OphthalmicAxialLengthVelocity'],\r\n    '1065': ['LO', '1', 'LensStatusDescription'],\r\n    '1066': ['LO', '1', 'VitreousStatusDescription'],\r\n    '1090': ['SQ', '1', 'IOLPowerSequence'],\r\n    '1092': ['SQ', '1', 'LensConstantSequence'],\r\n    '1093': ['LO', '1', 'IOLManufacturer'],\r\n    '1094': ['LO', '1', 'LensConstantDescription'],\r\n    '1095': ['LO', '1', 'ImplantName'],\r\n    '1096': ['SQ', '1', 'KeratometryMeasurementTypeCodeSequence'],\r\n    '1097': ['LO', '1', 'ImplantPartNumber'],\r\n    '1100': ['SQ', '1', 'ReferencedOphthalmicAxialMeasurementsSequence'],\r\n    '1101': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentNameCodeSequence'],\r\n    '1103': ['SQ', '1', 'RefractiveErrorBeforeRefractiveSurgeryCodeSequence'],\r\n    '1121': ['FL', '1', 'IOLPowerForExactEmmetropia'],\r\n    '1122': ['FL', '1', 'IOLPowerForExactTargetRefraction'],\r\n    '1125': ['SQ', '1', 'AnteriorChamberDepthDefinitionCodeSequence'],\r\n    '1127': ['SQ', '1', 'LensThicknessSequence'],\r\n    '1128': ['SQ', '1', 'AnteriorChamberDepthSequence'],\r\n    '112A': ['SQ', '1', 'CalculationCommentSequence'],\r\n    '112B': ['CS', '1', 'CalculationCommentType'],\r\n    '112C': ['LT', '1', 'CalculationComment'],\r\n    '1130': ['FL', '1', 'LensThickness'],\r\n    '1131': ['FL', '1', 'AnteriorChamberDepth'],\r\n    '1132': ['SQ', '1', 'SourceOfLensThicknessDataCodeSequence'],\r\n    '1133': ['SQ', '1', 'SourceOfAnteriorChamberDepthDataCodeSequence'],\r\n    '1134': ['SQ', '1', 'SourceOfRefractiveMeasurementsSequence'],\r\n    '1135': ['SQ', '1', 'SourceOfRefractiveMeasurementsCodeSequence'],\r\n    '1140': ['CS', '1', 'OphthalmicAxialLengthMeasurementModified'],\r\n    '1150': ['SQ', '1', 'OphthalmicAxialLengthDataSourceCodeSequence'],\r\n    '1153': ['SQ', '1', 'OphthalmicAxialLengthAcquisitionMethodCodeSequence'],\r\n    '1155': ['FL', '1', 'SignalToNoiseRatio'],\r\n    '1159': ['LO', '1', 'OphthalmicAxialLengthDataSourceDescription'],\r\n    '1210': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsTotalLengthSequence'],\r\n    '1211': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsSegmentalLengthSequence'],\r\n    '1212': ['SQ', '1', 'OphthalmicAxialLengthMeasurementsLengthSummationSequence'],\r\n    '1220': ['SQ', '1', 'UltrasoundOphthalmicAxialLengthMeasurementsSequence'],\r\n    '1225': ['SQ', '1', 'OpticalOphthalmicAxialLengthMeasurementsSequence'],\r\n    '1230': ['SQ', '1', 'UltrasoundSelectedOphthalmicAxialLengthSequence'],\r\n    '1250': ['SQ', '1', 'OphthalmicAxialLengthSelectionMethodCodeSequence'],\r\n    '1255': ['SQ', '1', 'OpticalSelectedOphthalmicAxialLengthSequence'],\r\n    '1257': ['SQ', '1', 'SelectedSegmentalOphthalmicAxialLengthSequence'],\r\n    '1260': ['SQ', '1', 'SelectedTotalOphthalmicAxialLengthSequence'],\r\n    '1262': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricSequence'],\r\n    '1265': ['SQ', '1', 'OphthalmicAxialLengthQualityMetricTypeCodeSequence'],\r\n    '1273': ['LO', '1', 'OphthalmicAxialLengthQualityMetricTypeDescription'],\r\n    '1300': ['SQ', '1', 'IntraocularLensCalculationsRightEyeSequence'],\r\n    '1310': ['SQ', '1', 'IntraocularLensCalculationsLeftEyeSequence'],\r\n    '1330': ['SQ', '1', 'ReferencedOphthalmicAxialLengthMeasurementQCImageSequence'],\r\n    '1415': ['CS', '1', 'OphthalmicMappingDeviceType'],\r\n    '1420': ['SQ', '1', 'AcquisitionMethodCodeSequence'],\r\n    '1423': ['SQ', '1', 'AcquisitionMethodAlgorithmSequence'],\r\n    '1436': ['SQ', '1', 'OphthalmicThicknessMapTypeCodeSequence'],\r\n    '1443': ['SQ', '1', 'OphthalmicThicknessMappingNormalsSequence'],\r\n    '1445': ['SQ', '1', 'RetinalThicknessDefinitionCodeSequence'],\r\n    '1450': ['SQ', '1', 'PixelValueMappingToCodedConceptSequence'],\r\n    '1452': ['xs', '1', 'MappedPixelValue'],\r\n    '1454': ['LO', '1', 'PixelValueMappingExplanation'],\r\n    '1458': ['SQ', '1', 'OphthalmicThicknessMapQualityThresholdSequence'],\r\n    '1460': ['FL', '1', 'OphthalmicThicknessMapThresholdQualityRating'],\r\n    '1463': ['FL', '2', 'AnatomicStructureReferencePoint'],\r\n    '1465': ['SQ', '1', 'RegistrationToLocalizerSequence'],\r\n    '1466': ['CS', '1', 'RegisteredLocalizerUnits'],\r\n    '1467': ['FL', '2', 'RegisteredLocalizerTopLeftHandCorner'],\r\n    '1468': ['FL', '2', 'RegisteredLocalizerBottomRightHandCorner'],\r\n    '1470': ['SQ', '1', 'OphthalmicThicknessMapQualityRatingSequence'],\r\n    '1472': ['SQ', '1', 'RelevantOPTAttributesSequence'],\r\n    '1512': ['SQ', '1', 'TransformationMethodCodeSequence'],\r\n    '1513': ['SQ', '1', 'TransformationAlgorithmSequence'],\r\n    '1515': ['CS', '1', 'OphthalmicAxialLengthMethod'],\r\n    '1517': ['FL', '1', 'OphthalmicFOV'],\r\n    '1518': ['SQ', '1', 'TwoDimensionalToThreeDimensionalMapSequence'],\r\n    '1525': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityRatingSequence'],\r\n    '1526': ['SQ', '1', 'WideFieldOphthalmicPhotographyQualityThresholdSequence'],\r\n    '1527': ['FL', '1', 'WideFieldOphthalmicPhotographyThresholdQualityRating'],\r\n    '1528': ['FL', '1', 'XCoordinatesCenterPixelViewAngle'],\r\n    '1529': ['FL', '1', 'YCoordinatesCenterPixelViewAngle'],\r\n    '1530': ['UL', '1', 'NumberOfMapPoints'],\r\n    '1531': ['OF', '1', 'TwoDimensionalToThreeDimensionalMapData'],\r\n    '1612': ['SQ', '1', 'DerivationAlgorithmSequence'],\r\n    '1615': ['SQ', '1', 'OphthalmicImageTypeCodeSequence'],\r\n    '1616': ['LO', '1', 'OphthalmicImageTypeDescription'],\r\n    '1618': ['SQ', '1', 'ScanPatternTypeCodeSequence'],\r\n    '1620': ['SQ', '1', 'ReferencedSurfaceMeshIdentificationSequence'],\r\n    '1622': ['CS', '1', 'OphthalmicVolumetricPropertiesFlag'],\r\n    '1624': ['FL', '1', 'OphthalmicAnatomicReferencePointXCoordinate'],\r\n    '1626': ['FL', '1', 'OphthalmicAnatomicReferencePointYCoordinate'],\r\n    '1628': ['SQ', '1', 'OphthalmicEnFaceImageQualityRatingSequence'],\r\n    '1630': ['DS', '1', 'QualityThreshold'],\r\n    '1640': ['SQ', '1', 'OCTBscanAnalysisAcquisitionParametersSequence'],\r\n    '1642': ['UL', '1', 'NumberOfBscansPerFrame'],\r\n    '1643': ['FL', '1', 'BscanSlabThickness'],\r\n    '1644': ['FL', '1', 'DistanceBetweenBscanSlabs'],\r\n    '1645': ['FL', '1', 'BscanCycleTime'],\r\n    '1646': ['FL', '1-n', 'BscanCycleTimeVector'],\r\n    '1649': ['FL', '1', 'AscanRate'],\r\n    '1650': ['FL', '1', 'BscanRate'],\r\n    '1658': ['UL', '1', 'SurfaceMeshZPixelOffset']\r\n  },\r\n  '0024': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['FL', '1', 'VisualFieldHorizontalExtent'],\r\n    '0011': ['FL', '1', 'VisualFieldVerticalExtent'],\r\n    '0012': ['CS', '1', 'VisualFieldShape'],\r\n    '0016': ['SQ', '1', 'ScreeningTestModeCodeSequence'],\r\n    '0018': ['FL', '1', 'MaximumStimulusLuminance'],\r\n    '0020': ['FL', '1', 'BackgroundLuminance'],\r\n    '0021': ['SQ', '1', 'StimulusColorCodeSequence'],\r\n    '0024': ['SQ', '1', 'BackgroundIlluminationColorCodeSequence'],\r\n    '0025': ['FL', '1', 'StimulusArea'],\r\n    '0028': ['FL', '1', 'StimulusPresentationTime'],\r\n    '0032': ['SQ', '1', 'FixationSequence'],\r\n    '0033': ['SQ', '1', 'FixationMonitoringCodeSequence'],\r\n    '0034': ['SQ', '1', 'VisualFieldCatchTrialSequence'],\r\n    '0035': ['US', '1', 'FixationCheckedQuantity'],\r\n    '0036': ['US', '1', 'PatientNotProperlyFixatedQuantity'],\r\n    '0037': ['CS', '1', 'PresentedVisualStimuliDataFlag'],\r\n    '0038': ['US', '1', 'NumberOfVisualStimuli'],\r\n    '0039': ['CS', '1', 'ExcessiveFixationLossesDataFlag'],\r\n    '0040': ['CS', '1', 'ExcessiveFixationLosses'],\r\n    '0042': ['US', '1', 'StimuliRetestingQuantity'],\r\n    '0044': ['LT', '1', 'CommentsOnPatientPerformanceOfVisualField'],\r\n    '0045': ['CS', '1', 'FalseNegativesEstimateFlag'],\r\n    '0046': ['FL', '1', 'FalseNegativesEstimate'],\r\n    '0048': ['US', '1', 'NegativeCatchTrialsQuantity'],\r\n    '0050': ['US', '1', 'FalseNegativesQuantity'],\r\n    '0051': ['CS', '1', 'ExcessiveFalseNegativesDataFlag'],\r\n    '0052': ['CS', '1', 'ExcessiveFalseNegatives'],\r\n    '0053': ['CS', '1', 'FalsePositivesEstimateFlag'],\r\n    '0054': ['FL', '1', 'FalsePositivesEstimate'],\r\n    '0055': ['CS', '1', 'CatchTrialsDataFlag'],\r\n    '0056': ['US', '1', 'PositiveCatchTrialsQuantity'],\r\n    '0057': ['CS', '1', 'TestPointNormalsDataFlag'],\r\n    '0058': ['SQ', '1', 'TestPointNormalsSequence'],\r\n    '0059': ['CS', '1', 'GlobalDeviationProbabilityNormalsFlag'],\r\n    '0060': ['US', '1', 'FalsePositivesQuantity'],\r\n    '0061': ['CS', '1', 'ExcessiveFalsePositivesDataFlag'],\r\n    '0062': ['CS', '1', 'ExcessiveFalsePositives'],\r\n    '0063': ['CS', '1', 'VisualFieldTestNormalsFlag'],\r\n    '0064': ['SQ', '1', 'ResultsNormalsSequence'],\r\n    '0065': ['SQ', '1', 'AgeCorrectedSensitivityDeviationAlgorithmSequence'],\r\n    '0066': ['FL', '1', 'GlobalDeviationFromNormal'],\r\n    '0067': ['SQ', '1', 'GeneralizedDefectSensitivityDeviationAlgorithmSequence'],\r\n    '0068': ['FL', '1', 'LocalizedDeviationFromNormal'],\r\n    '0069': ['LO', '1', 'PatientReliabilityIndicator'],\r\n    '0070': ['FL', '1', 'VisualFieldMeanSensitivity'],\r\n    '0071': ['FL', '1', 'GlobalDeviationProbability'],\r\n    '0072': ['CS', '1', 'LocalDeviationProbabilityNormalsFlag'],\r\n    '0073': ['FL', '1', 'LocalizedDeviationProbability'],\r\n    '0074': ['CS', '1', 'ShortTermFluctuationCalculated'],\r\n    '0075': ['FL', '1', 'ShortTermFluctuation'],\r\n    '0076': ['CS', '1', 'ShortTermFluctuationProbabilityCalculated'],\r\n    '0077': ['FL', '1', 'ShortTermFluctuationProbability'],\r\n    '0078': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalCalculated'],\r\n    '0079': ['FL', '1', 'CorrectedLocalizedDeviationFromNormal'],\r\n    '0080': ['CS', '1', 'CorrectedLocalizedDeviationFromNormalProbabilityCalculated'],\r\n    '0081': ['FL', '1', 'CorrectedLocalizedDeviationFromNormalProbability'],\r\n    '0083': ['SQ', '1', 'GlobalDeviationProbabilitySequence'],\r\n    '0085': ['SQ', '1', 'LocalizedDeviationProbabilitySequence'],\r\n    '0086': ['CS', '1', 'FovealSensitivityMeasured'],\r\n    '0087': ['FL', '1', 'FovealSensitivity'],\r\n    '0088': ['FL', '1', 'VisualFieldTestDuration'],\r\n    '0089': ['SQ', '1', 'VisualFieldTestPointSequence'],\r\n    '0090': ['FL', '1', 'VisualFieldTestPointXCoordinate'],\r\n    '0091': ['FL', '1', 'VisualFieldTestPointYCoordinate'],\r\n    '0092': ['FL', '1', 'AgeCorrectedSensitivityDeviationValue'],\r\n    '0093': ['CS', '1', 'StimulusResults'],\r\n    '0094': ['FL', '1', 'SensitivityValue'],\r\n    '0095': ['CS', '1', 'RetestStimulusSeen'],\r\n    '0096': ['FL', '1', 'RetestSensitivityValue'],\r\n    '0097': ['SQ', '1', 'VisualFieldTestPointNormalsSequence'],\r\n    '0098': ['FL', '1', 'QuantifiedDefect'],\r\n    '0100': ['FL', '1', 'AgeCorrectedSensitivityDeviationProbabilityValue'],\r\n    '0102': ['CS', '1', 'GeneralizedDefectCorrectedSensitivityDeviationFlag'],\r\n    '0103': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationValue'],\r\n    '0104': ['FL', '1', 'GeneralizedDefectCorrectedSensitivityDeviationProbabilityValue'],\r\n    '0105': ['FL', '1', 'MinimumSensitivityValue'],\r\n    '0106': ['CS', '1', 'BlindSpotLocalized'],\r\n    '0107': ['FL', '1', 'BlindSpotXCoordinate'],\r\n    '0108': ['FL', '1', 'BlindSpotYCoordinate'],\r\n    '0110': ['SQ', '1', 'VisualAcuityMeasurementSequence'],\r\n    '0112': ['SQ', '1', 'RefractiveParametersUsedOnPatientSequence'],\r\n    '0113': ['CS', '1', 'MeasurementLaterality'],\r\n    '0114': ['SQ', '1', 'OphthalmicPatientClinicalInformationLeftEyeSequence'],\r\n    '0115': ['SQ', '1', 'OphthalmicPatientClinicalInformationRightEyeSequence'],\r\n    '0117': ['CS', '1', 'FovealPointNormativeDataFlag'],\r\n    '0118': ['FL', '1', 'FovealPointProbabilityValue'],\r\n    '0120': ['CS', '1', 'ScreeningBaselineMeasured'],\r\n    '0122': ['SQ', '1', 'ScreeningBaselineMeasuredSequence'],\r\n    '0124': ['CS', '1', 'ScreeningBaselineType'],\r\n    '0126': ['FL', '1', 'ScreeningBaselineValue'],\r\n    '0202': ['LO', '1', 'AlgorithmSource'],\r\n    '0306': ['LO', '1', 'DataSetName'],\r\n    '0307': ['LO', '1', 'DataSetVersion'],\r\n    '0308': ['LO', '1', 'DataSetSource'],\r\n    '0309': ['LO', '1', 'DataSetDescription'],\r\n    '0317': ['SQ', '1', 'VisualFieldTestReliabilityGlobalIndexSequence'],\r\n    '0320': ['SQ', '1', 'VisualFieldGlobalResultsIndexSequence'],\r\n    '0325': ['SQ', '1', 'DataObservationSequence'],\r\n    '0338': ['CS', '1', 'IndexNormalsFlag'],\r\n    '0341': ['FL', '1', 'IndexProbability'],\r\n    '0344': ['SQ', '1', 'IndexProbabilitySequence']\r\n  },\r\n  '0028': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0002': ['US', '1', 'SamplesPerPixel'],\r\n    '0003': ['US', '1', 'SamplesPerPixelUsed'],\r\n    '0004': ['CS', '1', 'PhotometricInterpretation'],\r\n    '0005': ['US', '1', 'ImageDimensions'],\r\n    '0006': ['US', '1', 'PlanarConfiguration'],\r\n    '0008': ['IS', '1', 'NumberOfFrames'],\r\n    '0009': ['AT', '1-n', 'FrameIncrementPointer'],\r\n    '000A': ['AT', '1-n', 'FrameDimensionPointer'],\r\n    '0010': ['US', '1', 'Rows'],\r\n    '0011': ['US', '1', 'Columns'],\r\n    '0012': ['US', '1', 'Planes'],\r\n    '0014': ['US', '1', 'UltrasoundColorDataPresent'],\r\n    '0020': ['', '', ''],\r\n    '0030': ['DS', '2', 'PixelSpacing'],\r\n    '0031': ['DS', '2', 'ZoomFactor'],\r\n    '0032': ['DS', '2', 'ZoomCenter'],\r\n    '0034': ['IS', '2', 'PixelAspectRatio'],\r\n    '0040': ['CS', '1', 'ImageFormat'],\r\n    '0050': ['LO', '1-n', 'ManipulatedImage'],\r\n    '0051': ['CS', '1-n', 'CorrectedImage'],\r\n    '005F': ['LO', '1', 'CompressionRecognitionCode'],\r\n    '0060': ['CS', '1', 'CompressionCode'],\r\n    '0061': ['SH', '1', 'CompressionOriginator'],\r\n    '0062': ['LO', '1', 'CompressionLabel'],\r\n    '0063': ['SH', '1', 'CompressionDescription'],\r\n    '0065': ['CS', '1-n', 'CompressionSequence'],\r\n    '0066': ['AT', '1-n', 'CompressionStepPointers'],\r\n    '0068': ['US', '1', 'RepeatInterval'],\r\n    '0069': ['US', '1', 'BitsGrouped'],\r\n    '0070': ['US', '1-n', 'PerimeterTable'],\r\n    '0071': ['xs', '1', 'PerimeterValue'],\r\n    '0080': ['US', '1', 'PredictorRows'],\r\n    '0081': ['US', '1', 'PredictorColumns'],\r\n    '0082': ['US', '1-n', 'PredictorConstants'],\r\n    '0090': ['CS', '1', 'BlockedPixels'],\r\n    '0091': ['US', '1', 'BlockRows'],\r\n    '0092': ['US', '1', 'BlockColumns'],\r\n    '0093': ['US', '1', 'RowOverlap'],\r\n    '0094': ['US', '1', 'ColumnOverlap'],\r\n    '0100': ['US', '1', 'BitsAllocated'],\r\n    '0101': ['US', '1', 'BitsStored'],\r\n    '0102': ['US', '1', 'HighBit'],\r\n    '0103': ['US', '1', 'PixelRepresentation'],\r\n    '0104': ['xs', '1', 'SmallestValidPixelValue'],\r\n    '0105': ['xs', '1', 'LargestValidPixelValue'],\r\n    '0106': ['xs', '1', 'SmallestImagePixelValue'],\r\n    '0107': ['xs', '1', 'LargestImagePixelValue'],\r\n    '0108': ['xs', '1', 'SmallestPixelValueInSeries'],\r\n    '0109': ['xs', '1', 'LargestPixelValueInSeries'],\r\n    '0110': ['xs', '1', 'SmallestImagePixelValueInPlane'],\r\n    '0111': ['xs', '1', 'LargestImagePixelValueInPlane'],\r\n    '0120': ['xs', '1', 'PixelPaddingValue'],\r\n    '0121': ['xs', '1', 'PixelPaddingRangeLimit'],\r\n    '0122': ['FL', '1', 'FloatPixelPaddingValue'],\r\n    '0123': ['FD', '1', 'DoubleFloatPixelPaddingValue'],\r\n    '0124': ['FL', '1', 'FloatPixelPaddingRangeLimit'],\r\n    '0125': ['FD', '1', 'DoubleFloatPixelPaddingRangeLimit'],\r\n    '0200': ['US', '1', 'ImageLocation'],\r\n    '0300': ['CS', '1', 'QualityControlImage'],\r\n    '0301': ['CS', '1', 'BurnedInAnnotation'],\r\n    '0302': ['CS', '1', 'RecognizableVisualFeatures'],\r\n    '0303': ['CS', '1', 'LongitudinalTemporalInformationModified'],\r\n    '0304': ['UI', '1', 'ReferencedColorPaletteInstanceUID'],\r\n    '0400': ['LO', '1', 'TransformLabel'],\r\n    '0401': ['LO', '1', 'TransformVersionNumber'],\r\n    '0402': ['US', '1', 'NumberOfTransformSteps'],\r\n    '0403': ['LO', '1-n', 'SequenceOfCompressedData'],\r\n    '0404': ['AT', '1-n', 'DetailsOfCoefficients'],\r\n    '04x0': ['US', '1', 'RowsForNthOrderCoefficients'],\r\n    '04x1': ['US', '1', 'ColumnsForNthOrderCoefficients'],\r\n    '04x2': ['LO', '1-n', 'CoefficientCoding'],\r\n    '04x3': ['AT', '1-n', 'CoefficientCodingPointers'],\r\n    '0700': ['LO', '1', 'DCTLabel'],\r\n    '0701': ['CS', '1-n', 'DataBlockDescription'],\r\n    '0702': ['AT', '1-n', 'DataBlock'],\r\n    '0710': ['US', '1', 'NormalizationFactorFormat'],\r\n    '0720': ['US', '1', 'ZonalMapNumberFormat'],\r\n    '0721': ['AT', '1-n', 'ZonalMapLocation'],\r\n    '0722': ['US', '1', 'ZonalMapFormat'],\r\n    '0730': ['US', '1', 'AdaptiveMapFormat'],\r\n    '0740': ['US', '1', 'CodeNumberFormat'],\r\n    '08x0': ['CS', '1-n', 'CodeLabel'],\r\n    '08x2': ['US', '1', 'NumberOfTables'],\r\n    '08x3': ['AT', '1-n', 'CodeTableLocation'],\r\n    '08x4': ['US', '1', 'BitsForCodeWord'],\r\n    '08x8': ['AT', '1-n', 'ImageDataLocation'],\r\n    '0A02': ['CS', '1', 'PixelSpacingCalibrationType'],\r\n    '0A04': ['LO', '1', 'PixelSpacingCalibrationDescription'],\r\n    '1040': ['CS', '1', 'PixelIntensityRelationship'],\r\n    '1041': ['SS', '1', 'PixelIntensityRelationshipSign'],\r\n    '1050': ['DS', '1-n', 'WindowCenter'],\r\n    '1051': ['DS', '1-n', 'WindowWidth'],\r\n    '1052': ['DS', '1', 'RescaleIntercept'],\r\n    '1053': ['DS', '1', 'RescaleSlope'],\r\n    '1054': ['LO', '1', 'RescaleType'],\r\n    '1055': ['LO', '1-n', 'WindowCenterWidthExplanation'],\r\n    '1056': ['CS', '1', 'VOILUTFunction'],\r\n    '1080': ['CS', '1', 'GrayScale'],\r\n    '1090': ['CS', '1', 'RecommendedViewingMode'],\r\n    '1100': ['xs', '3', 'GrayLookupTableDescriptor'],\r\n    '1101': ['xs', '3', 'RedPaletteColorLookupTableDescriptor'],\r\n    '1102': ['xs', '3', 'GreenPaletteColorLookupTableDescriptor'],\r\n    '1103': ['xs', '3', 'BluePaletteColorLookupTableDescriptor'],\r\n    '1104': ['US', '3', 'AlphaPaletteColorLookupTableDescriptor'],\r\n    '1111': ['xs', '4', 'LargeRedPaletteColorLookupTableDescriptor'],\r\n    '1112': ['xs', '4', 'LargeGreenPaletteColorLookupTableDescriptor'],\r\n    '1113': ['xs', '4', 'LargeBluePaletteColorLookupTableDescriptor'],\r\n    '1199': ['UI', '1', 'PaletteColorLookupTableUID'],\r\n    '1200': ['xs', '1-n or 1', 'GrayLookupTableData'],\r\n    '1201': ['OW', '1', 'RedPaletteColorLookupTableData'],\r\n    '1202': ['OW', '1', 'GreenPaletteColorLookupTableData'],\r\n    '1203': ['OW', '1', 'BluePaletteColorLookupTableData'],\r\n    '1204': ['OW', '1', 'AlphaPaletteColorLookupTableData'],\r\n    '1211': ['OW', '1', 'LargeRedPaletteColorLookupTableData'],\r\n    '1212': ['OW', '1', 'LargeGreenPaletteColorLookupTableData'],\r\n    '1213': ['OW', '1', 'LargeBluePaletteColorLookupTableData'],\r\n    '1214': ['UI', '1', 'LargePaletteColorLookupTableUID'],\r\n    '1221': ['OW', '1', 'SegmentedRedPaletteColorLookupTableData'],\r\n    '1222': ['OW', '1', 'SegmentedGreenPaletteColorLookupTableData'],\r\n    '1223': ['OW', '1', 'SegmentedBluePaletteColorLookupTableData'],\r\n    '1224': ['OW', '1', 'SegmentedAlphaPaletteColorLookupTableData'],\r\n    '1230': ['SQ', '1', 'StoredValueColorRangeSequence'],\r\n    '1231': ['FD', '1', 'MinimumStoredValueMapped'],\r\n    '1232': ['FD', '1', 'MaximumStoredValueMapped'],\r\n    '1300': ['CS', '1', 'BreastImplantPresent'],\r\n    '1350': ['CS', '1', 'PartialView'],\r\n    '1351': ['ST', '1', 'PartialViewDescription'],\r\n    '1352': ['SQ', '1', 'PartialViewCodeSequence'],\r\n    '135A': ['CS', '1', 'SpatialLocationsPreserved'],\r\n    '1401': ['SQ', '1', 'DataFrameAssignmentSequence'],\r\n    '1402': ['CS', '1', 'DataPathAssignment'],\r\n    '1403': ['US', '1', 'BitsMappedToColorLookupTable'],\r\n    '1404': ['SQ', '1', 'BlendingLUT1Sequence'],\r\n    '1405': ['CS', '1', 'BlendingLUT1TransferFunction'],\r\n    '1406': ['FD', '1', 'BlendingWeightConstant'],\r\n    '1407': ['US', '3', 'BlendingLookupTableDescriptor'],\r\n    '1408': ['OW', '1', 'BlendingLookupTableData'],\r\n    '140B': ['SQ', '1', 'EnhancedPaletteColorLookupTableSequence'],\r\n    '140C': ['SQ', '1', 'BlendingLUT2Sequence'],\r\n    '140D': ['CS', '1', 'BlendingLUT2TransferFunction'],\r\n    '140E': ['CS', '1', 'DataPathID'],\r\n    '140F': ['CS', '1', 'RGBLUTTransferFunction'],\r\n    '1410': ['CS', '1', 'AlphaLUTTransferFunction'],\r\n    '2000': ['OB', '1', 'ICCProfile'],\r\n    '2002': ['CS', '1', 'ColorSpace'],\r\n    '2110': ['CS', '1', 'LossyImageCompression'],\r\n    '2112': ['DS', '1-n', 'LossyImageCompressionRatio'],\r\n    '2114': ['CS', '1-n', 'LossyImageCompressionMethod'],\r\n    '3000': ['SQ', '1', 'ModalityLUTSequence'],\r\n    '3002': ['xs', '3', 'LUTDescriptor'],\r\n    '3003': ['LO', '1', 'LUTExplanation'],\r\n    '3004': ['LO', '1', 'ModalityLUTType'],\r\n    '3006': ['xx', '1-n or 1', 'LUTData'],\r\n    '3010': ['SQ', '1', 'VOILUTSequence'],\r\n    '3110': ['SQ', '1', 'SoftcopyVOILUTSequence'],\r\n    '4000': ['LT', '1', 'ImagePresentationComments'],\r\n    '5000': ['SQ', '1', 'BiPlaneAcquisitionSequence'],\r\n    '6010': ['US', '1', 'RepresentativeFrameNumber'],\r\n    '6020': ['US', '1-n', 'FrameNumbersOfInterest'],\r\n    '6022': ['LO', '1-n', 'FrameOfInterestDescription'],\r\n    '6023': ['CS', '1-n', 'FrameOfInterestType'],\r\n    '6030': ['US', '1-n', 'MaskPointers'],\r\n    '6040': ['US', '1-n', 'RWavePointer'],\r\n    '6100': ['SQ', '1', 'MaskSubtractionSequence'],\r\n    '6101': ['CS', '1', 'MaskOperation'],\r\n    '6102': ['US', '2-2n', 'ApplicableFrameRange'],\r\n    '6110': ['US', '1-n', 'MaskFrameNumbers'],\r\n    '6112': ['US', '1', 'ContrastFrameAveraging'],\r\n    '6114': ['FL', '2', 'MaskSubPixelShift'],\r\n    '6120': ['SS', '1', 'TIDOffset'],\r\n    '6190': ['ST', '1', 'MaskOperationExplanation'],\r\n    '7000': ['SQ', '1', 'EquipmentAdministratorSequence'],\r\n    '7001': ['US', '1', 'NumberOfDisplaySubsystems'],\r\n    '7002': ['US', '1', 'CurrentConfigurationID'],\r\n    '7003': ['US', '1', 'DisplaySubsystemID'],\r\n    '7004': ['SH', '1', 'DisplaySubsystemName'],\r\n    '7005': ['LO', '1', 'DisplaySubsystemDescription'],\r\n    '7006': ['CS', '1', 'SystemStatus'],\r\n    '7007': ['LO', '1', 'SystemStatusComment'],\r\n    '7008': ['SQ', '1', 'TargetLuminanceCharacteristicsSequence'],\r\n    '7009': ['US', '1', 'LuminanceCharacteristicsID'],\r\n    '700A': ['SQ', '1', 'DisplaySubsystemConfigurationSequence'],\r\n    '700B': ['US', '1', 'ConfigurationID'],\r\n    '700C': ['SH', '1', 'ConfigurationName'],\r\n    '700D': ['LO', '1', 'ConfigurationDescription'],\r\n    '700E': ['US', '1', 'ReferencedTargetLuminanceCharacteristicsID'],\r\n    '700F': ['SQ', '1', 'QAResultsSequence'],\r\n    '7010': ['SQ', '1', 'DisplaySubsystemQAResultsSequence'],\r\n    '7011': ['SQ', '1', 'ConfigurationQAResultsSequence'],\r\n    '7012': ['SQ', '1', 'MeasurementEquipmentSequence'],\r\n    '7013': ['CS', '1-n', 'MeasurementFunctions'],\r\n    '7014': ['CS', '1', 'MeasurementEquipmentType'],\r\n    '7015': ['SQ', '1', 'VisualEvaluationResultSequence'],\r\n    '7016': ['SQ', '1', 'DisplayCalibrationResultSequence'],\r\n    '7017': ['US', '1', 'DDLValue'],\r\n    '7018': ['FL', '2', 'CIExyWhitePoint'],\r\n    '7019': ['CS', '1', 'DisplayFunctionType'],\r\n    '701A': ['FL', '1', 'GammaValue'],\r\n    '701B': ['US', '1', 'NumberOfLuminancePoints'],\r\n    '701C': ['SQ', '1', 'LuminanceResponseSequence'],\r\n    '701D': ['FL', '1', 'TargetMinimumLuminance'],\r\n    '701E': ['FL', '1', 'TargetMaximumLuminance'],\r\n    '701F': ['FL', '1', 'LuminanceValue'],\r\n    '7020': ['LO', '1', 'LuminanceResponseDescription'],\r\n    '7021': ['CS', '1', 'WhitePointFlag'],\r\n    '7022': ['SQ', '1', 'DisplayDeviceTypeCodeSequence'],\r\n    '7023': ['SQ', '1', 'DisplaySubsystemSequence'],\r\n    '7024': ['SQ', '1', 'LuminanceResultSequence'],\r\n    '7025': ['CS', '1', 'AmbientLightValueSource'],\r\n    '7026': ['CS', '1-n', 'MeasuredCharacteristics'],\r\n    '7027': ['SQ', '1', 'LuminanceUniformityResultSequence'],\r\n    '7028': ['SQ', '1', 'VisualEvaluationTestSequence'],\r\n    '7029': ['CS', '1', 'TestResult'],\r\n    '702A': ['LO', '1', 'TestResultComment'],\r\n    '702B': ['CS', '1', 'TestImageValidation'],\r\n    '702C': ['SQ', '1', 'TestPatternCodeSequence'],\r\n    '702D': ['SQ', '1', 'MeasurementPatternCodeSequence'],\r\n    '702E': ['SQ', '1', 'VisualEvaluationMethodCodeSequence'],\r\n    '7FE0': ['UR', '1', 'PixelDataProviderURL'],\r\n    '9001': ['UL', '1', 'DataPointRows'],\r\n    '9002': ['UL', '1', 'DataPointColumns'],\r\n    '9003': ['CS', '1', 'SignalDomainColumns'],\r\n    '9099': ['US', '1', 'LargestMonochromePixelValue'],\r\n    '9108': ['CS', '1', 'DataRepresentation'],\r\n    '9110': ['SQ', '1', 'PixelMeasuresSequence'],\r\n    '9132': ['SQ', '1', 'FrameVOILUTSequence'],\r\n    '9145': ['SQ', '1', 'PixelValueTransformationSequence'],\r\n    '9235': ['CS', '1', 'SignalDomainRows'],\r\n    '9411': ['FL', '1', 'DisplayFilterPercentage'],\r\n    '9415': ['SQ', '1', 'FramePixelShiftSequence'],\r\n    '9416': ['US', '1', 'SubtractionItemID'],\r\n    '9422': ['SQ', '1', 'PixelIntensityRelationshipLUTSequence'],\r\n    '9443': ['SQ', '1', 'FramePixelDataPropertiesSequence'],\r\n    '9444': ['CS', '1', 'GeometricalProperties'],\r\n    '9445': ['FL', '1', 'GeometricMaximumDistortion'],\r\n    '9446': ['CS', '1-n', 'ImageProcessingApplied'],\r\n    '9454': ['CS', '1', 'MaskSelectionMode'],\r\n    '9474': ['CS', '1', 'LUTFunction'],\r\n    '9478': ['FL', '1', 'MaskVisibilityPercentage'],\r\n    '9501': ['SQ', '1', 'PixelShiftSequence'],\r\n    '9502': ['SQ', '1', 'RegionPixelShiftSequence'],\r\n    '9503': ['SS', '2-2n', 'VerticesOfTheRegion'],\r\n    '9505': ['SQ', '1', 'MultiFramePresentationSequence'],\r\n    '9506': ['US', '2-2n', 'PixelShiftFrameRange'],\r\n    '9507': ['US', '2-2n', 'LUTFrameRange'],\r\n    '9520': ['DS', '16', 'ImageToEquipmentMappingMatrix'],\r\n    '9537': ['CS', '1', 'EquipmentCoordinateSystemIdentification']\r\n  },\r\n  '0032': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '000A': ['CS', '1', 'StudyStatusID'],\r\n    '000C': ['CS', '1', 'StudyPriorityID'],\r\n    '0012': ['LO', '1', 'StudyIDIssuer'],\r\n    '0032': ['DA', '1', 'StudyVerifiedDate'],\r\n    '0033': ['TM', '1', 'StudyVerifiedTime'],\r\n    '0034': ['DA', '1', 'StudyReadDate'],\r\n    '0035': ['TM', '1', 'StudyReadTime'],\r\n    '1000': ['DA', '1', 'ScheduledStudyStartDate'],\r\n    '1001': ['TM', '1', 'ScheduledStudyStartTime'],\r\n    '1010': ['DA', '1', 'ScheduledStudyStopDate'],\r\n    '1011': ['TM', '1', 'ScheduledStudyStopTime'],\r\n    '1020': ['LO', '1', 'ScheduledStudyLocation'],\r\n    '1021': ['AE', '1-n', 'ScheduledStudyLocationAETitle'],\r\n    '1030': ['LO', '1', 'ReasonForStudy'],\r\n    '1031': ['SQ', '1', 'RequestingPhysicianIdentificationSequence'],\r\n    '1032': ['PN', '1', 'RequestingPhysician'],\r\n    '1033': ['LO', '1', 'RequestingService'],\r\n    '1034': ['SQ', '1', 'RequestingServiceCodeSequence'],\r\n    '1040': ['DA', '1', 'StudyArrivalDate'],\r\n    '1041': ['TM', '1', 'StudyArrivalTime'],\r\n    '1050': ['DA', '1', 'StudyCompletionDate'],\r\n    '1051': ['TM', '1', 'StudyCompletionTime'],\r\n    '1055': ['CS', '1', 'StudyComponentStatusID'],\r\n    '1060': ['LO', '1', 'RequestedProcedureDescription'],\r\n    '1064': ['SQ', '1', 'RequestedProcedureCodeSequence'],\r\n    '1065': ['SQ', '1', 'RequestedLateralityCodeSequence'],\r\n    '1066': ['UT', '1', 'ReasonForVisit'],\r\n    '1067': ['SQ', '1', 'ReasonForVisitCodeSequence'],\r\n    '1070': ['LO', '1', 'RequestedContrastAgent'],\r\n    '4000': ['LT', '1', 'StudyComments']\r\n  },\r\n  '0034': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['SQ', '1', 'FlowIdentifierSequence'],\r\n    '0002': ['OB', '1', 'FlowIdentifier'],\r\n    '0003': ['UI', '1', 'FlowTransferSyntaxUID'],\r\n    '0004': ['UL', '1', 'FlowRTPSamplingRate'],\r\n    '0005': ['OB', '1', 'SourceIdentifier'],\r\n    '0007': ['OB', '1', 'FrameOriginTimestamp'],\r\n    '0008': ['CS', '1', 'IncludesImagingSubject'],\r\n    '0009': ['SQ', '1', 'FrameUsefulnessGroupSequence'],\r\n    '000A': ['SQ', '1', 'RealTimeBulkDataFlowSequence'],\r\n    '000B': ['SQ', '1', 'CameraPositionGroupSequence'],\r\n    '000C': ['CS', '1', 'IncludesInformation'],\r\n    '000D': ['SQ', '1', 'TimeOfFrameGroupSequence']\r\n  },\r\n  '0038': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0004': ['SQ', '1', 'ReferencedPatientAliasSequence'],\r\n    '0008': ['CS', '1', 'VisitStatusID'],\r\n    '0010': ['LO', '1', 'AdmissionID'],\r\n    '0011': ['LO', '1', 'IssuerOfAdmissionID'],\r\n    '0014': ['SQ', '1', 'IssuerOfAdmissionIDSequence'],\r\n    '0016': ['LO', '1', 'RouteOfAdmissions'],\r\n    '001A': ['DA', '1', 'ScheduledAdmissionDate'],\r\n    '001B': ['TM', '1', 'ScheduledAdmissionTime'],\r\n    '001C': ['DA', '1', 'ScheduledDischargeDate'],\r\n    '001D': ['TM', '1', 'ScheduledDischargeTime'],\r\n    '001E': ['LO', '1', 'ScheduledPatientInstitutionResidence'],\r\n    '0020': ['DA', '1', 'AdmittingDate'],\r\n    '0021': ['TM', '1', 'AdmittingTime'],\r\n    '0030': ['DA', '1', 'DischargeDate'],\r\n    '0032': ['TM', '1', 'DischargeTime'],\r\n    '0040': ['LO', '1', 'DischargeDiagnosisDescription'],\r\n    '0044': ['SQ', '1', 'DischargeDiagnosisCodeSequence'],\r\n    '0050': ['LO', '1', 'SpecialNeeds'],\r\n    '0060': ['LO', '1', 'ServiceEpisodeID'],\r\n    '0061': ['LO', '1', 'IssuerOfServiceEpisodeID'],\r\n    '0062': ['LO', '1', 'ServiceEpisodeDescription'],\r\n    '0064': ['SQ', '1', 'IssuerOfServiceEpisodeIDSequence'],\r\n    '0100': ['SQ', '1', 'PertinentDocumentsSequence'],\r\n    '0101': ['SQ', '1', 'PertinentResourcesSequence'],\r\n    '0102': ['LO', '1', 'ResourceDescription'],\r\n    '0300': ['LO', '1', 'CurrentPatientLocation'],\r\n    '0400': ['LO', '1', 'PatientInstitutionResidence'],\r\n    '0500': ['LO', '1', 'PatientState'],\r\n    '0502': ['SQ', '1', 'PatientClinicalTrialParticipationSequence'],\r\n    '4000': ['LT', '1', 'VisitComments']\r\n  },\r\n  '003A': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0004': ['CS', '1', 'WaveformOriginality'],\r\n    '0005': ['US', '1', 'NumberOfWaveformChannels'],\r\n    '0010': ['UL', '1', 'NumberOfWaveformSamples'],\r\n    '001A': ['DS', '1', 'SamplingFrequency'],\r\n    '0020': ['SH', '1', 'MultiplexGroupLabel'],\r\n    '0200': ['SQ', '1', 'ChannelDefinitionSequence'],\r\n    '0202': ['IS', '1', 'WaveformChannelNumber'],\r\n    '0203': ['SH', '1', 'ChannelLabel'],\r\n    '0205': ['CS', '1-n', 'ChannelStatus'],\r\n    '0208': ['SQ', '1', 'ChannelSourceSequence'],\r\n    '0209': ['SQ', '1', 'ChannelSourceModifiersSequence'],\r\n    '020A': ['SQ', '1', 'SourceWaveformSequence'],\r\n    '020C': ['LO', '1', 'ChannelDerivationDescription'],\r\n    '0210': ['DS', '1', 'ChannelSensitivity'],\r\n    '0211': ['SQ', '1', 'ChannelSensitivityUnitsSequence'],\r\n    '0212': ['DS', '1', 'ChannelSensitivityCorrectionFactor'],\r\n    '0213': ['DS', '1', 'ChannelBaseline'],\r\n    '0214': ['DS', '1', 'ChannelTimeSkew'],\r\n    '0215': ['DS', '1', 'ChannelSampleSkew'],\r\n    '0218': ['DS', '1', 'ChannelOffset'],\r\n    '021A': ['US', '1', 'WaveformBitsStored'],\r\n    '0220': ['DS', '1', 'FilterLowFrequency'],\r\n    '0221': ['DS', '1', 'FilterHighFrequency'],\r\n    '0222': ['DS', '1', 'NotchFilterFrequency'],\r\n    '0223': ['DS', '1', 'NotchFilterBandwidth'],\r\n    '0230': ['FL', '1', 'WaveformDataDisplayScale'],\r\n    '0231': ['US', '3', 'WaveformDisplayBackgroundCIELabValue'],\r\n    '0240': ['SQ', '1', 'WaveformPresentationGroupSequence'],\r\n    '0241': ['US', '1', 'PresentationGroupNumber'],\r\n    '0242': ['SQ', '1', 'ChannelDisplaySequence'],\r\n    '0244': ['US', '3', 'ChannelRecommendedDisplayCIELabValue'],\r\n    '0245': ['FL', '1', 'ChannelPosition'],\r\n    '0246': ['CS', '1', 'DisplayShadingFlag'],\r\n    '0247': ['FL', '1', 'FractionalChannelDisplayScale'],\r\n    '0248': ['FL', '1', 'AbsoluteChannelDisplayScale'],\r\n    '0300': ['SQ', '1', 'MultiplexedAudioChannelsDescriptionCodeSequence'],\r\n    '0301': ['IS', '1', 'ChannelIdentificationCode'],\r\n    '0302': ['CS', '1', 'ChannelMode'],\r\n    '0310': ['UI', '1', 'MultiplexGroupUID'],\r\n    '0311': ['DS', '1', 'PowerlineFrequency'],\r\n    '0312': ['SQ', '1', 'ChannelImpedanceSequence'],\r\n    '0313': ['DS', '1', 'ImpedanceValue'],\r\n    '0314': ['DT', '1', 'ImpedanceMeasurementDateTime'],\r\n    '0315': ['DS', '1', 'ImpedanceMeasurementFrequency'],\r\n    '0316': ['CS', '1', 'ImpedanceMeasurementCurrentType']\r\n  },\r\n  '0040': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['AE', '1-n', 'ScheduledStationAETitle'],\r\n    '0002': ['DA', '1', 'ScheduledProcedureStepStartDate'],\r\n    '0003': ['TM', '1', 'ScheduledProcedureStepStartTime'],\r\n    '0004': ['DA', '1', 'ScheduledProcedureStepEndDate'],\r\n    '0005': ['TM', '1', 'ScheduledProcedureStepEndTime'],\r\n    '0006': ['PN', '1', 'ScheduledPerformingPhysicianName'],\r\n    '0007': ['LO', '1', 'ScheduledProcedureStepDescription'],\r\n    '0008': ['SQ', '1', 'ScheduledProtocolCodeSequence'],\r\n    '0009': ['SH', '1', 'ScheduledProcedureStepID'],\r\n    '000A': ['SQ', '1', 'StageCodeSequence'],\r\n    '000B': ['SQ', '1', 'ScheduledPerformingPhysicianIdentificationSequence'],\r\n    '0010': ['SH', '1-n', 'ScheduledStationName'],\r\n    '0011': ['SH', '1', 'ScheduledProcedureStepLocation'],\r\n    '0012': ['LO', '1', 'PreMedication'],\r\n    '0020': ['CS', '1', 'ScheduledProcedureStepStatus'],\r\n    '0026': ['SQ', '1', 'OrderPlacerIdentifierSequence'],\r\n    '0027': ['SQ', '1', 'OrderFillerIdentifierSequence'],\r\n    '0031': ['UT', '1', 'LocalNamespaceEntityID'],\r\n    '0032': ['UT', '1', 'UniversalEntityID'],\r\n    '0033': ['CS', '1', 'UniversalEntityIDType'],\r\n    '0035': ['CS', '1', 'IdentifierTypeCode'],\r\n    '0036': ['SQ', '1', 'AssigningFacilitySequence'],\r\n    '0039': ['SQ', '1', 'AssigningJurisdictionCodeSequence'],\r\n    '003A': ['SQ', '1', 'AssigningAgencyOrDepartmentCodeSequence'],\r\n    '0100': ['SQ', '1', 'ScheduledProcedureStepSequence'],\r\n    '0220': ['SQ', '1', 'ReferencedNonImageCompositeSOPInstanceSequence'],\r\n    '0241': ['AE', '1', 'PerformedStationAETitle'],\r\n    '0242': ['SH', '1', 'PerformedStationName'],\r\n    '0243': ['SH', '1', 'PerformedLocation'],\r\n    '0244': ['DA', '1', 'PerformedProcedureStepStartDate'],\r\n    '0245': ['TM', '1', 'PerformedProcedureStepStartTime'],\r\n    '0250': ['DA', '1', 'PerformedProcedureStepEndDate'],\r\n    '0251': ['TM', '1', 'PerformedProcedureStepEndTime'],\r\n    '0252': ['CS', '1', 'PerformedProcedureStepStatus'],\r\n    '0253': ['SH', '1', 'PerformedProcedureStepID'],\r\n    '0254': ['LO', '1', 'PerformedProcedureStepDescription'],\r\n    '0255': ['LO', '1', 'PerformedProcedureTypeDescription'],\r\n    '0260': ['SQ', '1', 'PerformedProtocolCodeSequence'],\r\n    '0261': ['CS', '1', 'PerformedProtocolType'],\r\n    '0270': ['SQ', '1', 'ScheduledStepAttributesSequence'],\r\n    '0275': ['SQ', '1', 'RequestAttributesSequence'],\r\n    '0280': ['ST', '1', 'CommentsOnThePerformedProcedureStep'],\r\n    '0281': ['SQ', '1', 'PerformedProcedureStepDiscontinuationReasonCodeSequence'],\r\n    '0293': ['SQ', '1', 'QuantitySequence'],\r\n    '0294': ['DS', '1', 'Quantity'],\r\n    '0295': ['SQ', '1', 'MeasuringUnitsSequence'],\r\n    '0296': ['SQ', '1', 'BillingItemSequence'],\r\n    '0300': ['US', '1', 'TotalTimeOfFluoroscopy'],\r\n    '0301': ['US', '1', 'TotalNumberOfExposures'],\r\n    '0302': ['US', '1', 'EntranceDose'],\r\n    '0303': ['US', '1-2', 'ExposedArea'],\r\n    '0306': ['DS', '1', 'DistanceSourceToEntrance'],\r\n    '0307': ['DS', '1', 'DistanceSourceToSupport'],\r\n    '030E': ['SQ', '1', 'ExposureDoseSequence'],\r\n    '0310': ['ST', '1', 'CommentsOnRadiationDose'],\r\n    '0312': ['DS', '1', 'XRayOutput'],\r\n    '0314': ['DS', '1', 'HalfValueLayer'],\r\n    '0316': ['DS', '1', 'OrganDose'],\r\n    '0318': ['CS', '1', 'OrganExposed'],\r\n    '0320': ['SQ', '1', 'BillingProcedureStepSequence'],\r\n    '0321': ['SQ', '1', 'FilmConsumptionSequence'],\r\n    '0324': ['SQ', '1', 'BillingSuppliesAndDevicesSequence'],\r\n    '0330': ['SQ', '1', 'ReferencedProcedureStepSequence'],\r\n    '0340': ['SQ', '1', 'PerformedSeriesSequence'],\r\n    '0400': ['LT', '1', 'CommentsOnTheScheduledProcedureStep'],\r\n    '0440': ['SQ', '1', 'ProtocolContextSequence'],\r\n    '0441': ['SQ', '1', 'ContentItemModifierSequence'],\r\n    '0500': ['SQ', '1', 'ScheduledSpecimenSequence'],\r\n    '050A': ['LO', '1', 'SpecimenAccessionNumber'],\r\n    '0512': ['LO', '1', 'ContainerIdentifier'],\r\n    '0513': ['SQ', '1', 'IssuerOfTheContainerIdentifierSequence'],\r\n    '0515': ['SQ', '1', 'AlternateContainerIdentifierSequence'],\r\n    '0518': ['SQ', '1', 'ContainerTypeCodeSequence'],\r\n    '051A': ['LO', '1', 'ContainerDescription'],\r\n    '0520': ['SQ', '1', 'ContainerComponentSequence'],\r\n    '0550': ['SQ', '1', 'SpecimenSequence'],\r\n    '0551': ['LO', '1', 'SpecimenIdentifier'],\r\n    '0552': ['SQ', '1', 'SpecimenDescriptionSequenceTrial'],\r\n    '0553': ['ST', '1', 'SpecimenDescriptionTrial'],\r\n    '0554': ['UI', '1', 'SpecimenUID'],\r\n    '0555': ['SQ', '1', 'AcquisitionContextSequence'],\r\n    '0556': ['ST', '1', 'AcquisitionContextDescription'],\r\n    '0560': ['SQ', '1', 'SpecimenDescriptionSequence'],\r\n    '0562': ['SQ', '1', 'IssuerOfTheSpecimenIdentifierSequence'],\r\n    '059A': ['SQ', '1', 'SpecimenTypeCodeSequence'],\r\n    '0600': ['LO', '1', 'SpecimenShortDescription'],\r\n    '0602': ['UT', '1', 'SpecimenDetailedDescription'],\r\n    '0610': ['SQ', '1', 'SpecimenPreparationSequence'],\r\n    '0612': ['SQ', '1', 'SpecimenPreparationStepContentItemSequence'],\r\n    '0620': ['SQ', '1', 'SpecimenLocalizationContentItemSequence'],\r\n    '06FA': ['LO', '1', 'SlideIdentifier'],\r\n    '0710': ['SQ', '1', 'WholeSlideMicroscopyImageFrameTypeSequence'],\r\n    '071A': ['SQ', '1', 'ImageCenterPointCoordinatesSequence'],\r\n    '072A': ['DS', '1', 'XOffsetInSlideCoordinateSystem'],\r\n    '073A': ['DS', '1', 'YOffsetInSlideCoordinateSystem'],\r\n    '074A': ['DS', '1', 'ZOffsetInSlideCoordinateSystem'],\r\n    '08D8': ['SQ', '1', 'PixelSpacingSequence'],\r\n    '08DA': ['SQ', '1', 'CoordinateSystemAxisCodeSequence'],\r\n    '08EA': ['SQ', '1', 'MeasurementUnitsCodeSequence'],\r\n    '09F8': ['SQ', '1', 'VitalStainCodeSequenceTrial'],\r\n    '1001': ['SH', '1', 'RequestedProcedureID'],\r\n    '1002': ['LO', '1', 'ReasonForTheRequestedProcedure'],\r\n    '1003': ['SH', '1', 'RequestedProcedurePriority'],\r\n    '1004': ['LO', '1', 'PatientTransportArrangements'],\r\n    '1005': ['LO', '1', 'RequestedProcedureLocation'],\r\n    '1006': ['SH', '1', 'PlacerOrderNumberProcedure'],\r\n    '1007': ['SH', '1', 'FillerOrderNumberProcedure'],\r\n    '1008': ['LO', '1', 'ConfidentialityCode'],\r\n    '1009': ['SH', '1', 'ReportingPriority'],\r\n    '100A': ['SQ', '1', 'ReasonForRequestedProcedureCodeSequence'],\r\n    '1010': ['PN', '1-n', 'NamesOfIntendedRecipientsOfResults'],\r\n    '1011': ['SQ', '1', 'IntendedRecipientsOfResultsIdentificationSequence'],\r\n    '1012': ['SQ', '1', 'ReasonForPerformedProcedureCodeSequence'],\r\n    '1060': ['LO', '1', 'RequestedProcedureDescriptionTrial'],\r\n    '1101': ['SQ', '1', 'PersonIdentificationCodeSequence'],\r\n    '1102': ['ST', '1', 'PersonAddress'],\r\n    '1103': ['LO', '1-n', 'PersonTelephoneNumbers'],\r\n    '1104': ['LT', '1', 'PersonTelecomInformation'],\r\n    '1400': ['LT', '1', 'RequestedProcedureComments'],\r\n    '2001': ['LO', '1', 'ReasonForTheImagingServiceRequest'],\r\n    '2004': ['DA', '1', 'IssueDateOfImagingServiceRequest'],\r\n    '2005': ['TM', '1', 'IssueTimeOfImagingServiceRequest'],\r\n    '2006': ['SH', '1', 'PlacerOrderNumberImagingServiceRequestRetired'],\r\n    '2007': ['SH', '1', 'FillerOrderNumberImagingServiceRequestRetired'],\r\n    '2008': ['PN', '1', 'OrderEnteredBy'],\r\n    '2009': ['SH', '1', 'OrderEntererLocation'],\r\n    '2010': ['SH', '1', 'OrderCallbackPhoneNumber'],\r\n    '2011': ['LT', '1', 'OrderCallbackTelecomInformation'],\r\n    '2016': ['LO', '1', 'PlacerOrderNumberImagingServiceRequest'],\r\n    '2017': ['LO', '1', 'FillerOrderNumberImagingServiceRequest'],\r\n    '2400': ['LT', '1', 'ImagingServiceRequestComments'],\r\n    '3001': ['LO', '1', 'ConfidentialityConstraintOnPatientDataDescription'],\r\n    '4001': ['CS', '1', 'GeneralPurposeScheduledProcedureStepStatus'],\r\n    '4002': ['CS', '1', 'GeneralPurposePerformedProcedureStepStatus'],\r\n    '4003': ['CS', '1', 'GeneralPurposeScheduledProcedureStepPriority'],\r\n    '4004': ['SQ', '1', 'ScheduledProcessingApplicationsCodeSequence'],\r\n    '4005': ['DT', '1', 'ScheduledProcedureStepStartDateTime'],\r\n    '4006': ['CS', '1', 'MultipleCopiesFlag'],\r\n    '4007': ['SQ', '1', 'PerformedProcessingApplicationsCodeSequence'],\r\n    '4008': ['DT', '1', 'ScheduledProcedureStepExpirationDateTime'],\r\n    '4009': ['SQ', '1', 'HumanPerformerCodeSequence'],\r\n    '4010': ['DT', '1', 'ScheduledProcedureStepModificationDateTime'],\r\n    '4011': ['DT', '1', 'ExpectedCompletionDateTime'],\r\n    '4015': ['SQ', '1', 'ResultingGeneralPurposePerformedProcedureStepsSequence'],\r\n    '4016': ['SQ', '1', 'ReferencedGeneralPurposeScheduledProcedureStepSequence'],\r\n    '4018': ['SQ', '1', 'ScheduledWorkitemCodeSequence'],\r\n    '4019': ['SQ', '1', 'PerformedWorkitemCodeSequence'],\r\n    '4020': ['CS', '1', 'InputAvailabilityFlag'],\r\n    '4021': ['SQ', '1', 'InputInformationSequence'],\r\n    '4022': ['SQ', '1', 'RelevantInformationSequence'],\r\n    '4023': ['UI', '1', 'ReferencedGeneralPurposeScheduledProcedureStepTransactionUID'],\r\n    '4025': ['SQ', '1', 'ScheduledStationNameCodeSequence'],\r\n    '4026': ['SQ', '1', 'ScheduledStationClassCodeSequence'],\r\n    '4027': ['SQ', '1', 'ScheduledStationGeographicLocationCodeSequence'],\r\n    '4028': ['SQ', '1', 'PerformedStationNameCodeSequence'],\r\n    '4029': ['SQ', '1', 'PerformedStationClassCodeSequence'],\r\n    '4030': ['SQ', '1', 'PerformedStationGeographicLocationCodeSequence'],\r\n    '4031': ['SQ', '1', 'RequestedSubsequentWorkitemCodeSequence'],\r\n    '4032': ['SQ', '1', 'NonDICOMOutputCodeSequence'],\r\n    '4033': ['SQ', '1', 'OutputInformationSequence'],\r\n    '4034': ['SQ', '1', 'ScheduledHumanPerformersSequence'],\r\n    '4035': ['SQ', '1', 'ActualHumanPerformersSequence'],\r\n    '4036': ['LO', '1', 'HumanPerformerOrganization'],\r\n    '4037': ['PN', '1', 'HumanPerformerName'],\r\n    '4040': ['CS', '1', 'RawDataHandling'],\r\n    '4041': ['CS', '1', 'InputReadinessState'],\r\n    '4050': ['DT', '1', 'PerformedProcedureStepStartDateTime'],\r\n    '4051': ['DT', '1', 'PerformedProcedureStepEndDateTime'],\r\n    '4052': ['DT', '1', 'ProcedureStepCancellationDateTime'],\r\n    '4070': ['SQ', '1', 'OutputDestinationSequence'],\r\n    '4071': ['SQ', '1', 'DICOMStorageSequence'],\r\n    '4072': ['SQ', '1', 'STOWRSStorageSequence'],\r\n    '4073': ['UR', '1', 'StorageURL'],\r\n    '4074': ['SQ', '1', 'XDSStorageSequence'],\r\n    '8302': ['DS', '1', 'EntranceDoseInmGy'],\r\n    '8303': ['CS', '1', 'EntranceDoseDerivation'],\r\n    '9092': ['SQ', '1', 'ParametricMapFrameTypeSequence'],\r\n    '9094': ['SQ', '1', 'ReferencedImageRealWorldValueMappingSequence'],\r\n    '9096': ['SQ', '1', 'RealWorldValueMappingSequence'],\r\n    '9098': ['SQ', '1', 'PixelValueMappingCodeSequence'],\r\n    '9210': ['SH', '1', 'LUTLabel'],\r\n    '9211': ['xs', '1', 'RealWorldValueLastValueMapped'],\r\n    '9212': ['FD', '1-n', 'RealWorldValueLUTData'],\r\n    '9213': ['FD', '1', 'DoubleFloatRealWorldValueLastValueMapped'],\r\n    '9214': ['FD', '1', 'DoubleFloatRealWorldValueFirstValueMapped'],\r\n    '9216': ['xs', '1', 'RealWorldValueFirstValueMapped'],\r\n    '9220': ['SQ', '1', 'QuantityDefinitionSequence'],\r\n    '9224': ['FD', '1', 'RealWorldValueIntercept'],\r\n    '9225': ['FD', '1', 'RealWorldValueSlope'],\r\n    'A007': ['CS', '1', 'FindingsFlagTrial'],\r\n    'A010': ['CS', '1', 'RelationshipType'],\r\n    'A020': ['SQ', '1', 'FindingsSequenceTrial'],\r\n    'A021': ['UI', '1', 'FindingsGroupUIDTrial'],\r\n    'A022': ['UI', '1', 'ReferencedFindingsGroupUIDTrial'],\r\n    'A023': ['DA', '1', 'FindingsGroupRecordingDateTrial'],\r\n    'A024': ['TM', '1', 'FindingsGroupRecordingTimeTrial'],\r\n    'A026': ['SQ', '1', 'FindingsSourceCategoryCodeSequenceTrial'],\r\n    'A027': ['LO', '1', 'VerifyingOrganization'],\r\n    'A028': ['SQ', '1', 'DocumentingOrganizationIdentifierCodeSequenceTrial'],\r\n    'A030': ['DT', '1', 'VerificationDateTime'],\r\n    'A032': ['DT', '1', 'ObservationDateTime'],\r\n    'A033': ['DT', '1', 'ObservationStartDateTime'],\r\n    'A040': ['CS', '1', 'ValueType'],\r\n    'A043': ['SQ', '1', 'ConceptNameCodeSequence'],\r\n    'A047': ['LO', '1', 'MeasurementPrecisionDescriptionTrial'],\r\n    'A050': ['CS', '1', 'ContinuityOfContent'],\r\n    'A057': ['CS', '1-n', 'UrgencyOrPriorityAlertsTrial'],\r\n    'A060': ['LO', '1', 'SequencingIndicatorTrial'],\r\n    'A066': ['SQ', '1', 'DocumentIdentifierCodeSequenceTrial'],\r\n    'A067': ['PN', '1', 'DocumentAuthorTrial'],\r\n    'A068': ['SQ', '1', 'DocumentAuthorIdentifierCodeSequenceTrial'],\r\n    'A070': ['SQ', '1', 'IdentifierCodeSequenceTrial'],\r\n    'A073': ['SQ', '1', 'VerifyingObserverSequence'],\r\n    'A074': ['OB', '1', 'ObjectBinaryIdentifierTrial'],\r\n    'A075': ['PN', '1', 'VerifyingObserverName'],\r\n    'A076': ['SQ', '1', 'DocumentingObserverIdentifierCodeSequenceTrial'],\r\n    'A078': ['SQ', '1', 'AuthorObserverSequence'],\r\n    'A07A': ['SQ', '1', 'ParticipantSequence'],\r\n    'A07C': ['SQ', '1', 'CustodialOrganizationSequence'],\r\n    'A080': ['CS', '1', 'ParticipationType'],\r\n    'A082': ['DT', '1', 'ParticipationDateTime'],\r\n    'A084': ['CS', '1', 'ObserverType'],\r\n    'A085': ['SQ', '1', 'ProcedureIdentifierCodeSequenceTrial'],\r\n    'A088': ['SQ', '1', 'VerifyingObserverIdentificationCodeSequence'],\r\n    'A089': ['OB', '1', 'ObjectDirectoryBinaryIdentifierTrial'],\r\n    'A090': ['SQ', '1', 'EquivalentCDADocumentSequence'],\r\n    'A0B0': ['US', '2-2n', 'ReferencedWaveformChannels'],\r\n    'A110': ['DA', '1', 'DateOfDocumentOrVerbalTransactionTrial'],\r\n    'A112': ['TM', '1', 'TimeOfDocumentCreationOrVerbalTransactionTrial'],\r\n    'A120': ['DT', '1', 'DateTime'],\r\n    'A121': ['DA', '1', 'Date'],\r\n    'A122': ['TM', '1', 'Time'],\r\n    'A123': ['PN', '1', 'PersonName'],\r\n    'A124': ['UI', '1', 'UID'],\r\n    'A125': ['CS', '2', 'ReportStatusIDTrial'],\r\n    'A130': ['CS', '1', 'TemporalRangeType'],\r\n    'A132': ['UL', '1-n', 'ReferencedSamplePositions'],\r\n    'A136': ['US', '1-n', 'ReferencedFrameNumbers'],\r\n    'A138': ['DS', '1-n', 'ReferencedTimeOffsets'],\r\n    'A13A': ['DT', '1-n', 'ReferencedDateTime'],\r\n    'A160': ['UT', '1', 'TextValue'],\r\n    'A161': ['FD', '1-n', 'FloatingPointValue'],\r\n    'A162': ['SL', '1-n', 'RationalNumeratorValue'],\r\n    'A163': ['UL', '1-n', 'RationalDenominatorValue'],\r\n    'A167': ['SQ', '1', 'ObservationCategoryCodeSequenceTrial'],\r\n    'A168': ['SQ', '1', 'ConceptCodeSequence'],\r\n    'A16A': ['ST', '1', 'BibliographicCitationTrial'],\r\n    'A170': ['SQ', '1', 'PurposeOfReferenceCodeSequence'],\r\n    'A171': ['UI', '1', 'ObservationUID'],\r\n    'A172': ['UI', '1', 'ReferencedObservationUIDTrial'],\r\n    'A173': ['CS', '1', 'ReferencedObservationClassTrial'],\r\n    'A174': ['CS', '1', 'ReferencedObjectObservationClassTrial'],\r\n    'A180': ['US', '1', 'AnnotationGroupNumber'],\r\n    'A192': ['DA', '1', 'ObservationDateTrial'],\r\n    'A193': ['TM', '1', 'ObservationTimeTrial'],\r\n    'A194': ['CS', '1', 'MeasurementAutomationTrial'],\r\n    'A195': ['SQ', '1', 'ModifierCodeSequence'],\r\n    'A224': ['ST', '1', 'IdentificationDescriptionTrial'],\r\n    'A290': ['CS', '1', 'CoordinatesSetGeometricTypeTrial'],\r\n    'A296': ['SQ', '1', 'AlgorithmCodeSequenceTrial'],\r\n    'A297': ['ST', '1', 'AlgorithmDescriptionTrial'],\r\n    'A29A': ['SL', '2-2n', 'PixelCoordinatesSetTrial'],\r\n    'A300': ['SQ', '1', 'MeasuredValueSequence'],\r\n    'A301': ['SQ', '1', 'NumericValueQualifierCodeSequence'],\r\n    'A307': ['PN', '1', 'CurrentObserverTrial'],\r\n    'A30A': ['DS', '1-n', 'NumericValue'],\r\n    'A313': ['SQ', '1', 'ReferencedAccessionSequenceTrial'],\r\n    'A33A': ['ST', '1', 'ReportStatusCommentTrial'],\r\n    'A340': ['SQ', '1', 'ProcedureContextSequenceTrial'],\r\n    'A352': ['PN', '1', 'VerbalSourceTrial'],\r\n    'A353': ['ST', '1', 'AddressTrial'],\r\n    'A354': ['LO', '1', 'TelephoneNumberTrial'],\r\n    'A358': ['SQ', '1', 'VerbalSourceIdentifierCodeSequenceTrial'],\r\n    'A360': ['SQ', '1', 'PredecessorDocumentsSequence'],\r\n    'A370': ['SQ', '1', 'ReferencedRequestSequence'],\r\n    'A372': ['SQ', '1', 'PerformedProcedureCodeSequence'],\r\n    'A375': ['SQ', '1', 'CurrentRequestedProcedureEvidenceSequence'],\r\n    'A380': ['SQ', '1', 'ReportDetailSequenceTrial'],\r\n    'A385': ['SQ', '1', 'PertinentOtherEvidenceSequence'],\r\n    'A390': ['SQ', '1', 'HL7StructuredDocumentReferenceSequence'],\r\n    'A402': ['UI', '1', 'ObservationSubjectUIDTrial'],\r\n    'A403': ['CS', '1', 'ObservationSubjectClassTrial'],\r\n    'A404': ['SQ', '1', 'ObservationSubjectTypeCodeSequenceTrial'],\r\n    'A491': ['CS', '1', 'CompletionFlag'],\r\n    'A492': ['LO', '1', 'CompletionFlagDescription'],\r\n    'A493': ['CS', '1', 'VerificationFlag'],\r\n    'A494': ['CS', '1', 'ArchiveRequested'],\r\n    'A496': ['CS', '1', 'PreliminaryFlag'],\r\n    'A504': ['SQ', '1', 'ContentTemplateSequence'],\r\n    'A525': ['SQ', '1', 'IdenticalDocumentsSequence'],\r\n    'A600': ['CS', '1', 'ObservationSubjectContextFlagTrial'],\r\n    'A601': ['CS', '1', 'ObserverContextFlagTrial'],\r\n    'A603': ['CS', '1', 'ProcedureContextFlagTrial'],\r\n    'A730': ['SQ', '1', 'ContentSequence'],\r\n    'A731': ['SQ', '1', 'RelationshipSequenceTrial'],\r\n    'A732': ['SQ', '1', 'RelationshipTypeCodeSequenceTrial'],\r\n    'A744': ['SQ', '1', 'LanguageCodeSequenceTrial'],\r\n    'A801': ['SQ', '1', 'TabulatedValuesSequence'],\r\n    'A802': ['UL', '1', 'NumberOfTableRows'],\r\n    'A803': ['UL', '1', 'NumberOfTableColumns'],\r\n    'A804': ['UL', '1', 'TableRowNumber'],\r\n    'A805': ['UL', '1', 'TableColumnNumber'],\r\n    'A806': ['SQ', '1', 'TableRowDefinitionSequence'],\r\n    'A807': ['SQ', '1', 'TableColumnDefinitionSequence'],\r\n    'A808': ['SQ', '1', 'CellValuesSequence'],\r\n    'A992': ['ST', '1', 'UniformResourceLocatorTrial'],\r\n    'B020': ['SQ', '1', 'WaveformAnnotationSequence'],\r\n    'DB00': ['CS', '1', 'TemplateIdentifier'],\r\n    'DB06': ['DT', '1', 'TemplateVersion'],\r\n    'DB07': ['DT', '1', 'TemplateLocalVersion'],\r\n    'DB0B': ['CS', '1', 'TemplateExtensionFlag'],\r\n    'DB0C': ['UI', '1', 'TemplateExtensionOrganizationUID'],\r\n    'DB0D': ['UI', '1', 'TemplateExtensionCreatorUID'],\r\n    'DB73': ['UL', '1-n', 'ReferencedContentItemIdentifier'],\r\n    'E001': ['ST', '1', 'HL7InstanceIdentifier'],\r\n    'E004': ['DT', '1', 'HL7DocumentEffectiveTime'],\r\n    'E006': ['SQ', '1', 'HL7DocumentTypeCodeSequence'],\r\n    'E008': ['SQ', '1', 'DocumentClassCodeSequence'],\r\n    'E010': ['UR', '1', 'RetrieveURI'],\r\n    'E011': ['UI', '1', 'RetrieveLocationUID'],\r\n    'E020': ['CS', '1', 'TypeOfInstances'],\r\n    'E021': ['SQ', '1', 'DICOMRetrievalSequence'],\r\n    'E022': ['SQ', '1', 'DICOMMediaRetrievalSequence'],\r\n    'E023': ['SQ', '1', 'WADORetrievalSequence'],\r\n    'E024': ['SQ', '1', 'XDSRetrievalSequence'],\r\n    'E025': ['SQ', '1', 'WADORSRetrievalSequence'],\r\n    'E030': ['UI', '1', 'RepositoryUniqueID'],\r\n    'E031': ['UI', '1', 'HomeCommunityID']\r\n  },\r\n  '0042': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['ST', '1', 'DocumentTitle'],\r\n    '0011': ['OB', '1', 'EncapsulatedDocument'],\r\n    '0012': ['LO', '1', 'MIMETypeOfEncapsulatedDocument'],\r\n    '0013': ['SQ', '1', 'SourceInstanceSequence'],\r\n    '0014': ['LO', '1-n', 'ListOfMIMETypes'],\r\n    '0015': ['UL', '1', 'EncapsulatedDocumentLength']\r\n  },\r\n  '0044': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['ST', '1', 'ProductPackageIdentifier'],\r\n    '0002': ['CS', '1', 'SubstanceAdministrationApproval'],\r\n    '0003': ['LT', '1', 'ApprovalStatusFurtherDescription'],\r\n    '0004': ['DT', '1', 'ApprovalStatusDateTime'],\r\n    '0007': ['SQ', '1', 'ProductTypeCodeSequence'],\r\n    '0008': ['LO', '1-n', 'ProductName'],\r\n    '0009': ['LT', '1', 'ProductDescription'],\r\n    '000A': ['LO', '1', 'ProductLotIdentifier'],\r\n    '000B': ['DT', '1', 'ProductExpirationDateTime'],\r\n    '0010': ['DT', '1', 'SubstanceAdministrationDateTime'],\r\n    '0011': ['LO', '1', 'SubstanceAdministrationNotes'],\r\n    '0012': ['LO', '1', 'SubstanceAdministrationDeviceID'],\r\n    '0013': ['SQ', '1', 'ProductParameterSequence'],\r\n    '0019': ['SQ', '1', 'SubstanceAdministrationParameterSequence'],\r\n    '0100': ['SQ', '1', 'ApprovalSequence'],\r\n    '0101': ['SQ', '1', 'AssertionCodeSequence'],\r\n    '0102': ['UI', '1', 'AssertionUID'],\r\n    '0103': ['SQ', '1', 'AsserterIdentificationSequence'],\r\n    '0104': ['DT', '1', 'AssertionDateTime'],\r\n    '0105': ['DT', '1', 'AssertionExpirationDateTime'],\r\n    '0106': ['UT', '1', 'AssertionComments'],\r\n    '0107': ['SQ', '1', 'RelatedAssertionSequence'],\r\n    '0108': ['UI', '1', 'ReferencedAssertionUID'],\r\n    '0109': ['SQ', '1', 'ApprovalSubjectSequence'],\r\n    '010A': ['SQ', '1', 'OrganizationalRoleCodeSequence']\r\n  },\r\n  '0046': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0012': ['LO', '1', 'LensDescription'],\r\n    '0014': ['SQ', '1', 'RightLensSequence'],\r\n    '0015': ['SQ', '1', 'LeftLensSequence'],\r\n    '0016': ['SQ', '1', 'UnspecifiedLateralityLensSequence'],\r\n    '0018': ['SQ', '1', 'CylinderSequence'],\r\n    '0028': ['SQ', '1', 'PrismSequence'],\r\n    '0030': ['FD', '1', 'HorizontalPrismPower'],\r\n    '0032': ['CS', '1', 'HorizontalPrismBase'],\r\n    '0034': ['FD', '1', 'VerticalPrismPower'],\r\n    '0036': ['CS', '1', 'VerticalPrismBase'],\r\n    '0038': ['CS', '1', 'LensSegmentType'],\r\n    '0040': ['FD', '1', 'OpticalTransmittance'],\r\n    '0042': ['FD', '1', 'ChannelWidth'],\r\n    '0044': ['FD', '1', 'PupilSize'],\r\n    '0046': ['FD', '1', 'CornealSize'],\r\n    '0047': ['SQ', '1', 'CornealSizeSequence'],\r\n    '0050': ['SQ', '1', 'AutorefractionRightEyeSequence'],\r\n    '0052': ['SQ', '1', 'AutorefractionLeftEyeSequence'],\r\n    '0060': ['FD', '1', 'DistancePupillaryDistance'],\r\n    '0062': ['FD', '1', 'NearPupillaryDistance'],\r\n    '0063': ['FD', '1', 'IntermediatePupillaryDistance'],\r\n    '0064': ['FD', '1', 'OtherPupillaryDistance'],\r\n    '0070': ['SQ', '1', 'KeratometryRightEyeSequence'],\r\n    '0071': ['SQ', '1', 'KeratometryLeftEyeSequence'],\r\n    '0074': ['SQ', '1', 'SteepKeratometricAxisSequence'],\r\n    '0075': ['FD', '1', 'RadiusOfCurvature'],\r\n    '0076': ['FD', '1', 'KeratometricPower'],\r\n    '0077': ['FD', '1', 'KeratometricAxis'],\r\n    '0080': ['SQ', '1', 'FlatKeratometricAxisSequence'],\r\n    '0092': ['CS', '1', 'BackgroundColor'],\r\n    '0094': ['CS', '1', 'Optotype'],\r\n    '0095': ['CS', '1', 'OptotypePresentation'],\r\n    '0097': ['SQ', '1', 'SubjectiveRefractionRightEyeSequence'],\r\n    '0098': ['SQ', '1', 'SubjectiveRefractionLeftEyeSequence'],\r\n    '0100': ['SQ', '1', 'AddNearSequence'],\r\n    '0101': ['SQ', '1', 'AddIntermediateSequence'],\r\n    '0102': ['SQ', '1', 'AddOtherSequence'],\r\n    '0104': ['FD', '1', 'AddPower'],\r\n    '0106': ['FD', '1', 'ViewingDistance'],\r\n    '0110': ['SQ', '1', 'CorneaMeasurementsSequence'],\r\n    '0111': ['SQ', '1', 'SourceOfCorneaMeasurementDataCodeSequence'],\r\n    '0112': ['SQ', '1', 'SteepCornealAxisSequence'],\r\n    '0113': ['SQ', '1', 'FlatCornealAxisSequence'],\r\n    '0114': ['FD', '1', 'CornealPower'],\r\n    '0115': ['FD', '1', 'CornealAxis'],\r\n    '0116': ['SQ', '1', 'CorneaMeasurementMethodCodeSequence'],\r\n    '0117': ['FL', '1', 'RefractiveIndexOfCornea'],\r\n    '0118': ['FL', '1', 'RefractiveIndexOfAqueousHumor'],\r\n    '0121': ['SQ', '1', 'VisualAcuityTypeCodeSequence'],\r\n    '0122': ['SQ', '1', 'VisualAcuityRightEyeSequence'],\r\n    '0123': ['SQ', '1', 'VisualAcuityLeftEyeSequence'],\r\n    '0124': ['SQ', '1', 'VisualAcuityBothEyesOpenSequence'],\r\n    '0125': ['CS', '1', 'ViewingDistanceType'],\r\n    '0135': ['SS', '2', 'VisualAcuityModifiers'],\r\n    '0137': ['FD', '1', 'DecimalVisualAcuity'],\r\n    '0139': ['LO', '1', 'OptotypeDetailedDefinition'],\r\n    '0145': ['SQ', '1', 'ReferencedRefractiveMeasurementsSequence'],\r\n    '0146': ['FD', '1', 'SpherePower'],\r\n    '0147': ['FD', '1', 'CylinderPower'],\r\n    '0201': ['CS', '1', 'CornealTopographySurface'],\r\n    '0202': ['FL', '2', 'CornealVertexLocation'],\r\n    '0203': ['FL', '1', 'PupilCentroidXCoordinate'],\r\n    '0204': ['FL', '1', 'PupilCentroidYCoordinate'],\r\n    '0205': ['FL', '1', 'EquivalentPupilRadius'],\r\n    '0207': ['SQ', '1', 'CornealTopographyMapTypeCodeSequence'],\r\n    '0208': ['IS', '2-2n', 'VerticesOfTheOutlineOfPupil'],\r\n    '0210': ['SQ', '1', 'CornealTopographyMappingNormalsSequence'],\r\n    '0211': ['SQ', '1', 'MaximumCornealCurvatureSequence'],\r\n    '0212': ['FL', '1', 'MaximumCornealCurvature'],\r\n    '0213': ['FL', '2', 'MaximumCornealCurvatureLocation'],\r\n    '0215': ['SQ', '1', 'MinimumKeratometricSequence'],\r\n    '0218': ['SQ', '1', 'SimulatedKeratometricCylinderSequence'],\r\n    '0220': ['FL', '1', 'AverageCornealPower'],\r\n    '0224': ['FL', '1', 'CornealISValue'],\r\n    '0227': ['FL', '1', 'AnalyzedArea'],\r\n    '0230': ['FL', '1', 'SurfaceRegularityIndex'],\r\n    '0232': ['FL', '1', 'SurfaceAsymmetryIndex'],\r\n    '0234': ['FL', '1', 'CornealEccentricityIndex'],\r\n    '0236': ['FL', '1', 'KeratoconusPredictionIndex'],\r\n    '0238': ['FL', '1', 'DecimalPotentialVisualAcuity'],\r\n    '0242': ['CS', '1', 'CornealTopographyMapQualityEvaluation'],\r\n    '0244': ['SQ', '1', 'SourceImageCornealProcessedDataSequence'],\r\n    '0247': ['FL', '3', 'CornealPointLocation'],\r\n    '0248': ['CS', '1', 'CornealPointEstimated'],\r\n    '0249': ['FL', '1', 'AxialPower'],\r\n    '0250': ['FL', '1', 'TangentialPower'],\r\n    '0251': ['FL', '1', 'RefractivePower'],\r\n    '0252': ['FL', '1', 'RelativeElevation'],\r\n    '0253': ['FL', '1', 'CornealWavefront']\r\n  },\r\n  '0048': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['FL', '1', 'ImagedVolumeWidth'],\r\n    '0002': ['FL', '1', 'ImagedVolumeHeight'],\r\n    '0003': ['FL', '1', 'ImagedVolumeDepth'],\r\n    '0006': ['UL', '1', 'TotalPixelMatrixColumns'],\r\n    '0007': ['UL', '1', 'TotalPixelMatrixRows'],\r\n    '0008': ['SQ', '1', 'TotalPixelMatrixOriginSequence'],\r\n    '0010': ['CS', '1', 'SpecimenLabelInImage'],\r\n    '0011': ['CS', '1', 'FocusMethod'],\r\n    '0012': ['CS', '1', 'ExtendedDepthOfField'],\r\n    '0013': ['US', '1', 'NumberOfFocalPlanes'],\r\n    '0014': ['FL', '1', 'DistanceBetweenFocalPlanes'],\r\n    '0015': ['US', '3', 'RecommendedAbsentPixelCIELabValue'],\r\n    '0100': ['SQ', '1', 'IlluminatorTypeCodeSequence'],\r\n    '0102': ['DS', '6', 'ImageOrientationSlide'],\r\n    '0105': ['SQ', '1', 'OpticalPathSequence'],\r\n    '0106': ['SH', '1', 'OpticalPathIdentifier'],\r\n    '0107': ['ST', '1', 'OpticalPathDescription'],\r\n    '0108': ['SQ', '1', 'IlluminationColorCodeSequence'],\r\n    '0110': ['SQ', '1', 'SpecimenReferenceSequence'],\r\n    '0111': ['DS', '1', 'CondenserLensPower'],\r\n    '0112': ['DS', '1', 'ObjectiveLensPower'],\r\n    '0113': ['DS', '1', 'ObjectiveLensNumericalAperture'],\r\n    '0120': ['SQ', '1', 'PaletteColorLookupTableSequence'],\r\n    '0200': ['SQ', '1', 'ReferencedImageNavigationSequence'],\r\n    '0201': ['US', '2', 'TopLeftHandCornerOfLocalizerArea'],\r\n    '0202': ['US', '2', 'BottomRightHandCornerOfLocalizerArea'],\r\n    '0207': ['SQ', '1', 'OpticalPathIdentificationSequence'],\r\n    '021A': ['SQ', '1', 'PlanePositionSlideSequence'],\r\n    '021E': ['SL', '1', 'ColumnPositionInTotalImagePixelMatrix'],\r\n    '021F': ['SL', '1', 'RowPositionInTotalImagePixelMatrix'],\r\n    '0301': ['CS', '1', 'PixelOriginInterpretation'],\r\n    '0302': ['UL', '1', 'NumberOfOpticalPaths'],\r\n    '0303': ['UL', '1', 'TotalPixelMatrixFocalPlanes']\r\n  },\r\n  '0050': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0004': ['CS', '1', 'CalibrationImage'],\r\n    '0010': ['SQ', '1', 'DeviceSequence'],\r\n    '0012': ['SQ', '1', 'ContainerComponentTypeCodeSequence'],\r\n    '0013': ['FD', '1', 'ContainerComponentThickness'],\r\n    '0014': ['DS', '1', 'DeviceLength'],\r\n    '0015': ['FD', '1', 'ContainerComponentWidth'],\r\n    '0016': ['DS', '1', 'DeviceDiameter'],\r\n    '0017': ['CS', '1', 'DeviceDiameterUnits'],\r\n    '0018': ['DS', '1', 'DeviceVolume'],\r\n    '0019': ['DS', '1', 'InterMarkerDistance'],\r\n    '001A': ['CS', '1', 'ContainerComponentMaterial'],\r\n    '001B': ['LO', '1', 'ContainerComponentID'],\r\n    '001C': ['FD', '1', 'ContainerComponentLength'],\r\n    '001D': ['FD', '1', 'ContainerComponentDiameter'],\r\n    '001E': ['LO', '1', 'ContainerComponentDescription'],\r\n    '0020': ['LO', '1', 'DeviceDescription'],\r\n    '0021': ['ST', '1', 'LongDeviceDescription']\r\n  },\r\n  '0052': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['FL', '1', 'ContrastBolusIngredientPercentByVolume'],\r\n    '0002': ['FD', '1', 'OCTFocalDistance'],\r\n    '0003': ['FD', '1', 'BeamSpotSize'],\r\n    '0004': ['FD', '1', 'EffectiveRefractiveIndex'],\r\n    '0006': ['CS', '1', 'OCTAcquisitionDomain'],\r\n    '0007': ['FD', '1', 'OCTOpticalCenterWavelength'],\r\n    '0008': ['FD', '1', 'AxialResolution'],\r\n    '0009': ['FD', '1', 'RangingDepth'],\r\n    '0011': ['FD', '1', 'ALineRate'],\r\n    '0012': ['US', '1', 'ALinesPerFrame'],\r\n    '0013': ['FD', '1', 'CatheterRotationalRate'],\r\n    '0014': ['FD', '1', 'ALinePixelSpacing'],\r\n    '0016': ['SQ', '1', 'ModeOfPercutaneousAccessSequence'],\r\n    '0025': ['SQ', '1', 'IntravascularOCTFrameTypeSequence'],\r\n    '0026': ['CS', '1', 'OCTZOffsetApplied'],\r\n    '0027': ['SQ', '1', 'IntravascularFrameContentSequence'],\r\n    '0028': ['FD', '1', 'IntravascularLongitudinalDistance'],\r\n    '0029': ['SQ', '1', 'IntravascularOCTFrameContentSequence'],\r\n    '0030': ['SS', '1', 'OCTZOffsetCorrection'],\r\n    '0031': ['CS', '1', 'CatheterDirectionOfRotation'],\r\n    '0033': ['FD', '1', 'SeamLineLocation'],\r\n    '0034': ['FD', '1', 'FirstALineLocation'],\r\n    '0036': ['US', '1', 'SeamLineIndex'],\r\n    '0038': ['US', '1', 'NumberOfPaddedALines'],\r\n    '0039': ['CS', '1', 'InterpolationType'],\r\n    '003A': ['CS', '1', 'RefractiveIndexApplied']\r\n  },\r\n  '0054': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['US', '1-n', 'EnergyWindowVector'],\r\n    '0011': ['US', '1', 'NumberOfEnergyWindows'],\r\n    '0012': ['SQ', '1', 'EnergyWindowInformationSequence'],\r\n    '0013': ['SQ', '1', 'EnergyWindowRangeSequence'],\r\n    '0014': ['DS', '1', 'EnergyWindowLowerLimit'],\r\n    '0015': ['DS', '1', 'EnergyWindowUpperLimit'],\r\n    '0016': ['SQ', '1', 'RadiopharmaceuticalInformationSequence'],\r\n    '0017': ['IS', '1', 'ResidualSyringeCounts'],\r\n    '0018': ['SH', '1', 'EnergyWindowName'],\r\n    '0020': ['US', '1-n', 'DetectorVector'],\r\n    '0021': ['US', '1', 'NumberOfDetectors'],\r\n    '0022': ['SQ', '1', 'DetectorInformationSequence'],\r\n    '0030': ['US', '1-n', 'PhaseVector'],\r\n    '0031': ['US', '1', 'NumberOfPhases'],\r\n    '0032': ['SQ', '1', 'PhaseInformationSequence'],\r\n    '0033': ['US', '1', 'NumberOfFramesInPhase'],\r\n    '0036': ['IS', '1', 'PhaseDelay'],\r\n    '0038': ['IS', '1', 'PauseBetweenFrames'],\r\n    '0039': ['CS', '1', 'PhaseDescription'],\r\n    '0050': ['US', '1-n', 'RotationVector'],\r\n    '0051': ['US', '1', 'NumberOfRotations'],\r\n    '0052': ['SQ', '1', 'RotationInformationSequence'],\r\n    '0053': ['US', '1', 'NumberOfFramesInRotation'],\r\n    '0060': ['US', '1-n', 'RRIntervalVector'],\r\n    '0061': ['US', '1', 'NumberOfRRIntervals'],\r\n    '0062': ['SQ', '1', 'GatedInformationSequence'],\r\n    '0063': ['SQ', '1', 'DataInformationSequence'],\r\n    '0070': ['US', '1-n', 'TimeSlotVector'],\r\n    '0071': ['US', '1', 'NumberOfTimeSlots'],\r\n    '0072': ['SQ', '1', 'TimeSlotInformationSequence'],\r\n    '0073': ['DS', '1', 'TimeSlotTime'],\r\n    '0080': ['US', '1-n', 'SliceVector'],\r\n    '0081': ['US', '1', 'NumberOfSlices'],\r\n    '0090': ['US', '1-n', 'AngularViewVector'],\r\n    '0100': ['US', '1-n', 'TimeSliceVector'],\r\n    '0101': ['US', '1', 'NumberOfTimeSlices'],\r\n    '0200': ['DS', '1', 'StartAngle'],\r\n    '0202': ['CS', '1', 'TypeOfDetectorMotion'],\r\n    '0210': ['IS', '1-n', 'TriggerVector'],\r\n    '0211': ['US', '1', 'NumberOfTriggersInPhase'],\r\n    '0220': ['SQ', '1', 'ViewCodeSequence'],\r\n    '0222': ['SQ', '1', 'ViewModifierCodeSequence'],\r\n    '0300': ['SQ', '1', 'RadionuclideCodeSequence'],\r\n    '0302': ['SQ', '1', 'AdministrationRouteCodeSequence'],\r\n    '0304': ['SQ', '1', 'RadiopharmaceuticalCodeSequence'],\r\n    '0306': ['SQ', '1', 'CalibrationDataSequence'],\r\n    '0308': ['US', '1', 'EnergyWindowNumber'],\r\n    '0400': ['SH', '1', 'ImageID'],\r\n    '0410': ['SQ', '1', 'PatientOrientationCodeSequence'],\r\n    '0412': ['SQ', '1', 'PatientOrientationModifierCodeSequence'],\r\n    '0414': ['SQ', '1', 'PatientGantryRelationshipCodeSequence'],\r\n    '0500': ['CS', '1', 'SliceProgressionDirection'],\r\n    '0501': ['CS', '1', 'ScanProgressionDirection'],\r\n    '1000': ['CS', '2', 'SeriesType'],\r\n    '1001': ['CS', '1', 'Units'],\r\n    '1002': ['CS', '1', 'CountsSource'],\r\n    '1004': ['CS', '1', 'ReprojectionMethod'],\r\n    '1006': ['CS', '1', 'SUVType'],\r\n    '1100': ['CS', '1', 'RandomsCorrectionMethod'],\r\n    '1101': ['LO', '1', 'AttenuationCorrectionMethod'],\r\n    '1102': ['CS', '1', 'DecayCorrection'],\r\n    '1103': ['LO', '1', 'ReconstructionMethod'],\r\n    '1104': ['LO', '1', 'DetectorLinesOfResponseUsed'],\r\n    '1105': ['LO', '1', 'ScatterCorrectionMethod'],\r\n    '1200': ['DS', '1', 'AxialAcceptance'],\r\n    '1201': ['IS', '2', 'AxialMash'],\r\n    '1202': ['IS', '1', 'TransverseMash'],\r\n    '1203': ['DS', '2', 'DetectorElementSize'],\r\n    '1210': ['DS', '1', 'CoincidenceWindowWidth'],\r\n    '1220': ['CS', '1-n', 'SecondaryCountsType'],\r\n    '1300': ['DS', '1', 'FrameReferenceTime'],\r\n    '1310': ['IS', '1', 'PrimaryPromptsCountsAccumulated'],\r\n    '1311': ['IS', '1-n', 'SecondaryCountsAccumulated'],\r\n    '1320': ['DS', '1', 'SliceSensitivityFactor'],\r\n    '1321': ['DS', '1', 'DecayFactor'],\r\n    '1322': ['DS', '1', 'DoseCalibrationFactor'],\r\n    '1323': ['DS', '1', 'ScatterFractionFactor'],\r\n    '1324': ['DS', '1', 'DeadTimeFactor'],\r\n    '1330': ['US', '1', 'ImageIndex'],\r\n    '1400': ['CS', '1-n', 'CountsIncluded'],\r\n    '1401': ['CS', '1', 'DeadTimeCorrectionFlag']\r\n  },\r\n  '0060': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '3000': ['SQ', '1', 'HistogramSequence'],\r\n    '3002': ['US', '1', 'HistogramNumberOfBins'],\r\n    '3004': ['xs', '1', 'HistogramFirstBinValue'],\r\n    '3006': ['xs', '1', 'HistogramLastBinValue'],\r\n    '3008': ['US', '1', 'HistogramBinWidth'],\r\n    '3010': ['LO', '1', 'HistogramExplanation'],\r\n    '3020': ['UL', '1-n', 'HistogramData']\r\n  },\r\n  '0062': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['CS', '1', 'SegmentationType'],\r\n    '0002': ['SQ', '1', 'SegmentSequence'],\r\n    '0003': ['SQ', '1', 'SegmentedPropertyCategoryCodeSequence'],\r\n    '0004': ['US', '1', 'SegmentNumber'],\r\n    '0005': ['LO', '1', 'SegmentLabel'],\r\n    '0006': ['ST', '1', 'SegmentDescription'],\r\n    '0007': ['SQ', '1', 'SegmentationAlgorithmIdentificationSequence'],\r\n    '0008': ['CS', '1', 'SegmentAlgorithmType'],\r\n    '0009': ['LO', '1-n', 'SegmentAlgorithmName'],\r\n    '000A': ['SQ', '1', 'SegmentIdentificationSequence'],\r\n    '000B': ['US', '1-n', 'ReferencedSegmentNumber'],\r\n    '000C': ['US', '1', 'RecommendedDisplayGrayscaleValue'],\r\n    '000D': ['US', '3', 'RecommendedDisplayCIELabValue'],\r\n    '000E': ['US', '1', 'MaximumFractionalValue'],\r\n    '000F': ['SQ', '1', 'SegmentedPropertyTypeCodeSequence'],\r\n    '0010': ['CS', '1', 'SegmentationFractionalType'],\r\n    '0011': ['SQ', '1', 'SegmentedPropertyTypeModifierCodeSequence'],\r\n    '0012': ['SQ', '1', 'UsedSegmentsSequence'],\r\n    '0013': ['CS', '1', 'SegmentsOverlap'],\r\n    '0020': ['UT', '1', 'TrackingID'],\r\n    '0021': ['UI', '1', 'TrackingUID']\r\n  },\r\n  '0064': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0002': ['SQ', '1', 'DeformableRegistrationSequence'],\r\n    '0003': ['UI', '1', 'SourceFrameOfReferenceUID'],\r\n    '0005': ['SQ', '1', 'DeformableRegistrationGridSequence'],\r\n    '0007': ['UL', '3', 'GridDimensions'],\r\n    '0008': ['FD', '3', 'GridResolution'],\r\n    '0009': ['OF', '1', 'VectorGridData'],\r\n    '000F': ['SQ', '1', 'PreDeformationMatrixRegistrationSequence'],\r\n    '0010': ['SQ', '1', 'PostDeformationMatrixRegistrationSequence']\r\n  },\r\n  '0066': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['UL', '1', 'NumberOfSurfaces'],\r\n    '0002': ['SQ', '1', 'SurfaceSequence'],\r\n    '0003': ['UL', '1', 'SurfaceNumber'],\r\n    '0004': ['LT', '1', 'SurfaceComments'],\r\n    '0009': ['CS', '1', 'SurfaceProcessing'],\r\n    '000A': ['FL', '1', 'SurfaceProcessingRatio'],\r\n    '000B': ['LO', '1', 'SurfaceProcessingDescription'],\r\n    '000C': ['FL', '1', 'RecommendedPresentationOpacity'],\r\n    '000D': ['CS', '1', 'RecommendedPresentationType'],\r\n    '000E': ['CS', '1', 'FiniteVolume'],\r\n    '0010': ['CS', '1', 'Manifold'],\r\n    '0011': ['SQ', '1', 'SurfacePointsSequence'],\r\n    '0012': ['SQ', '1', 'SurfacePointsNormalsSequence'],\r\n    '0013': ['SQ', '1', 'SurfaceMeshPrimitivesSequence'],\r\n    '0015': ['UL', '1', 'NumberOfSurfacePoints'],\r\n    '0016': ['OF', '1', 'PointCoordinatesData'],\r\n    '0017': ['FL', '3', 'PointPositionAccuracy'],\r\n    '0018': ['FL', '1', 'MeanPointDistance'],\r\n    '0019': ['FL', '1', 'MaximumPointDistance'],\r\n    '001A': ['FL', '6', 'PointsBoundingBoxCoordinates'],\r\n    '001B': ['FL', '3', 'AxisOfRotation'],\r\n    '001C': ['FL', '3', 'CenterOfRotation'],\r\n    '001E': ['UL', '1', 'NumberOfVectors'],\r\n    '001F': ['US', '1', 'VectorDimensionality'],\r\n    '0020': ['FL', '1-n', 'VectorAccuracy'],\r\n    '0021': ['OF', '1', 'VectorCoordinateData'],\r\n    '0022': ['OD', '1', 'DoublePointCoordinatesData'],\r\n    '0023': ['OW', '1', 'TrianglePointIndexList'],\r\n    '0024': ['OW', '1', 'EdgePointIndexList'],\r\n    '0025': ['OW', '1', 'VertexPointIndexList'],\r\n    '0026': ['SQ', '1', 'TriangleStripSequence'],\r\n    '0027': ['SQ', '1', 'TriangleFanSequence'],\r\n    '0028': ['SQ', '1', 'LineSequence'],\r\n    '0029': ['OW', '1', 'PrimitivePointIndexList'],\r\n    '002A': ['UL', '1', 'SurfaceCount'],\r\n    '002B': ['SQ', '1', 'ReferencedSurfaceSequence'],\r\n    '002C': ['UL', '1', 'ReferencedSurfaceNumber'],\r\n    '002D': ['SQ', '1', 'SegmentSurfaceGenerationAlgorithmIdentificationSequence'],\r\n    '002E': ['SQ', '1', 'SegmentSurfaceSourceInstanceSequence'],\r\n    '002F': ['SQ', '1', 'AlgorithmFamilyCodeSequence'],\r\n    '0030': ['SQ', '1', 'AlgorithmNameCodeSequence'],\r\n    '0031': ['LO', '1', 'AlgorithmVersion'],\r\n    '0032': ['LT', '1', 'AlgorithmParameters'],\r\n    '0034': ['SQ', '1', 'FacetSequence'],\r\n    '0035': ['SQ', '1', 'SurfaceProcessingAlgorithmIdentificationSequence'],\r\n    '0036': ['LO', '1', 'AlgorithmName'],\r\n    '0037': ['FL', '1', 'RecommendedPointRadius'],\r\n    '0038': ['FL', '1', 'RecommendedLineThickness'],\r\n    '0040': ['OL', '1', 'LongPrimitivePointIndexList'],\r\n    '0041': ['OL', '1', 'LongTrianglePointIndexList'],\r\n    '0042': ['OL', '1', 'LongEdgePointIndexList'],\r\n    '0043': ['OL', '1', 'LongVertexPointIndexList'],\r\n    '0101': ['SQ', '1', 'TrackSetSequence'],\r\n    '0102': ['SQ', '1', 'TrackSequence'],\r\n    '0103': ['OW', '1', 'RecommendedDisplayCIELabValueList'],\r\n    '0104': ['SQ', '1', 'TrackingAlgorithmIdentificationSequence'],\r\n    '0105': ['UL', '1', 'TrackSetNumber'],\r\n    '0106': ['LO', '1', 'TrackSetLabel'],\r\n    '0107': ['UT', '1', 'TrackSetDescription'],\r\n    '0108': ['SQ', '1', 'TrackSetAnatomicalTypeCodeSequence'],\r\n    '0121': ['SQ', '1', 'MeasurementsSequence'],\r\n    '0124': ['SQ', '1', 'TrackSetStatisticsSequence'],\r\n    '0125': ['OF', '1', 'FloatingPointValues'],\r\n    '0129': ['OL', '1', 'TrackPointIndexList'],\r\n    '0130': ['SQ', '1', 'TrackStatisticsSequence'],\r\n    '0132': ['SQ', '1', 'MeasurementValuesSequence'],\r\n    '0133': ['SQ', '1', 'DiffusionAcquisitionCodeSequence'],\r\n    '0134': ['SQ', '1', 'DiffusionModelCodeSequence']\r\n  },\r\n  '0068': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '6210': ['LO', '1', 'ImplantSize'],\r\n    '6221': ['LO', '1', 'ImplantTemplateVersion'],\r\n    '6222': ['SQ', '1', 'ReplacedImplantTemplateSequence'],\r\n    '6223': ['CS', '1', 'ImplantType'],\r\n    '6224': ['SQ', '1', 'DerivationImplantTemplateSequence'],\r\n    '6225': ['SQ', '1', 'OriginalImplantTemplateSequence'],\r\n    '6226': ['DT', '1', 'EffectiveDateTime'],\r\n    '6230': ['SQ', '1', 'ImplantTargetAnatomySequence'],\r\n    '6260': ['SQ', '1', 'InformationFromManufacturerSequence'],\r\n    '6265': ['SQ', '1', 'NotificationFromManufacturerSequence'],\r\n    '6270': ['DT', '1', 'InformationIssueDateTime'],\r\n    '6280': ['ST', '1', 'InformationSummary'],\r\n    '62A0': ['SQ', '1', 'ImplantRegulatoryDisapprovalCodeSequence'],\r\n    '62A5': ['FD', '1', 'OverallTemplateSpatialTolerance'],\r\n    '62C0': ['SQ', '1', 'HPGLDocumentSequence'],\r\n    '62D0': ['US', '1', 'HPGLDocumentID'],\r\n    '62D5': ['LO', '1', 'HPGLDocumentLabel'],\r\n    '62E0': ['SQ', '1', 'ViewOrientationCodeSequence'],\r\n    '62F0': ['SQ', '1', 'ViewOrientationModifierCodeSequence'],\r\n    '62F2': ['FD', '1', 'HPGLDocumentScaling'],\r\n    '6300': ['OB', '1', 'HPGLDocument'],\r\n    '6310': ['US', '1', 'HPGLContourPenNumber'],\r\n    '6320': ['SQ', '1', 'HPGLPenSequence'],\r\n    '6330': ['US', '1', 'HPGLPenNumber'],\r\n    '6340': ['LO', '1', 'HPGLPenLabel'],\r\n    '6345': ['ST', '1', 'HPGLPenDescription'],\r\n    '6346': ['FD', '2', 'RecommendedRotationPoint'],\r\n    '6347': ['FD', '4', 'BoundingRectangle'],\r\n    '6350': ['US', '1-n', 'ImplantTemplate3DModelSurfaceNumber'],\r\n    '6360': ['SQ', '1', 'SurfaceModelDescriptionSequence'],\r\n    '6380': ['LO', '1', 'SurfaceModelLabel'],\r\n    '6390': ['FD', '1', 'SurfaceModelScalingFactor'],\r\n    '63A0': ['SQ', '1', 'MaterialsCodeSequence'],\r\n    '63A4': ['SQ', '1', 'CoatingMaterialsCodeSequence'],\r\n    '63A8': ['SQ', '1', 'ImplantTypeCodeSequence'],\r\n    '63AC': ['SQ', '1', 'FixationMethodCodeSequence'],\r\n    '63B0': ['SQ', '1', 'MatingFeatureSetsSequence'],\r\n    '63C0': ['US', '1', 'MatingFeatureSetID'],\r\n    '63D0': ['LO', '1', 'MatingFeatureSetLabel'],\r\n    '63E0': ['SQ', '1', 'MatingFeatureSequence'],\r\n    '63F0': ['US', '1', 'MatingFeatureID'],\r\n    '6400': ['SQ', '1', 'MatingFeatureDegreeOfFreedomSequence'],\r\n    '6410': ['US', '1', 'DegreeOfFreedomID'],\r\n    '6420': ['CS', '1', 'DegreeOfFreedomType'],\r\n    '6430': ['SQ', '1', 'TwoDMatingFeatureCoordinatesSequence'],\r\n    '6440': ['US', '1', 'ReferencedHPGLDocumentID'],\r\n    '6450': ['FD', '2', 'TwoDMatingPoint'],\r\n    '6460': ['FD', '4', 'TwoDMatingAxes'],\r\n    '6470': ['SQ', '1', 'TwoDDegreeOfFreedomSequence'],\r\n    '6490': ['FD', '3', 'ThreeDDegreeOfFreedomAxis'],\r\n    '64A0': ['FD', '2', 'RangeOfFreedom'],\r\n    '64C0': ['FD', '3', 'ThreeDMatingPoint'],\r\n    '64D0': ['FD', '9', 'ThreeDMatingAxes'],\r\n    '64F0': ['FD', '3', 'TwoDDegreeOfFreedomAxis'],\r\n    '6500': ['SQ', '1', 'PlanningLandmarkPointSequence'],\r\n    '6510': ['SQ', '1', 'PlanningLandmarkLineSequence'],\r\n    '6520': ['SQ', '1', 'PlanningLandmarkPlaneSequence'],\r\n    '6530': ['US', '1', 'PlanningLandmarkID'],\r\n    '6540': ['LO', '1', 'PlanningLandmarkDescription'],\r\n    '6545': ['SQ', '1', 'PlanningLandmarkIdentificationCodeSequence'],\r\n    '6550': ['SQ', '1', 'TwoDPointCoordinatesSequence'],\r\n    '6560': ['FD', '2', 'TwoDPointCoordinates'],\r\n    '6590': ['FD', '3', 'ThreeDPointCoordinates'],\r\n    '65A0': ['SQ', '1', 'TwoDLineCoordinatesSequence'],\r\n    '65B0': ['FD', '4', 'TwoDLineCoordinates'],\r\n    '65D0': ['FD', '6', 'ThreeDLineCoordinates'],\r\n    '65E0': ['SQ', '1', 'TwoDPlaneCoordinatesSequence'],\r\n    '65F0': ['FD', '4', 'TwoDPlaneIntersection'],\r\n    '6610': ['FD', '3', 'ThreeDPlaneOrigin'],\r\n    '6620': ['FD', '3', 'ThreeDPlaneNormal'],\r\n    '7001': ['CS', '1', 'ModelModification'],\r\n    '7002': ['CS', '1', 'ModelMirroring'],\r\n    '7003': ['SQ', '1', 'ModelUsageCodeSequence'],\r\n    '7004': ['UI', '1', 'ModelGroupUID'],\r\n    '7005': ['UR', '1', 'RelativeURIReferenceWithinEncapsulatedDocument']\r\n  },\r\n  '006A': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['CS', '1', 'AnnotationCoordinateType'],\r\n    '0002': ['SQ', '1', 'AnnotationGroupSequence'],\r\n    '0003': ['UI', '1', 'AnnotationGroupUID'],\r\n    '0005': ['LO', '1', 'AnnotationGroupLabel'],\r\n    '0006': ['UT', '1', 'AnnotationGroupDescription'],\r\n    '0007': ['CS', '1', 'AnnotationGroupGenerationType'],\r\n    '0008': ['SQ', '1', 'AnnotationGroupAlgorithmIdentificationSequence'],\r\n    '0009': ['SQ', '1', 'AnnotationPropertyCategoryCodeSequence'],\r\n    '000A': ['SQ', '1', 'AnnotationPropertyTypeCodeSequence'],\r\n    '000B': ['SQ', '1', 'AnnotationPropertyTypeModifierCodeSequence'],\r\n    '000C': ['UL', '1', 'NumberOfAnnotations'],\r\n    '000D': ['CS', '1', 'AnnotationAppliesToAllOpticalPaths'],\r\n    '000E': ['SH', '1-n', 'ReferencedOpticalPathIdentifier'],\r\n    '000F': ['CS', '1', 'AnnotationAppliesToAllZPlanes'],\r\n    '0010': ['FD', '1-n', 'CommonZCoordinateValue'],\r\n    '0011': ['OL', '1', 'AnnotationIndexList']\r\n  },\r\n  '0070': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['SQ', '1', 'GraphicAnnotationSequence'],\r\n    '0002': ['CS', '1', 'GraphicLayer'],\r\n    '0003': ['CS', '1', 'BoundingBoxAnnotationUnits'],\r\n    '0004': ['CS', '1', 'AnchorPointAnnotationUnits'],\r\n    '0005': ['CS', '1', 'GraphicAnnotationUnits'],\r\n    '0006': ['ST', '1', 'UnformattedTextValue'],\r\n    '0008': ['SQ', '1', 'TextObjectSequence'],\r\n    '0009': ['SQ', '1', 'GraphicObjectSequence'],\r\n    '0010': ['FL', '2', 'BoundingBoxTopLeftHandCorner'],\r\n    '0011': ['FL', '2', 'BoundingBoxBottomRightHandCorner'],\r\n    '0012': ['CS', '1', 'BoundingBoxTextHorizontalJustification'],\r\n    '0014': ['FL', '2', 'AnchorPoint'],\r\n    '0015': ['CS', '1', 'AnchorPointVisibility'],\r\n    '0020': ['US', '1', 'GraphicDimensions'],\r\n    '0021': ['US', '1', 'NumberOfGraphicPoints'],\r\n    '0022': ['FL', '2-n', 'GraphicData'],\r\n    '0023': ['CS', '1', 'GraphicType'],\r\n    '0024': ['CS', '1', 'GraphicFilled'],\r\n    '0040': ['IS', '1', 'ImageRotationRetired'],\r\n    '0041': ['CS', '1', 'ImageHorizontalFlip'],\r\n    '0042': ['US', '1', 'ImageRotation'],\r\n    '0050': ['US', '2', 'DisplayedAreaTopLeftHandCornerTrial'],\r\n    '0051': ['US', '2', 'DisplayedAreaBottomRightHandCornerTrial'],\r\n    '0052': ['SL', '2', 'DisplayedAreaTopLeftHandCorner'],\r\n    '0053': ['SL', '2', 'DisplayedAreaBottomRightHandCorner'],\r\n    '005A': ['SQ', '1', 'DisplayedAreaSelectionSequence'],\r\n    '0060': ['SQ', '1', 'GraphicLayerSequence'],\r\n    '0062': ['IS', '1', 'GraphicLayerOrder'],\r\n    '0066': ['US', '1', 'GraphicLayerRecommendedDisplayGrayscaleValue'],\r\n    '0067': ['US', '3', 'GraphicLayerRecommendedDisplayRGBValue'],\r\n    '0068': ['LO', '1', 'GraphicLayerDescription'],\r\n    '0080': ['CS', '1', 'ContentLabel'],\r\n    '0081': ['LO', '1', 'ContentDescription'],\r\n    '0082': ['DA', '1', 'PresentationCreationDate'],\r\n    '0083': ['TM', '1', 'PresentationCreationTime'],\r\n    '0084': ['PN', '1', 'ContentCreatorName'],\r\n    '0086': ['SQ', '1', 'ContentCreatorIdentificationCodeSequence'],\r\n    '0087': ['SQ', '1', 'AlternateContentDescriptionSequence'],\r\n    '0100': ['CS', '1', 'PresentationSizeMode'],\r\n    '0101': ['DS', '2', 'PresentationPixelSpacing'],\r\n    '0102': ['IS', '2', 'PresentationPixelAspectRatio'],\r\n    '0103': ['FL', '1', 'PresentationPixelMagnificationRatio'],\r\n    '0207': ['LO', '1', 'GraphicGroupLabel'],\r\n    '0208': ['ST', '1', 'GraphicGroupDescription'],\r\n    '0209': ['SQ', '1', 'CompoundGraphicSequence'],\r\n    '0226': ['UL', '1', 'CompoundGraphicInstanceID'],\r\n    '0227': ['LO', '1', 'FontName'],\r\n    '0228': ['CS', '1', 'FontNameType'],\r\n    '0229': ['LO', '1', 'CSSFontName'],\r\n    '0230': ['FD', '1', 'RotationAngle'],\r\n    '0231': ['SQ', '1', 'TextStyleSequence'],\r\n    '0232': ['SQ', '1', 'LineStyleSequence'],\r\n    '0233': ['SQ', '1', 'FillStyleSequence'],\r\n    '0234': ['SQ', '1', 'GraphicGroupSequence'],\r\n    '0241': ['US', '3', 'TextColorCIELabValue'],\r\n    '0242': ['CS', '1', 'HorizontalAlignment'],\r\n    '0243': ['CS', '1', 'VerticalAlignment'],\r\n    '0244': ['CS', '1', 'ShadowStyle'],\r\n    '0245': ['FL', '1', 'ShadowOffsetX'],\r\n    '0246': ['FL', '1', 'ShadowOffsetY'],\r\n    '0247': ['US', '3', 'ShadowColorCIELabValue'],\r\n    '0248': ['CS', '1', 'Underlined'],\r\n    '0249': ['CS', '1', 'Bold'],\r\n    '0250': ['CS', '1', 'Italic'],\r\n    '0251': ['US', '3', 'PatternOnColorCIELabValue'],\r\n    '0252': ['US', '3', 'PatternOffColorCIELabValue'],\r\n    '0253': ['FL', '1', 'LineThickness'],\r\n    '0254': ['CS', '1', 'LineDashingStyle'],\r\n    '0255': ['UL', '1', 'LinePattern'],\r\n    '0256': ['OB', '1', 'FillPattern'],\r\n    '0257': ['CS', '1', 'FillMode'],\r\n    '0258': ['FL', '1', 'ShadowOpacity'],\r\n    '0261': ['FL', '1', 'GapLength'],\r\n    '0262': ['FL', '1', 'DiameterOfVisibility'],\r\n    '0273': ['FL', '2', 'RotationPoint'],\r\n    '0274': ['CS', '1', 'TickAlignment'],\r\n    '0278': ['CS', '1', 'ShowTickLabel'],\r\n    '0279': ['CS', '1', 'TickLabelAlignment'],\r\n    '0282': ['CS', '1', 'CompoundGraphicUnits'],\r\n    '0284': ['FL', '1', 'PatternOnOpacity'],\r\n    '0285': ['FL', '1', 'PatternOffOpacity'],\r\n    '0287': ['SQ', '1', 'MajorTicksSequence'],\r\n    '0288': ['FL', '1', 'TickPosition'],\r\n    '0289': ['SH', '1', 'TickLabel'],\r\n    '0294': ['CS', '1', 'CompoundGraphicType'],\r\n    '0295': ['UL', '1', 'GraphicGroupID'],\r\n    '0306': ['CS', '1', 'ShapeType'],\r\n    '0308': ['SQ', '1', 'RegistrationSequence'],\r\n    '0309': ['SQ', '1', 'MatrixRegistrationSequence'],\r\n    '030A': ['SQ', '1', 'MatrixSequence'],\r\n    '030B': ['FD', '16', 'FrameOfReferenceToDisplayedCoordinateSystemTransformationMatrix'],\r\n    '030C': ['CS', '1', 'FrameOfReferenceTransformationMatrixType'],\r\n    '030D': ['SQ', '1', 'RegistrationTypeCodeSequence'],\r\n    '030F': ['ST', '1', 'FiducialDescription'],\r\n    '0310': ['SH', '1', 'FiducialIdentifier'],\r\n    '0311': ['SQ', '1', 'FiducialIdentifierCodeSequence'],\r\n    '0312': ['FD', '1', 'ContourUncertaintyRadius'],\r\n    '0314': ['SQ', '1', 'UsedFiducialsSequence'],\r\n    '0318': ['SQ', '1', 'GraphicCoordinatesDataSequence'],\r\n    '031A': ['UI', '1', 'FiducialUID'],\r\n    '031B': ['UI', '1', 'ReferencedFiducialUID'],\r\n    '031C': ['SQ', '1', 'FiducialSetSequence'],\r\n    '031E': ['SQ', '1', 'FiducialSequence'],\r\n    '031F': ['SQ', '1', 'FiducialsPropertyCategoryCodeSequence'],\r\n    '0401': ['US', '3', 'GraphicLayerRecommendedDisplayCIELabValue'],\r\n    '0402': ['SQ', '1', 'BlendingSequence'],\r\n    '0403': ['FL', '1', 'RelativeOpacity'],\r\n    '0404': ['SQ', '1', 'ReferencedSpatialRegistrationSequence'],\r\n    '0405': ['CS', '1', 'BlendingPosition'],\r\n    '1101': ['UI', '1', 'PresentationDisplayCollectionUID'],\r\n    '1102': ['UI', '1', 'PresentationSequenceCollectionUID'],\r\n    '1103': ['US', '1', 'PresentationSequencePositionIndex'],\r\n    '1104': ['SQ', '1', 'RenderedImageReferenceSequence'],\r\n    '1201': ['SQ', '1', 'VolumetricPresentationStateInputSequence'],\r\n    '1202': ['CS', '1', 'PresentationInputType'],\r\n    '1203': ['US', '1', 'InputSequencePositionIndex'],\r\n    '1204': ['CS', '1', 'Crop'],\r\n    '1205': ['US', '1-n', 'CroppingSpecificationIndex'],\r\n    '1206': ['CS', '1', 'CompositingMethod'],\r\n    '1207': ['US', '1', 'VolumetricPresentationInputNumber'],\r\n    '1208': ['CS', '1', 'ImageVolumeGeometry'],\r\n    '1209': ['UI', '1', 'VolumetricPresentationInputSetUID'],\r\n    '120A': ['SQ', '1', 'VolumetricPresentationInputSetSequence'],\r\n    '120B': ['CS', '1', 'GlobalCrop'],\r\n    '120C': ['US', '1-n', 'GlobalCroppingSpecificationIndex'],\r\n    '120D': ['CS', '1', 'RenderingMethod'],\r\n    '1301': ['SQ', '1', 'VolumeCroppingSequence'],\r\n    '1302': ['CS', '1', 'VolumeCroppingMethod'],\r\n    '1303': ['FD', '6', 'BoundingBoxCrop'],\r\n    '1304': ['SQ', '1', 'ObliqueCroppingPlaneSequence'],\r\n    '1305': ['FD', '4', 'Plane'],\r\n    '1306': ['FD', '3', 'PlaneNormal'],\r\n    '1309': ['US', '1', 'CroppingSpecificationNumber'],\r\n    '1501': ['CS', '1', 'MultiPlanarReconstructionStyle'],\r\n    '1502': ['CS', '1', 'MPRThicknessType'],\r\n    '1503': ['FD', '1', 'MPRSlabThickness'],\r\n    '1505': ['FD', '3', 'MPRTopLeftHandCorner'],\r\n    '1507': ['FD', '3', 'MPRViewWidthDirection'],\r\n    '1508': ['FD', '1', 'MPRViewWidth'],\r\n    '150C': ['UL', '1', 'NumberOfVolumetricCurvePoints'],\r\n    '150D': ['OD', '1', 'VolumetricCurvePoints'],\r\n    '1511': ['FD', '3', 'MPRViewHeightDirection'],\r\n    '1512': ['FD', '1', 'MPRViewHeight'],\r\n    '1602': ['CS', '1', 'RenderProjection'],\r\n    '1603': ['FD', '3', 'ViewpointPosition'],\r\n    '1604': ['FD', '3', 'ViewpointLookAtPoint'],\r\n    '1605': ['FD', '3', 'ViewpointUpDirection'],\r\n    '1606': ['FD', '6', 'RenderFieldOfView'],\r\n    '1607': ['FD', '1', 'SamplingStepSize'],\r\n    '1701': ['CS', '1', 'ShadingStyle'],\r\n    '1702': ['FD', '1', 'AmbientReflectionIntensity'],\r\n    '1703': ['FD', '3', 'LightDirection'],\r\n    '1704': ['FD', '1', 'DiffuseReflectionIntensity'],\r\n    '1705': ['FD', '1', 'SpecularReflectionIntensity'],\r\n    '1706': ['FD', '1', 'Shininess'],\r\n    '1801': ['SQ', '1', 'PresentationStateClassificationComponentSequence'],\r\n    '1802': ['CS', '1', 'ComponentType'],\r\n    '1803': ['SQ', '1', 'ComponentInputSequence'],\r\n    '1804': ['US', '1', 'VolumetricPresentationInputIndex'],\r\n    '1805': ['SQ', '1', 'PresentationStateCompositorComponentSequence'],\r\n    '1806': ['SQ', '1', 'WeightingTransferFunctionSequence'],\r\n    '1807': ['US', '3', 'WeightingLookupTableDescriptor'],\r\n    '1808': ['OB', '1', 'WeightingLookupTableData'],\r\n    '1901': ['SQ', '1', 'VolumetricAnnotationSequence'],\r\n    '1903': ['SQ', '1', 'ReferencedStructuredContextSequence'],\r\n    '1904': ['UI', '1', 'ReferencedContentItem'],\r\n    '1905': ['SQ', '1', 'VolumetricPresentationInputAnnotationSequence'],\r\n    '1907': ['CS', '1', 'AnnotationClipping'],\r\n    '1A01': ['CS', '1', 'PresentationAnimationStyle'],\r\n    '1A03': ['FD', '1', 'RecommendedAnimationRate'],\r\n    '1A04': ['SQ', '1', 'AnimationCurveSequence'],\r\n    '1A05': ['FD', '1', 'AnimationStepSize'],\r\n    '1A06': ['FD', '1', 'SwivelRange'],\r\n    '1A07': ['OD', '1', 'VolumetricCurveUpDirections'],\r\n    '1A08': ['SQ', '1', 'VolumeStreamSequence'],\r\n    '1A09': ['LO', '1', 'RGBATransferFunctionDescription'],\r\n    '1B01': ['SQ', '1', 'AdvancedBlendingSequence'],\r\n    '1B02': ['US', '1', 'BlendingInputNumber'],\r\n    '1B03': ['SQ', '1', 'BlendingDisplayInputSequence'],\r\n    '1B04': ['SQ', '1', 'BlendingDisplaySequence'],\r\n    '1B06': ['CS', '1', 'BlendingMode'],\r\n    '1B07': ['CS', '1', 'TimeSeriesBlending'],\r\n    '1B08': ['CS', '1', 'GeometryForDisplay'],\r\n    '1B11': ['SQ', '1', 'ThresholdSequence'],\r\n    '1B12': ['SQ', '1', 'ThresholdValueSequence'],\r\n    '1B13': ['CS', '1', 'ThresholdType'],\r\n    '1B14': ['FD', '1', 'ThresholdValue']\r\n  },\r\n  '0072': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0002': ['SH', '1', 'HangingProtocolName'],\r\n    '0004': ['LO', '1', 'HangingProtocolDescription'],\r\n    '0006': ['CS', '1', 'HangingProtocolLevel'],\r\n    '0008': ['LO', '1', 'HangingProtocolCreator'],\r\n    '000A': ['DT', '1', 'HangingProtocolCreationDateTime'],\r\n    '000C': ['SQ', '1', 'HangingProtocolDefinitionSequence'],\r\n    '000E': ['SQ', '1', 'HangingProtocolUserIdentificationCodeSequence'],\r\n    '0010': ['LO', '1', 'HangingProtocolUserGroupName'],\r\n    '0012': ['SQ', '1', 'SourceHangingProtocolSequence'],\r\n    '0014': ['US', '1', 'NumberOfPriorsReferenced'],\r\n    '0020': ['SQ', '1', 'ImageSetsSequence'],\r\n    '0022': ['SQ', '1', 'ImageSetSelectorSequence'],\r\n    '0024': ['CS', '1', 'ImageSetSelectorUsageFlag'],\r\n    '0026': ['AT', '1', 'SelectorAttribute'],\r\n    '0028': ['US', '1', 'SelectorValueNumber'],\r\n    '0030': ['SQ', '1', 'TimeBasedImageSetsSequence'],\r\n    '0032': ['US', '1', 'ImageSetNumber'],\r\n    '0034': ['CS', '1', 'ImageSetSelectorCategory'],\r\n    '0038': ['US', '2', 'RelativeTime'],\r\n    '003A': ['CS', '1', 'RelativeTimeUnits'],\r\n    '003C': ['SS', '2', 'AbstractPriorValue'],\r\n    '003E': ['SQ', '1', 'AbstractPriorCodeSequence'],\r\n    '0040': ['LO', '1', 'ImageSetLabel'],\r\n    '0050': ['CS', '1', 'SelectorAttributeVR'],\r\n    '0052': ['AT', '1-n', 'SelectorSequencePointer'],\r\n    '0054': ['LO', '1-n', 'SelectorSequencePointerPrivateCreator'],\r\n    '0056': ['LO', '1', 'SelectorAttributePrivateCreator'],\r\n    '005E': ['AE', '1-n', 'SelectorAEValue'],\r\n    '005F': ['AS', '1-n', 'SelectorASValue'],\r\n    '0060': ['AT', '1-n', 'SelectorATValue'],\r\n    '0061': ['DA', '1-n', 'SelectorDAValue'],\r\n    '0062': ['CS', '1-n', 'SelectorCSValue'],\r\n    '0063': ['DT', '1-n', 'SelectorDTValue'],\r\n    '0064': ['IS', '1-n', 'SelectorISValue'],\r\n    '0065': ['OB', '1', 'SelectorOBValue'],\r\n    '0066': ['LO', '1-n', 'SelectorLOValue'],\r\n    '0067': ['OF', '1', 'SelectorOFValue'],\r\n    '0068': ['LT', '1', 'SelectorLTValue'],\r\n    '0069': ['OW', '1', 'SelectorOWValue'],\r\n    '006A': ['PN', '1-n', 'SelectorPNValue'],\r\n    '006B': ['TM', '1-n', 'SelectorTMValue'],\r\n    '006C': ['SH', '1-n', 'SelectorSHValue'],\r\n    '006D': ['UN', '1', 'SelectorUNValue'],\r\n    '006E': ['ST', '1', 'SelectorSTValue'],\r\n    '006F': ['UC', '1-n', 'SelectorUCValue'],\r\n    '0070': ['UT', '1', 'SelectorUTValue'],\r\n    '0071': ['UR', '1', 'SelectorURValue'],\r\n    '0072': ['DS', '1-n', 'SelectorDSValue'],\r\n    '0073': ['OD', '1', 'SelectorODValue'],\r\n    '0074': ['FD', '1-n', 'SelectorFDValue'],\r\n    '0075': ['OL', '1', 'SelectorOLValue'],\r\n    '0076': ['FL', '1-n', 'SelectorFLValue'],\r\n    '0078': ['UL', '1-n', 'SelectorULValue'],\r\n    '007A': ['US', '1-n', 'SelectorUSValue'],\r\n    '007C': ['SL', '1-n', 'SelectorSLValue'],\r\n    '007E': ['SS', '1-n', 'SelectorSSValue'],\r\n    '007F': ['UI', '1-n', 'SelectorUIValue'],\r\n    '0080': ['SQ', '1', 'SelectorCodeSequenceValue'],\r\n    '0081': ['OV', '1', 'SelectorOVValue'],\r\n    '0082': ['SV', '1-n', 'SelectorSVValue'],\r\n    '0083': ['UV', '1-n', 'SelectorUVValue'],\r\n    '0100': ['US', '1', 'NumberOfScreens'],\r\n    '0102': ['SQ', '1', 'NominalScreenDefinitionSequence'],\r\n    '0104': ['US', '1', 'NumberOfVerticalPixels'],\r\n    '0106': ['US', '1', 'NumberOfHorizontalPixels'],\r\n    '0108': ['FD', '4', 'DisplayEnvironmentSpatialPosition'],\r\n    '010A': ['US', '1', 'ScreenMinimumGrayscaleBitDepth'],\r\n    '010C': ['US', '1', 'ScreenMinimumColorBitDepth'],\r\n    '010E': ['US', '1', 'ApplicationMaximumRepaintTime'],\r\n    '0200': ['SQ', '1', 'DisplaySetsSequence'],\r\n    '0202': ['US', '1', 'DisplaySetNumber'],\r\n    '0203': ['LO', '1', 'DisplaySetLabel'],\r\n    '0204': ['US', '1', 'DisplaySetPresentationGroup'],\r\n    '0206': ['LO', '1', 'DisplaySetPresentationGroupDescription'],\r\n    '0208': ['CS', '1', 'PartialDataDisplayHandling'],\r\n    '0210': ['SQ', '1', 'SynchronizedScrollingSequence'],\r\n    '0212': ['US', '2-n', 'DisplaySetScrollingGroup'],\r\n    '0214': ['SQ', '1', 'NavigationIndicatorSequence'],\r\n    '0216': ['US', '1', 'NavigationDisplaySet'],\r\n    '0218': ['US', '1-n', 'ReferenceDisplaySets'],\r\n    '0300': ['SQ', '1', 'ImageBoxesSequence'],\r\n    '0302': ['US', '1', 'ImageBoxNumber'],\r\n    '0304': ['CS', '1', 'ImageBoxLayoutType'],\r\n    '0306': ['US', '1', 'ImageBoxTileHorizontalDimension'],\r\n    '0308': ['US', '1', 'ImageBoxTileVerticalDimension'],\r\n    '0310': ['CS', '1', 'ImageBoxScrollDirection'],\r\n    '0312': ['CS', '1', 'ImageBoxSmallScrollType'],\r\n    '0314': ['US', '1', 'ImageBoxSmallScrollAmount'],\r\n    '0316': ['CS', '1', 'ImageBoxLargeScrollType'],\r\n    '0318': ['US', '1', 'ImageBoxLargeScrollAmount'],\r\n    '0320': ['US', '1', 'ImageBoxOverlapPriority'],\r\n    '0330': ['FD', '1', 'CineRelativeToRealTime'],\r\n    '0400': ['SQ', '1', 'FilterOperationsSequence'],\r\n    '0402': ['CS', '1', 'FilterByCategory'],\r\n    '0404': ['CS', '1', 'FilterByAttributePresence'],\r\n    '0406': ['CS', '1', 'FilterByOperator'],\r\n    '0420': ['US', '3', 'StructuredDisplayBackgroundCIELabValue'],\r\n    '0421': ['US', '3', 'EmptyImageBoxCIELabValue'],\r\n    '0422': ['SQ', '1', 'StructuredDisplayImageBoxSequence'],\r\n    '0424': ['SQ', '1', 'StructuredDisplayTextBoxSequence'],\r\n    '0427': ['SQ', '1', 'ReferencedFirstFrameSequence'],\r\n    '0430': ['SQ', '1', 'ImageBoxSynchronizationSequence'],\r\n    '0432': ['US', '2-n', 'SynchronizedImageBoxList'],\r\n    '0434': ['CS', '1', 'TypeOfSynchronization'],\r\n    '0500': ['CS', '1', 'BlendingOperationType'],\r\n    '0510': ['CS', '1', 'ReformattingOperationType'],\r\n    '0512': ['FD', '1', 'ReformattingThickness'],\r\n    '0514': ['FD', '1', 'ReformattingInterval'],\r\n    '0516': ['CS', '1', 'ReformattingOperationInitialViewDirection'],\r\n    '0520': ['CS', '1-n', 'ThreeDRenderingType'],\r\n    '0600': ['SQ', '1', 'SortingOperationsSequence'],\r\n    '0602': ['CS', '1', 'SortByCategory'],\r\n    '0604': ['CS', '1', 'SortingDirection'],\r\n    '0700': ['CS', '2', 'DisplaySetPatientOrientation'],\r\n    '0702': ['CS', '1', 'VOIType'],\r\n    '0704': ['CS', '1', 'PseudoColorType'],\r\n    '0705': ['SQ', '1', 'PseudoColorPaletteInstanceReferenceSequence'],\r\n    '0706': ['CS', '1', 'ShowGrayscaleInverted'],\r\n    '0710': ['CS', '1', 'ShowImageTrueSizeFlag'],\r\n    '0712': ['CS', '1', 'ShowGraphicAnnotationFlag'],\r\n    '0714': ['CS', '1', 'ShowPatientDemographicsFlag'],\r\n    '0716': ['CS', '1', 'ShowAcquisitionTechniquesFlag'],\r\n    '0717': ['CS', '1', 'DisplaySetHorizontalJustification'],\r\n    '0718': ['CS', '1', 'DisplaySetVerticalJustification']\r\n  },\r\n  '0074': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0120': ['FD', '1', 'ContinuationStartMeterset'],\r\n    '0121': ['FD', '1', 'ContinuationEndMeterset'],\r\n    '1000': ['CS', '1', 'ProcedureStepState'],\r\n    '1002': ['SQ', '1', 'ProcedureStepProgressInformationSequence'],\r\n    '1004': ['DS', '1', 'ProcedureStepProgress'],\r\n    '1006': ['ST', '1', 'ProcedureStepProgressDescription'],\r\n    '1007': ['SQ', '1', 'ProcedureStepProgressParametersSequence'],\r\n    '1008': ['SQ', '1', 'ProcedureStepCommunicationsURISequence'],\r\n    '100A': ['UR', '1', 'ContactURI'],\r\n    '100C': ['LO', '1', 'ContactDisplayName'],\r\n    '100E': ['SQ', '1', 'ProcedureStepDiscontinuationReasonCodeSequence'],\r\n    '1020': ['SQ', '1', 'BeamTaskSequence'],\r\n    '1022': ['CS', '1', 'BeamTaskType'],\r\n    '1024': ['IS', '1', 'BeamOrderIndexTrial'],\r\n    '1025': ['CS', '1', 'AutosequenceFlag'],\r\n    '1026': ['FD', '1', 'TableTopVerticalAdjustedPosition'],\r\n    '1027': ['FD', '1', 'TableTopLongitudinalAdjustedPosition'],\r\n    '1028': ['FD', '1', 'TableTopLateralAdjustedPosition'],\r\n    '102A': ['FD', '1', 'PatientSupportAdjustedAngle'],\r\n    '102B': ['FD', '1', 'TableTopEccentricAdjustedAngle'],\r\n    '102C': ['FD', '1', 'TableTopPitchAdjustedAngle'],\r\n    '102D': ['FD', '1', 'TableTopRollAdjustedAngle'],\r\n    '1030': ['SQ', '1', 'DeliveryVerificationImageSequence'],\r\n    '1032': ['CS', '1', 'VerificationImageTiming'],\r\n    '1034': ['CS', '1', 'DoubleExposureFlag'],\r\n    '1036': ['CS', '1', 'DoubleExposureOrdering'],\r\n    '1038': ['DS', '1', 'DoubleExposureMetersetTrial'],\r\n    '103A': ['DS', '4', 'DoubleExposureFieldDeltaTrial'],\r\n    '1040': ['SQ', '1', 'RelatedReferenceRTImageSequence'],\r\n    '1042': ['SQ', '1', 'GeneralMachineVerificationSequence'],\r\n    '1044': ['SQ', '1', 'ConventionalMachineVerificationSequence'],\r\n    '1046': ['SQ', '1', 'IonMachineVerificationSequence'],\r\n    '1048': ['SQ', '1', 'FailedAttributesSequence'],\r\n    '104A': ['SQ', '1', 'OverriddenAttributesSequence'],\r\n    '104C': ['SQ', '1', 'ConventionalControlPointVerificationSequence'],\r\n    '104E': ['SQ', '1', 'IonControlPointVerificationSequence'],\r\n    '1050': ['SQ', '1', 'AttributeOccurrenceSequence'],\r\n    '1052': ['AT', '1', 'AttributeOccurrencePointer'],\r\n    '1054': ['UL', '1', 'AttributeItemSelector'],\r\n    '1056': ['LO', '1', 'AttributeOccurrencePrivateCreator'],\r\n    '1057': ['IS', '1-n', 'SelectorSequencePointerItems'],\r\n    '1200': ['CS', '1', 'ScheduledProcedureStepPriority'],\r\n    '1202': ['LO', '1', 'WorklistLabel'],\r\n    '1204': ['LO', '1', 'ProcedureStepLabel'],\r\n    '1210': ['SQ', '1', 'ScheduledProcessingParametersSequence'],\r\n    '1212': ['SQ', '1', 'PerformedProcessingParametersSequence'],\r\n    '1216': ['SQ', '1', 'UnifiedProcedureStepPerformedProcedureSequence'],\r\n    '1220': ['SQ', '1', 'RelatedProcedureStepSequence'],\r\n    '1222': ['LO', '1', 'ProcedureStepRelationshipType'],\r\n    '1224': ['SQ', '1', 'ReplacedProcedureStepSequence'],\r\n    '1230': ['LO', '1', 'DeletionLock'],\r\n    '1234': ['AE', '1', 'ReceivingAE'],\r\n    '1236': ['AE', '1', 'RequestingAE'],\r\n    '1238': ['LT', '1', 'ReasonForCancellation'],\r\n    '1242': ['CS', '1', 'SCPStatus'],\r\n    '1244': ['CS', '1', 'SubscriptionListStatus'],\r\n    '1246': ['CS', '1', 'UnifiedProcedureStepListStatus'],\r\n    '1324': ['UL', '1', 'BeamOrderIndex'],\r\n    '1338': ['FD', '1', 'DoubleExposureMeterset'],\r\n    '133A': ['FD', '4', 'DoubleExposureFieldDelta'],\r\n    '1401': ['SQ', '1', 'BrachyTaskSequence'],\r\n    '1402': ['DS', '1', 'ContinuationStartTotalReferenceAirKerma'],\r\n    '1403': ['DS', '1', 'ContinuationEndTotalReferenceAirKerma'],\r\n    '1404': ['IS', '1', 'ContinuationPulseNumber'],\r\n    '1405': ['SQ', '1', 'ChannelDeliveryOrderSequence'],\r\n    '1406': ['IS', '1', 'ReferencedChannelNumber'],\r\n    '1407': ['DS', '1', 'StartCumulativeTimeWeight'],\r\n    '1408': ['DS', '1', 'EndCumulativeTimeWeight'],\r\n    '1409': ['SQ', '1', 'OmittedChannelSequence'],\r\n    '140A': ['CS', '1', 'ReasonForChannelOmission'],\r\n    '140B': ['LO', '1', 'ReasonForChannelOmissionDescription'],\r\n    '140C': ['IS', '1', 'ChannelDeliveryOrderIndex'],\r\n    '140D': ['SQ', '1', 'ChannelDeliveryContinuationSequence'],\r\n    '140E': ['SQ', '1', 'OmittedApplicationSetupSequence']\r\n  },\r\n  '0076': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['LO', '1', 'ImplantAssemblyTemplateName'],\r\n    '0003': ['LO', '1', 'ImplantAssemblyTemplateIssuer'],\r\n    '0006': ['LO', '1', 'ImplantAssemblyTemplateVersion'],\r\n    '0008': ['SQ', '1', 'ReplacedImplantAssemblyTemplateSequence'],\r\n    '000A': ['CS', '1', 'ImplantAssemblyTemplateType'],\r\n    '000C': ['SQ', '1', 'OriginalImplantAssemblyTemplateSequence'],\r\n    '000E': ['SQ', '1', 'DerivationImplantAssemblyTemplateSequence'],\r\n    '0010': ['SQ', '1', 'ImplantAssemblyTemplateTargetAnatomySequence'],\r\n    '0020': ['SQ', '1', 'ProcedureTypeCodeSequence'],\r\n    '0030': ['LO', '1', 'SurgicalTechnique'],\r\n    '0032': ['SQ', '1', 'ComponentTypesSequence'],\r\n    '0034': ['SQ', '1', 'ComponentTypeCodeSequence'],\r\n    '0036': ['CS', '1', 'ExclusiveComponentType'],\r\n    '0038': ['CS', '1', 'MandatoryComponentType'],\r\n    '0040': ['SQ', '1', 'ComponentSequence'],\r\n    '0055': ['US', '1', 'ComponentID'],\r\n    '0060': ['SQ', '1', 'ComponentAssemblySequence'],\r\n    '0070': ['US', '1', 'Component1ReferencedID'],\r\n    '0080': ['US', '1', 'Component1ReferencedMatingFeatureSetID'],\r\n    '0090': ['US', '1', 'Component1ReferencedMatingFeatureID'],\r\n    '00A0': ['US', '1', 'Component2ReferencedID'],\r\n    '00B0': ['US', '1', 'Component2ReferencedMatingFeatureSetID'],\r\n    '00C0': ['US', '1', 'Component2ReferencedMatingFeatureID']\r\n  },\r\n  '0078': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['LO', '1', 'ImplantTemplateGroupName'],\r\n    '0010': ['ST', '1', 'ImplantTemplateGroupDescription'],\r\n    '0020': ['LO', '1', 'ImplantTemplateGroupIssuer'],\r\n    '0024': ['LO', '1', 'ImplantTemplateGroupVersion'],\r\n    '0026': ['SQ', '1', 'ReplacedImplantTemplateGroupSequence'],\r\n    '0028': ['SQ', '1', 'ImplantTemplateGroupTargetAnatomySequence'],\r\n    '002A': ['SQ', '1', 'ImplantTemplateGroupMembersSequence'],\r\n    '002E': ['US', '1', 'ImplantTemplateGroupMemberID'],\r\n    '0050': ['FD', '3', 'ThreeDImplantTemplateGroupMemberMatchingPoint'],\r\n    '0060': ['FD', '9', 'ThreeDImplantTemplateGroupMemberMatchingAxes'],\r\n    '0070': ['SQ', '1', 'ImplantTemplateGroupMemberMatching2DCoordinatesSequence'],\r\n    '0090': ['FD', '2', 'TwoDImplantTemplateGroupMemberMatchingPoint'],\r\n    '00A0': ['FD', '4', 'TwoDImplantTemplateGroupMemberMatchingAxes'],\r\n    '00B0': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionSequence'],\r\n    '00B2': ['LO', '1', 'ImplantTemplateGroupVariationDimensionName'],\r\n    '00B4': ['SQ', '1', 'ImplantTemplateGroupVariationDimensionRankSequence'],\r\n    '00B6': ['US', '1', 'ReferencedImplantTemplateGroupMemberID'],\r\n    '00B8': ['US', '1', 'ImplantTemplateGroupVariationDimensionRank']\r\n  },\r\n  '0080': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['SQ', '1', 'SurfaceScanAcquisitionTypeCodeSequence'],\r\n    '0002': ['SQ', '1', 'SurfaceScanModeCodeSequence'],\r\n    '0003': ['SQ', '1', 'RegistrationMethodCodeSequence'],\r\n    '0004': ['FD', '1', 'ShotDurationTime'],\r\n    '0005': ['FD', '1', 'ShotOffsetTime'],\r\n    '0006': ['US', '1-n', 'SurfacePointPresentationValueData'],\r\n    '0007': ['US', '3-3n', 'SurfacePointColorCIELabValueData'],\r\n    '0008': ['SQ', '1', 'UVMappingSequence'],\r\n    '0009': ['SH', '1', 'TextureLabel'],\r\n    '0010': ['OF', '1', 'UValueData'],\r\n    '0011': ['OF', '1', 'VValueData'],\r\n    '0012': ['SQ', '1', 'ReferencedTextureSequence'],\r\n    '0013': ['SQ', '1', 'ReferencedSurfaceDataSequence']\r\n  },\r\n  '0082': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['CS', '1', 'AssessmentSummary'],\r\n    '0003': ['UT', '1', 'AssessmentSummaryDescription'],\r\n    '0004': ['SQ', '1', 'AssessedSOPInstanceSequence'],\r\n    '0005': ['SQ', '1', 'ReferencedComparisonSOPInstanceSequence'],\r\n    '0006': ['UL', '1', 'NumberOfAssessmentObservations'],\r\n    '0007': ['SQ', '1', 'AssessmentObservationsSequence'],\r\n    '0008': ['CS', '1', 'ObservationSignificance'],\r\n    '000A': ['UT', '1', 'ObservationDescription'],\r\n    '000C': ['SQ', '1', 'StructuredConstraintObservationSequence'],\r\n    '0010': ['SQ', '1', 'AssessedAttributeValueSequence'],\r\n    '0016': ['LO', '1', 'AssessmentSetID'],\r\n    '0017': ['SQ', '1', 'AssessmentRequesterSequence'],\r\n    '0018': ['LO', '1', 'SelectorAttributeName'],\r\n    '0019': ['LO', '1', 'SelectorAttributeKeyword'],\r\n    '0021': ['SQ', '1', 'AssessmentTypeCodeSequence'],\r\n    '0022': ['SQ', '1', 'ObservationBasisCodeSequence'],\r\n    '0023': ['LO', '1', 'AssessmentLabel'],\r\n    '0032': ['CS', '1', 'ConstraintType'],\r\n    '0033': ['UT', '1', 'SpecificationSelectionGuidance'],\r\n    '0034': ['SQ', '1', 'ConstraintValueSequence'],\r\n    '0035': ['SQ', '1', 'RecommendedDefaultValueSequence'],\r\n    '0036': ['CS', '1', 'ConstraintViolationSignificance'],\r\n    '0037': ['UT', '1', 'ConstraintViolationCondition'],\r\n    '0038': ['CS', '1', 'ModifiableConstraintFlag']\r\n  },\r\n  '0088': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0130': ['SH', '1', 'StorageMediaFileSetID'],\r\n    '0140': ['UI', '1', 'StorageMediaFileSetUID'],\r\n    '0200': ['SQ', '1', 'IconImageSequence'],\r\n    '0904': ['LO', '1', 'TopicTitle'],\r\n    '0906': ['ST', '1', 'TopicSubject'],\r\n    '0910': ['LO', '1', 'TopicAuthor'],\r\n    '0912': ['LO', '1-32', 'TopicKeywords']\r\n  },\r\n  '0100': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0410': ['CS', '1', 'SOPInstanceStatus'],\r\n    '0420': ['DT', '1', 'SOPAuthorizationDateTime'],\r\n    '0424': ['LT', '1', 'SOPAuthorizationComment'],\r\n    '0426': ['LO', '1', 'AuthorizationEquipmentCertificationNumber']\r\n  },\r\n  '0400': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0005': ['US', '1', 'MACIDNumber'],\r\n    '0010': ['UI', '1', 'MACCalculationTransferSyntaxUID'],\r\n    '0015': ['CS', '1', 'MACAlgorithm'],\r\n    '0020': ['AT', '1-n', 'DataElementsSigned'],\r\n    '0100': ['UI', '1', 'DigitalSignatureUID'],\r\n    '0105': ['DT', '1', 'DigitalSignatureDateTime'],\r\n    '0110': ['CS', '1', 'CertificateType'],\r\n    '0115': ['OB', '1', 'CertificateOfSigner'],\r\n    '0120': ['OB', '1', 'Signature'],\r\n    '0305': ['CS', '1', 'CertifiedTimestampType'],\r\n    '0310': ['OB', '1', 'CertifiedTimestamp'],\r\n    '0315': ['FL', '1', ''],\r\n    '0401': ['SQ', '1', 'DigitalSignaturePurposeCodeSequence'],\r\n    '0402': ['SQ', '1', 'ReferencedDigitalSignatureSequence'],\r\n    '0403': ['SQ', '1', 'ReferencedSOPInstanceMACSequence'],\r\n    '0404': ['OB', '1', 'MAC'],\r\n    '0500': ['SQ', '1', 'EncryptedAttributesSequence'],\r\n    '0510': ['UI', '1', 'EncryptedContentTransferSyntaxUID'],\r\n    '0520': ['OB', '1', 'EncryptedContent'],\r\n    '0550': ['SQ', '1', 'ModifiedAttributesSequence'],\r\n    '0551': ['SQ', '1', 'NonconformingModifiedAttributesSequence'],\r\n    '0552': ['OB', '1', 'NonconformingDataElementValue'],\r\n    '0561': ['SQ', '1', 'OriginalAttributesSequence'],\r\n    '0562': ['DT', '1', 'AttributeModificationDateTime'],\r\n    '0563': ['LO', '1', 'ModifyingSystem'],\r\n    '0564': ['LO', '1', 'SourceOfPreviousValues'],\r\n    '0565': ['CS', '1', 'ReasonForTheAttributeModification'],\r\n    '0600': ['CS', '1', 'InstanceOriginStatus']\r\n  },\r\n  '1000': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['US', '3', 'EscapeTriplet'],\r\n    '0011': ['US', '3', 'RunLengthTriplet'],\r\n    '0012': ['US', '1', 'HuffmanTableSize'],\r\n    '0013': ['US', '3', 'HuffmanTableTriplet'],\r\n    '0014': ['US', '1', 'ShiftTableSize'],\r\n    '0015': ['US', '3', 'ShiftTableTriplet']\r\n  },\r\n  '1010': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0004': ['US', '1-n', 'ZonalMap']\r\n  },\r\n  '2000': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['IS', '1', 'NumberOfCopies'],\r\n    '001E': ['SQ', '1', 'PrinterConfigurationSequence'],\r\n    '0020': ['CS', '1', 'PrintPriority'],\r\n    '0030': ['CS', '1', 'MediumType'],\r\n    '0040': ['CS', '1', 'FilmDestination'],\r\n    '0050': ['LO', '1', 'FilmSessionLabel'],\r\n    '0060': ['IS', '1', 'MemoryAllocation'],\r\n    '0061': ['IS', '1', 'MaximumMemoryAllocation'],\r\n    '0062': ['CS', '1', 'ColorImagePrintingFlag'],\r\n    '0063': ['CS', '1', 'CollationFlag'],\r\n    '0065': ['CS', '1', 'AnnotationFlag'],\r\n    '0067': ['CS', '1', 'ImageOverlayFlag'],\r\n    '0069': ['CS', '1', 'PresentationLUTFlag'],\r\n    '006A': ['CS', '1', 'ImageBoxPresentationLUTFlag'],\r\n    '00A0': ['US', '1', 'MemoryBitDepth'],\r\n    '00A1': ['US', '1', 'PrintingBitDepth'],\r\n    '00A2': ['SQ', '1', 'MediaInstalledSequence'],\r\n    '00A4': ['SQ', '1', 'OtherMediaAvailableSequence'],\r\n    '00A8': ['SQ', '1', 'SupportedImageDisplayFormatsSequence'],\r\n    '0500': ['SQ', '1', 'ReferencedFilmBoxSequence'],\r\n    '0510': ['SQ', '1', 'ReferencedStoredPrintSequence']\r\n  },\r\n  '2010': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['ST', '1', 'ImageDisplayFormat'],\r\n    '0030': ['CS', '1', 'AnnotationDisplayFormatID'],\r\n    '0040': ['CS', '1', 'FilmOrientation'],\r\n    '0050': ['CS', '1', 'FilmSizeID'],\r\n    '0052': ['CS', '1', 'PrinterResolutionID'],\r\n    '0054': ['CS', '1', 'DefaultPrinterResolutionID'],\r\n    '0060': ['CS', '1', 'MagnificationType'],\r\n    '0080': ['CS', '1', 'SmoothingType'],\r\n    '00A6': ['CS', '1', 'DefaultMagnificationType'],\r\n    '00A7': ['CS', '1-n', 'OtherMagnificationTypesAvailable'],\r\n    '00A8': ['CS', '1', 'DefaultSmoothingType'],\r\n    '00A9': ['CS', '1-n', 'OtherSmoothingTypesAvailable'],\r\n    '0100': ['CS', '1', 'BorderDensity'],\r\n    '0110': ['CS', '1', 'EmptyImageDensity'],\r\n    '0120': ['US', '1', 'MinDensity'],\r\n    '0130': ['US', '1', 'MaxDensity'],\r\n    '0140': ['CS', '1', 'Trim'],\r\n    '0150': ['ST', '1', 'ConfigurationInformation'],\r\n    '0152': ['LT', '1', 'ConfigurationInformationDescription'],\r\n    '0154': ['IS', '1', 'MaximumCollatedFilms'],\r\n    '015E': ['US', '1', 'Illumination'],\r\n    '0160': ['US', '1', 'ReflectedAmbientLight'],\r\n    '0376': ['DS', '2', 'PrinterPixelSpacing'],\r\n    '0500': ['SQ', '1', 'ReferencedFilmSessionSequence'],\r\n    '0510': ['SQ', '1', 'ReferencedImageBoxSequence'],\r\n    '0520': ['SQ', '1', 'ReferencedBasicAnnotationBoxSequence']\r\n  },\r\n  '2020': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['US', '1', 'ImageBoxPosition'],\r\n    '0020': ['CS', '1', 'Polarity'],\r\n    '0030': ['DS', '1', 'RequestedImageSize'],\r\n    '0040': ['CS', '1', 'RequestedDecimateCropBehavior'],\r\n    '0050': ['CS', '1', 'RequestedResolutionID'],\r\n    '00A0': ['CS', '1', 'RequestedImageSizeFlag'],\r\n    '00A2': ['CS', '1', 'DecimateCropResult'],\r\n    '0110': ['SQ', '1', 'BasicGrayscaleImageSequence'],\r\n    '0111': ['SQ', '1', 'BasicColorImageSequence'],\r\n    '0130': ['SQ', '1', 'ReferencedImageOverlayBoxSequence'],\r\n    '0140': ['SQ', '1', 'ReferencedVOILUTBoxSequence']\r\n  },\r\n  '2030': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['US', '1', 'AnnotationPosition'],\r\n    '0020': ['LO', '1', 'TextString']\r\n  },\r\n  '2040': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['SQ', '1', 'ReferencedOverlayPlaneSequence'],\r\n    '0011': ['US', '1-99', 'ReferencedOverlayPlaneGroups'],\r\n    '0020': ['SQ', '1', 'OverlayPixelDataSequence'],\r\n    '0060': ['CS', '1', 'OverlayMagnificationType'],\r\n    '0070': ['CS', '1', 'OverlaySmoothingType'],\r\n    '0072': ['CS', '1', 'OverlayOrImageMagnification'],\r\n    '0074': ['US', '1', 'MagnifyToNumberOfColumns'],\r\n    '0080': ['CS', '1', 'OverlayForegroundDensity'],\r\n    '0082': ['CS', '1', 'OverlayBackgroundDensity'],\r\n    '0090': ['CS', '1', 'OverlayMode'],\r\n    '0100': ['CS', '1', 'ThresholdDensity'],\r\n    '0500': ['SQ', '1', 'ReferencedImageBoxSequenceRetired']\r\n  },\r\n  '2050': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['SQ', '1', 'PresentationLUTSequence'],\r\n    '0020': ['CS', '1', 'PresentationLUTShape'],\r\n    '0500': ['SQ', '1', 'ReferencedPresentationLUTSequence']\r\n  },\r\n  '2100': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['SH', '1', 'PrintJobID'],\r\n    '0020': ['CS', '1', 'ExecutionStatus'],\r\n    '0030': ['CS', '1', 'ExecutionStatusInfo'],\r\n    '0040': ['DA', '1', 'CreationDate'],\r\n    '0050': ['TM', '1', 'CreationTime'],\r\n    '0070': ['AE', '1', 'Originator'],\r\n    '0140': ['AE', '1', 'DestinationAE'],\r\n    '0160': ['SH', '1', 'OwnerID'],\r\n    '0170': ['IS', '1', 'NumberOfFilms'],\r\n    '0500': ['SQ', '1', 'ReferencedPrintJobSequencePullStoredPrint']\r\n  },\r\n  '2110': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['CS', '1', 'PrinterStatus'],\r\n    '0020': ['CS', '1', 'PrinterStatusInfo'],\r\n    '0030': ['LO', '1', 'PrinterName'],\r\n    '0099': ['SH', '1', 'PrintQueueID']\r\n  },\r\n  '2120': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['CS', '1', 'QueueStatus'],\r\n    '0050': ['SQ', '1', 'PrintJobDescriptionSequence'],\r\n    '0070': ['SQ', '1', 'ReferencedPrintJobSequence']\r\n  },\r\n  '2130': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['SQ', '1', 'PrintManagementCapabilitiesSequence'],\r\n    '0015': ['SQ', '1', 'PrinterCharacteristicsSequence'],\r\n    '0030': ['SQ', '1', 'FilmBoxContentSequence'],\r\n    '0040': ['SQ', '1', 'ImageBoxContentSequence'],\r\n    '0050': ['SQ', '1', 'AnnotationContentSequence'],\r\n    '0060': ['SQ', '1', 'ImageOverlayBoxContentSequence'],\r\n    '0080': ['SQ', '1', 'PresentationLUTContentSequence'],\r\n    '00A0': ['SQ', '1', 'ProposedStudySequence'],\r\n    '00C0': ['SQ', '1', 'OriginalImageSequence']\r\n  },\r\n  '2200': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['CS', '1', 'LabelUsingInformationExtractedFromInstances'],\r\n    '0002': ['UT', '1', 'LabelText'],\r\n    '0003': ['CS', '1', 'LabelStyleSelection'],\r\n    '0004': ['LT', '1', 'MediaDisposition'],\r\n    '0005': ['LT', '1', 'BarcodeValue'],\r\n    '0006': ['CS', '1', 'BarcodeSymbology'],\r\n    '0007': ['CS', '1', 'AllowMediaSplitting'],\r\n    '0008': ['CS', '1', 'IncludeNonDICOMObjects'],\r\n    '0009': ['CS', '1', 'IncludeDisplayApplication'],\r\n    '000A': ['CS', '1', 'PreserveCompositeInstancesAfterMediaCreation'],\r\n    '000B': ['US', '1', 'TotalNumberOfPiecesOfMediaCreated'],\r\n    '000C': ['LO', '1', 'RequestedMediaApplicationProfile'],\r\n    '000D': ['SQ', '1', 'ReferencedStorageMediaSequence'],\r\n    '000E': ['AT', '1-n', 'FailureAttributes'],\r\n    '000F': ['CS', '1', 'AllowLossyCompression'],\r\n    '0020': ['CS', '1', 'RequestPriority']\r\n  },\r\n  '3002': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0002': ['SH', '1', 'RTImageLabel'],\r\n    '0003': ['LO', '1', 'RTImageName'],\r\n    '0004': ['ST', '1', 'RTImageDescription'],\r\n    '000A': ['CS', '1', 'ReportedValuesOrigin'],\r\n    '000C': ['CS', '1', 'RTImagePlane'],\r\n    '000D': ['DS', '3', 'XRayImageReceptorTranslation'],\r\n    '000E': ['DS', '1', 'XRayImageReceptorAngle'],\r\n    '0010': ['DS', '6', 'RTImageOrientation'],\r\n    '0011': ['DS', '2', 'ImagePlanePixelSpacing'],\r\n    '0012': ['DS', '2', 'RTImagePosition'],\r\n    '0020': ['SH', '1', 'RadiationMachineName'],\r\n    '0022': ['DS', '1', 'RadiationMachineSAD'],\r\n    '0024': ['DS', '1', 'RadiationMachineSSD'],\r\n    '0026': ['DS', '1', 'RTImageSID'],\r\n    '0028': ['DS', '1', 'SourceToReferenceObjectDistance'],\r\n    '0029': ['IS', '1', 'FractionNumber'],\r\n    '0030': ['SQ', '1', 'ExposureSequence'],\r\n    '0032': ['DS', '1', 'MetersetExposure'],\r\n    '0034': ['DS', '4', 'DiaphragmPosition'],\r\n    '0040': ['SQ', '1', 'FluenceMapSequence'],\r\n    '0041': ['CS', '1', 'FluenceDataSource'],\r\n    '0042': ['DS', '1', 'FluenceDataScale'],\r\n    '0050': ['SQ', '1', 'PrimaryFluenceModeSequence'],\r\n    '0051': ['CS', '1', 'FluenceMode'],\r\n    '0052': ['SH', '1', 'FluenceModeID']\r\n  },\r\n  '3004': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['CS', '1', 'DVHType'],\r\n    '0002': ['CS', '1', 'DoseUnits'],\r\n    '0004': ['CS', '1', 'DoseType'],\r\n    '0005': ['CS', '1', 'SpatialTransformOfDose'],\r\n    '0006': ['LO', '1', 'DoseComment'],\r\n    '0008': ['DS', '3', 'NormalizationPoint'],\r\n    '000A': ['CS', '1', 'DoseSummationType'],\r\n    '000C': ['DS', '2-n', 'GridFrameOffsetVector'],\r\n    '000E': ['DS', '1', 'DoseGridScaling'],\r\n    '0010': ['SQ', '1', 'RTDoseROISequence'],\r\n    '0012': ['DS', '1', 'DoseValue'],\r\n    '0014': ['CS', '1-3', 'TissueHeterogeneityCorrection'],\r\n    '0040': ['DS', '3', 'DVHNormalizationPoint'],\r\n    '0042': ['DS', '1', 'DVHNormalizationDoseValue'],\r\n    '0050': ['SQ', '1', 'DVHSequence'],\r\n    '0052': ['DS', '1', 'DVHDoseScaling'],\r\n    '0054': ['CS', '1', 'DVHVolumeUnits'],\r\n    '0056': ['IS', '1', 'DVHNumberOfBins'],\r\n    '0058': ['DS', '2-2n', 'DVHData'],\r\n    '0060': ['SQ', '1', 'DVHReferencedROISequence'],\r\n    '0062': ['CS', '1', 'DVHROIContributionType'],\r\n    '0070': ['DS', '1', 'DVHMinimumDose'],\r\n    '0072': ['DS', '1', 'DVHMaximumDose'],\r\n    '0074': ['DS', '1', 'DVHMeanDose']\r\n  },\r\n  '3006': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0002': ['SH', '1', 'StructureSetLabel'],\r\n    '0004': ['LO', '1', 'StructureSetName'],\r\n    '0006': ['ST', '1', 'StructureSetDescription'],\r\n    '0008': ['DA', '1', 'StructureSetDate'],\r\n    '0009': ['TM', '1', 'StructureSetTime'],\r\n    '0010': ['SQ', '1', 'ReferencedFrameOfReferenceSequence'],\r\n    '0012': ['SQ', '1', 'RTReferencedStudySequence'],\r\n    '0014': ['SQ', '1', 'RTReferencedSeriesSequence'],\r\n    '0016': ['SQ', '1', 'ContourImageSequence'],\r\n    '0018': ['SQ', '1', 'PredecessorStructureSetSequence'],\r\n    '0020': ['SQ', '1', 'StructureSetROISequence'],\r\n    '0022': ['IS', '1', 'ROINumber'],\r\n    '0024': ['UI', '1', 'ReferencedFrameOfReferenceUID'],\r\n    '0026': ['LO', '1', 'ROIName'],\r\n    '0028': ['ST', '1', 'ROIDescription'],\r\n    '002A': ['IS', '3', 'ROIDisplayColor'],\r\n    '002C': ['DS', '1', 'ROIVolume'],\r\n    '0030': ['SQ', '1', 'RTRelatedROISequence'],\r\n    '0033': ['CS', '1', 'RTROIRelationship'],\r\n    '0036': ['CS', '1', 'ROIGenerationAlgorithm'],\r\n    '0037': ['SQ', '1', 'ROIDerivationAlgorithmIdentificationSequence'],\r\n    '0038': ['LO', '1', 'ROIGenerationDescription'],\r\n    '0039': ['SQ', '1', 'ROIContourSequence'],\r\n    '0040': ['SQ', '1', 'ContourSequence'],\r\n    '0042': ['CS', '1', 'ContourGeometricType'],\r\n    '0044': ['DS', '1', 'ContourSlabThickness'],\r\n    '0045': ['DS', '3', 'ContourOffsetVector'],\r\n    '0046': ['IS', '1', 'NumberOfContourPoints'],\r\n    '0048': ['IS', '1', 'ContourNumber'],\r\n    '0049': ['IS', '1-n', 'AttachedContours'],\r\n    '004A': ['SQ', '1', 'SourcePixelPlanesCharacteristicsSequence'],\r\n    '0050': ['DS', '3-3n', 'ContourData'],\r\n    '0080': ['SQ', '1', 'RTROIObservationsSequence'],\r\n    '0082': ['IS', '1', 'ObservationNumber'],\r\n    '0084': ['IS', '1', 'ReferencedROINumber'],\r\n    '0085': ['SH', '1', 'ROIObservationLabel'],\r\n    '0086': ['SQ', '1', 'RTROIIdentificationCodeSequence'],\r\n    '0088': ['ST', '1', 'ROIObservationDescription'],\r\n    '00A0': ['SQ', '1', 'RelatedRTROIObservationsSequence'],\r\n    '00A4': ['CS', '1', 'RTROIInterpretedType'],\r\n    '00A6': ['PN', '1', 'ROIInterpreter'],\r\n    '00B0': ['SQ', '1', 'ROIPhysicalPropertiesSequence'],\r\n    '00B2': ['CS', '1', 'ROIPhysicalProperty'],\r\n    '00B4': ['DS', '1', 'ROIPhysicalPropertyValue'],\r\n    '00B6': ['SQ', '1', 'ROIElementalCompositionSequence'],\r\n    '00B7': ['US', '1', 'ROIElementalCompositionAtomicNumber'],\r\n    '00B8': ['FL', '1', 'ROIElementalCompositionAtomicMassFraction'],\r\n    '00B9': ['SQ', '1', 'AdditionalRTROIIdentificationCodeSequence'],\r\n    '00C0': ['SQ', '1', 'FrameOfReferenceRelationshipSequence'],\r\n    '00C2': ['UI', '1', 'RelatedFrameOfReferenceUID'],\r\n    '00C4': ['CS', '1', 'FrameOfReferenceTransformationType'],\r\n    '00C6': ['DS', '16', 'FrameOfReferenceTransformationMatrix'],\r\n    '00C8': ['LO', '1', 'FrameOfReferenceTransformationComment'],\r\n    '00C9': ['SQ', '1', 'PatientLocationCoordinatesSequence'],\r\n    '00CA': ['SQ', '1', 'PatientLocationCoordinatesCodeSequence'],\r\n    '00CB': ['SQ', '1', 'PatientSupportPositionSequence']\r\n  },\r\n  '3008': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['SQ', '1', 'MeasuredDoseReferenceSequence'],\r\n    '0012': ['ST', '1', 'MeasuredDoseDescription'],\r\n    '0014': ['CS', '1', 'MeasuredDoseType'],\r\n    '0016': ['DS', '1', 'MeasuredDoseValue'],\r\n    '0020': ['SQ', '1', 'TreatmentSessionBeamSequence'],\r\n    '0021': ['SQ', '1', 'TreatmentSessionIonBeamSequence'],\r\n    '0022': ['IS', '1', 'CurrentFractionNumber'],\r\n    '0024': ['DA', '1', 'TreatmentControlPointDate'],\r\n    '0025': ['TM', '1', 'TreatmentControlPointTime'],\r\n    '002A': ['CS', '1', 'TreatmentTerminationStatus'],\r\n    '002B': ['SH', '1', 'TreatmentTerminationCode'],\r\n    '002C': ['CS', '1', 'TreatmentVerificationStatus'],\r\n    '0030': ['SQ', '1', 'ReferencedTreatmentRecordSequence'],\r\n    '0032': ['DS', '1', 'SpecifiedPrimaryMeterset'],\r\n    '0033': ['DS', '1', 'SpecifiedSecondaryMeterset'],\r\n    '0036': ['DS', '1', 'DeliveredPrimaryMeterset'],\r\n    '0037': ['DS', '1', 'DeliveredSecondaryMeterset'],\r\n    '003A': ['DS', '1', 'SpecifiedTreatmentTime'],\r\n    '003B': ['DS', '1', 'DeliveredTreatmentTime'],\r\n    '0040': ['SQ', '1', 'ControlPointDeliverySequence'],\r\n    '0041': ['SQ', '1', 'IonControlPointDeliverySequence'],\r\n    '0042': ['DS', '1', 'SpecifiedMeterset'],\r\n    '0044': ['DS', '1', 'DeliveredMeterset'],\r\n    '0045': ['FL', '1', 'MetersetRateSet'],\r\n    '0046': ['FL', '1', 'MetersetRateDelivered'],\r\n    '0047': ['FL', '1-n', 'ScanSpotMetersetsDelivered'],\r\n    '0048': ['DS', '1', 'DoseRateDelivered'],\r\n    '0050': ['SQ', '1', 'TreatmentSummaryCalculatedDoseReferenceSequence'],\r\n    '0052': ['DS', '1', 'CumulativeDoseToDoseReference'],\r\n    '0054': ['DA', '1', 'FirstTreatmentDate'],\r\n    '0056': ['DA', '1', 'MostRecentTreatmentDate'],\r\n    '005A': ['IS', '1', 'NumberOfFractionsDelivered'],\r\n    '0060': ['SQ', '1', 'OverrideSequence'],\r\n    '0061': ['AT', '1', 'ParameterSequencePointer'],\r\n    '0062': ['AT', '1', 'OverrideParameterPointer'],\r\n    '0063': ['IS', '1', 'ParameterItemIndex'],\r\n    '0064': ['IS', '1', 'MeasuredDoseReferenceNumber'],\r\n    '0065': ['AT', '1', 'ParameterPointer'],\r\n    '0066': ['ST', '1', 'OverrideReason'],\r\n    '0067': ['US', '1', 'ParameterValueNumber'],\r\n    '0068': ['SQ', '1', 'CorrectedParameterSequence'],\r\n    '006A': ['FL', '1', 'CorrectionValue'],\r\n    '0070': ['SQ', '1', 'CalculatedDoseReferenceSequence'],\r\n    '0072': ['IS', '1', 'CalculatedDoseReferenceNumber'],\r\n    '0074': ['ST', '1', 'CalculatedDoseReferenceDescription'],\r\n    '0076': ['DS', '1', 'CalculatedDoseReferenceDoseValue'],\r\n    '0078': ['DS', '1', 'StartMeterset'],\r\n    '007A': ['DS', '1', 'EndMeterset'],\r\n    '0080': ['SQ', '1', 'ReferencedMeasuredDoseReferenceSequence'],\r\n    '0082': ['IS', '1', 'ReferencedMeasuredDoseReferenceNumber'],\r\n    '0090': ['SQ', '1', 'ReferencedCalculatedDoseReferenceSequence'],\r\n    '0092': ['IS', '1', 'ReferencedCalculatedDoseReferenceNumber'],\r\n    '00A0': ['SQ', '1', 'BeamLimitingDeviceLeafPairsSequence'],\r\n    '00B0': ['SQ', '1', 'RecordedWedgeSequence'],\r\n    '00C0': ['SQ', '1', 'RecordedCompensatorSequence'],\r\n    '00D0': ['SQ', '1', 'RecordedBlockSequence'],\r\n    '00D1': ['SQ', '1', 'RecordedBlockSlabSequence'],\r\n    '00E0': ['SQ', '1', 'TreatmentSummaryMeasuredDoseReferenceSequence'],\r\n    '00F0': ['SQ', '1', 'RecordedSnoutSequence'],\r\n    '00F2': ['SQ', '1', 'RecordedRangeShifterSequence'],\r\n    '00F4': ['SQ', '1', 'RecordedLateralSpreadingDeviceSequence'],\r\n    '00F6': ['SQ', '1', 'RecordedRangeModulatorSequence'],\r\n    '0100': ['SQ', '1', 'RecordedSourceSequence'],\r\n    '0105': ['LO', '1', 'SourceSerialNumber'],\r\n    '0110': ['SQ', '1', 'TreatmentSessionApplicationSetupSequence'],\r\n    '0116': ['CS', '1', 'ApplicationSetupCheck'],\r\n    '0120': ['SQ', '1', 'RecordedBrachyAccessoryDeviceSequence'],\r\n    '0122': ['IS', '1', 'ReferencedBrachyAccessoryDeviceNumber'],\r\n    '0130': ['SQ', '1', 'RecordedChannelSequence'],\r\n    '0132': ['DS', '1', 'SpecifiedChannelTotalTime'],\r\n    '0134': ['DS', '1', 'DeliveredChannelTotalTime'],\r\n    '0136': ['IS', '1', 'SpecifiedNumberOfPulses'],\r\n    '0138': ['IS', '1', 'DeliveredNumberOfPulses'],\r\n    '013A': ['DS', '1', 'SpecifiedPulseRepetitionInterval'],\r\n    '013C': ['DS', '1', 'DeliveredPulseRepetitionInterval'],\r\n    '0140': ['SQ', '1', 'RecordedSourceApplicatorSequence'],\r\n    '0142': ['IS', '1', 'ReferencedSourceApplicatorNumber'],\r\n    '0150': ['SQ', '1', 'RecordedChannelShieldSequence'],\r\n    '0152': ['IS', '1', 'ReferencedChannelShieldNumber'],\r\n    '0160': ['SQ', '1', 'BrachyControlPointDeliveredSequence'],\r\n    '0162': ['DA', '1', 'SafePositionExitDate'],\r\n    '0164': ['TM', '1', 'SafePositionExitTime'],\r\n    '0166': ['DA', '1', 'SafePositionReturnDate'],\r\n    '0168': ['TM', '1', 'SafePositionReturnTime'],\r\n    '0171': ['SQ', '1', 'PulseSpecificBrachyControlPointDeliveredSequence'],\r\n    '0172': ['US', '1', 'PulseNumber'],\r\n    '0173': ['SQ', '1', 'BrachyPulseControlPointDeliveredSequence'],\r\n    '0200': ['CS', '1', 'CurrentTreatmentStatus'],\r\n    '0202': ['ST', '1', 'TreatmentStatusComment'],\r\n    '0220': ['SQ', '1', 'FractionGroupSummarySequence'],\r\n    '0223': ['IS', '1', 'ReferencedFractionNumber'],\r\n    '0224': ['CS', '1', 'FractionGroupType'],\r\n    '0230': ['CS', '1', 'BeamStopperPosition'],\r\n    '0240': ['SQ', '1', 'FractionStatusSummarySequence'],\r\n    '0250': ['DA', '1', 'TreatmentDate'],\r\n    '0251': ['TM', '1', 'TreatmentTime']\r\n  },\r\n  '300A': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0002': ['SH', '1', 'RTPlanLabel'],\r\n    '0003': ['LO', '1', 'RTPlanName'],\r\n    '0004': ['ST', '1', 'RTPlanDescription'],\r\n    '0006': ['DA', '1', 'RTPlanDate'],\r\n    '0007': ['TM', '1', 'RTPlanTime'],\r\n    '0009': ['LO', '1-n', 'TreatmentProtocols'],\r\n    '000A': ['CS', '1', 'PlanIntent'],\r\n    '000B': ['LO', '1-n', 'TreatmentSites'],\r\n    '000C': ['CS', '1', 'RTPlanGeometry'],\r\n    '000E': ['ST', '1', 'PrescriptionDescription'],\r\n    '0010': ['SQ', '1', 'DoseReferenceSequence'],\r\n    '0012': ['IS', '1', 'DoseReferenceNumber'],\r\n    '0013': ['UI', '1', 'DoseReferenceUID'],\r\n    '0014': ['CS', '1', 'DoseReferenceStructureType'],\r\n    '0015': ['CS', '1', 'NominalBeamEnergyUnit'],\r\n    '0016': ['LO', '1', 'DoseReferenceDescription'],\r\n    '0018': ['DS', '3', 'DoseReferencePointCoordinates'],\r\n    '001A': ['DS', '1', 'NominalPriorDose'],\r\n    '0020': ['CS', '1', 'DoseReferenceType'],\r\n    '0021': ['DS', '1', 'ConstraintWeight'],\r\n    '0022': ['DS', '1', 'DeliveryWarningDose'],\r\n    '0023': ['DS', '1', 'DeliveryMaximumDose'],\r\n    '0025': ['DS', '1', 'TargetMinimumDose'],\r\n    '0026': ['DS', '1', 'TargetPrescriptionDose'],\r\n    '0027': ['DS', '1', 'TargetMaximumDose'],\r\n    '0028': ['DS', '1', 'TargetUnderdoseVolumeFraction'],\r\n    '002A': ['DS', '1', 'OrganAtRiskFullVolumeDose'],\r\n    '002B': ['DS', '1', 'OrganAtRiskLimitDose'],\r\n    '002C': ['DS', '1', 'OrganAtRiskMaximumDose'],\r\n    '002D': ['DS', '1', 'OrganAtRiskOverdoseVolumeFraction'],\r\n    '0040': ['SQ', '1', 'ToleranceTableSequence'],\r\n    '0042': ['IS', '1', 'ToleranceTableNumber'],\r\n    '0043': ['SH', '1', 'ToleranceTableLabel'],\r\n    '0044': ['DS', '1', 'GantryAngleTolerance'],\r\n    '0046': ['DS', '1', 'BeamLimitingDeviceAngleTolerance'],\r\n    '0048': ['SQ', '1', 'BeamLimitingDeviceToleranceSequence'],\r\n    '004A': ['DS', '1', 'BeamLimitingDevicePositionTolerance'],\r\n    '004B': ['FL', '1', 'SnoutPositionTolerance'],\r\n    '004C': ['DS', '1', 'PatientSupportAngleTolerance'],\r\n    '004E': ['DS', '1', 'TableTopEccentricAngleTolerance'],\r\n    '004F': ['FL', '1', 'TableTopPitchAngleTolerance'],\r\n    '0050': ['FL', '1', 'TableTopRollAngleTolerance'],\r\n    '0051': ['DS', '1', 'TableTopVerticalPositionTolerance'],\r\n    '0052': ['DS', '1', 'TableTopLongitudinalPositionTolerance'],\r\n    '0053': ['DS', '1', 'TableTopLateralPositionTolerance'],\r\n    '0055': ['CS', '1', 'RTPlanRelationship'],\r\n    '0070': ['SQ', '1', 'FractionGroupSequence'],\r\n    '0071': ['IS', '1', 'FractionGroupNumber'],\r\n    '0072': ['LO', '1', 'FractionGroupDescription'],\r\n    '0078': ['IS', '1', 'NumberOfFractionsPlanned'],\r\n    '0079': ['IS', '1', 'NumberOfFractionPatternDigitsPerDay'],\r\n    '007A': ['IS', '1', 'RepeatFractionCycleLength'],\r\n    '007B': ['LT', '1', 'FractionPattern'],\r\n    '0080': ['IS', '1', 'NumberOfBeams'],\r\n    '0082': ['DS', '3', 'BeamDoseSpecificationPoint'],\r\n    '0083': ['UI', '1', 'ReferencedDoseReferenceUID'],\r\n    '0084': ['DS', '1', 'BeamDose'],\r\n    '0086': ['DS', '1', 'BeamMeterset'],\r\n    '0088': ['FL', '1', 'BeamDosePointDepth'],\r\n    '0089': ['FL', '1', 'BeamDosePointEquivalentDepth'],\r\n    '008A': ['FL', '1', 'BeamDosePointSSD'],\r\n    '008B': ['CS', '1', 'BeamDoseMeaning'],\r\n    '008C': ['SQ', '1', 'BeamDoseVerificationControlPointSequence'],\r\n    '008D': ['FL', '1', 'AverageBeamDosePointDepth'],\r\n    '008E': ['FL', '1', 'AverageBeamDosePointEquivalentDepth'],\r\n    '008F': ['FL', '1', 'AverageBeamDosePointSSD'],\r\n    '0090': ['CS', '1', 'BeamDoseType'],\r\n    '0091': ['DS', '1', 'AlternateBeamDose'],\r\n    '0092': ['CS', '1', 'AlternateBeamDoseType'],\r\n    '0093': ['CS', '1', 'DepthValueAveragingFlag'],\r\n    '0094': ['DS', '1', 'BeamDosePointSourceToExternalContourDistance'],\r\n    '00A0': ['IS', '1', 'NumberOfBrachyApplicationSetups'],\r\n    '00A2': ['DS', '3', 'BrachyApplicationSetupDoseSpecificationPoint'],\r\n    '00A4': ['DS', '1', 'BrachyApplicationSetupDose'],\r\n    '00B0': ['SQ', '1', 'BeamSequence'],\r\n    '00B2': ['SH', '1', 'TreatmentMachineName'],\r\n    '00B3': ['CS', '1', 'PrimaryDosimeterUnit'],\r\n    '00B4': ['DS', '1', 'SourceAxisDistance'],\r\n    '00B6': ['SQ', '1', 'BeamLimitingDeviceSequence'],\r\n    '00B8': ['CS', '1', 'RTBeamLimitingDeviceType'],\r\n    '00BA': ['DS', '1', 'SourceToBeamLimitingDeviceDistance'],\r\n    '00BB': ['FL', '1', 'IsocenterToBeamLimitingDeviceDistance'],\r\n    '00BC': ['IS', '1', 'NumberOfLeafJawPairs'],\r\n    '00BE': ['DS', '3-n', 'LeafPositionBoundaries'],\r\n    '00C0': ['IS', '1', 'BeamNumber'],\r\n    '00C2': ['LO', '1', 'BeamName'],\r\n    '00C3': ['ST', '1', 'BeamDescription'],\r\n    '00C4': ['CS', '1', 'BeamType'],\r\n    '00C5': ['FD', '1', 'BeamDeliveryDurationLimit'],\r\n    '00C6': ['CS', '1', 'RadiationType'],\r\n    '00C7': ['CS', '1', 'HighDoseTechniqueType'],\r\n    '00C8': ['IS', '1', 'ReferenceImageNumber'],\r\n    '00CA': ['SQ', '1', 'PlannedVerificationImageSequence'],\r\n    '00CC': ['LO', '1-n', 'ImagingDeviceSpecificAcquisitionParameters'],\r\n    '00CE': ['CS', '1', 'TreatmentDeliveryType'],\r\n    '00D0': ['IS', '1', 'NumberOfWedges'],\r\n    '00D1': ['SQ', '1', 'WedgeSequence'],\r\n    '00D2': ['IS', '1', 'WedgeNumber'],\r\n    '00D3': ['CS', '1', 'WedgeType'],\r\n    '00D4': ['SH', '1', 'WedgeID'],\r\n    '00D5': ['IS', '1', 'WedgeAngle'],\r\n    '00D6': ['DS', '1', 'WedgeFactor'],\r\n    '00D7': ['FL', '1', 'TotalWedgeTrayWaterEquivalentThickness'],\r\n    '00D8': ['DS', '1', 'WedgeOrientation'],\r\n    '00D9': ['FL', '1', 'IsocenterToWedgeTrayDistance'],\r\n    '00DA': ['DS', '1', 'SourceToWedgeTrayDistance'],\r\n    '00DB': ['FL', '1', 'WedgeThinEdgePosition'],\r\n    '00DC': ['SH', '1', 'BolusID'],\r\n    '00DD': ['ST', '1', 'BolusDescription'],\r\n    '00DE': ['DS', '1', 'EffectiveWedgeAngle'],\r\n    '00E0': ['IS', '1', 'NumberOfCompensators'],\r\n    '00E1': ['SH', '1', 'MaterialID'],\r\n    '00E2': ['DS', '1', 'TotalCompensatorTrayFactor'],\r\n    '00E3': ['SQ', '1', 'CompensatorSequence'],\r\n    '00E4': ['IS', '1', 'CompensatorNumber'],\r\n    '00E5': ['SH', '1', 'CompensatorID'],\r\n    '00E6': ['DS', '1', 'SourceToCompensatorTrayDistance'],\r\n    '00E7': ['IS', '1', 'CompensatorRows'],\r\n    '00E8': ['IS', '1', 'CompensatorColumns'],\r\n    '00E9': ['DS', '2', 'CompensatorPixelSpacing'],\r\n    '00EA': ['DS', '2', 'CompensatorPosition'],\r\n    '00EB': ['DS', '1-n', 'CompensatorTransmissionData'],\r\n    '00EC': ['DS', '1-n', 'CompensatorThicknessData'],\r\n    '00ED': ['IS', '1', 'NumberOfBoli'],\r\n    '00EE': ['CS', '1', 'CompensatorType'],\r\n    '00EF': ['SH', '1', 'CompensatorTrayID'],\r\n    '00F0': ['IS', '1', 'NumberOfBlocks'],\r\n    '00F2': ['DS', '1', 'TotalBlockTrayFactor'],\r\n    '00F3': ['FL', '1', 'TotalBlockTrayWaterEquivalentThickness'],\r\n    '00F4': ['SQ', '1', 'BlockSequence'],\r\n    '00F5': ['SH', '1', 'BlockTrayID'],\r\n    '00F6': ['DS', '1', 'SourceToBlockTrayDistance'],\r\n    '00F7': ['FL', '1', 'IsocenterToBlockTrayDistance'],\r\n    '00F8': ['CS', '1', 'BlockType'],\r\n    '00F9': ['LO', '1', 'AccessoryCode'],\r\n    '00FA': ['CS', '1', 'BlockDivergence'],\r\n    '00FB': ['CS', '1', 'BlockMountingPosition'],\r\n    '00FC': ['IS', '1', 'BlockNumber'],\r\n    '00FE': ['LO', '1', 'BlockName'],\r\n    '0100': ['DS', '1', 'BlockThickness'],\r\n    '0102': ['DS', '1', 'BlockTransmission'],\r\n    '0104': ['IS', '1', 'BlockNumberOfPoints'],\r\n    '0106': ['DS', '2-2n', 'BlockData'],\r\n    '0107': ['SQ', '1', 'ApplicatorSequence'],\r\n    '0108': ['SH', '1', 'ApplicatorID'],\r\n    '0109': ['CS', '1', 'ApplicatorType'],\r\n    '010A': ['LO', '1', 'ApplicatorDescription'],\r\n    '010C': ['DS', '1', 'CumulativeDoseReferenceCoefficient'],\r\n    '010E': ['DS', '1', 'FinalCumulativeMetersetWeight'],\r\n    '0110': ['IS', '1', 'NumberOfControlPoints'],\r\n    '0111': ['SQ', '1', 'ControlPointSequence'],\r\n    '0112': ['IS', '1', 'ControlPointIndex'],\r\n    '0114': ['DS', '1', 'NominalBeamEnergy'],\r\n    '0115': ['DS', '1', 'DoseRateSet'],\r\n    '0116': ['SQ', '1', 'WedgePositionSequence'],\r\n    '0118': ['CS', '1', 'WedgePosition'],\r\n    '011A': ['SQ', '1', 'BeamLimitingDevicePositionSequence'],\r\n    '011C': ['DS', '2-2n', 'LeafJawPositions'],\r\n    '011E': ['DS', '1', 'GantryAngle'],\r\n    '011F': ['CS', '1', 'GantryRotationDirection'],\r\n    '0120': ['DS', '1', 'BeamLimitingDeviceAngle'],\r\n    '0121': ['CS', '1', 'BeamLimitingDeviceRotationDirection'],\r\n    '0122': ['DS', '1', 'PatientSupportAngle'],\r\n    '0123': ['CS', '1', 'PatientSupportRotationDirection'],\r\n    '0124': ['DS', '1', 'TableTopEccentricAxisDistance'],\r\n    '0125': ['DS', '1', 'TableTopEccentricAngle'],\r\n    '0126': ['CS', '1', 'TableTopEccentricRotationDirection'],\r\n    '0128': ['DS', '1', 'TableTopVerticalPosition'],\r\n    '0129': ['DS', '1', 'TableTopLongitudinalPosition'],\r\n    '012A': ['DS', '1', 'TableTopLateralPosition'],\r\n    '012C': ['DS', '3', 'IsocenterPosition'],\r\n    '012E': ['DS', '3', 'SurfaceEntryPoint'],\r\n    '0130': ['DS', '1', 'SourceToSurfaceDistance'],\r\n    '0131': ['FL', '1', 'AverageBeamDosePointSourceToExternalContourDistance'],\r\n    '0132': ['FL', '1', 'SourceToExternalContourDistance'],\r\n    '0133': ['FL', '3', 'ExternalContourEntryPoint'],\r\n    '0134': ['DS', '1', 'CumulativeMetersetWeight'],\r\n    '0140': ['FL', '1', 'TableTopPitchAngle'],\r\n    '0142': ['CS', '1', 'TableTopPitchRotationDirection'],\r\n    '0144': ['FL', '1', 'TableTopRollAngle'],\r\n    '0146': ['CS', '1', 'TableTopRollRotationDirection'],\r\n    '0148': ['FL', '1', 'HeadFixationAngle'],\r\n    '014A': ['FL', '1', 'GantryPitchAngle'],\r\n    '014C': ['CS', '1', 'GantryPitchRotationDirection'],\r\n    '014E': ['FL', '1', 'GantryPitchAngleTolerance'],\r\n    '0150': ['CS', '1', 'FixationEye'],\r\n    '0151': ['DS', '1', 'ChairHeadFramePosition'],\r\n    '0152': ['DS', '1', 'HeadFixationAngleTolerance'],\r\n    '0153': ['DS', '1', 'ChairHeadFramePositionTolerance'],\r\n    '0154': ['DS', '1', 'FixationLightAzimuthalAngleTolerance'],\r\n    '0155': ['DS', '1', 'FixationLightPolarAngleTolerance'],\r\n    '0180': ['SQ', '1', 'PatientSetupSequence'],\r\n    '0182': ['IS', '1', 'PatientSetupNumber'],\r\n    '0183': ['LO', '1', 'PatientSetupLabel'],\r\n    '0184': ['LO', '1', 'PatientAdditionalPosition'],\r\n    '0190': ['SQ', '1', 'FixationDeviceSequence'],\r\n    '0192': ['CS', '1', 'FixationDeviceType'],\r\n    '0194': ['SH', '1', 'FixationDeviceLabel'],\r\n    '0196': ['ST', '1', 'FixationDeviceDescription'],\r\n    '0198': ['SH', '1', 'FixationDevicePosition'],\r\n    '0199': ['FL', '1', 'FixationDevicePitchAngle'],\r\n    '019A': ['FL', '1', 'FixationDeviceRollAngle'],\r\n    '01A0': ['SQ', '1', 'ShieldingDeviceSequence'],\r\n    '01A2': ['CS', '1', 'ShieldingDeviceType'],\r\n    '01A4': ['SH', '1', 'ShieldingDeviceLabel'],\r\n    '01A6': ['ST', '1', 'ShieldingDeviceDescription'],\r\n    '01A8': ['SH', '1', 'ShieldingDevicePosition'],\r\n    '01B0': ['CS', '1', 'SetupTechnique'],\r\n    '01B2': ['ST', '1', 'SetupTechniqueDescription'],\r\n    '01B4': ['SQ', '1', 'SetupDeviceSequence'],\r\n    '01B6': ['CS', '1', 'SetupDeviceType'],\r\n    '01B8': ['SH', '1', 'SetupDeviceLabel'],\r\n    '01BA': ['ST', '1', 'SetupDeviceDescription'],\r\n    '01BC': ['DS', '1', 'SetupDeviceParameter'],\r\n    '01D0': ['ST', '1', 'SetupReferenceDescription'],\r\n    '01D2': ['DS', '1', 'TableTopVerticalSetupDisplacement'],\r\n    '01D4': ['DS', '1', 'TableTopLongitudinalSetupDisplacement'],\r\n    '01D6': ['DS', '1', 'TableTopLateralSetupDisplacement'],\r\n    '0200': ['CS', '1', 'BrachyTreatmentTechnique'],\r\n    '0202': ['CS', '1', 'BrachyTreatmentType'],\r\n    '0206': ['SQ', '1', 'TreatmentMachineSequence'],\r\n    '0210': ['SQ', '1', 'SourceSequence'],\r\n    '0212': ['IS', '1', 'SourceNumber'],\r\n    '0214': ['CS', '1', 'SourceType'],\r\n    '0216': ['LO', '1', 'SourceManufacturer'],\r\n    '0218': ['DS', '1', 'ActiveSourceDiameter'],\r\n    '021A': ['DS', '1', 'ActiveSourceLength'],\r\n    '021B': ['SH', '1', 'SourceModelID'],\r\n    '021C': ['LO', '1', 'SourceDescription'],\r\n    '0222': ['DS', '1', 'SourceEncapsulationNominalThickness'],\r\n    '0224': ['DS', '1', 'SourceEncapsulationNominalTransmission'],\r\n    '0226': ['LO', '1', 'SourceIsotopeName'],\r\n    '0228': ['DS', '1', 'SourceIsotopeHalfLife'],\r\n    '0229': ['CS', '1', 'SourceStrengthUnits'],\r\n    '022A': ['DS', '1', 'ReferenceAirKermaRate'],\r\n    '022B': ['DS', '1', 'SourceStrength'],\r\n    '022C': ['DA', '1', 'SourceStrengthReferenceDate'],\r\n    '022E': ['TM', '1', 'SourceStrengthReferenceTime'],\r\n    '0230': ['SQ', '1', 'ApplicationSetupSequence'],\r\n    '0232': ['CS', '1', 'ApplicationSetupType'],\r\n    '0234': ['IS', '1', 'ApplicationSetupNumber'],\r\n    '0236': ['LO', '1', 'ApplicationSetupName'],\r\n    '0238': ['LO', '1', 'ApplicationSetupManufacturer'],\r\n    '0240': ['IS', '1', 'TemplateNumber'],\r\n    '0242': ['SH', '1', 'TemplateType'],\r\n    '0244': ['LO', '1', 'TemplateName'],\r\n    '0250': ['DS', '1', 'TotalReferenceAirKerma'],\r\n    '0260': ['SQ', '1', 'BrachyAccessoryDeviceSequence'],\r\n    '0262': ['IS', '1', 'BrachyAccessoryDeviceNumber'],\r\n    '0263': ['SH', '1', 'BrachyAccessoryDeviceID'],\r\n    '0264': ['CS', '1', 'BrachyAccessoryDeviceType'],\r\n    '0266': ['LO', '1', 'BrachyAccessoryDeviceName'],\r\n    '026A': ['DS', '1', 'BrachyAccessoryDeviceNominalThickness'],\r\n    '026C': ['DS', '1', 'BrachyAccessoryDeviceNominalTransmission'],\r\n    '0271': ['DS', '1', 'ChannelEffectiveLength'],\r\n    '0272': ['DS', '1', 'ChannelInnerLength'],\r\n    '0273': ['SH', '1', 'AfterloaderChannelID'],\r\n    '0274': ['DS', '1', 'SourceApplicatorTipLength'],\r\n    '0280': ['SQ', '1', 'ChannelSequence'],\r\n    '0282': ['IS', '1', 'ChannelNumber'],\r\n    '0284': ['DS', '1', 'ChannelLength'],\r\n    '0286': ['DS', '1', 'ChannelTotalTime'],\r\n    '0288': ['CS', '1', 'SourceMovementType'],\r\n    '028A': ['IS', '1', 'NumberOfPulses'],\r\n    '028C': ['DS', '1', 'PulseRepetitionInterval'],\r\n    '0290': ['IS', '1', 'SourceApplicatorNumber'],\r\n    '0291': ['SH', '1', 'SourceApplicatorID'],\r\n    '0292': ['CS', '1', 'SourceApplicatorType'],\r\n    '0294': ['LO', '1', 'SourceApplicatorName'],\r\n    '0296': ['DS', '1', 'SourceApplicatorLength'],\r\n    '0298': ['LO', '1', 'SourceApplicatorManufacturer'],\r\n    '029C': ['DS', '1', 'SourceApplicatorWallNominalThickness'],\r\n    '029E': ['DS', '1', 'SourceApplicatorWallNominalTransmission'],\r\n    '02A0': ['DS', '1', 'SourceApplicatorStepSize'],\r\n    '02A1': ['IS', '1', 'ApplicatorShapeReferencedROINumber'],\r\n    '02A2': ['IS', '1', 'TransferTubeNumber'],\r\n    '02A4': ['DS', '1', 'TransferTubeLength'],\r\n    '02B0': ['SQ', '1', 'ChannelShieldSequence'],\r\n    '02B2': ['IS', '1', 'ChannelShieldNumber'],\r\n    '02B3': ['SH', '1', 'ChannelShieldID'],\r\n    '02B4': ['LO', '1', 'ChannelShieldName'],\r\n    '02B8': ['DS', '1', 'ChannelShieldNominalThickness'],\r\n    '02BA': ['DS', '1', 'ChannelShieldNominalTransmission'],\r\n    '02C8': ['DS', '1', 'FinalCumulativeTimeWeight'],\r\n    '02D0': ['SQ', '1', 'BrachyControlPointSequence'],\r\n    '02D2': ['DS', '1', 'ControlPointRelativePosition'],\r\n    '02D4': ['DS', '3', 'ControlPoint3DPosition'],\r\n    '02D6': ['DS', '1', 'CumulativeTimeWeight'],\r\n    '02E0': ['CS', '1', 'CompensatorDivergence'],\r\n    '02E1': ['CS', '1', 'CompensatorMountingPosition'],\r\n    '02E2': ['DS', '1-n', 'SourceToCompensatorDistance'],\r\n    '02E3': ['FL', '1', 'TotalCompensatorTrayWaterEquivalentThickness'],\r\n    '02E4': ['FL', '1', 'IsocenterToCompensatorTrayDistance'],\r\n    '02E5': ['FL', '1', 'CompensatorColumnOffset'],\r\n    '02E6': ['FL', '1-n', 'IsocenterToCompensatorDistances'],\r\n    '02E7': ['FL', '1', 'CompensatorRelativeStoppingPowerRatio'],\r\n    '02E8': ['FL', '1', 'CompensatorMillingToolDiameter'],\r\n    '02EA': ['SQ', '1', 'IonRangeCompensatorSequence'],\r\n    '02EB': ['LT', '1', 'CompensatorDescription'],\r\n    '0302': ['IS', '1', 'RadiationMassNumber'],\r\n    '0304': ['IS', '1', 'RadiationAtomicNumber'],\r\n    '0306': ['SS', '1', 'RadiationChargeState'],\r\n    '0308': ['CS', '1', 'ScanMode'],\r\n    '0309': ['CS', '1', 'ModulatedScanModeType'],\r\n    '030A': ['FL', '2', 'VirtualSourceAxisDistances'],\r\n    '030C': ['SQ', '1', 'SnoutSequence'],\r\n    '030D': ['FL', '1', 'SnoutPosition'],\r\n    '030F': ['SH', '1', 'SnoutID'],\r\n    '0312': ['IS', '1', 'NumberOfRangeShifters'],\r\n    '0314': ['SQ', '1', 'RangeShifterSequence'],\r\n    '0316': ['IS', '1', 'RangeShifterNumber'],\r\n    '0318': ['SH', '1', 'RangeShifterID'],\r\n    '0320': ['CS', '1', 'RangeShifterType'],\r\n    '0322': ['LO', '1', 'RangeShifterDescription'],\r\n    '0330': ['IS', '1', 'NumberOfLateralSpreadingDevices'],\r\n    '0332': ['SQ', '1', 'LateralSpreadingDeviceSequence'],\r\n    '0334': ['IS', '1', 'LateralSpreadingDeviceNumber'],\r\n    '0336': ['SH', '1', 'LateralSpreadingDeviceID'],\r\n    '0338': ['CS', '1', 'LateralSpreadingDeviceType'],\r\n    '033A': ['LO', '1', 'LateralSpreadingDeviceDescription'],\r\n    '033C': ['FL', '1', 'LateralSpreadingDeviceWaterEquivalentThickness'],\r\n    '0340': ['IS', '1', 'NumberOfRangeModulators'],\r\n    '0342': ['SQ', '1', 'RangeModulatorSequence'],\r\n    '0344': ['IS', '1', 'RangeModulatorNumber'],\r\n    '0346': ['SH', '1', 'RangeModulatorID'],\r\n    '0348': ['CS', '1', 'RangeModulatorType'],\r\n    '034A': ['LO', '1', 'RangeModulatorDescription'],\r\n    '034C': ['SH', '1', 'BeamCurrentModulationID'],\r\n    '0350': ['CS', '1', 'PatientSupportType'],\r\n    '0352': ['SH', '1', 'PatientSupportID'],\r\n    '0354': ['LO', '1', 'PatientSupportAccessoryCode'],\r\n    '0355': ['LO', '1', 'TrayAccessoryCode'],\r\n    '0356': ['FL', '1', 'FixationLightAzimuthalAngle'],\r\n    '0358': ['FL', '1', 'FixationLightPolarAngle'],\r\n    '035A': ['FL', '1', 'MetersetRate'],\r\n    '0360': ['SQ', '1', 'RangeShifterSettingsSequence'],\r\n    '0362': ['LO', '1', 'RangeShifterSetting'],\r\n    '0364': ['FL', '1', 'IsocenterToRangeShifterDistance'],\r\n    '0366': ['FL', '1', 'RangeShifterWaterEquivalentThickness'],\r\n    '0370': ['SQ', '1', 'LateralSpreadingDeviceSettingsSequence'],\r\n    '0372': ['LO', '1', 'LateralSpreadingDeviceSetting'],\r\n    '0374': ['FL', '1', 'IsocenterToLateralSpreadingDeviceDistance'],\r\n    '0380': ['SQ', '1', 'RangeModulatorSettingsSequence'],\r\n    '0382': ['FL', '1', 'RangeModulatorGatingStartValue'],\r\n    '0384': ['FL', '1', 'RangeModulatorGatingStopValue'],\r\n    '0386': ['FL', '1', 'RangeModulatorGatingStartWaterEquivalentThickness'],\r\n    '0388': ['FL', '1', 'RangeModulatorGatingStopWaterEquivalentThickness'],\r\n    '038A': ['FL', '1', 'IsocenterToRangeModulatorDistance'],\r\n    '038F': ['FL', '1-n', 'ScanSpotTimeOffset'],\r\n    '0390': ['SH', '1', 'ScanSpotTuneID'],\r\n    '0391': ['IS', '1-n', 'ScanSpotPrescribedIndices'],\r\n    '0392': ['IS', '1', 'NumberOfScanSpotPositions'],\r\n    '0393': ['CS', '1', 'ScanSpotReordered'],\r\n    '0394': ['FL', '1-n', 'ScanSpotPositionMap'],\r\n    '0395': ['CS', '1', 'ScanSpotReorderingAllowed'],\r\n    '0396': ['FL', '1-n', 'ScanSpotMetersetWeights'],\r\n    '0398': ['FL', '2', 'ScanningSpotSize'],\r\n    '0399': ['FL', '2-2n', 'ScanSpotSizesDelivered'],\r\n    '039A': ['IS', '1', 'NumberOfPaintings'],\r\n    '03A0': ['SQ', '1', 'IonToleranceTableSequence'],\r\n    '03A2': ['SQ', '1', 'IonBeamSequence'],\r\n    '03A4': ['SQ', '1', 'IonBeamLimitingDeviceSequence'],\r\n    '03A6': ['SQ', '1', 'IonBlockSequence'],\r\n    '03A8': ['SQ', '1', 'IonControlPointSequence'],\r\n    '03AA': ['SQ', '1', 'IonWedgeSequence'],\r\n    '03AC': ['SQ', '1', 'IonWedgePositionSequence'],\r\n    '0401': ['SQ', '1', 'ReferencedSetupImageSequence'],\r\n    '0402': ['ST', '1', 'SetupImageComment'],\r\n    '0410': ['SQ', '1', 'MotionSynchronizationSequence'],\r\n    '0412': ['FL', '3', 'ControlPointOrientation'],\r\n    '0420': ['SQ', '1', 'GeneralAccessorySequence'],\r\n    '0421': ['SH', '1', 'GeneralAccessoryID'],\r\n    '0422': ['ST', '1', 'GeneralAccessoryDescription'],\r\n    '0423': ['CS', '1', 'GeneralAccessoryType'],\r\n    '0424': ['IS', '1', 'GeneralAccessoryNumber'],\r\n    '0425': ['FL', '1', 'SourceToGeneralAccessoryDistance'],\r\n    '0426': ['DS', '1', 'IsocenterToGeneralAccessoryDistance'],\r\n    '0431': ['SQ', '1', 'ApplicatorGeometrySequence'],\r\n    '0432': ['CS', '1', 'ApplicatorApertureShape'],\r\n    '0433': ['FL', '1', 'ApplicatorOpening'],\r\n    '0434': ['FL', '1', 'ApplicatorOpeningX'],\r\n    '0435': ['FL', '1', 'ApplicatorOpeningY'],\r\n    '0436': ['FL', '1', 'SourceToApplicatorMountingPositionDistance'],\r\n    '0440': ['IS', '1', 'NumberOfBlockSlabItems'],\r\n    '0441': ['SQ', '1', 'BlockSlabSequence'],\r\n    '0442': ['DS', '1', 'BlockSlabThickness'],\r\n    '0443': ['US', '1', 'BlockSlabNumber'],\r\n    '0450': ['SQ', '1', 'DeviceMotionControlSequence'],\r\n    '0451': ['CS', '1', 'DeviceMotionExecutionMode'],\r\n    '0452': ['CS', '1', 'DeviceMotionObservationMode'],\r\n    '0453': ['SQ', '1', 'DeviceMotionParameterCodeSequence'],\r\n    '0501': ['FL', '1', 'DistalDepthFraction'],\r\n    '0502': ['FL', '1', 'DistalDepth'],\r\n    '0503': ['FL', '2', 'NominalRangeModulationFractions'],\r\n    '0504': ['FL', '2', 'NominalRangeModulatedRegionDepths'],\r\n    '0505': ['SQ', '1', 'DepthDoseParametersSequence'],\r\n    '0506': ['SQ', '1', 'DeliveredDepthDoseParametersSequence'],\r\n    '0507': ['FL', '1', 'DeliveredDistalDepthFraction'],\r\n    '0508': ['FL', '1', 'DeliveredDistalDepth'],\r\n    '0509': ['FL', '2', 'DeliveredNominalRangeModulationFractions'],\r\n    '0510': ['FL', '2', 'DeliveredNominalRangeModulatedRegionDepths'],\r\n    '0511': ['CS', '1', 'DeliveredReferenceDoseDefinition'],\r\n    '0512': ['CS', '1', 'ReferenceDoseDefinition'],\r\n    '0600': ['US', '1', 'RTControlPointIndex'],\r\n    '0601': ['US', '1', 'RadiationGenerationModeIndex'],\r\n    '0602': ['US', '1', 'ReferencedDefinedDeviceIndex'],\r\n    '0603': ['US', '1', 'RadiationDoseIdentificationIndex'],\r\n    '0604': ['US', '1', 'NumberOfRTControlPoints'],\r\n    '0605': ['US', '1', 'ReferencedRadiationGenerationModeIndex'],\r\n    '0606': ['US', '1', 'TreatmentPositionIndex'],\r\n    '0607': ['US', '1', 'ReferencedDeviceIndex'],\r\n    '0608': ['LO', '1', 'TreatmentPositionGroupLabel'],\r\n    '0609': ['UI', '1', 'TreatmentPositionGroupUID'],\r\n    '060A': ['SQ', '1', 'TreatmentPositionGroupSequence'],\r\n    '060B': ['US', '1', 'ReferencedTreatmentPositionIndex'],\r\n    '060C': ['US', '1', 'ReferencedRadiationDoseIdentificationIndex'],\r\n    '060D': ['FD', '1', 'RTAccessoryHolderWaterEquivalentThickness'],\r\n    '060E': ['US', '1', 'ReferencedRTAccessoryHolderDeviceIndex'],\r\n    '060F': ['CS', '1', 'RTAccessoryHolderSlotExistenceFlag'],\r\n    '0610': ['SQ', '1', 'RTAccessoryHolderSlotSequence'],\r\n    '0611': ['LO', '1', 'RTAccessoryHolderSlotID'],\r\n    '0612': ['FD', '1', 'RTAccessoryHolderSlotDistance'],\r\n    '0613': ['FD', '1', 'RTAccessorySlotDistance'],\r\n    '0614': ['SQ', '1', 'RTAccessoryHolderDefinitionSequence'],\r\n    '0615': ['LO', '1', 'RTAccessoryDeviceSlotID'],\r\n    '0616': ['SQ', '1', 'RTRadiationSequence'],\r\n    '0617': ['SQ', '1', 'RadiationDoseSequence'],\r\n    '0618': ['SQ', '1', 'RadiationDoseIdentificationSequence'],\r\n    '0619': ['LO', '1', 'RadiationDoseIdentificationLabel'],\r\n    '061A': ['CS', '1', 'ReferenceDoseType'],\r\n    '061B': ['CS', '1', 'PrimaryDoseValueIndicator'],\r\n    '061C': ['SQ', '1', 'DoseValuesSequence'],\r\n    '061D': ['CS', '1-n', 'DoseValuePurpose'],\r\n    '061E': ['FD', '3', 'ReferenceDosePointCoordinates'],\r\n    '061F': ['SQ', '1', 'RadiationDoseValuesParametersSequence'],\r\n    '0620': ['SQ', '1', 'MetersetToDoseMappingSequence'],\r\n    '0621': ['SQ', '1', 'ExpectedInVivoMeasurementValuesSequence'],\r\n    '0622': ['US', '1', 'ExpectedInVivoMeasurementValueIndex'],\r\n    '0623': ['LO', '1', 'RadiationDoseInVivoMeasurementLabel'],\r\n    '0624': ['FD', '2', 'RadiationDoseCentralAxisDisplacement'],\r\n    '0625': ['FD', '1', 'RadiationDoseValue'],\r\n    '0626': ['FD', '1', 'RadiationDoseSourceToSkinDistance'],\r\n    '0627': ['FD', '3', 'RadiationDoseMeasurementPointCoordinates'],\r\n    '0628': ['FD', '1', 'RadiationDoseSourceToExternalContourDistance'],\r\n    '0629': ['SQ', '1', 'RTToleranceSetSequence'],\r\n    '062A': ['LO', '1', 'RTToleranceSetLabel'],\r\n    '062B': ['SQ', '1', 'AttributeToleranceValuesSequence'],\r\n    '062C': ['FD', '1', 'ToleranceValue'],\r\n    '062D': ['SQ', '1', 'PatientSupportPositionToleranceSequence'],\r\n    '062E': ['FD', '1', 'TreatmentTimeLimit'],\r\n    '062F': ['SQ', '1', 'CArmPhotonElectronControlPointSequence'],\r\n    '0630': ['SQ', '1', 'ReferencedRTRadiationSequence'],\r\n    '0631': ['SQ', '1', 'ReferencedRTInstanceSequence'],\r\n    '0632': ['SQ', '1', 'ReferencedRTPatientSetupSequence'],\r\n    '0634': ['FD', '1', 'SourceToPatientSurfaceDistance'],\r\n    '0635': ['SQ', '1', 'TreatmentMachineSpecialModeCodeSequence'],\r\n    '0636': ['US', '1', 'IntendedNumberOfFractions'],\r\n    '0637': ['CS', '1', 'RTRadiationSetIntent'],\r\n    '0638': ['CS', '1', 'RTRadiationPhysicalAndGeometricContentDetailFlag'],\r\n    '0639': ['CS', '1', 'RTRecordFlag'],\r\n    '063A': ['SQ', '1', 'TreatmentDeviceIdentificationSequence'],\r\n    '063B': ['SQ', '1', 'ReferencedRTPhysicianIntentSequence'],\r\n    '063C': ['FD', '1', 'CumulativeMeterset'],\r\n    '063D': ['FD', '1', 'DeliveryRate'],\r\n    '063E': ['SQ', '1', 'DeliveryRateUnitSequence'],\r\n    '063F': ['SQ', '1', 'TreatmentPositionSequence'],\r\n    '0640': ['FD', '1', 'RadiationSourceAxisDistance'],\r\n    '0641': ['US', '1', 'NumberOfRTBeamLimitingDevices'],\r\n    '0642': ['FD', '1', 'RTBeamLimitingDeviceProximalDistance'],\r\n    '0643': ['FD', '1', 'RTBeamLimitingDeviceDistalDistance'],\r\n    '0644': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceOrientationLabelCodeSequence'],\r\n    '0645': ['FD', '1', 'BeamModifierOrientationAngle'],\r\n    '0646': ['SQ', '1', 'FixedRTBeamDelimiterDeviceSequence'],\r\n    '0647': ['SQ', '1', 'ParallelRTBeamDelimiterDeviceSequence'],\r\n    '0648': ['US', '1', 'NumberOfParallelRTBeamDelimiters'],\r\n    '0649': ['FD', '2-n', 'ParallelRTBeamDelimiterBoundaries'],\r\n    '064A': ['FD', '2-n', 'ParallelRTBeamDelimiterPositions'],\r\n    '064B': ['FD', '2', 'RTBeamLimitingDeviceOffset'],\r\n    '064C': ['SQ', '1', 'RTBeamDelimiterGeometrySequence'],\r\n    '064D': ['SQ', '1', 'RTBeamLimitingDeviceDefinitionSequence'],\r\n    '064E': ['CS', '1', 'ParallelRTBeamDelimiterOpeningMode'],\r\n    '064F': ['CS', '1-n', 'ParallelRTBeamDelimiterLeafMountingSide'],\r\n    '0650': ['UI', '1', 'PatientSetupUID'],\r\n    '0651': ['SQ', '1', 'WedgeDefinitionSequence'],\r\n    '0652': ['FD', '1', 'RadiationBeamWedgeAngle'],\r\n    '0653': ['FD', '1', 'RadiationBeamWedgeThinEdgeDistance'],\r\n    '0654': ['FD', '1', 'RadiationBeamEffectiveWedgeAngle'],\r\n    '0655': ['US', '1', 'NumberOfWedgePositions'],\r\n    '0656': ['SQ', '1', 'RTBeamLimitingDeviceOpeningSequence'],\r\n    '0657': ['US', '1', 'NumberOfRTBeamLimitingDeviceOpenings'],\r\n    '0658': ['SQ', '1', 'RadiationDosimeterUnitSequence'],\r\n    '0659': ['SQ', '1', 'RTDeviceDistanceReferenceLocationCodeSequence'],\r\n    '065A': ['SQ', '1', 'RadiationDeviceConfigurationAndCommissioningKeySequence'],\r\n    '065B': ['SQ', '1', 'PatientSupportPositionParameterSequence'],\r\n    '065C': ['CS', '1', 'PatientSupportPositionSpecificationMethod'],\r\n    '065D': ['SQ', '1', 'PatientSupportPositionDeviceParameterSequence'],\r\n    '065E': ['US', '1', 'DeviceOrderIndex'],\r\n    '065F': ['US', '1', 'PatientSupportPositionParameterOrderIndex'],\r\n    '0660': ['SQ', '1', 'PatientSupportPositionDeviceToleranceSequence'],\r\n    '0661': ['US', '1', 'PatientSupportPositionToleranceOrderIndex'],\r\n    '0662': ['SQ', '1', 'CompensatorDefinitionSequence'],\r\n    '0663': ['CS', '1', 'CompensatorMapOrientation'],\r\n    '0664': ['OF', '1', 'CompensatorProximalThicknessMap'],\r\n    '0665': ['OF', '1', 'CompensatorDistalThicknessMap'],\r\n    '0666': ['FD', '1', 'CompensatorBasePlaneOffset'],\r\n    '0667': ['SQ', '1', 'CompensatorShapeFabricationCodeSequence'],\r\n    '0668': ['SQ', '1', 'CompensatorShapeSequence'],\r\n    '0669': ['FD', '1', 'RadiationBeamCompensatorMillingToolDiameter'],\r\n    '066A': ['SQ', '1', 'BlockDefinitionSequence'],\r\n    '066B': ['OF', '1', 'BlockEdgeData'],\r\n    '066C': ['CS', '1', 'BlockOrientation'],\r\n    '066D': ['FD', '1', 'RadiationBeamBlockThickness'],\r\n    '066E': ['FD', '1', 'RadiationBeamBlockSlabThickness'],\r\n    '066F': ['SQ', '1', 'BlockEdgeDataSequence'],\r\n    '0670': ['US', '1', 'NumberOfRTAccessoryHolders'],\r\n    '0671': ['SQ', '1', 'GeneralAccessoryDefinitionSequence'],\r\n    '0672': ['US', '1', 'NumberOfGeneralAccessories'],\r\n    '0673': ['SQ', '1', 'BolusDefinitionSequence'],\r\n    '0674': ['US', '1', 'NumberOfBoluses'],\r\n    '0675': ['UI', '1', 'EquipmentFrameOfReferenceUID'],\r\n    '0676': ['ST', '1', 'EquipmentFrameOfReferenceDescription'],\r\n    '0677': ['SQ', '1', 'EquipmentReferencePointCoordinatesSequence'],\r\n    '0678': ['SQ', '1', 'EquipmentReferencePointCodeSequence'],\r\n    '0679': ['FD', '1', 'RTBeamLimitingDeviceAngle'],\r\n    '067A': ['FD', '1', 'SourceRollAngle'],\r\n    '067B': ['SQ', '1', 'RadiationGenerationModeSequence'],\r\n    '067C': ['SH', '1', 'RadiationGenerationModeLabel'],\r\n    '067D': ['ST', '1', 'RadiationGenerationModeDescription'],\r\n    '067E': ['SQ', '1', 'RadiationGenerationModeMachineCodeSequence'],\r\n    '067F': ['SQ', '1', 'RadiationTypeCodeSequence'],\r\n    '0680': ['DS', '1', 'NominalEnergy'],\r\n    '0681': ['DS', '1', 'MinimumNominalEnergy'],\r\n    '0682': ['DS', '1', 'MaximumNominalEnergy'],\r\n    '0683': ['SQ', '1', 'RadiationFluenceModifierCodeSequence'],\r\n    '0684': ['SQ', '1', 'EnergyUnitCodeSequence'],\r\n    '0685': ['US', '1', 'NumberOfRadiationGenerationModes'],\r\n    '0686': ['SQ', '1', 'PatientSupportDevicesSequence'],\r\n    '0687': ['US', '1', 'NumberOfPatientSupportDevices'],\r\n    '0688': ['FD', '1', 'RTBeamModifierDefinitionDistance'],\r\n    '0689': ['SQ', '1', 'BeamAreaLimitSequence'],\r\n    '068A': ['SQ', '1', 'ReferencedRTPrescriptionSequence'],\r\n    '0700': ['UI', '1', 'TreatmentSessionUID'],\r\n    '0701': ['CS', '1', 'RTRadiationUsage'],\r\n    '0702': ['SQ', '1', 'ReferencedRTRadiationSetSequence'],\r\n    '0703': ['SQ', '1', 'ReferencedRTRadiationRecordSequence'],\r\n    '0704': ['US', '1', 'RTRadiationSetDeliveryNumber'],\r\n    '0705': ['US', '1', 'ClinicalFractionNumber'],\r\n    '0706': ['CS', '1', 'RTTreatmentFractionCompletionStatus'],\r\n    '0707': ['CS', '1', 'RTRadiationSetUsage'],\r\n    '0708': ['CS', '1', 'TreatmentDeliveryContinuationFlag'],\r\n    '0709': ['CS', '1', 'TreatmentRecordContentOrigin'],\r\n    '0714': ['CS', '1', 'RTTreatmentTerminationStatus'],\r\n    '0715': ['SQ', '1', 'RTTreatmentTerminationReasonCodeSequence'],\r\n    '0716': ['SQ', '1', 'MachineSpecificTreatmentTerminationCodeSequence'],\r\n    '0722': ['SQ', '1', 'RTRadiationSalvageRecordControlPointSequence'],\r\n    '0723': ['CS', '1', 'StartingMetersetValueKnownFlag'],\r\n    '0730': ['ST', '1', 'TreatmentTerminationDescription'],\r\n    '0731': ['SQ', '1', 'TreatmentToleranceViolationSequence'],\r\n    '0732': ['CS', '1', 'TreatmentToleranceViolationCategory'],\r\n    '0733': ['SQ', '1', 'TreatmentToleranceViolationAttributeSequence'],\r\n    '0734': ['ST', '1', 'TreatmentToleranceViolationDescription'],\r\n    '0735': ['ST', '1', 'TreatmentToleranceViolationIdentification'],\r\n    '0736': ['DT', '1', 'TreatmentToleranceViolationDateTime'],\r\n    '073A': ['DT', '1', 'RecordedRTControlPointDateTime'],\r\n    '073B': ['US', '1', 'ReferencedRadiationRTControlPointIndex'],\r\n    '073E': ['SQ', '1', 'AlternateValueSequence'],\r\n    '073F': ['SQ', '1', 'ConfirmationSequence'],\r\n    '0740': ['SQ', '1', 'InterlockSequence'],\r\n    '0741': ['DT', '1', 'InterlockDateTime'],\r\n    '0742': ['ST', '1', 'InterlockDescription'],\r\n    '0743': ['SQ', '1', 'InterlockOriginatingDeviceSequence'],\r\n    '0744': ['SQ', '1', 'InterlockCodeSequence'],\r\n    '0745': ['SQ', '1', 'InterlockResolutionCodeSequence'],\r\n    '0746': ['SQ', '1', 'InterlockResolutionUserSequence'],\r\n    '0760': ['DT', '1', 'OverrideDateTime'],\r\n    '0761': ['SQ', '1', 'TreatmentToleranceViolationTypeCodeSequence'],\r\n    '0762': ['SQ', '1', 'TreatmentToleranceViolationCauseCodeSequence'],\r\n    '0772': ['SQ', '1', 'MeasuredMetersetToDoseMappingSequence'],\r\n    '0773': ['US', '1', 'ReferencedExpectedInVivoMeasurementValueIndex'],\r\n    '0774': ['SQ', '1', 'DoseMeasurementDeviceCodeSequence'],\r\n    '0780': ['SQ', '1', 'AdditionalParameterRecordingInstanceSequence'],\r\n    '0782': ['US', '1', ''],\r\n    '0783': ['ST', '1', 'InterlockOriginDescription'],\r\n    '0784': ['SQ', '1', 'RTPatientPositionScopeSequence'],\r\n    '0785': ['UI', '1', 'ReferencedTreatmentPositionGroupUID'],\r\n    '0786': ['US', '1', 'RadiationOrderIndex'],\r\n    '0787': ['SQ', '1', 'OmittedRadiationSequence'],\r\n    '0788': ['SQ', '1', 'ReasonForOmissionCodeSequence'],\r\n    '0789': ['SQ', '1', 'RTDeliveryStartPatientPositionSequence'],\r\n    '078A': ['SQ', '1', 'RTTreatmentPreparationPatientPositionSequence'],\r\n    '078B': ['SQ', '1', 'ReferencedRTTreatmentPreparationSequence'],\r\n    '078C': ['SQ', '1', 'ReferencedPatientSetupPhotoSequence'],\r\n    '078D': ['SQ', '1', 'PatientTreatmentPreparationMethodCodeSequence'],\r\n    '078E': ['LT', '1', 'PatientTreatmentPreparationProcedureParameterDescription'],\r\n    '078F': ['SQ', '1', 'PatientTreatmentPreparationDeviceSequence'],\r\n    '0790': ['SQ', '1', 'PatientTreatmentPreparationProcedureSequence'],\r\n    '0791': ['SQ', '1', 'PatientTreatmentPreparationProcedureCodeSequence'],\r\n    '0792': ['LT', '1', 'PatientTreatmentPreparationMethodDescription'],\r\n    '0793': ['SQ', '1', 'PatientTreatmentPreparationProcedureParameterSequence'],\r\n    '0794': ['LT', '1', 'PatientSetupPhotoDescription'],\r\n    '0795': ['US', '1', 'PatientTreatmentPreparationProcedureIndex'],\r\n    '0796': ['US', '1', 'ReferencedPatientSetupProcedureIndex'],\r\n    '0797': ['SQ', '1', 'RTRadiationTaskSequence'],\r\n    '0798': ['SQ', '1', 'RTPatientPositionDisplacementSequence'],\r\n    '0799': ['SQ', '1', 'RTPatientPositionSequence'],\r\n    '079A': ['LO', '1', 'DisplacementReferenceLabel'],\r\n    '079B': ['FD', '16', 'DisplacementMatrix'],\r\n    '079C': ['SQ', '1', 'PatientSupportDisplacementSequence'],\r\n    '079D': ['SQ', '1', 'DisplacementReferenceLocationCodeSequence'],\r\n    '079E': ['CS', '1', 'RTRadiationSetDeliveryUsage']\r\n  },\r\n  '300C': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0002': ['SQ', '1', 'ReferencedRTPlanSequence'],\r\n    '0004': ['SQ', '1', 'ReferencedBeamSequence'],\r\n    '0006': ['IS', '1', 'ReferencedBeamNumber'],\r\n    '0007': ['IS', '1', 'ReferencedReferenceImageNumber'],\r\n    '0008': ['DS', '1', 'StartCumulativeMetersetWeight'],\r\n    '0009': ['DS', '1', 'EndCumulativeMetersetWeight'],\r\n    '000A': ['SQ', '1', 'ReferencedBrachyApplicationSetupSequence'],\r\n    '000C': ['IS', '1', 'ReferencedBrachyApplicationSetupNumber'],\r\n    '000E': ['IS', '1', 'ReferencedSourceNumber'],\r\n    '0020': ['SQ', '1', 'ReferencedFractionGroupSequence'],\r\n    '0022': ['IS', '1', 'ReferencedFractionGroupNumber'],\r\n    '0040': ['SQ', '1', 'ReferencedVerificationImageSequence'],\r\n    '0042': ['SQ', '1', 'ReferencedReferenceImageSequence'],\r\n    '0050': ['SQ', '1', 'ReferencedDoseReferenceSequence'],\r\n    '0051': ['IS', '1', 'ReferencedDoseReferenceNumber'],\r\n    '0055': ['SQ', '1', 'BrachyReferencedDoseReferenceSequence'],\r\n    '0060': ['SQ', '1', 'ReferencedStructureSetSequence'],\r\n    '006A': ['IS', '1', 'ReferencedPatientSetupNumber'],\r\n    '0080': ['SQ', '1', 'ReferencedDoseSequence'],\r\n    '00A0': ['IS', '1', 'ReferencedToleranceTableNumber'],\r\n    '00B0': ['SQ', '1', 'ReferencedBolusSequence'],\r\n    '00C0': ['IS', '1', 'ReferencedWedgeNumber'],\r\n    '00D0': ['IS', '1', 'ReferencedCompensatorNumber'],\r\n    '00E0': ['IS', '1', 'ReferencedBlockNumber'],\r\n    '00F0': ['IS', '1', 'ReferencedControlPointIndex'],\r\n    '00F2': ['SQ', '1', 'ReferencedControlPointSequence'],\r\n    '00F4': ['IS', '1', 'ReferencedStartControlPointIndex'],\r\n    '00F6': ['IS', '1', 'ReferencedStopControlPointIndex'],\r\n    '0100': ['IS', '1', 'ReferencedRangeShifterNumber'],\r\n    '0102': ['IS', '1', 'ReferencedLateralSpreadingDeviceNumber'],\r\n    '0104': ['IS', '1', 'ReferencedRangeModulatorNumber'],\r\n    '0111': ['SQ', '1', 'OmittedBeamTaskSequence'],\r\n    '0112': ['CS', '1', 'ReasonForOmission'],\r\n    '0113': ['LO', '1', 'ReasonForOmissionDescription'],\r\n    '0114': ['SQ', '1', 'PrescriptionOverviewSequence'],\r\n    '0115': ['FL', '1', 'TotalPrescriptionDose'],\r\n    '0116': ['SQ', '1', 'PlanOverviewSequence'],\r\n    '0117': ['US', '1', 'PlanOverviewIndex'],\r\n    '0118': ['US', '1', 'ReferencedPlanOverviewIndex'],\r\n    '0119': ['US', '1', 'NumberOfFractionsIncluded'],\r\n    '0120': ['SQ', '1', 'DoseCalibrationConditionsSequence'],\r\n    '0121': ['FD', '1', 'AbsorbedDoseToMetersetRatio'],\r\n    '0122': ['FD', '2', 'DelineatedRadiationFieldSize'],\r\n    '0123': ['CS', '1', 'DoseCalibrationConditionsVerifiedFlag'],\r\n    '0124': ['FD', '1', 'CalibrationReferencePointDepth'],\r\n    '0125': ['SQ', '1', 'GatingBeamHoldTransitionSequence'],\r\n    '0126': ['CS', '1', 'BeamHoldTransition'],\r\n    '0127': ['DT', '1', 'BeamHoldTransitionDateTime'],\r\n    '0128': ['SQ', '1', 'BeamHoldOriginatingDeviceSequence']\r\n  },\r\n  '300E': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0002': ['CS', '1', 'ApprovalStatus'],\r\n    '0004': ['DA', '1', 'ReviewDate'],\r\n    '0005': ['TM', '1', 'ReviewTime'],\r\n    '0008': ['PN', '1', 'ReviewerName']\r\n  },\r\n  '3010': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['SQ', '1', 'RadiobiologicalDoseEffectSequence'],\r\n    '0002': ['CS', '1', 'RadiobiologicalDoseEffectFlag'],\r\n    '0003': ['SQ', '1', 'EffectiveDoseCalculationMethodCategoryCodeSequence'],\r\n    '0004': ['SQ', '1', 'EffectiveDoseCalculationMethodCodeSequence'],\r\n    '0005': ['LO', '1', 'EffectiveDoseCalculationMethodDescription'],\r\n    '0006': ['UI', '1', 'ConceptualVolumeUID'],\r\n    '0007': ['SQ', '1', 'OriginatingSOPInstanceReferenceSequence'],\r\n    '0008': ['SQ', '1', 'ConceptualVolumeConstituentSequence'],\r\n    '0009': ['SQ', '1', 'EquivalentConceptualVolumeInstanceReferenceSequence'],\r\n    '000A': ['SQ', '1', 'EquivalentConceptualVolumesSequence'],\r\n    '000B': ['UI', '1', 'ReferencedConceptualVolumeUID'],\r\n    '000C': ['UT', '1', 'ConceptualVolumeCombinationExpression'],\r\n    '000D': ['US', '1', 'ConceptualVolumeConstituentIndex'],\r\n    '000E': ['CS', '1', 'ConceptualVolumeCombinationFlag'],\r\n    '000F': ['ST', '1', 'ConceptualVolumeCombinationDescription'],\r\n    '0010': ['CS', '1', 'ConceptualVolumeSegmentationDefinedFlag'],\r\n    '0011': ['SQ', '1', 'ConceptualVolumeSegmentationReferenceSequence'],\r\n    '0012': ['SQ', '1', 'ConceptualVolumeConstituentSegmentationReferenceSequence'],\r\n    '0013': ['UI', '1', 'ConstituentConceptualVolumeUID'],\r\n    '0014': ['SQ', '1', 'DerivationConceptualVolumeSequence'],\r\n    '0015': ['UI', '1', 'SourceConceptualVolumeUID'],\r\n    '0016': ['SQ', '1', 'ConceptualVolumeDerivationAlgorithmSequence'],\r\n    '0017': ['ST', '1', 'ConceptualVolumeDescription'],\r\n    '0018': ['SQ', '1', 'SourceConceptualVolumeSequence'],\r\n    '0019': ['SQ', '1', 'AuthorIdentificationSequence'],\r\n    '001A': ['LO', '1', 'ManufacturerModelVersion'],\r\n    '001B': ['UC', '1', 'DeviceAlternateIdentifier'],\r\n    '001C': ['CS', '1', 'DeviceAlternateIdentifierType'],\r\n    '001D': ['LT', '1', 'DeviceAlternateIdentifierFormat'],\r\n    '001E': ['LO', '1', 'SegmentationCreationTemplateLabel'],\r\n    '001F': ['UI', '1', 'SegmentationTemplateUID'],\r\n    '0020': ['US', '1', 'ReferencedSegmentReferenceIndex'],\r\n    '0021': ['SQ', '1', 'SegmentReferenceSequence'],\r\n    '0022': ['US', '1', 'SegmentReferenceIndex'],\r\n    '0023': ['SQ', '1', 'DirectSegmentReferenceSequence'],\r\n    '0024': ['SQ', '1', 'CombinationSegmentReferenceSequence'],\r\n    '0025': ['SQ', '1', 'ConceptualVolumeSequence'],\r\n    '0026': ['SQ', '1', 'SegmentedRTAccessoryDeviceSequence'],\r\n    '0027': ['SQ', '1', 'SegmentCharacteristicsSequence'],\r\n    '0028': ['SQ', '1', 'RelatedSegmentCharacteristicsSequence'],\r\n    '0029': ['US', '1', 'SegmentCharacteristicsPrecedence'],\r\n    '002A': ['SQ', '1', 'RTSegmentAnnotationSequence'],\r\n    '002B': ['SQ', '1', 'SegmentAnnotationCategoryCodeSequence'],\r\n    '002C': ['SQ', '1', 'SegmentAnnotationTypeCodeSequence'],\r\n    '002D': ['LO', '1', 'DeviceLabel'],\r\n    '002E': ['SQ', '1', 'DeviceTypeCodeSequence'],\r\n    '002F': ['SQ', '1', 'SegmentAnnotationTypeModifierCodeSequence'],\r\n    '0030': ['SQ', '1', 'PatientEquipmentRelationshipCodeSequence'],\r\n    '0031': ['UI', '1', 'ReferencedFiducialsUID'],\r\n    '0032': ['SQ', '1', 'PatientTreatmentOrientationSequence'],\r\n    '0033': ['SH', '1', 'UserContentLabel'],\r\n    '0034': ['LO', '1', 'UserContentLongLabel'],\r\n    '0035': ['SH', '1', 'EntityLabel'],\r\n    '0036': ['LO', '1', 'EntityName'],\r\n    '0037': ['ST', '1', 'EntityDescription'],\r\n    '0038': ['LO', '1', 'EntityLongLabel'],\r\n    '0039': ['US', '1', 'DeviceIndex'],\r\n    '003A': ['US', '1', 'RTTreatmentPhaseIndex'],\r\n    '003B': ['UI', '1', 'RTTreatmentPhaseUID'],\r\n    '003C': ['US', '1', 'RTPrescriptionIndex'],\r\n    '003D': ['US', '1', 'RTSegmentAnnotationIndex'],\r\n    '003E': ['US', '1', 'BasisRTTreatmentPhaseIndex'],\r\n    '003F': ['US', '1', 'RelatedRTTreatmentPhaseIndex'],\r\n    '0040': ['US', '1', 'ReferencedRTTreatmentPhaseIndex'],\r\n    '0041': ['US', '1', 'ReferencedRTPrescriptionIndex'],\r\n    '0042': ['US', '1', 'ReferencedParentRTPrescriptionIndex'],\r\n    '0043': ['ST', '1', 'ManufacturerDeviceIdentifier'],\r\n    '0044': ['SQ', '1', 'InstanceLevelReferencedPerformedProcedureStepSequence'],\r\n    '0045': ['CS', '1', 'RTTreatmentPhaseIntentPresenceFlag'],\r\n    '0046': ['CS', '1', 'RadiotherapyTreatmentType'],\r\n    '0047': ['CS', '1-n', 'TeletherapyRadiationType'],\r\n    '0048': ['CS', '1-n', 'BrachytherapySourceType'],\r\n    '0049': ['SQ', '1', 'ReferencedRTTreatmentPhaseSequence'],\r\n    '004A': ['SQ', '1', 'ReferencedDirectSegmentInstanceSequence'],\r\n    '004B': ['SQ', '1', 'IntendedRTTreatmentPhaseSequence'],\r\n    '004C': ['DA', '1', 'IntendedPhaseStartDate'],\r\n    '004D': ['DA', '1', 'IntendedPhaseEndDate'],\r\n    '004E': ['SQ', '1', 'RTTreatmentPhaseIntervalSequence'],\r\n    '004F': ['CS', '1', 'TemporalRelationshipIntervalAnchor'],\r\n    '0050': ['FD', '1', 'MinimumNumberOfIntervalDays'],\r\n    '0051': ['FD', '1', 'MaximumNumberOfIntervalDays'],\r\n    '0052': ['UI', '1-n', 'PertinentSOPClassesInStudy'],\r\n    '0053': ['UI', '1-n', 'PertinentSOPClassesInSeries'],\r\n    '0054': ['LO', '1', 'RTPrescriptionLabel'],\r\n    '0055': ['SQ', '1', 'RTPhysicianIntentPredecessorSequence'],\r\n    '0056': ['LO', '1', 'RTTreatmentApproachLabel'],\r\n    '0057': ['SQ', '1', 'RTPhysicianIntentSequence'],\r\n    '0058': ['US', '1', 'RTPhysicianIntentIndex'],\r\n    '0059': ['CS', '1', 'RTTreatmentIntentType'],\r\n    '005A': ['UT', '1', 'RTPhysicianIntentNarrative'],\r\n    '005B': ['SQ', '1', 'RTProtocolCodeSequence'],\r\n    '005C': ['ST', '1', 'ReasonForSuperseding'],\r\n    '005D': ['SQ', '1', 'RTDiagnosisCodeSequence'],\r\n    '005E': ['US', '1', 'ReferencedRTPhysicianIntentIndex'],\r\n    '005F': ['SQ', '1', 'RTPhysicianIntentInputInstanceSequence'],\r\n    '0060': ['SQ', '1', 'RTAnatomicPrescriptionSequence'],\r\n    '0061': ['UT', '1', 'PriorTreatmentDoseDescription'],\r\n    '0062': ['SQ', '1', 'PriorTreatmentReferenceSequence'],\r\n    '0063': ['CS', '1', 'DosimetricObjectiveEvaluationScope'],\r\n    '0064': ['SQ', '1', 'TherapeuticRoleCategoryCodeSequence'],\r\n    '0065': ['SQ', '1', 'TherapeuticRoleTypeCodeSequence'],\r\n    '0066': ['US', '1', 'ConceptualVolumeOptimizationPrecedence'],\r\n    '0067': ['SQ', '1', 'ConceptualVolumeCategoryCodeSequence'],\r\n    '0068': ['CS', '1', 'ConceptualVolumeBlockingConstraint'],\r\n    '0069': ['SQ', '1', 'ConceptualVolumeTypeCodeSequence'],\r\n    '006A': ['SQ', '1', 'ConceptualVolumeTypeModifierCodeSequence'],\r\n    '006B': ['SQ', '1', 'RTPrescriptionSequence'],\r\n    '006C': ['SQ', '1', 'DosimetricObjectiveSequence'],\r\n    '006D': ['SQ', '1', 'DosimetricObjectiveTypeCodeSequence'],\r\n    '006E': ['UI', '1', 'DosimetricObjectiveUID'],\r\n    '006F': ['UI', '1', 'ReferencedDosimetricObjectiveUID'],\r\n    '0070': ['SQ', '1', 'DosimetricObjectiveParameterSequence'],\r\n    '0071': ['SQ', '1', 'ReferencedDosimetricObjectivesSequence'],\r\n    '0073': ['CS', '1', 'AbsoluteDosimetricObjectiveFlag'],\r\n    '0074': ['FD', '1', 'DosimetricObjectiveWeight'],\r\n    '0075': ['CS', '1', 'DosimetricObjectivePurpose'],\r\n    '0076': ['SQ', '1', 'PlanningInputInformationSequence'],\r\n    '0077': ['LO', '1', 'TreatmentSite'],\r\n    '0078': ['SQ', '1', 'TreatmentSiteCodeSequence'],\r\n    '0079': ['SQ', '1', 'FractionPatternSequence'],\r\n    '007A': ['UT', '1', 'TreatmentTechniqueNotes'],\r\n    '007B': ['UT', '1', 'PrescriptionNotes'],\r\n    '007C': ['IS', '1', 'NumberOfIntervalFractions'],\r\n    '007D': ['US', '1', 'NumberOfFractions'],\r\n    '007E': ['US', '1', 'IntendedDeliveryDuration'],\r\n    '007F': ['UT', '1', 'FractionationNotes'],\r\n    '0080': ['SQ', '1', 'RTTreatmentTechniqueCodeSequence'],\r\n    '0081': ['SQ', '1', 'PrescriptionNotesSequence'],\r\n    '0082': ['SQ', '1', 'FractionBasedRelationshipSequence'],\r\n    '0083': ['CS', '1', 'FractionBasedRelationshipIntervalAnchor'],\r\n    '0084': ['FD', '1', 'MinimumHoursBetweenFractions'],\r\n    '0085': ['TM', '1-n', 'IntendedFractionStartTime'],\r\n    '0086': ['LT', '1', 'IntendedStartDayOfWeek'],\r\n    '0087': ['SQ', '1', 'WeekdayFractionPatternSequence'],\r\n    '0088': ['SQ', '1', 'DeliveryTimeStructureCodeSequence'],\r\n    '0089': ['SQ', '1', 'TreatmentSiteModifierCodeSequence'],\r\n    '0090': ['CS', '1', 'RoboticBaseLocationIndicator'],\r\n    '0091': ['SQ', '1', 'RoboticPathNodeSetCodeSequence'],\r\n    '0092': ['UL', '1', 'RoboticNodeIdentifier'],\r\n    '0093': ['FD', '3', 'RTTreatmentSourceCoordinates'],\r\n    '0094': ['FD', '1', 'RadiationSourceCoordinateSystemYawAngle'],\r\n    '0095': ['FD', '1', 'RadiationSourceCoordinateSystemRollAngle'],\r\n    '0096': ['FD', '1', 'RadiationSourceCoordinateSystemPitchAngle'],\r\n    '0097': ['SQ', '1', 'RoboticPathControlPointSequence'],\r\n    '0098': ['SQ', '1', 'TomotherapeuticControlPointSequence'],\r\n    '0099': ['FD', '1-n', 'TomotherapeuticLeafOpenDurations'],\r\n    '009A': ['FD', '1-n', 'TomotherapeuticLeafInitialClosedDurations']\r\n  },\r\n  '4000': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['LT', '1', 'Arbitrary'],\r\n    '4000': ['LT', '1', 'TextComments']\r\n  },\r\n  '4008': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0040': ['SH', '1', 'ResultsID'],\r\n    '0042': ['LO', '1', 'ResultsIDIssuer'],\r\n    '0050': ['SQ', '1', 'ReferencedInterpretationSequence'],\r\n    '00FF': ['CS', '1', 'ReportProductionStatusTrial'],\r\n    '0100': ['DA', '1', 'InterpretationRecordedDate'],\r\n    '0101': ['TM', '1', 'InterpretationRecordedTime'],\r\n    '0102': ['PN', '1', 'InterpretationRecorder'],\r\n    '0103': ['LO', '1', 'ReferenceToRecordedSound'],\r\n    '0108': ['DA', '1', 'InterpretationTranscriptionDate'],\r\n    '0109': ['TM', '1', 'InterpretationTranscriptionTime'],\r\n    '010A': ['PN', '1', 'InterpretationTranscriber'],\r\n    '010B': ['ST', '1', 'InterpretationText'],\r\n    '010C': ['PN', '1', 'InterpretationAuthor'],\r\n    '0111': ['SQ', '1', 'InterpretationApproverSequence'],\r\n    '0112': ['DA', '1', 'InterpretationApprovalDate'],\r\n    '0113': ['TM', '1', 'InterpretationApprovalTime'],\r\n    '0114': ['PN', '1', 'PhysicianApprovingInterpretation'],\r\n    '0115': ['LT', '1', 'InterpretationDiagnosisDescription'],\r\n    '0117': ['SQ', '1', 'InterpretationDiagnosisCodeSequence'],\r\n    '0118': ['SQ', '1', 'ResultsDistributionListSequence'],\r\n    '0119': ['PN', '1', 'DistributionName'],\r\n    '011A': ['LO', '1', 'DistributionAddress'],\r\n    '0200': ['SH', '1', 'InterpretationID'],\r\n    '0202': ['LO', '1', 'InterpretationIDIssuer'],\r\n    '0210': ['CS', '1', 'InterpretationTypeID'],\r\n    '0212': ['CS', '1', 'InterpretationStatusID'],\r\n    '0300': ['ST', '1', 'Impressions'],\r\n    '4000': ['ST', '1', 'ResultsComments']\r\n  },\r\n  '4010': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['CS', '1', 'LowEnergyDetectors'],\r\n    '0002': ['CS', '1', 'HighEnergyDetectors'],\r\n    '0004': ['SQ', '1', 'DetectorGeometrySequence'],\r\n    '1001': ['SQ', '1', 'ThreatROIVoxelSequence'],\r\n    '1004': ['FL', '3', 'ThreatROIBase'],\r\n    '1005': ['FL', '3', 'ThreatROIExtents'],\r\n    '1006': ['OB', '1', 'ThreatROIBitmap'],\r\n    '1007': ['SH', '1', 'RouteSegmentID'],\r\n    '1008': ['CS', '1', 'GantryType'],\r\n    '1009': ['CS', '1', 'OOIOwnerType'],\r\n    '100A': ['SQ', '1', 'RouteSegmentSequence'],\r\n    '1010': ['US', '1', 'PotentialThreatObjectID'],\r\n    '1011': ['SQ', '1', 'ThreatSequence'],\r\n    '1012': ['CS', '1', 'ThreatCategory'],\r\n    '1013': ['LT', '1', 'ThreatCategoryDescription'],\r\n    '1014': ['CS', '1', 'ATDAbilityAssessment'],\r\n    '1015': ['CS', '1', 'ATDAssessmentFlag'],\r\n    '1016': ['FL', '1', 'ATDAssessmentProbability'],\r\n    '1017': ['FL', '1', 'Mass'],\r\n    '1018': ['FL', '1', 'Density'],\r\n    '1019': ['FL', '1', 'ZEffective'],\r\n    '101A': ['SH', '1', 'BoardingPassID'],\r\n    '101B': ['FL', '3', 'CenterOfMass'],\r\n    '101C': ['FL', '3', 'CenterOfPTO'],\r\n    '101D': ['FL', '6-n', 'BoundingPolygon'],\r\n    '101E': ['SH', '1', 'RouteSegmentStartLocationID'],\r\n    '101F': ['SH', '1', 'RouteSegmentEndLocationID'],\r\n    '1020': ['CS', '1', 'RouteSegmentLocationIDType'],\r\n    '1021': ['CS', '1-n', 'AbortReason'],\r\n    '1023': ['FL', '1', 'VolumeOfPTO'],\r\n    '1024': ['CS', '1', 'AbortFlag'],\r\n    '1025': ['DT', '1', 'RouteSegmentStartTime'],\r\n    '1026': ['DT', '1', 'RouteSegmentEndTime'],\r\n    '1027': ['CS', '1', 'TDRType'],\r\n    '1028': ['CS', '1', 'InternationalRouteSegment'],\r\n    '1029': ['LO', '1-n', 'ThreatDetectionAlgorithmAndVersion'],\r\n    '102A': ['SH', '1', 'AssignedLocation'],\r\n    '102B': ['DT', '1', 'AlarmDecisionTime'],\r\n    '1031': ['CS', '1', 'AlarmDecision'],\r\n    '1033': ['US', '1', 'NumberOfTotalObjects'],\r\n    '1034': ['US', '1', 'NumberOfAlarmObjects'],\r\n    '1037': ['SQ', '1', 'PTORepresentationSequence'],\r\n    '1038': ['SQ', '1', 'ATDAssessmentSequence'],\r\n    '1039': ['CS', '1', 'TIPType'],\r\n    '103A': ['CS', '1', 'DICOSVersion'],\r\n    '1041': ['DT', '1', 'OOIOwnerCreationTime'],\r\n    '1042': ['CS', '1', 'OOIType'],\r\n    '1043': ['FL', '3', 'OOISize'],\r\n    '1044': ['CS', '1', 'AcquisitionStatus'],\r\n    '1045': ['SQ', '1', 'BasisMaterialsCodeSequence'],\r\n    '1046': ['CS', '1', 'PhantomType'],\r\n    '1047': ['SQ', '1', 'OOIOwnerSequence'],\r\n    '1048': ['CS', '1', 'ScanType'],\r\n    '1051': ['LO', '1', 'ItineraryID'],\r\n    '1052': ['SH', '1', 'ItineraryIDType'],\r\n    '1053': ['LO', '1', 'ItineraryIDAssigningAuthority'],\r\n    '1054': ['SH', '1', 'RouteID'],\r\n    '1055': ['SH', '1', 'RouteIDAssigningAuthority'],\r\n    '1056': ['CS', '1', 'InboundArrivalType'],\r\n    '1058': ['SH', '1', 'CarrierID'],\r\n    '1059': ['CS', '1', 'CarrierIDAssigningAuthority'],\r\n    '1060': ['FL', '3', 'SourceOrientation'],\r\n    '1061': ['FL', '3', 'SourcePosition'],\r\n    '1062': ['FL', '1', 'BeltHeight'],\r\n    '1064': ['SQ', '1', 'AlgorithmRoutingCodeSequence'],\r\n    '1067': ['CS', '1', 'TransportClassification'],\r\n    '1068': ['LT', '1', 'OOITypeDescriptor'],\r\n    '1069': ['FL', '1', 'TotalProcessingTime'],\r\n    '106C': ['OB', '1', 'DetectorCalibrationData'],\r\n    '106D': ['CS', '1', 'AdditionalScreeningPerformed'],\r\n    '106E': ['CS', '1', 'AdditionalInspectionSelectionCriteria'],\r\n    '106F': ['SQ', '1', 'AdditionalInspectionMethodSequence'],\r\n    '1070': ['CS', '1', 'AITDeviceType'],\r\n    '1071': ['SQ', '1', 'QRMeasurementsSequence'],\r\n    '1072': ['SQ', '1', 'TargetMaterialSequence'],\r\n    '1073': ['FD', '1', 'SNRThreshold'],\r\n    '1075': ['DS', '1', 'ImageScaleRepresentation'],\r\n    '1076': ['SQ', '1', 'ReferencedPTOSequence'],\r\n    '1077': ['SQ', '1', 'ReferencedTDRInstanceSequence'],\r\n    '1078': ['ST', '1', 'PTOLocationDescription'],\r\n    '1079': ['SQ', '1', 'AnomalyLocatorIndicatorSequence'],\r\n    '107A': ['FL', '3', 'AnomalyLocatorIndicator'],\r\n    '107B': ['SQ', '1', 'PTORegionSequence'],\r\n    '107C': ['CS', '1', 'InspectionSelectionCriteria'],\r\n    '107D': ['SQ', '1', 'SecondaryInspectionMethodSequence'],\r\n    '107E': ['DS', '6', 'PRCSToRCSOrientation']\r\n  },\r\n  '4FFE': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['SQ', '1', 'MACParametersSequence']\r\n  },\r\n  '5000': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0005': ['US', '1', 'CurveDimensions'],\r\n    '0010': ['US', '1', 'NumberOfPoints'],\r\n    '0020': ['CS', '1', 'TypeOfData'],\r\n    '0022': ['LO', '1', 'CurveDescription'],\r\n    '0030': ['SH', '1-n', 'AxisUnits'],\r\n    '0040': ['SH', '1-n', 'AxisLabels'],\r\n    '0103': ['US', '1', 'DataValueRepresentation'],\r\n    '0104': ['US', '1-n', 'MinimumCoordinateValue'],\r\n    '0105': ['US', '1-n', 'MaximumCoordinateValue'],\r\n    '0106': ['SH', '1-n', 'CurveRange'],\r\n    '0110': ['US', '1-n', 'CurveDataDescriptor'],\r\n    '0112': ['US', '1-n', 'CoordinateStartValue'],\r\n    '0114': ['US', '1-n', 'CoordinateStepValue'],\r\n    '1001': ['CS', '1', 'CurveActivationLayer'],\r\n    '2000': ['US', '1', 'AudioType'],\r\n    '2002': ['US', '1', 'AudioSampleFormat'],\r\n    '2004': ['US', '1', 'NumberOfChannels'],\r\n    '2006': ['UL', '1', 'NumberOfSamples'],\r\n    '2008': ['UL', '1', 'SampleRate'],\r\n    '200A': ['UL', '1', 'TotalTime'],\r\n    '200C': ['ox', '1', 'AudioSampleData'],\r\n    '200E': ['LT', '1', 'AudioComments'],\r\n    '2500': ['LO', '1', 'CurveLabel'],\r\n    '2600': ['SQ', '1', 'CurveReferencedOverlaySequence'],\r\n    '2610': ['US', '1', 'CurveReferencedOverlayGroup'],\r\n    '3000': ['ox', '1', 'CurveData']\r\n  },\r\n  '5200': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '9229': ['SQ', '1', 'SharedFunctionalGroupsSequence'],\r\n    '9230': ['SQ', '1', 'PerFrameFunctionalGroupsSequence']\r\n  },\r\n  '5400': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0100': ['SQ', '1', 'WaveformSequence'],\r\n    '0110': ['ox', '1', 'ChannelMinimumValue'],\r\n    '0112': ['ox', '1', 'ChannelMaximumValue'],\r\n    '1004': ['US', '1', 'WaveformBitsAllocated'],\r\n    '1006': ['CS', '1', 'WaveformSampleInterpretation'],\r\n    '100A': ['ox', '1', 'WaveformPaddingValue'],\r\n    '1010': ['ox', '1', 'WaveformData']\r\n  },\r\n  '5600': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['OF', '1', 'FirstOrderPhaseCorrectionAngle'],\r\n    '0020': ['OF', '1', 'SpectroscopyData']\r\n  },\r\n  '6000': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['US', '1', 'OverlayRows'],\r\n    '0011': ['US', '1', 'OverlayColumns'],\r\n    '0012': ['US', '1', 'OverlayPlanes'],\r\n    '0015': ['IS', '1', 'NumberOfFramesInOverlay'],\r\n    '0022': ['LO', '1', 'OverlayDescription'],\r\n    '0040': ['CS', '1', 'OverlayType'],\r\n    '0045': ['LO', '1', 'OverlaySubtype'],\r\n    '0050': ['SS', '2', 'OverlayOrigin'],\r\n    '0051': ['US', '1', 'ImageFrameOrigin'],\r\n    '0052': ['US', '1', 'OverlayPlaneOrigin'],\r\n    '0060': ['CS', '1', 'OverlayCompressionCode'],\r\n    '0061': ['SH', '1', 'OverlayCompressionOriginator'],\r\n    '0062': ['SH', '1', 'OverlayCompressionLabel'],\r\n    '0063': ['CS', '1', 'OverlayCompressionDescription'],\r\n    '0066': ['AT', '1-n', 'OverlayCompressionStepPointers'],\r\n    '0068': ['US', '1', 'OverlayRepeatInterval'],\r\n    '0069': ['US', '1', 'OverlayBitsGrouped'],\r\n    '0100': ['US', '1', 'OverlayBitsAllocated'],\r\n    '0102': ['US', '1', 'OverlayBitPosition'],\r\n    '0110': ['CS', '1', 'OverlayFormat'],\r\n    '0200': ['US', '1', 'OverlayLocation'],\r\n    '0800': ['CS', '1-n', 'OverlayCodeLabel'],\r\n    '0802': ['US', '1', 'OverlayNumberOfTables'],\r\n    '0803': ['AT', '1-n', 'OverlayCodeTableLocation'],\r\n    '0804': ['US', '1', 'OverlayBitsForCodeWord'],\r\n    '1001': ['CS', '1', 'OverlayActivationLayer'],\r\n    '1100': ['US', '1', 'OverlayDescriptorGray'],\r\n    '1101': ['US', '1', 'OverlayDescriptorRed'],\r\n    '1102': ['US', '1', 'OverlayDescriptorGreen'],\r\n    '1103': ['US', '1', 'OverlayDescriptorBlue'],\r\n    '1200': ['US', '1-n', 'OverlaysGray'],\r\n    '1201': ['US', '1-n', 'OverlaysRed'],\r\n    '1202': ['US', '1-n', 'OverlaysGreen'],\r\n    '1203': ['US', '1-n', 'OverlaysBlue'],\r\n    '1301': ['IS', '1', 'ROIArea'],\r\n    '1302': ['DS', '1', 'ROIMean'],\r\n    '1303': ['DS', '1', 'ROIStandardDeviation'],\r\n    '1500': ['LO', '1', 'OverlayLabel'],\r\n    '3000': ['ox', '1', 'OverlayData'],\r\n    '4000': ['LT', '1', 'OverlayComments']\r\n  },\r\n  '7F00': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0010': ['ox', '1', 'VariablePixelData'],\r\n    '0011': ['US', '1', 'VariableNextDataGroup'],\r\n    '0020': ['OW', '1', 'VariableCoefficientsSDVN'],\r\n    '0030': ['OW', '1', 'VariableCoefficientsSDHN'],\r\n    '0040': ['OW', '1', 'VariableCoefficientsSDDN']\r\n  },\r\n  '7FE0': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    '0001': ['OV', '1', 'ExtendedOffsetTable'],\r\n    '0002': ['OV', '1', 'ExtendedOffsetTableLengths'],\r\n    '0008': ['OF', '1', 'FloatPixelData'],\r\n    '0009': ['OD', '1', 'DoubleFloatPixelData'],\r\n    '0010': ['ox', '1', 'PixelData'],\r\n    '0020': ['OW', '1', 'CoefficientsSDVN'],\r\n    '0030': ['OW', '1', 'CoefficientsSDHN'],\r\n    '0040': ['OW', '1', 'CoefficientsSDDN']\r\n  },\r\n  'FFFA': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    'FFFA': ['SQ', '1', 'DigitalSignaturesSequence']\r\n  },\r\n  'FFFC': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    'FFFC': ['OB', '1', 'DataSetTrailingPadding']\r\n  },\r\n  'FFFE': {\r\n    '0000': ['UL', '1', 'GenericGroupLength'],\r\n    'E000': ['NONE', '1', 'Item'],\r\n    'E00D': ['NONE', '1', 'ItemDelimitationItem'],\r\n    'E0DD': ['NONE', '1', 'SequenceDelimitationItem']\r\n  }\r\n}; // Dictionary\r\n\r\n/**\r\n * Add tags to the dictionary.\r\n *\r\n * @param {string} group The group key.\r\n * @param {object} tags The tags to add.\r\n */\r\nexport function addTagsToDictionary(group, tags) {\r\n  // TODO: add checks!\r\n  dictionary[group] = tags;\r\n}\r\n\r\n// taken from gdcm-2.6.1\\Source\\DataDictionary\\GroupName.dic\r\n// -> removed duplicates (commented)\r\nexport const tagGroups = {\r\n  '0000': 'Command',\r\n  '0002': 'Meta Element',\r\n  '0004': 'File Set',\r\n  //'0004': 'Directory',\r\n  '0008': 'Identifying',\r\n  '0009': 'SPI Identifying',\r\n  '0010': 'Patient',\r\n  '0012': 'Clinical Trial',\r\n  '0018': 'Acquisition',\r\n  '0019': 'SPI Acquisition',\r\n  '0020': 'Image',\r\n  '0021': 'SPI Image',\r\n  '0022': 'Ophtalmology',\r\n  '0028': 'Image Presentation',\r\n  '0032': 'Study',\r\n  '0038': 'Visit',\r\n  '003A': 'Waveform',\r\n  '0040': 'Procedure',\r\n  //'0040': ''Modality Worklist',\r\n  '0042': 'Encapsulated Document',\r\n  '0050': 'Device Informations',\r\n  //'0050': 'XRay Angio Device',\r\n  '0054': 'Nuclear Medicine',\r\n  '0060': 'Histogram',\r\n  '0070': 'Presentation State',\r\n  '0072': 'Hanging Protocol',\r\n  '0088': 'Storage',\r\n  //'0088': 'Medicine',\r\n  '0100': 'Authorization',\r\n  '0400': 'Digital Signature',\r\n  '1000': 'Code Table',\r\n  '1010': 'Zonal Map',\r\n  '2000': 'Film Session',\r\n  '2010': 'Film Box',\r\n  '2020': 'Image Box',\r\n  '2030': 'Annotation',\r\n  '2040': 'Overlay Box',\r\n  '2050': 'Presentation LUT',\r\n  '2100': 'Print Job',\r\n  '2110': 'Printer',\r\n  '2120': 'Queue',\r\n  '2130': 'Print Content',\r\n  '2200': 'Media Creation',\r\n  '3002': 'RT Image',\r\n  '3004': 'RT Dose',\r\n  '3006': 'RT StructureSet',\r\n  '3008': 'RT Treatment',\r\n  '300A': 'RT Plan',\r\n  '300C': 'RT Relationship',\r\n  '300E': 'RT Approval',\r\n  '4000': 'Text',\r\n  '4008': 'Results',\r\n  '4FFE': 'MAC Parameters',\r\n  '5000': 'Curve',\r\n  '5002': 'Curve',\r\n  '5004': 'Curve',\r\n  '5006': 'Curve',\r\n  '5008': 'Curve',\r\n  '500A': 'Curve',\r\n  '500C': 'Curve',\r\n  '500E': 'Curve',\r\n  '5400': 'Waveform Data',\r\n  '6000': 'Overlays',\r\n  '6002': 'Overlays',\r\n  '6004': 'Overlays',\r\n  '6008': 'Overlays',\r\n  '600A': 'Overlays',\r\n  '600C': 'Overlays',\r\n  '600E': 'Overlays',\r\n  'FFFC': 'Generic',\r\n  '7FE0': 'Pixel Data',\r\n  'FFFF': 'Unknown'\r\n};\r\n\r\n// Value Representation (VR) with 32bit Value Length (VL)\r\n// Added locally used 'ox'\r\n// see http://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_7.html#table_7.1-1\r\nconst vr32bitVL = {\r\n  OB: true,\r\n  OD: true,\r\n  OF: true,\r\n  OL: true,\r\n  OV: true,\r\n  OW: true,\r\n  SQ: true,\r\n  SV: true,\r\n  UC: true,\r\n  UN: true,\r\n  UR: true,\r\n  UT: true,\r\n  UV: true,\r\n  ox: true\r\n};\r\n\r\n/**\r\n * Does the input Value Representation (VR) have a 32bit Value Length (VL).\r\n *\r\n * @param {string} vr The data Value Representation (VR).\r\n * @returns {boolean} True if this VR has a 32-bit VL.\r\n */\r\nexport function is32bitVLVR(vr) {\r\n  return typeof vr32bitVL[vr] !== 'undefined';\r\n}\r\n\r\n// String VR with extended or replaced default character repertoire defined in\r\n// Specific Character Set (0008,0005)\r\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/chapter_6.html#sect_6.1.2.2\r\nconst vrCharSetString = {\r\n  SH: true,\r\n  LO: true,\r\n  UC: true,\r\n  ST: true,\r\n  LT: true,\r\n  UT: true,\r\n  PN: true\r\n};\r\n\r\n/**\r\n * Does the input Value Representation (VR) have an special character repertoire.\r\n *\r\n * @param {string} vr The data VR.\r\n * @returns {boolean} True if this VR has a special char set.\r\n */\r\nexport function isCharSetStringVR(vr) {\r\n  return typeof vrCharSetString[vr] !== 'undefined';\r\n}\r\n\r\n// VR types\r\n// see https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_6.2.html#table_6.2-1\r\nexport const vrTypes = {\r\n  AE: 'string',\r\n  AS: 'string',\r\n  AT: undefined,\r\n  CS: 'string',\r\n  DA: 'string',\r\n  DS: 'string',\r\n  DT: 'string',\r\n  FL: 'Float32',\r\n  FD: 'Float64',\r\n  IS: 'string',\r\n  LO: 'string',\r\n  LT: 'string',\r\n  OB: 'Uint8',\r\n  OD: 'Uint64',\r\n  OF: 'Uint32',\r\n  OL: 'Uint32',\r\n  OV: 'Uint64',\r\n  OW: 'Uint16',\r\n  PN: 'string',\r\n  SH: 'string',\r\n  SL: 'Int32',\r\n  SQ: undefined,\r\n  SS: 'Int16',\r\n  ST: 'string',\r\n  SV: 'Int64',\r\n  TM: 'string',\r\n  UC: 'string',\r\n  UI: 'string',\r\n  UL: 'Uint32',\r\n  UN: 'Uint8',\r\n  UR: 'string',\r\n  US: 'Uint16',\r\n  UT: 'string',\r\n  UV: 'Uint64'\r\n};\r\n","import {\r\n  dictionary,\r\n  tagGroups\r\n} from './dictionary';\r\n\r\n/**\r\n * Immutable tag.\r\n */\r\nexport class Tag {\r\n\r\n  /**\r\n   * The tag group.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #group;\r\n\r\n  /**\r\n   * The tag element.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #element;\r\n\r\n  /**\r\n   * @param {string} group The tag group as '####'.\r\n   * @param {string} element The tag element as '####'.\r\n   */\r\n  constructor(group, element) {\r\n    if (!group || typeof group === 'undefined') {\r\n      throw new Error('Cannot create tag with no group.');\r\n    }\r\n    if (group.length !== 4) {\r\n      throw new Error('Cannot create tag with badly sized group.');\r\n    }\r\n    if (!element || typeof element === 'undefined') {\r\n      throw new Error('Cannot create tag with no element.');\r\n    }\r\n    if (element.length !== 4) {\r\n      throw new Error('Cannot create tag with badly sized element.');\r\n    }\r\n    this.#group = group;\r\n    this.#element = element;\r\n  }\r\n\r\n  /**\r\n   * Get the tag group.\r\n   *\r\n   * @returns {string} The tag group.\r\n   */\r\n  getGroup() {\r\n    return this.#group;\r\n  }\r\n\r\n  /**\r\n   * Get the tag element.\r\n   *\r\n   * @returns {string} The tag element.\r\n   */\r\n  getElement() {\r\n    return this.#element;\r\n  }\r\n\r\n  /**\r\n   * Get as string representation of the tag: 'key: name'.\r\n   *\r\n   * @returns {string} A string representing the tag.\r\n   */\r\n  toString() {\r\n    return this.getKey() + ': ' + this.getNameFromDictionary();\r\n  }\r\n\r\n  /**\r\n   * Check for Tag equality.\r\n   *\r\n   * @param {Tag} rhs The other tag to compare to.\r\n   * @returns {boolean} True if both tags are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      typeof rhs !== 'undefined' &&\r\n      this.#group === rhs.getGroup() &&\r\n      this.#element === rhs.getElement();\r\n  }\r\n\r\n  /**\r\n   * Get the group-element key used to store DICOM elements.\r\n   *\r\n   * @returns {string} The key as '########'.\r\n   */\r\n  getKey() {\r\n    return this.#group + this.#element;\r\n  }\r\n\r\n  /**\r\n   * Get the group name as defined in TagGroups.\r\n   *\r\n   * @returns {string} The name.\r\n   */\r\n  getGroupName() {\r\n    return tagGroups[this.#group];\r\n  }\r\n\r\n  /**\r\n   * Does this tag have a VR.\r\n   * Basically not the Item, ItemDelimitationItem nor\r\n   *  SequenceDelimitationItem tags.\r\n   *\r\n   * @returns {boolean} True if this tag has a VR.\r\n   */\r\n  isWithVR() {\r\n    return !(this.#group === 'FFFE' &&\r\n      (this.#element === 'E000' ||\r\n      this.#element === 'E00D' ||\r\n      this.#element === 'E0DD')\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Is the tag group a private tag group ?\r\n   * see: http://dicom.nema.org/medical/dicom/2015a/output/html/part05.html#sect_7.8\r\n   *\r\n   * @returns {boolean} True if the tag group is private,\r\n   *   ie if its group is an odd number.\r\n   */\r\n  isPrivate() {\r\n    return parseInt(this.#group, 16) % 2 === 1;\r\n  }\r\n\r\n  /**\r\n   * Get the tag info from the dicom dictionary.\r\n   *\r\n   * @returns {Array|undefined} The info as [vr, multiplicity, name].\r\n   */\r\n  getInfoFromDictionary() {\r\n    let info;\r\n    if (typeof dictionary[this.#group] !== 'undefined' &&\r\n      typeof dictionary[this.#group][this.#element] !==\r\n        'undefined') {\r\n      info = dictionary[this.#group][this.#element];\r\n    }\r\n    return info;\r\n  }\r\n\r\n  /**\r\n   * Get the tag Value Representation (VR) from the dicom dictionary.\r\n   *\r\n   * @returns {string|undefined} The VR.\r\n   */\r\n  getVrFromDictionary() {\r\n    let vr;\r\n    const info = this.getInfoFromDictionary();\r\n    if (typeof info !== 'undefined') {\r\n      vr = info[0];\r\n    }\r\n    return vr;\r\n  }\r\n\r\n  /**\r\n   * Get the tag name from the dicom dictionary.\r\n   *\r\n   * @returns {string|undefined} The VR.\r\n   */\r\n  getNameFromDictionary() {\r\n    let name;\r\n    const info = this.getInfoFromDictionary();\r\n    if (typeof info !== 'undefined') {\r\n      name = info[2];\r\n    }\r\n    return name;\r\n  }\r\n\r\n} // Tag class\r\n\r\n/**\r\n * Tag compare function.\r\n *\r\n * @param {Tag} a The first tag.\r\n * @param {Tag} b The second tag.\r\n * @returns {number} The result of the tag comparison,\r\n *   positive for b before a, negative for a before b and\r\n *   zero to keep same order.\r\n */\r\nexport function tagCompareFunction(a, b) {\r\n  // first by group\r\n  let res = parseInt(a.getGroup(), 16) - parseInt(b.getGroup(), 16);\r\n  if (res === 0) {\r\n    // by element if same group\r\n    res = parseInt(a.getElement(), 16) - parseInt(b.getElement(), 16);\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * Split a group-element key used to store DICOM elements.\r\n *\r\n * @param {string} key The key in form \"00280102\" as generated by tag::getKey.\r\n * @returns {Tag} The DICOM tag.\r\n */\r\nexport function getTagFromKey(key) {\r\n  if (!key || typeof key === 'undefined') {\r\n    throw new Error('Cannot create tag with no key.');\r\n  }\r\n  if (key.length !== 8) {\r\n    throw new Error('Cannot create tag with badly sized key.');\r\n  }\r\n  return new Tag(key.substring(0, 4), key.substring(4, 8));\r\n}\r\n\r\n/**\r\n * Get the TransferSyntaxUID Tag.\r\n *\r\n * @returns {Tag} The tag.\r\n */\r\nexport function getTransferSyntaxUIDTag() {\r\n  return new Tag('0002', '0010');\r\n}\r\n\r\n/**\r\n * Get the FileMetaInformationGroupLength Tag.\r\n *\r\n * @returns {Tag} The tag.\r\n */\r\nexport function getFileMetaInformationGroupLengthTag() {\r\n  return new Tag('0002', '0000');\r\n}\r\n\r\n/**\r\n * Is the input tag the FileMetaInformationGroupLength Tag.\r\n *\r\n * @param {Tag} tag The tag to test.\r\n * @returns {boolean} True if the asked tag.\r\n */\r\nexport function isFileMetaInformationGroupLengthTag(tag) {\r\n  return tag.equals(getFileMetaInformationGroupLengthTag());\r\n}\r\n\r\n/**\r\n * Get the Item Tag.\r\n *\r\n * @returns {Tag} The tag.\r\n */\r\nexport function getItemTag() {\r\n  return new Tag('FFFE', 'E000');\r\n}\r\n\r\n/**\r\n * Is the input tag the Item Tag.\r\n *\r\n * @param {Tag} tag The tag to test.\r\n * @returns {boolean} True if the asked tag.\r\n */\r\nexport function isItemTag(tag) {\r\n  // faster than tag.equals(getItemTag());\r\n  return tag.getKey() === 'FFFEE000';\r\n}\r\n\r\n/**\r\n * Get the ItemDelimitationItem Tag.\r\n *\r\n * @returns {Tag} The tag.\r\n */\r\nexport function getItemDelimitationItemTag() {\r\n  return new Tag('FFFE', 'E00D');\r\n}\r\n\r\n/**\r\n * Is the input tag the ItemDelimitationItem Tag.\r\n *\r\n * @param {Tag} tag The tag to test.\r\n * @returns {boolean} True if the asked tag.\r\n */\r\nexport function isItemDelimitationItemTag(tag) {\r\n  // faster than tag.equals(getItemDelimitationItemTag());\r\n  return tag.getKey() === 'FFFEE00D';\r\n}\r\n\r\n/**\r\n * Get the SequenceDelimitationItem Tag.\r\n *\r\n * @returns {Tag} The tag.\r\n */\r\nexport function getSequenceDelimitationItemTag() {\r\n  return new Tag('FFFE', 'E0DD');\r\n}\r\n\r\n/**\r\n * Is the input tag the SequenceDelimitationItem Tag.\r\n *\r\n * @param {Tag} tag The tag to test.\r\n * @returns {boolean} True if the asked tag.\r\n */\r\nexport function isSequenceDelimitationItemTag(tag) {\r\n  // faster than tag.equals(getSequenceDelimitationItemTag());\r\n  return tag.getKey() === 'FFFEE0DD';\r\n}\r\n\r\n/**\r\n * Get the PixelData Tag.\r\n *\r\n * @returns {Tag} The tag.\r\n */\r\nexport function getPixelDataTag() {\r\n  return new Tag('7FE0', '0010');\r\n}\r\n\r\n/**\r\n * Is the input tag the PixelData Tag.\r\n *\r\n * @param {Tag} tag The tag to test.\r\n * @returns {boolean} True if the asked tag.\r\n */\r\nexport function isPixelDataTag(tag) {\r\n  // faster than tag.equals(getPixelDataTag());\r\n  return tag.getKey() === '7FE00010';\r\n}\r\n\r\n/**\r\n * Get a tag from the dictionary using a tag string name.\r\n *\r\n * @param {string} tagName The tag string name.\r\n * @returns {Tag|undefined} The tag object or null if not found.\r\n */\r\nexport function getTagFromDictionary(tagName) {\r\n  if (typeof tagName === 'undefined' || tagName === null) {\r\n    return null;\r\n  }\r\n  let group = null;\r\n  let element = null;\r\n  const dict = dictionary;\r\n  const keys0 = Object.keys(dict);\r\n  let keys1 = null;\r\n  let foundTag = false;\r\n  // search through dictionary\r\n  for (let k0 = 0, lenK0 = keys0.length; k0 < lenK0; ++k0) {\r\n    group = keys0[k0];\r\n    keys1 = Object.keys(dict[group]);\r\n    for (let k1 = 0, lenK1 = keys1.length; k1 < lenK1; ++k1) {\r\n      element = keys1[k1];\r\n      if (dict[group][element][2] === tagName) {\r\n        foundTag = true;\r\n        break;\r\n      }\r\n    }\r\n    if (foundTag) {\r\n      break;\r\n    }\r\n  }\r\n  let tag;\r\n  if (foundTag) {\r\n    tag = new Tag(group, element);\r\n  }\r\n  return tag;\r\n}\r\n","/**\r\n * Is the Native endianness Little Endian.\r\n *\r\n * @returns {boolean} True if little endian.\r\n */\r\nexport function isNativeLittleEndian() {\r\n  return new Int8Array(new Int16Array([1]).buffer)[0] > 0;\r\n}\r\n\r\n/**\r\n * Flip an array's endianness.\r\n * Inspired from [DataStream.js]{@link https://github.com/kig/DataStream.js}.\r\n *\r\n * @param {object} array The array to flip (modified).\r\n */\r\nfunction flipArrayEndianness(array) {\r\n  const blen = array.byteLength;\r\n  const u8 = new Uint8Array(array.buffer, array.byteOffset, blen);\r\n  const bpe = array.BYTES_PER_ELEMENT;\r\n  let tmp;\r\n  for (let i = 0; i < blen; i += bpe) {\r\n    for (let j = i + bpe - 1, k = i; j > k; j--, k++) {\r\n      tmp = u8[k];\r\n      u8[k] = u8[j];\r\n      u8[j] = tmp;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Data reader.\r\n */\r\nexport class DataReader {\r\n\r\n  /**\r\n   * The input buffer.\r\n   *\r\n   * @type {ArrayBuffer}\r\n   */\r\n  #buffer;\r\n\r\n  /**\r\n   * Is the endianness Little Endian.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isLittleEndian = true;\r\n\r\n  /**\r\n   * Is the Native endianness Little Endian.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isNativeLittleEndian = isNativeLittleEndian();\r\n\r\n  /**\r\n   * Flag to know if the TypedArray data needs flipping.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #needFlip;\r\n\r\n  /**\r\n   * The main data view.\r\n   *\r\n   * @type {DataView}\r\n   */\r\n  #view;\r\n\r\n  /**\r\n   * @param {ArrayBuffer} buffer The input array buffer.\r\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is little\r\n   *   or big endian (default: true).\r\n   */\r\n  constructor(buffer, isLittleEndian) {\r\n    this.#buffer = buffer;\r\n    // Set endian flag if not defined.\r\n    if (typeof isLittleEndian !== 'undefined') {\r\n      this.#isLittleEndian = isLittleEndian;\r\n    }\r\n    this.#needFlip = (this.#isLittleEndian !== this.#isNativeLittleEndian);\r\n    this.#view = new DataView(buffer);\r\n  }\r\n\r\n  /**\r\n   * Read Uint16 (2 bytes) data.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @returns {number} The read data.\r\n   */\r\n  readUint16(byteOffset) {\r\n    return this.#view.getUint16(byteOffset, this.#isLittleEndian);\r\n  }\r\n\r\n  /**\r\n   * Read Int16 (2 bytes) data.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @returns {number} The read data.\r\n   */\r\n  readInt16(byteOffset) {\r\n    return this.#view.getInt16(byteOffset, this.#isLittleEndian);\r\n  }\r\n\r\n  /**\r\n   * Read Uint32 (4 bytes) data.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @returns {number} The read data.\r\n   */\r\n  readUint32(byteOffset) {\r\n    return this.#view.getUint32(byteOffset, this.#isLittleEndian);\r\n  }\r\n\r\n  /**\r\n   * Read BigUint64 (8 bytes) data.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @returns {bigint} The read data.\r\n   */\r\n  readBigUint64(byteOffset) {\r\n    return this.#view.getBigUint64(byteOffset, this.#isLittleEndian);\r\n  }\r\n\r\n  /**\r\n   * Read Int32 (4 bytes) data.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @returns {number} The read data.\r\n   */\r\n  readInt32(byteOffset) {\r\n    return this.#view.getInt32(byteOffset, this.#isLittleEndian);\r\n  }\r\n\r\n  /**\r\n   * Read BigInt64 (8 bytes) data.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @returns {bigint} The read data.\r\n   */\r\n  readBigInt64(byteOffset) {\r\n    return this.#view.getBigInt64(byteOffset, this.#isLittleEndian);\r\n  }\r\n\r\n  /**\r\n   * Read Float32 (4 bytes) data.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @returns {number} The read data.\r\n   */\r\n  readFloat32(byteOffset) {\r\n    return this.#view.getFloat32(byteOffset, this.#isLittleEndian);\r\n  }\r\n\r\n  /**\r\n   * Read Float64 (8 bytes) data.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @returns {number} The read data.\r\n   */\r\n  readFloat64(byteOffset) {\r\n    return this.#view.getFloat64(byteOffset, this.#isLittleEndian);\r\n  }\r\n\r\n  /**\r\n   * Read binary (0/1) array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {Uint8Array} The read data.\r\n   */\r\n  readBinaryArray(byteOffset, size) {\r\n    // input\r\n    const bitArray = new Uint8Array(this.#buffer, byteOffset, size);\r\n    // result\r\n    const byteArrayLength = 8 * bitArray.length;\r\n    const data = new Uint8Array(byteArrayLength);\r\n    let bitNumber = 0;\r\n    let bitIndex = 0;\r\n    for (let i = 0; i < byteArrayLength; ++i) {\r\n      bitNumber = i % 8;\r\n      bitIndex = Math.floor(i / 8);\r\n      // see https://stackoverflow.com/questions/4854207/get-a-specific-bit-from-byte/4854257\r\n      // @ts-ignore\r\n      data[i] = 255 * ((bitArray[bitIndex] & (1 << bitNumber)) !== 0);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read Uint8 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {Uint8Array} The read data.\r\n   */\r\n  readUint8Array(byteOffset, size) {\r\n    return new Uint8Array(this.#buffer, byteOffset, size);\r\n  }\r\n\r\n  /**\r\n   * Read Int8 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {Int8Array} The read data.\r\n   */\r\n  readInt8Array(byteOffset, size) {\r\n    return new Int8Array(this.#buffer, byteOffset, size);\r\n  }\r\n\r\n  /**\r\n   * Read Uint16 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {Uint16Array} The read data.\r\n   */\r\n  readUint16Array(byteOffset, size) {\r\n    const bpe = Uint16Array.BYTES_PER_ELEMENT;\r\n    const arraySize = size / bpe;\r\n    let data = null;\r\n    // byteOffset should be a multiple of Uint16Array.BYTES_PER_ELEMENT (=2)\r\n    if (byteOffset % bpe === 0) {\r\n      data = new Uint16Array(this.#buffer, byteOffset, arraySize);\r\n      if (this.#needFlip) {\r\n        flipArrayEndianness(data);\r\n      }\r\n    } else {\r\n      data = new Uint16Array(arraySize);\r\n      let index = byteOffset;\r\n      for (let i = 0; i < arraySize; ++i) {\r\n        data[i] = this.readUint16(index);\r\n        index += bpe;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read Int16 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {Int16Array} The read data.\r\n   */\r\n  readInt16Array(byteOffset, size) {\r\n    const bpe = Int16Array.BYTES_PER_ELEMENT;\r\n    const arraySize = size / bpe;\r\n    let data = null;\r\n    // byteOffset should be a multiple of Int16Array.BYTES_PER_ELEMENT (=2)\r\n    if (byteOffset % bpe === 0) {\r\n      data = new Int16Array(this.#buffer, byteOffset, arraySize);\r\n      if (this.#needFlip) {\r\n        flipArrayEndianness(data);\r\n      }\r\n    } else {\r\n      data = new Int16Array(arraySize);\r\n      let index = byteOffset;\r\n      for (let i = 0; i < arraySize; ++i) {\r\n        data[i] = this.readInt16(index);\r\n        index += bpe;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read Uint32 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {Uint32Array} The read data.\r\n   */\r\n  readUint32Array(byteOffset, size) {\r\n    const bpe = Uint32Array.BYTES_PER_ELEMENT;\r\n    const arraySize = size / bpe;\r\n    let data = null;\r\n    // byteOffset should be a multiple of Uint32Array.BYTES_PER_ELEMENT (=4)\r\n    if (byteOffset % bpe === 0) {\r\n      data = new Uint32Array(this.#buffer, byteOffset, arraySize);\r\n      if (this.#needFlip) {\r\n        flipArrayEndianness(data);\r\n      }\r\n    } else {\r\n      data = new Uint32Array(arraySize);\r\n      let index = byteOffset;\r\n      for (let i = 0; i < arraySize; ++i) {\r\n        data[i] = this.readUint32(index);\r\n        index += bpe;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read Uint64 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {BigUint64Array} The read data.\r\n   */\r\n  readUint64Array(byteOffset, size) {\r\n    const bpe = BigUint64Array.BYTES_PER_ELEMENT;\r\n    const arraySize = size / bpe;\r\n    let data = null;\r\n    // byteOffset should be a multiple of BigUint64Array.BYTES_PER_ELEMENT (=8)\r\n    if (byteOffset % bpe === 0) {\r\n      data = new BigUint64Array(this.#buffer, byteOffset, arraySize);\r\n      if (this.#needFlip) {\r\n        flipArrayEndianness(data);\r\n      }\r\n    } else {\r\n      data = new BigUint64Array(arraySize);\r\n      let index = byteOffset;\r\n      for (let i = 0; i < arraySize; ++i) {\r\n        data[i] = this.readBigUint64(index);\r\n        index += bpe;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read Int32 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {Int32Array} The read data.\r\n   */\r\n  readInt32Array(byteOffset, size) {\r\n    const bpe = Int32Array.BYTES_PER_ELEMENT;\r\n    const arraySize = size / bpe;\r\n    let data = null;\r\n    // byteOffset should be a multiple of Int32Array.BYTES_PER_ELEMENT (=4)\r\n    if (byteOffset % bpe === 0) {\r\n      data = new Int32Array(this.#buffer, byteOffset, arraySize);\r\n      if (this.#needFlip) {\r\n        flipArrayEndianness(data);\r\n      }\r\n    } else {\r\n      data = new Int32Array(arraySize);\r\n      let index = byteOffset;\r\n      for (let i = 0; i < arraySize; ++i) {\r\n        data[i] = this.readInt32(index);\r\n        index += bpe;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read Int64 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {BigInt64Array} The read data.\r\n   */\r\n  readInt64Array(byteOffset, size) {\r\n    const bpe = BigInt64Array.BYTES_PER_ELEMENT;\r\n    const arraySize = size / bpe;\r\n    let data = null;\r\n    // byteOffset should be a multiple of BigInt64Array.BYTES_PER_ELEMENT (=8)\r\n    if (byteOffset % bpe === 0) {\r\n      data = new BigInt64Array(this.#buffer, byteOffset, arraySize);\r\n      if (this.#needFlip) {\r\n        flipArrayEndianness(data);\r\n      }\r\n    } else {\r\n      data = new BigInt64Array(arraySize);\r\n      let index = byteOffset;\r\n      for (let i = 0; i < arraySize; ++i) {\r\n        data[i] = this.readBigInt64(index);\r\n        index += bpe;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read Float32 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {Float32Array} The read data.\r\n   */\r\n  readFloat32Array(byteOffset, size) {\r\n    const bpe = Float32Array.BYTES_PER_ELEMENT;\r\n    const arraySize = size / bpe;\r\n    let data = null;\r\n    // byteOffset should be a multiple of Float32Array.BYTES_PER_ELEMENT (=4)\r\n    if (byteOffset % bpe === 0) {\r\n      data = new Float32Array(this.#buffer, byteOffset, arraySize);\r\n      if (this.#needFlip) {\r\n        flipArrayEndianness(data);\r\n      }\r\n    } else {\r\n      data = new Float32Array(arraySize);\r\n      let index = byteOffset;\r\n      for (let i = 0; i < arraySize; ++i) {\r\n        data[i] = this.readFloat32(index);\r\n        index += bpe;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read Float64 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @param {number} size The size of the array.\r\n   * @returns {Float64Array} The read data.\r\n   */\r\n  readFloat64Array(byteOffset, size) {\r\n    const bpe = Float64Array.BYTES_PER_ELEMENT;\r\n    const arraySize = size / bpe;\r\n    let data = null;\r\n    // byteOffset should be a multiple of Float64Array.BYTES_PER_ELEMENT (=8)\r\n    if (byteOffset % bpe === 0) {\r\n      data = new Float64Array(this.#buffer, byteOffset, arraySize);\r\n      if (this.#needFlip) {\r\n        flipArrayEndianness(data);\r\n      }\r\n    } else {\r\n      data = new Float64Array(arraySize);\r\n      let index = byteOffset;\r\n      for (let i = 0; i < arraySize; ++i) {\r\n        data[i] = this.readFloat64(index);\r\n        index += bpe;\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read data as an hexadecimal string of length 4 (no '0x' prefix).\r\n   *\r\n   * @param {number} byteOffset The offset to start reading from.\r\n   * @returns {string} The read data ('####').\r\n   */\r\n  readHex(byteOffset) {\r\n    // read and convert to hex string\r\n    const str = this.readUint16(byteOffset).toString(16);\r\n    // return padded\r\n    return '0000'.substring(0, 4 - str.length) + str.toUpperCase();\r\n  }\r\n\r\n} // class DataReader\r\n","/**\r\n * Capitalise the first letter of a string.\r\n *\r\n * @param {string} string The string to capitalise the first letter.\r\n * @returns {string} The new string.\r\n */\r\nexport function capitaliseFirstLetter(string) {\r\n  let res = string;\r\n  if (string) {\r\n    res = string.charAt(0).toUpperCase() + string.slice(1);\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * Check if a string starts with the input element.\r\n *\r\n * @param {string} str The input string.\r\n * @param {string} search The searched start.\r\n * @param {number} [rawPos] The position in this string at which to begin\r\n *  searching for searchString. Defaults to 0.\r\n * @returns {boolean} True if the input string starts with the searched string.\r\n */\r\nexport function startsWith(str, search, rawPos) {\r\n  if (typeof str === 'undefined' || str === null ||\r\n    typeof search === 'undefined' || search === null) {\r\n    return false;\r\n  }\r\n  const pos = rawPos > 0 ? rawPos | 0 : 0;\r\n  return str.substring(pos, pos + search.length) === search;\r\n}\r\n\r\n/**\r\n * Check if a string ends with the input element.\r\n *\r\n * @param {string} str The input string.\r\n * @param {string} search The searched ending.\r\n * @returns {boolean} True if the input string ends with the searched string.\r\n */\r\nexport function endsWith(str, search) {\r\n  if (typeof str === 'undefined' || str === null ||\r\n    typeof search === 'undefined' || search === null) {\r\n    return false;\r\n  }\r\n  return str.substring(str.length - search.length) === search;\r\n}\r\n\r\n/**\r\n * Split key/value string:\r\n *  key0=val00&key0=val01&key1=val10 returns\r\n *  { key0 : [val00, val01], key1 : val1 }\r\n *\r\n * @param {string} inputStr The string to split.\r\n * @returns {object} The split string.\r\n */\r\nexport function splitKeyValueString(inputStr) {\r\n  // result\r\n  const result = {};\r\n  // check input string\r\n  if (inputStr) {\r\n    // split key/value pairs\r\n    const pairs = inputStr.split('&');\r\n    for (let i = 0; i < pairs.length; ++i) {\r\n      const pair = pairs[i].split('=');\r\n      // if the key does not exist, create it\r\n      if (!result[pair[0]]) {\r\n        result[pair[0]] = pair[1];\r\n      } else {\r\n        // make it an array\r\n        if (!(result[pair[0]] instanceof Array)) {\r\n          result[pair[0]] = [result[pair[0]]];\r\n        }\r\n        result[pair[0]].push(pair[1]);\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Get flags from an input string. Flags are words surrounded with curly\r\n * braces.\r\n *\r\n * @param {string} inputStr The input string.\r\n * @returns {Array} An array of found flags.\r\n */\r\nexport function getFlags(inputStr) {\r\n  const flags = [];\r\n  // check input string\r\n  if (inputStr === null || typeof inputStr === 'undefined') {\r\n    return flags;\r\n  }\r\n\r\n  // word surrounded by curly braces\r\n  const regex = /{(\\w+)}/g;\r\n\r\n  let match = regex.exec(inputStr);\r\n  while (match) {\r\n    flags.push(match[1]); // first matching group\r\n    match = regex.exec(inputStr);\r\n  }\r\n  return flags;\r\n}\r\n\r\n/**\r\n * Replace flags in a input string. Flags are keywords surrounded with curly\r\n * braces.\r\n *\r\n * @param {string} inputStr The input string.\r\n * @param {object} values A object of {value, unit}.\r\n * @returns {string} The result string.\r\n */\r\nexport function replaceFlags(inputStr, values) {\r\n  let res = '';\r\n  // check input string\r\n  if (inputStr === null || typeof inputStr === 'undefined') {\r\n    return res;\r\n  }\r\n  res = inputStr;\r\n  // check values\r\n  if (values === null || typeof values === 'undefined') {\r\n    return res;\r\n  }\r\n\r\n  // loop through flags\r\n  const keys = getFlags(inputStr);\r\n  for (let i = 0; i < keys.length; ++i) {\r\n    const valueObj = values[keys[i]];\r\n    if (valueObj !== null && typeof valueObj !== 'undefined' &&\r\n      valueObj.value !== null && typeof valueObj.value !== 'undefined') {\r\n      // value string\r\n      let valueStr = valueObj.value.toPrecision(4);\r\n      // add unit if available\r\n      // space or no space? Yes apart from degree...\r\n      // check: https://en.wikipedia.org/wiki/Space_(punctuation)#Spaces_and_unit_symbols\r\n      if (valueObj.unit !== null &&\r\n        typeof valueObj.unit !== 'undefined' &&\r\n        valueObj.unit.length !== 0) {\r\n        if (valueObj.unit !== 'degree') {\r\n          valueStr += ' ';\r\n        }\r\n        valueStr += valueObj.unit;\r\n      }\r\n      // flag to replace\r\n      const flag = '{' + keys[i] + '}';\r\n      // replace\r\n      res = res.replace(flag, valueStr);\r\n    }\r\n  }\r\n  // return\r\n  return res;\r\n}\r\n\r\n/**\r\n * Get the root of an input path.\r\n * Splits using `/` as separator.\r\n *\r\n * @param {string} path The input path\r\n * @returns {string} The input path without its last part.\r\n */\r\nexport function getRootPath(path) {\r\n  return path.split('/').slice(0, -1).join('/');\r\n}\r\n\r\n/**\r\n * Get a file extension: anything after the last dot.\r\n * File name starting with a dot are discarded.\r\n * Extensions are expected to contain at least one letter.\r\n *\r\n * @param {string} filePath The file path containing the file name.\r\n * @returns {string} The lower case file extension or null for none.\r\n */\r\nexport function getFileExtension(filePath) {\r\n  let ext = null;\r\n  if (typeof filePath !== 'undefined' &&\r\n    filePath !== null &&\r\n    filePath[0] !== '.') {\r\n    const pathSplit = filePath.toLowerCase().split('.');\r\n    if (pathSplit.length !== 1) {\r\n      ext = pathSplit.pop();\r\n      // extension should contain at least one letter and no slash\r\n      const regExp = /[a-z]/;\r\n      if (!regExp.test(ext) || ext.includes('/')) {\r\n        ext = null;\r\n      }\r\n    }\r\n  }\r\n  return ext;\r\n}\r\n\r\n/**\r\n * Convert a string to a Uint8Array.\r\n *\r\n * @param {string} str The string to convert.\r\n * @returns {Uint8Array} The Uint8Array.\r\n */\r\nexport function stringToUint8Array(str) {\r\n  const arr = new Uint8Array(str.length);\r\n  for (let i = 0, leni = str.length; i < leni; i++) {\r\n    arr[i] = str.charCodeAt(i);\r\n  }\r\n  return arr;\r\n}\r\n\r\n/**\r\n * Round a float number to a given precision.\r\n * Inspired from https://stackoverflow.com/a/49729715/3639892.\r\n * Can be a solution to not have trailing zero as when\r\n * using toFixed or toPrecision.\r\n * '+number.toFixed(precision)' does not pass all the tests...\r\n *\r\n * @param {number} number The number to round.\r\n * @param {number} precision The rounding precision.\r\n * @returns {number} The rounded number.\r\n */\r\nexport function precisionRound(number, precision) {\r\n  const factor = Math.pow(10, precision);\r\n  const delta = 0.01 / factor; // fixes precisionRound(1.005, 2)\r\n  return Math.round(number * factor + delta) / factor;\r\n}\r\n","import {stringToUint8Array} from './string';\r\n\r\n/**\r\n * Check for array equality after sorting.\r\n *\r\n * @param {Array} arr0 First array.\r\n * @param {*} arr1 Second array.\r\n * @returns {boolean} True if both array are defined and contain same values.\r\n */\r\nexport function arraySortEquals(arr0, arr1) {\r\n  if (arr0 === null ||\r\n    arr1 === null ||\r\n    typeof arr0 === 'undefined' ||\r\n    typeof arr1 === 'undefined') {\r\n    return false;\r\n  }\r\n  const arr0sorted = arr0.slice().sort();\r\n  const arr1sorted = arr1.slice().sort();\r\n  return arrayEquals(arr0sorted, arr1sorted);\r\n}\r\n\r\n/**\r\n * Check for array equality.\r\n *\r\n * @param {Array} arr0 First array.\r\n * @param {*} arr1 Second array.\r\n * @returns {boolean} True if both array are defined and contain same values.\r\n */\r\nexport function arrayEquals(arr0, arr1) {\r\n  if (arr0 === null ||\r\n    arr1 === null ||\r\n    typeof arr0 === 'undefined' ||\r\n    typeof arr1 === 'undefined') {\r\n    return false;\r\n  }\r\n  if (arr0.length !== arr1.length) {\r\n    return false;\r\n  }\r\n  return arr0.every(function (element, index) {\r\n    return element === arr1[index];\r\n  });\r\n}\r\n\r\n/**\r\n * Convert a Uint8Array to a string.\r\n *\r\n * @param {Uint8Array} arr The array to convert.\r\n * @returns {string} The array as string.\r\n */\r\nexport function uint8ArrayToString(arr) {\r\n  return String.fromCharCode.apply(String, arr);\r\n}\r\n\r\n/**\r\n * Array find in a subset of the input array.\r\n * Equivalent to: arr.slice(start, end).find(callbackFn)\r\n *\r\n * @param {Uint8Array} arr The input array to search.\r\n * @param {Function} callbackFn The find function.\r\n * @param {number|undefined} start The array start index.\r\n * @param {number|undefined} [end] The array end index.\r\n * @returns {number|undefined} The index where the element was found.\r\n */\r\nexport function findInArraySubset(arr, callbackFn, start, end) {\r\n  // check inputs\r\n  if (typeof start === 'undefined' ||\r\n    start < 0 ||\r\n    start >= arr.length\r\n  ) {\r\n    start = 0;\r\n  }\r\n  if (typeof end === 'undefined' ||\r\n    end <= start ||\r\n    end > arr.length) {\r\n    end = arr.length;\r\n  }\r\n  // run\r\n  for (let i = start; i < end; ++i) {\r\n    if (callbackFn(arr[i], i, arr)) {\r\n      return i;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Get a find in array callback.\r\n *\r\n * @param {Uint8Array} arr1 The array to find.\r\n * @returns {Function} The find callback function.\r\n */\r\nexport function getFindArrayInArrayCallback(arr1) {\r\n  return function (element, index, arr0) {\r\n    for (let i = 0; i < arr1.length; ++i) {\r\n      if (arr0[index + i] !== arr1[i]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n}\r\n\r\n/**\r\n * Extract each element of a multipart ArrayBuffer.\r\n * https://en.wikipedia.org/wiki/MIME#Multipart_messages\r\n *\r\n * @param {ArrayBuffer} arr The multipart array.\r\n * @returns {Array} The multipart parts as an array of object as\r\n *  {'Content-Type', ..., data} (depending on header tags)\r\n */\r\nexport function parseMultipart(arr) {\r\n  const u8Array = new Uint8Array(arr);\r\n\r\n  const parts = [];\r\n  // check input\r\n  if (u8Array.length === 0) {\r\n    return parts;\r\n  }\r\n\r\n  // \\r\\n\\r\\n\r\n  const doubleReturnNew = new Uint8Array([0x0d, 0x0a, 0x0d, 0x0a]);\r\n  const partHeaderEndCb = getFindArrayInArrayCallback(doubleReturnNew);\r\n\r\n  // look for boundary in first part header\r\n  let partHeaderEndIndex = findInArraySubset(\r\n    u8Array, partHeaderEndCb, 0\r\n  );\r\n  if (typeof partHeaderEndIndex === 'undefined') {\r\n    throw new Error('Can\\'t find the end of the first multipart header');\r\n  }\r\n  const firstPartHeader = u8Array.slice(0, partHeaderEndIndex);\r\n  // switch to string to use split\r\n  const lines = uint8ArrayToString(firstPartHeader).split('\\r\\n');\r\n  // boundary should start with '--'\r\n  let boundaryStr;\r\n  for (let i = 0; i < lines.length; ++i) {\r\n    if (lines[i][0] === '-' && lines[i][1] === '-') {\r\n      boundaryStr = lines[i];\r\n      break;\r\n    }\r\n  }\r\n  if (typeof boundaryStr === 'undefined') {\r\n    throw new Error('Can\\'t find the boundary between multi-parts');\r\n  }\r\n  const boundary = stringToUint8Array(boundaryStr);\r\n  const boundaryCb = getFindArrayInArrayCallback(boundary);\r\n  const boundaryLen = boundaryStr.length;\r\n\r\n  // skip mime header\r\n  let nextBoundaryIndex = findInArraySubset(\r\n    u8Array, boundaryCb, 0\r\n  );\r\n\r\n  // loop through content\r\n  while (typeof partHeaderEndIndex !== 'undefined') {\r\n    const part = {};\r\n\r\n    // header\r\n    const partHeader = u8Array.slice(\r\n      nextBoundaryIndex + boundaryLen, partHeaderEndIndex);\r\n    // split into object\r\n    const partHeaderLines =\r\n      uint8ArrayToString(partHeader).split('\\r\\n');\r\n    for (let l = 0; l < partHeaderLines.length; ++l) {\r\n      const line = partHeaderLines[l];\r\n      const semiColonIndex = line.indexOf(':');\r\n      if (semiColonIndex !== -1) {\r\n        const key = line.substring(0, semiColonIndex).trim();\r\n        const val = line.substring(semiColonIndex + 1).trim();\r\n        part[key] = val;\r\n      }\r\n    }\r\n\r\n    // find next boundary\r\n    nextBoundaryIndex = findInArraySubset(\r\n      u8Array, boundaryCb, partHeaderEndIndex\r\n    );\r\n    // exit if none\r\n    if (typeof nextBoundaryIndex === 'undefined') {\r\n      break;\r\n    }\r\n\r\n    // get part\r\n    // partHeaderEndIndex plus the size of the '\\r\\n\\r\\n' separator\r\n    const dataBeginIndex = partHeaderEndIndex + 4;\r\n    // nextBoundaryIndex minus the previous '\\r\\n'\r\n    const dataEndIndex = nextBoundaryIndex - 2;\r\n    if (dataBeginIndex < dataEndIndex) {\r\n      part.data = u8Array.slice(dataBeginIndex, dataEndIndex).buffer;\r\n    } else {\r\n      part.data = new Uint8Array();\r\n    }\r\n\r\n    // store part\r\n    parts.push(part);\r\n\r\n    // find next part header end\r\n    partHeaderEndIndex = findInArraySubset(\r\n      u8Array, partHeaderEndCb,\r\n      nextBoundaryIndex + boundaryLen\r\n    );\r\n  }\r\n\r\n  return parts;\r\n}\r\n\r\n/**\r\n * Build a multipart message.\r\n * See: https://en.wikipedia.org/wiki/MIME#Multipart_messages\r\n * See: https://hg.orthanc-server.com/orthanc-dicomweb/file/tip/Resources/Samples/JavaScript/stow-rs.js\r\n *\r\n * @param {Array} parts The message parts as an array of object containing\r\n *   content headers and messages as the data property (as returned by parse).\r\n * @param {string} boundary The message boundary.\r\n * @returns {Uint8Array} The full multipart message.\r\n */\r\nexport function buildMultipart(parts, boundary) {\r\n  const lineBreak = '\\r\\n';\r\n  // build headers and calculate size\r\n  let partsSize = 0;\r\n  const headers = [];\r\n  for (let i = 0; i < parts.length; ++i) {\r\n    let headerStr = '';\r\n    if (i !== 0) {\r\n      headerStr += lineBreak;\r\n    }\r\n    headerStr += '--' + boundary + lineBreak;\r\n    const partKeys = Object.keys(parts[i]);\r\n    for (let k = 0; k < partKeys.length; ++k) {\r\n      const key = partKeys[k];\r\n      if (key !== 'data') {\r\n        headerStr += key + ': ' + parts[i][key] + lineBreak;\r\n      }\r\n    }\r\n    headerStr += lineBreak;\r\n    const header = stringToUint8Array(headerStr);\r\n    headers.push(header);\r\n    partsSize += header.byteLength + parts[i].data.byteLength;\r\n  }\r\n  // build trailer\r\n  const trailerStr = lineBreak + '--' + boundary + '--' + lineBreak;\r\n  const trailer = stringToUint8Array(trailerStr);\r\n\r\n  // final buffer\r\n  const buffer = new Uint8Array(partsSize + trailer.byteLength);\r\n  let offset = 0;\r\n  // concatenate parts\r\n  for (let j = 0; j < parts.length; ++j) {\r\n    buffer.set(headers[j], offset);\r\n    offset += headers[j].byteLength;\r\n    buffer.set(new Uint8Array(parts[j].data), offset);\r\n    offset += parts[j].data.byteLength;\r\n  }\r\n  // end buffer with trailer\r\n  buffer.set(trailer, offset);\r\n\r\n  // return\r\n  return buffer;\r\n}\r\n","// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Tag} from './dicomTag';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * DICOM data element.\r\n */\r\nexport class DataElement {\r\n  /**\r\n   * The element Value Representation.\r\n   *\r\n   * @type {string}\r\n   */\r\n  vr;\r\n  /**\r\n   * The element value.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  value;\r\n\r\n  // [start] internal values\r\n  // only present during parsing or writing otherwise not set\r\n\r\n  /**\r\n   * The element dicom tag.\r\n   *\r\n   * @type {Tag}\r\n   */\r\n  tag;\r\n\r\n  /**\r\n   * The element Value Length.\r\n   *\r\n   * @type {number}\r\n   */\r\n  vl;\r\n\r\n  /**\r\n   * Flag to know if defined or undefined sequence length.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  undefinedLength;\r\n\r\n  /**\r\n   * The element start offset.\r\n   *\r\n   * @type {number}\r\n   */\r\n  startOffset;\r\n\r\n  /**\r\n   * The element end offset.\r\n   *\r\n   * @type {number}\r\n   */\r\n  endOffset;\r\n\r\n  /**\r\n   * The sequence items.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  items;\r\n\r\n  // [end] internal values\r\n\r\n  /**\r\n   * @param {string} vr The element VR (Value Representation).\r\n   */\r\n  constructor(vr) {\r\n    this.vr = vr;\r\n  }\r\n}","import {\r\n  Tag,\r\n  isSequenceDelimitationItemTag,\r\n  isItemDelimitationItemTag,\r\n  isPixelDataTag\r\n} from './dicomTag';\r\nimport {\r\n  is32bitVLVR,\r\n  isCharSetStringVR,\r\n  vrTypes,\r\n} from './dictionary';\r\nimport {DataReader} from './dataReader';\r\nimport {logger} from '../utils/logger';\r\nimport {arrayEquals} from '../utils/array';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {DataElement} from '../dicom/dataElement';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * List of DICOM data elements indexed via a 8 character string formed from\r\n * the group and element numbers.\r\n *\r\n * @typedef {Object<string, DataElement>} DataElements\r\n */\r\n\r\n/**\r\n * Get the version of the library.\r\n *\r\n * @returns {string} The version of the library.\r\n */\r\nexport function getDwvVersion() {\r\n  return '0.32.4';\r\n}\r\n\r\n/**\r\n * Check that an input buffer includes the DICOM prefix 'DICM'\r\n * after the 128 bytes preamble.\r\n * Ref: [DICOM File Meta]{@link https://dicom.nema.org/dicom/2013/output/chtml/part10/chapter_7.html#sect_7.1}\r\n *\r\n * @param {ArrayBuffer} buffer The buffer to check.\r\n * @returns {boolean} True if the buffer includes the prefix.\r\n */\r\nexport function hasDicomPrefix(buffer) {\r\n  const prefixArray = new Uint8Array(buffer, 128, 4);\r\n  const stringReducer = function (previous, current) {\r\n    return previous += String.fromCharCode(current);\r\n  };\r\n  return prefixArray.reduce(stringReducer, '') === 'DICM';\r\n}\r\n\r\n// Zero-width space (u200B)\r\n// @ts-ignore\r\nconst ZWS = String.fromCharCode('u200B');\r\n\r\n/**\r\n * Clean string: remove zero-width space ending and trim.\r\n * Warning: no tests are done on the input, will fail if\r\n *   null or undefined or not string.\r\n * (exported for tests only)\r\n *\r\n * @param {string} inputStr The string to clean.\r\n * @returns {string} The cleaned string.\r\n */\r\nexport function cleanString(inputStr) {\r\n  let res = inputStr;\r\n  // get rid of ending zero-width space\r\n  const lastIndex = inputStr.length - 1;\r\n  if (inputStr[lastIndex] === ZWS) {\r\n    res = inputStr.substring(0, lastIndex);\r\n  }\r\n  // trim spaces\r\n  res = res.trim();\r\n  // return\r\n  return res;\r\n}\r\n\r\n/**\r\n * Get the utfLabel (used by the TextDecoder) from a character set term\r\n * References:\r\n * - DICOM [Value Encoding]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_6.html}\r\n * - DICOM [Specific Character Set]{@link http://dicom.nema.org/dicom/2013/output/chtml/part03/sect_C.12.html#sect_C.12.1.1.2}\r\n * - [TextDecoder#Parameters]{@link https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder/TextDecoder#Parameters}\r\n *\r\n * @param {string} charSetTerm The DICOM character set.\r\n * @returns {string} The corresponding UTF label.\r\n */\r\nfunction getUtfLabel(charSetTerm) {\r\n  let label = 'utf-8';\r\n  if (charSetTerm === 'ISO_IR 100') {\r\n    label = 'iso-8859-1';\r\n  } else if (charSetTerm === 'ISO_IR 101') {\r\n    label = 'iso-8859-2';\r\n  } else if (charSetTerm === 'ISO_IR 109') {\r\n    label = 'iso-8859-3';\r\n  } else if (charSetTerm === 'ISO_IR 110') {\r\n    label = 'iso-8859-4';\r\n  } else if (charSetTerm === 'ISO_IR 144') {\r\n    label = 'iso-8859-5';\r\n  } else if (charSetTerm === 'ISO_IR 127') {\r\n    label = 'iso-8859-6';\r\n  } else if (charSetTerm === 'ISO_IR 126') {\r\n    label = 'iso-8859-7';\r\n  } else if (charSetTerm === 'ISO_IR 138') {\r\n    label = 'iso-8859-8';\r\n  } else if (charSetTerm === 'ISO_IR 148') {\r\n    label = 'iso-8859-9';\r\n  } else if (charSetTerm === 'ISO_IR 13') {\r\n    label = 'shift-jis';\r\n  } else if (charSetTerm === 'ISO_IR 166') {\r\n    label = 'iso-8859-11';\r\n  } else if (charSetTerm === 'ISO 2022 IR 87') {\r\n    label = 'iso-2022-jp';\r\n  } else if (charSetTerm === 'ISO 2022 IR 149') {\r\n    // not supported by TextDecoder when it says it should...\r\n    //label = \"iso-2022-kr\";\r\n  } else if (charSetTerm === 'ISO 2022 IR 58') {\r\n    // not supported by TextDecoder...\r\n    //label = \"iso-2022-cn\";\r\n  } else if (charSetTerm === 'ISO_IR 192') {\r\n    label = 'utf-8';\r\n  } else if (charSetTerm === 'GB18030') {\r\n    label = 'gb18030';\r\n  } else if (charSetTerm === 'GB2312') {\r\n    label = 'gb2312';\r\n  } else if (charSetTerm === 'GBK') {\r\n    label = 'chinese';\r\n  }\r\n  return label;\r\n}\r\n\r\n/**\r\n * Default text decoder\r\n */\r\nclass DefaultTextDecoder {\r\n  /**\r\n   * Decode an input string buffer.\r\n   *\r\n   * @param {Uint8Array} buffer The buffer to decode.\r\n   * @returns {string} The decoded string.\r\n   */\r\n  decode(buffer) {\r\n    let result = '';\r\n    for (let i = 0, leni = buffer.length; i < leni; ++i) {\r\n      result += String.fromCharCode(buffer[i]);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n * Get patient orientation label in the reverse direction.\r\n *\r\n * @param {string} ori Patient Orientation value.\r\n * @returns {string} Reverse Orientation Label.\r\n */\r\nexport function getReverseOrientation(ori) {\r\n  if (!ori) {\r\n    return null;\r\n  }\r\n  // reverse labels\r\n  const rlabels = {\r\n    L: 'R',\r\n    R: 'L',\r\n    A: 'P',\r\n    P: 'A',\r\n    H: 'F',\r\n    F: 'H'\r\n  };\r\n\r\n  let rori = '';\r\n  for (let n = 0; n < ori.length; n++) {\r\n    const o = ori.substring(n, n + 1);\r\n    const r = rlabels[o];\r\n    if (r) {\r\n      rori += r;\r\n    }\r\n  }\r\n  // return\r\n  return rori;\r\n}\r\n\r\n/**\r\n * Get the name of an image orientation patient.\r\n *\r\n * @param {Array} orientation The image orientation patient.\r\n * @returns {string} The orientation name: axial, coronal or sagittal.\r\n */\r\nexport function getOrientationName(orientation) {\r\n  const axialOrientation = [1, 0, 0, 0, 1, 0];\r\n  const coronalOrientation = [1, 0, 0, 0, 0, -1];\r\n  const sagittalOrientation = [0, 1, 0, 0, 0, -1];\r\n  let name;\r\n  if (arrayEquals(orientation, axialOrientation)) {\r\n    name = 'axial';\r\n  } else if (arrayEquals(orientation, coronalOrientation)) {\r\n    name = 'coronal';\r\n  } else if (arrayEquals(orientation, sagittalOrientation)) {\r\n    name = 'sagittal';\r\n  }\r\n  return name;\r\n}\r\n\r\n/**\r\n * Tell if a given syntax is an implicit one (element with no VR).\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {boolean} True if an implicit syntax.\r\n */\r\nexport function isImplicitTransferSyntax(syntax) {\r\n  return syntax === '1.2.840.10008.1.2';\r\n}\r\n\r\n/**\r\n * Tell if a given syntax is a big endian syntax.\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {boolean} True if a big endian syntax.\r\n */\r\nexport function isBigEndianTransferSyntax(syntax) {\r\n  return syntax === '1.2.840.10008.1.2.2';\r\n}\r\n\r\n/**\r\n * Tell if a given syntax is a JPEG baseline one.\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {boolean} True if a jpeg baseline syntax.\r\n */\r\nexport function isJpegBaselineTransferSyntax(syntax) {\r\n  return syntax === '1.2.840.10008.1.2.4.50' ||\r\n    syntax === '1.2.840.10008.1.2.4.51';\r\n}\r\n\r\n/**\r\n * Tell if a given syntax is a retired JPEG one.\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {boolean} True if a retired jpeg syntax.\r\n */\r\nfunction isJpegRetiredTransferSyntax(syntax) {\r\n  return (syntax.match(/1.2.840.10008.1.2.4.5/) !== null &&\r\n    !isJpegBaselineTransferSyntax(syntax) &&\r\n    !isJpegLosslessTransferSyntax(syntax)) ||\r\n    syntax.match(/1.2.840.10008.1.2.4.6/) !== null;\r\n}\r\n\r\n/**\r\n * Tell if a given syntax is a JPEG Lossless one.\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {boolean} True if a jpeg lossless syntax.\r\n */\r\nexport function isJpegLosslessTransferSyntax(syntax) {\r\n  return syntax === '1.2.840.10008.1.2.4.57' ||\r\n    syntax === '1.2.840.10008.1.2.4.70';\r\n}\r\n\r\n/**\r\n * Tell if a given syntax is a JPEG-LS one.\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {boolean} True if a jpeg-ls syntax.\r\n */\r\nfunction isJpeglsTransferSyntax(syntax) {\r\n  return syntax.match(/1.2.840.10008.1.2.4.8/) !== null;\r\n}\r\n\r\n/**\r\n * Tell if a given syntax is a JPEG 2000 one.\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {boolean} True if a jpeg 2000 syntax.\r\n */\r\nexport function isJpeg2000TransferSyntax(syntax) {\r\n  return syntax.match(/1.2.840.10008.1.2.4.9/) !== null;\r\n}\r\n\r\n/**\r\n * Tell if a given syntax is a RLE (Run-length encoding) one.\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {boolean} True if a RLE syntax.\r\n */\r\nfunction isRleTransferSyntax(syntax) {\r\n  return syntax.match(/1.2.840.10008.1.2.5/) !== null;\r\n}\r\n\r\n/**\r\n * Tell if a given syntax needs decompression.\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {string} The name of the decompression algorithm.\r\n */\r\nexport function getSyntaxDecompressionName(syntax) {\r\n  let algo = null;\r\n  if (isJpeg2000TransferSyntax(syntax)) {\r\n    algo = 'jpeg2000';\r\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\r\n    algo = 'jpeg-baseline';\r\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\r\n    algo = 'jpeg-lossless';\r\n  } else if (isRleTransferSyntax(syntax)) {\r\n    algo = 'rle';\r\n  }\r\n  return algo;\r\n}\r\n\r\n/**\r\n * Tell if a given syntax is supported for reading.\r\n *\r\n * @param {string} syntax The transfer syntax to test.\r\n * @returns {boolean} True if a supported syntax.\r\n */\r\nfunction isReadSupportedTransferSyntax(syntax) {\r\n\r\n  // Unsupported:\r\n  // \"1.2.840.10008.1.2.1.99\": Deflated Explicit VR - Little Endian\r\n  // \"1.2.840.10008.1.2.4.100\": MPEG2 Image Compression\r\n  // isJpegRetiredTransferSyntax(syntax): non supported JPEG\r\n  // isJpeglsTransferSyntax(syntax): JPEG-LS\r\n\r\n  return (syntax === '1.2.840.10008.1.2' || // Implicit VR - Little Endian\r\n    syntax === '1.2.840.10008.1.2.1' || // Explicit VR - Little Endian\r\n    syntax === '1.2.840.10008.1.2.2' || // Explicit VR - Big Endian\r\n    isJpegBaselineTransferSyntax(syntax) || // JPEG baseline\r\n    isJpegLosslessTransferSyntax(syntax) || // JPEG Lossless\r\n    isJpeg2000TransferSyntax(syntax) || // JPEG 2000\r\n    isRleTransferSyntax(syntax)); // RLE\r\n}\r\n\r\n/**\r\n * Get the transfer syntax name.\r\n * Reference: [UID Values]{@link http://dicom.nema.org/dicom/2013/output/chtml/part06/chapter_A.html}.\r\n *\r\n * @param {string} syntax The transfer syntax.\r\n * @returns {string} The name of the transfer syntax.\r\n */\r\nexport function getTransferSyntaxName(syntax) {\r\n  let name = 'Unknown';\r\n  if (syntax === '1.2.840.10008.1.2') {\r\n    // Implicit VR - Little Endian\r\n    name = 'Little Endian Implicit';\r\n  } else if (syntax === '1.2.840.10008.1.2.1') {\r\n    // Explicit VR - Little Endian\r\n    name = 'Little Endian Explicit';\r\n  } else if (syntax === '1.2.840.10008.1.2.1.99') {\r\n    // Deflated Explicit VR - Little Endian\r\n    name = 'Little Endian Deflated Explicit';\r\n  } else if (syntax === '1.2.840.10008.1.2.2') {\r\n    // Explicit VR - Big Endian\r\n    name = 'Big Endian Explicit';\r\n  } else if (isJpegBaselineTransferSyntax(syntax)) {\r\n    // JPEG baseline\r\n    if (syntax === '1.2.840.10008.1.2.4.50') {\r\n      name = 'JPEG Baseline';\r\n    } else { // *.51\r\n      name = 'JPEG Extended, Process 2+4';\r\n    }\r\n  } else if (isJpegLosslessTransferSyntax(syntax)) {\r\n    // JPEG Lossless\r\n    if (syntax === '1.2.840.10008.1.2.4.57') {\r\n      name = 'JPEG Lossless, Nonhierarchical (Processes 14)';\r\n    } else { // *.70\r\n      name = 'JPEG Lossless, Non-hierarchical, 1st Order Prediction';\r\n    }\r\n  } else if (isJpegRetiredTransferSyntax(syntax)) {\r\n    // Retired JPEG\r\n    name = 'Retired JPEG';\r\n  } else if (isJpeglsTransferSyntax(syntax)) {\r\n    // JPEG-LS\r\n    name = 'JPEG-LS';\r\n  } else if (isJpeg2000TransferSyntax(syntax)) {\r\n    // JPEG 2000\r\n    if (syntax === '1.2.840.10008.1.2.4.91') {\r\n      name = 'JPEG 2000 (Lossless or Lossy)';\r\n    } else { // *.90\r\n      name = 'JPEG 2000 (Lossless only)';\r\n    }\r\n  } else if (syntax === '1.2.840.10008.1.2.4.100') {\r\n    // MPEG2 Image Compression\r\n    name = 'MPEG2';\r\n  } else if (isRleTransferSyntax(syntax)) {\r\n    // RLE (lossless)\r\n    name = 'RLE';\r\n  }\r\n  // return\r\n  return name;\r\n}\r\n\r\n/**\r\n * Guess the transfer syntax from the first data element.\r\n * See https://github.com/ivmartel/dwv/issues/188\r\n *   (Allow to load DICOM with no DICM preamble) for more details.\r\n *\r\n * @param {DataElement} firstDataElement The first data element\r\n *   of the DICOM header.\r\n * @returns {DataElement} The transfer syntax data element.\r\n */\r\nfunction guessTransferSyntax(firstDataElement) {\r\n  const oEightGroupBigEndian = '0800';\r\n  const oEightGroupLittleEndian = '0008';\r\n  // check that group is 0008\r\n  const group = firstDataElement.tag.getGroup();\r\n  if (group !== oEightGroupBigEndian &&\r\n    group !== oEightGroupLittleEndian) {\r\n    throw new Error(\r\n      'Not a valid DICOM file (no magic DICM word found' +\r\n        ' and first element not in 0008 group)'\r\n    );\r\n  }\r\n  // reasonable assumption: 2 uppercase characters => explicit vr\r\n  const vr = firstDataElement.vr;\r\n  const vr0 = vr.charCodeAt(0);\r\n  const vr1 = vr.charCodeAt(1);\r\n  const implicit = (vr0 >= 65 && vr0 <= 90 && vr1 >= 65 && vr1 <= 90)\r\n    ? false : true;\r\n  // guess transfer syntax\r\n  let syntax = null;\r\n  if (group === oEightGroupLittleEndian) {\r\n    if (implicit) {\r\n      // ImplicitVRLittleEndian\r\n      syntax = '1.2.840.10008.1.2';\r\n    } else {\r\n      // ExplicitVRLittleEndian\r\n      syntax = '1.2.840.10008.1.2.1';\r\n    }\r\n  } else {\r\n    if (implicit) {\r\n      // ImplicitVRBigEndian: impossible\r\n      throw new Error(\r\n        'Not a valid DICOM file (no magic DICM word found' +\r\n        'and implicit VR big endian detected)'\r\n      );\r\n    } else {\r\n      // ExplicitVRBigEndian\r\n      syntax = '1.2.840.10008.1.2.2';\r\n    }\r\n  }\r\n  // set transfer syntax data element\r\n  const dataElement = new DataElement('UI');\r\n  dataElement.tag = new Tag('0002', '0010');\r\n  dataElement.value = [syntax + ' ']; // even length\r\n  dataElement.vl = dataElement.value[0].length;\r\n  dataElement.startOffset = firstDataElement.startOffset;\r\n  dataElement.endOffset = dataElement.startOffset + dataElement.vl;\r\n\r\n  return dataElement;\r\n}\r\n\r\n/**\r\n * Get the appropriate TypedArray in function of arguments.\r\n *\r\n * @param {number} bitsAllocated The number of bites used to store\r\n *   the data: [8, 16, 32].\r\n * @param {number} pixelRepresentation The pixel representation,\r\n *   0:unsigned;1:signed.\r\n * @param {number} size The size of the new array.\r\n * @returns {Uint8Array|Int8Array|Uint16Array|Int16Array|Uint32Array|Int32Array}\r\n *   The good typed array.\r\n */\r\nexport function getTypedArray(bitsAllocated, pixelRepresentation, size) {\r\n  let res = null;\r\n  try {\r\n    if (bitsAllocated === 8) {\r\n      if (pixelRepresentation === 0) {\r\n        res = new Uint8Array(size);\r\n      } else {\r\n        res = new Int8Array(size);\r\n      }\r\n    } else if (bitsAllocated === 16) {\r\n      if (pixelRepresentation === 0) {\r\n        res = new Uint16Array(size);\r\n      } else {\r\n        res = new Int16Array(size);\r\n      }\r\n    } else if (bitsAllocated === 32) {\r\n      if (pixelRepresentation === 0) {\r\n        res = new Uint32Array(size);\r\n      } else {\r\n        res = new Int32Array(size);\r\n      }\r\n    }\r\n  } catch (error) {\r\n    if (error instanceof RangeError) {\r\n      const powerOf2 = Math.floor(Math.log(size) / Math.log(2));\r\n      logger.error('Cannot allocate array of size: ' +\r\n        size + ' (>2^' + powerOf2 + ').');\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * Get the number of bytes occupied by a data element prefix,\r\n *   i.e. without its value.\r\n *\r\n * @param {string} vr The Value Representation of the element.\r\n * @param {boolean} isImplicit Does the data use implicit VR?\r\n * @returns {number} The size of the element prefix.\r\n * WARNING: this is valid for tags with a VR, if not sure use\r\n *   the 'isTagWithVR' function first.\r\n * Reference:\r\n * - [Data Element explicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_7.html#table_7.1-1},\r\n * - [Data Element implicit]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_7.5.html#table_7.5-1}.\r\n *\r\n * | Tag | VR  | VL | Value |\r\n * | 4   | 2   | 2  | X     | -> regular explicit: 8 + X\r\n * | 4   | 2+2 | 4  | X     | -> 32bit VL: 12 + X\r\n *\r\n * | Tag | VL | Value |\r\n * | 4   | 4  | X     | -> implicit (32bit VL): 8 + X\r\n *\r\n * | Tag | Len | Value |\r\n * | 4   | 4   | X     | -> item: 8 + X\r\n */\r\nexport function getDataElementPrefixByteSize(vr, isImplicit) {\r\n  return isImplicit ? 8 : is32bitVLVR(vr) ? 12 : 8;\r\n}\r\n\r\n/**\r\n * Is the input VR a known VR.\r\n *\r\n * @param {string} vr The vr to test.\r\n * @returns {boolean} True if known.\r\n */\r\nfunction isKnownVR(vr) {\r\n  const extraVrTypes = ['NONE', 'ox', 'xx', 'xs'];\r\n  const knownTypes = Object.keys(vrTypes).concat(extraVrTypes);\r\n  return knownTypes.includes(vr);\r\n}\r\n\r\n/**\r\n * DicomParser class.\r\n *\r\n * @example\r\n * // XMLHttpRequest onload callback\r\n * const onload = function (event) {\r\n *   // setup the dicom parser\r\n *   const dicomParser = new dwv.DicomParser();\r\n *   // parse the buffer\r\n *   dicomParser.parse(event.target.response);\r\n *   // get the dicom tags\r\n *   const tags = dicomParser.getDicomElements();\r\n *   // display the modality\r\n *   const div = document.getElementById('dwv');\r\n *   div.appendChild(document.createTextNode(\r\n *     'Modality: ' + tags['00080060'].value[0]\r\n *   ));\r\n * };\r\n * // DICOM file request\r\n * const request = new XMLHttpRequest();\r\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\r\n * request.open('GET', url);\r\n * request.responseType = 'arraybuffer';\r\n * request.onload = onload;\r\n * request.send();\r\n */\r\nexport class DicomParser {\r\n\r\n  /**\r\n   * The list of DICOM elements.\r\n   *\r\n   * @type {DataElements}\r\n   */\r\n  #dataElements = {};\r\n\r\n  /**\r\n   * Default character set (optional).\r\n   *\r\n   * @type {string}\r\n   */\r\n  #defaultCharacterSet;\r\n\r\n  /**\r\n   * Default text decoder.\r\n   *\r\n   * @type {DefaultTextDecoder}\r\n   */\r\n  #defaultTextDecoder = new DefaultTextDecoder();\r\n\r\n  /**\r\n   * Special text decoder.\r\n   *\r\n   * @type {DefaultTextDecoder|TextDecoder}\r\n   */\r\n  #textDecoder = this.#defaultTextDecoder;\r\n\r\n  /**\r\n   * Decode an input string buffer using the default text decoder.\r\n   *\r\n   * @param {Uint8Array} buffer The buffer to decode.\r\n   * @returns {string} The decoded string.\r\n   */\r\n  #decodeString(buffer) {\r\n    return this.#defaultTextDecoder.decode(buffer);\r\n  }\r\n\r\n  /**\r\n   * Decode an input string buffer using the 'special' text decoder.\r\n   *\r\n   * @param {Uint8Array} buffer The buffer to decode.\r\n   * @returns {string} The decoded string.\r\n   */\r\n  #decodeSpecialString(buffer) {\r\n    return this.#textDecoder.decode(buffer);\r\n  }\r\n\r\n  /**\r\n   * Get the default character set.\r\n   *\r\n   * @returns {string} The default character set.\r\n   */\r\n  getDefaultCharacterSet() {\r\n    return this.#defaultCharacterSet;\r\n  }\r\n\r\n  /**\r\n   * Set the default character set.\r\n   *\r\n   * @param {string} characterSet The input character set.\r\n   */\r\n  setDefaultCharacterSet(characterSet) {\r\n    this.#defaultCharacterSet = characterSet;\r\n  }\r\n\r\n  /**\r\n   * Set the text decoder character set.\r\n   *\r\n   * @param {string} characterSet The input character set.\r\n   */\r\n  setDecoderCharacterSet(characterSet) {\r\n    /**\r\n     * The text decoder.\r\n     *\r\n     * @external TextDecoder\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextDecoder\r\n     */\r\n    this.#textDecoder = new TextDecoder(characterSet);\r\n  }\r\n\r\n  // not using type DataElements since the typedef is not exported with the API\r\n\r\n  /**\r\n   * Get the DICOM data elements.\r\n   *\r\n   * @returns {Object<string, DataElement>} The data elements.\r\n   */\r\n  getDicomElements() {\r\n    return this.#dataElements;\r\n  }\r\n\r\n  /**\r\n   * Read a DICOM tag.\r\n   *\r\n   * @param {DataReader} reader The raw data reader.\r\n   * @param {number} offset The offset where to start to read.\r\n   * @returns {object} An object containing the tag and the end offset.\r\n   */\r\n  #readTag(reader, offset) {\r\n    // group\r\n    const group = reader.readHex(offset);\r\n    offset += Uint16Array.BYTES_PER_ELEMENT;\r\n    // element\r\n    const element = reader.readHex(offset);\r\n    offset += Uint16Array.BYTES_PER_ELEMENT;\r\n    // return\r\n    return {\r\n      tag: new Tag(group, element),\r\n      endOffset: offset\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Read an item data element.\r\n   *\r\n   * @param {DataReader} reader The raw data reader.\r\n   * @param {number} offset The offset where to start to read.\r\n   * @param {boolean} implicit Is the DICOM VR implicit?\r\n   * @returns {object} The item data as a list of data elements.\r\n   */\r\n  #readItemDataElement(reader, offset, implicit) {\r\n    const itemData = {};\r\n\r\n    // read the first item\r\n    let item = this.#readDataElement(reader, offset, implicit);\r\n    offset = item.endOffset;\r\n\r\n    // exit if it is a sequence delimitation item\r\n    if (isSequenceDelimitationItemTag(item.tag)) {\r\n      return {\r\n        data: itemData,\r\n        endOffset: item.endOffset,\r\n        isSeqDelim: true\r\n      };\r\n    }\r\n\r\n    // store item (mainly to keep vl)\r\n    itemData[item.tag.getKey()] = {\r\n      tag: item.tag,\r\n      vr: 'NONE',\r\n      vl: item.vl,\r\n      undefinedLength: item.undefinedLength\r\n    };\r\n\r\n    if (!item.undefinedLength) {\r\n      // explicit VR item: read until the end offset\r\n      const endOffset = offset;\r\n      offset -= item.vl;\r\n      while (offset < endOffset) {\r\n        item = this.#readDataElement(reader, offset, implicit);\r\n        offset = item.endOffset;\r\n        itemData[item.tag.getKey()] = item;\r\n      }\r\n    } else {\r\n      // implicit VR item: read until the item delimitation item\r\n      let isItemDelim = false;\r\n      while (!isItemDelim) {\r\n        item = this.#readDataElement(reader, offset, implicit);\r\n        offset = item.endOffset;\r\n        isItemDelim = isItemDelimitationItemTag(item.tag);\r\n        if (!isItemDelim) {\r\n          itemData[item.tag.getKey()] = item;\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      data: itemData,\r\n      endOffset: offset,\r\n      isSeqDelim: false\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Read the pixel item data element.\r\n   * Ref: [Single frame fragments]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_A.4.html#table_A.4-1}.\r\n   *\r\n   * @param {DataReader} reader The raw data reader.\r\n   * @param {number} offset The offset where to start to read.\r\n   * @param {boolean} implicit Is the DICOM VR implicit?\r\n   * @returns {object} The item data as an array of data elements.\r\n   */\r\n  #readPixelItemDataElement(\r\n    reader, offset, implicit) {\r\n    const itemData = [];\r\n\r\n    // first item: basic offset table\r\n    let item = this.#readDataElement(reader, offset, implicit);\r\n    const offsetTableVl = item.vl;\r\n    offset = item.endOffset;\r\n\r\n    // read until the sequence delimitation item\r\n    let isSeqDelim = false;\r\n    while (!isSeqDelim) {\r\n      item = this.#readDataElement(reader, offset, implicit);\r\n      offset = item.endOffset;\r\n      isSeqDelim = isSequenceDelimitationItemTag(item.tag);\r\n      if (!isSeqDelim) {\r\n        // force pixel item vr to OB\r\n        item.vr = 'OB';\r\n        itemData.push(item);\r\n      }\r\n    }\r\n\r\n    return {\r\n      data: itemData,\r\n      endOffset: offset,\r\n      offsetTableVl: offsetTableVl\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Read a DICOM data element.\r\n   * Reference: [DICOM VRs]{@link http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html#table_6.2-1}.\r\n   *\r\n   * @param {DataReader} reader The raw data reader.\r\n   * @param {number} offset The offset where to start to read.\r\n   * @param {boolean} implicit Is the DICOM VR implicit?\r\n   * @returns {DataElement} The data element.\r\n   */\r\n  #readDataElement(reader, offset, implicit) {\r\n    // Tag: group, element\r\n    const readTagRes = this.#readTag(reader, offset);\r\n    const tag = readTagRes.tag;\r\n    offset = readTagRes.endOffset;\r\n\r\n    // Value Representation (VR)\r\n    let vr = null;\r\n    let is32bitVL = false;\r\n    if (tag.isWithVR()) {\r\n      // implicit VR\r\n      if (implicit) {\r\n        vr = tag.getVrFromDictionary();\r\n        if (typeof vr === 'undefined') {\r\n          vr = 'UN';\r\n        }\r\n        is32bitVL = true;\r\n      } else {\r\n        vr = this.#decodeString(reader.readUint8Array(offset, 2));\r\n        offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\r\n        is32bitVL = is32bitVLVR(vr);\r\n        // reserved 2 bytes\r\n        if (is32bitVL) {\r\n          offset += 2 * Uint8Array.BYTES_PER_ELEMENT;\r\n        }\r\n      }\r\n    } else {\r\n      vr = 'NONE';\r\n      is32bitVL = true;\r\n    }\r\n\r\n    // check vr\r\n    if (!isKnownVR(vr)) {\r\n      logger.warn('Unknown VR: ' + vr +\r\n        ' (for tag ' + tag.getKey() + '), treating as \\'UN\\'');\r\n      vr = 'UN';\r\n    }\r\n\r\n    // Value Length (VL)\r\n    let vl = 0;\r\n    if (is32bitVL) {\r\n      vl = reader.readUint32(offset);\r\n      offset += Uint32Array.BYTES_PER_ELEMENT;\r\n    } else {\r\n      vl = reader.readUint16(offset);\r\n      offset += Uint16Array.BYTES_PER_ELEMENT;\r\n    }\r\n\r\n    // check the value of VL\r\n    let undefinedLength = false;\r\n    if (vl === 0xffffffff) {\r\n      undefinedLength = true;\r\n      vl = 0;\r\n    }\r\n\r\n    // treat private tag with unknown VR and zero VL as a sequence (see #799)\r\n    if (tag.isPrivate() && vr === 'UN' && vl === 0) {\r\n      vr = 'SQ';\r\n    }\r\n\r\n    let startOffset = offset;\r\n    let endOffset = startOffset + vl;\r\n\r\n    // read sequence elements\r\n    let data;\r\n    if (isPixelDataTag(tag) && undefinedLength) {\r\n      // pixel data sequence (implicit)\r\n      const pixItemData =\r\n        this.#readPixelItemDataElement(reader, offset, implicit);\r\n      offset = pixItemData.endOffset;\r\n      startOffset += pixItemData.offsetTableVl;\r\n      data = pixItemData.data;\r\n      endOffset = offset;\r\n      vl = offset - startOffset;\r\n    } else if (vr === 'SQ') {\r\n      // sequence\r\n      data = [];\r\n      let itemData;\r\n      if (!undefinedLength) {\r\n        if (vl !== 0) {\r\n          // explicit VR sequence: read until the end offset\r\n          const sqEndOffset = offset + vl;\r\n          while (offset < sqEndOffset) {\r\n            itemData = this.#readItemDataElement(reader, offset, implicit);\r\n            data.push(itemData.data);\r\n            offset = itemData.endOffset;\r\n          }\r\n          endOffset = offset;\r\n          vl = offset - startOffset;\r\n        }\r\n      } else {\r\n        // implicit VR sequence: read until the sequence delimitation item\r\n        let isSeqDelim = false;\r\n        while (!isSeqDelim) {\r\n          itemData = this.#readItemDataElement(reader, offset, implicit);\r\n          isSeqDelim = itemData.isSeqDelim;\r\n          offset = itemData.endOffset;\r\n          // do not store the delimitation item\r\n          if (!isSeqDelim) {\r\n            data.push(itemData.data);\r\n          }\r\n        }\r\n        endOffset = offset;\r\n        vl = offset - startOffset;\r\n      }\r\n    }\r\n\r\n    // return\r\n    const element = new DataElement(vr);\r\n    element.tag = tag;\r\n    element.vl = vl;\r\n    element.startOffset = startOffset;\r\n    element.endOffset = endOffset;\r\n    // only set if true (only for sequences and items)\r\n    if (undefinedLength) {\r\n      element.undefinedLength = undefinedLength;\r\n    }\r\n    if (data) {\r\n      element.items = data;\r\n    }\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Interpret the data of an element.\r\n   *\r\n   * @param {DataElement} element The data element.\r\n   * @param {DataReader} reader The raw data reader.\r\n   * @param {number} [pixelRepresentation] PixelRepresentation 0->unsigned,\r\n   *   1->signed (needed for pixel data or VR=xs).\r\n   * @param {number} [bitsAllocated] Bits allocated (needed for pixel data).\r\n   * @returns {object} The interpreted data.\r\n   */\r\n  #interpretElement(\r\n    element, reader, pixelRepresentation, bitsAllocated) {\r\n\r\n    const tag = element.tag;\r\n    const vl = element.vl;\r\n    const vr = element.vr;\r\n    const offset = element.startOffset;\r\n\r\n    // data\r\n    let data = null;\r\n    const vrType = vrTypes[vr];\r\n    if (isPixelDataTag(tag)) {\r\n      if (element.undefinedLength) {\r\n        // implicit pixel data sequence\r\n        data = [];\r\n        for (let j = 0; j < element.items.length; ++j) {\r\n          data.push(this.#interpretElement(\r\n            element.items[j], reader,\r\n            pixelRepresentation, bitsAllocated));\r\n        }\r\n        // remove non parsed items\r\n        delete element.items;\r\n      } else {\r\n        // check bits allocated and VR\r\n        // https://dicom.nema.org/medical/dicom/2022a/output/chtml/part05/sect_A.2.html\r\n        if (bitsAllocated > 8 && vr === 'OB') {\r\n          logger.warn(\r\n            'Reading DICOM pixel data with bitsAllocated>8 and OB VR.'\r\n          );\r\n        }\r\n        // read\r\n        data = [];\r\n        if (bitsAllocated === 1) {\r\n          data.push(reader.readBinaryArray(offset, vl));\r\n        } else if (bitsAllocated === 8) {\r\n          if (pixelRepresentation === 0) {\r\n            data.push(reader.readUint8Array(offset, vl));\r\n          } else {\r\n            data.push(reader.readInt8Array(offset, vl));\r\n          }\r\n        } else if (bitsAllocated === 16) {\r\n          if (pixelRepresentation === 0) {\r\n            data.push(reader.readUint16Array(offset, vl));\r\n          } else {\r\n            data.push(reader.readInt16Array(offset, vl));\r\n          }\r\n        } else {\r\n          throw new Error('Unsupported bits allocated: ' + bitsAllocated);\r\n        }\r\n      }\r\n    } else if (typeof vrType !== 'undefined') {\r\n      if (vrType === 'Uint8') {\r\n        data = reader.readUint8Array(offset, vl);\r\n      } else if (vrType === 'Uint16') {\r\n        data = reader.readUint16Array(offset, vl);\r\n        // keep as binary for 'O*' VR\r\n        if (vr[0] !== 'O') {\r\n          data = Array.from(data);\r\n        }\r\n      } else if (vrType === 'Uint32') {\r\n        data = reader.readUint32Array(offset, vl);\r\n        // keep as binary for 'O*' VR\r\n        if (vr[0] !== 'O') {\r\n          data = Array.from(data);\r\n        }\r\n      } else if (vrType === 'Uint64') {\r\n        data = reader.readUint64Array(offset, vl);\r\n      } else if (vrType === 'Int16') {\r\n        data = Array.from(reader.readInt16Array(offset, vl));\r\n      } else if (vrType === 'Int32') {\r\n        data = Array.from(reader.readInt32Array(offset, vl));\r\n      } else if (vrType === 'Int64') {\r\n        data = reader.readInt64Array(offset, vl);\r\n      } else if (vrType === 'Float32') {\r\n        data = Array.from(reader.readFloat32Array(offset, vl));\r\n      } else if (vrType === 'Float64') {\r\n        data = Array.from(reader.readFloat64Array(offset, vl));\r\n      } else if (vrType === 'string') {\r\n        const stream = reader.readUint8Array(offset, vl);\r\n        if (isCharSetStringVR(vr)) {\r\n          data = this.#decodeSpecialString(stream);\r\n        } else {\r\n          data = this.#decodeString(stream);\r\n        }\r\n        data = cleanString(data).split('\\\\');\r\n      } else {\r\n        throw Error('Unknown VR type: ' + vrType);\r\n      }\r\n    } else if (vr === 'xx') {\r\n      // US or OW\r\n      data = Array.from(reader.readUint16Array(offset, vl));\r\n    } else if (vr === 'ox') {\r\n      // OB or OW\r\n      if (bitsAllocated === 8) {\r\n        data = Array.from(reader.readUint8Array(offset, vl));\r\n      } else {\r\n        data = Array.from(reader.readUint16Array(offset, vl));\r\n      }\r\n    } else if (vr === 'xs') {\r\n      // (US or SS) or (US or SS or OW)\r\n      if (pixelRepresentation === 0) {\r\n        data = Array.from(reader.readUint16Array(offset, vl));\r\n      } else {\r\n        data = Array.from(reader.readInt16Array(offset, vl));\r\n      }\r\n    } else if (vr === 'AT') {\r\n      // attribute\r\n      const raw = reader.readUint16Array(offset, vl);\r\n      data = [];\r\n      for (let i = 0, leni = raw.length; i < leni; i += 2) {\r\n        const stri = raw[i].toString(16);\r\n        const stri1 = raw[i + 1].toString(16);\r\n        let str = '(';\r\n        str += '0000'.substring(0, 4 - stri.length) + stri.toUpperCase();\r\n        str += ',';\r\n        str += '0000'.substring(0, 4 - stri1.length) + stri1.toUpperCase();\r\n        str += ')';\r\n        data.push(str);\r\n      }\r\n    } else if (vr === 'SQ') {\r\n      // sequence\r\n      data = [];\r\n      for (let k = 0; k < element.items.length; ++k) {\r\n        const item = element.items[k];\r\n        const itemData = {};\r\n        const keys = Object.keys(item);\r\n        for (let l = 0; l < keys.length; ++l) {\r\n          const subElement = item[keys[l]];\r\n          subElement.value = this.#interpretElement(\r\n            subElement, reader,\r\n            pixelRepresentation, bitsAllocated);\r\n          delete subElement.tag;\r\n          delete subElement.vl;\r\n          delete subElement.startOffset;\r\n          delete subElement.endOffset;\r\n          itemData[keys[l]] = subElement;\r\n        }\r\n        data.push(itemData);\r\n      }\r\n      // remove non parsed elements\r\n      delete element.items;\r\n    } else if (vr === 'NONE') {\r\n      // no VR -> no data\r\n      data = [];\r\n    } else {\r\n      logger.warn('Unknown VR: ' + vr +\r\n        ' (for tag ' + element.tag.getKey() + ')');\r\n      // empty data...\r\n      data = [];\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Interpret the data of a list of elements.\r\n   *\r\n   * @param {DataElements} elements A list of data elements.\r\n   * @param {DataReader} reader The raw data reader.\r\n   * @param {number} pixelRepresentation PixelRepresentation 0->unsigned,\r\n   *   1->signed.\r\n   * @param {number} bitsAllocated Bits allocated.\r\n   */\r\n  #interpret(\r\n    elements, reader,\r\n    pixelRepresentation, bitsAllocated) {\r\n\r\n    const keys = Object.keys(elements);\r\n    for (let i = 0; i < keys.length; ++i) {\r\n      const element = elements[keys[i]];\r\n      if (typeof element.value === 'undefined') {\r\n        element.value = this.#interpretElement(\r\n          element, reader, pixelRepresentation, bitsAllocated);\r\n      }\r\n      // delete interpretation specific properties\r\n      delete element.tag;\r\n      delete element.vl;\r\n      delete element.startOffset;\r\n      delete element.endOffset;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Parse the complete DICOM file (given as input to the class).\r\n   * Fills in the member object 'dataElements'.\r\n   *\r\n   * @param {ArrayBuffer} buffer The input array buffer.\r\n   */\r\n  parse(buffer) {\r\n    let offset = 0;\r\n    let syntax = '';\r\n    let dataElement = null;\r\n    // default readers\r\n    const metaReader = new DataReader(buffer);\r\n    let dataReader = new DataReader(buffer);\r\n\r\n    // 128 -> 132: magic word\r\n    offset = 128;\r\n    const magicword = this.#decodeString(metaReader.readUint8Array(offset, 4));\r\n    offset += 4 * Uint8Array.BYTES_PER_ELEMENT;\r\n    if (magicword === 'DICM') {\r\n      // 0002, 0000: FileMetaInformationGroupLength (vr='UL')\r\n      dataElement = this.#readDataElement(metaReader, offset, false);\r\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\r\n      // increment offset\r\n      offset = dataElement.endOffset;\r\n      // store the data element\r\n      this.#dataElements[dataElement.tag.getKey()] = dataElement;\r\n      // get meta length\r\n      const metaLength = dataElement.value[0];\r\n\r\n      // meta elements\r\n      const metaEnd = offset + metaLength;\r\n      while (offset < metaEnd) {\r\n        // get the data element\r\n        dataElement = this.#readDataElement(metaReader, offset, false);\r\n        offset = dataElement.endOffset;\r\n        // store the data element\r\n        this.#dataElements[dataElement.tag.getKey()] = dataElement;\r\n      }\r\n\r\n      // check the TransferSyntaxUID (has to be there!)\r\n      dataElement = this.#dataElements['00020010'];\r\n      if (typeof dataElement === 'undefined') {\r\n        throw new Error('Not a valid DICOM file (no TransferSyntaxUID found)');\r\n      }\r\n      dataElement.value = this.#interpretElement(dataElement, metaReader);\r\n      syntax = dataElement.value[0];\r\n\r\n    } else {\r\n      logger.warn('No DICM prefix, trying to guess tansfer syntax.');\r\n      // read first element\r\n      dataElement = this.#readDataElement(dataReader, 0, false);\r\n      // guess transfer syntax\r\n      const tsElement = guessTransferSyntax(dataElement);\r\n      // store\r\n      this.#dataElements[tsElement.tag.getKey()] = tsElement;\r\n      syntax = tsElement.value[0];\r\n      // reset offset\r\n      offset = 0;\r\n    }\r\n\r\n    // check transfer syntax support\r\n    if (!isReadSupportedTransferSyntax(syntax)) {\r\n      throw new Error('Unsupported DICOM transfer syntax: \\'' + syntax +\r\n        '\\' (' + getTransferSyntaxName(syntax) + ')');\r\n    }\r\n\r\n    // set implicit flag\r\n    let implicit = false;\r\n    if (isImplicitTransferSyntax(syntax)) {\r\n      implicit = true;\r\n    }\r\n\r\n    // Big Endian\r\n    if (isBigEndianTransferSyntax(syntax)) {\r\n      dataReader = new DataReader(buffer, false);\r\n    }\r\n\r\n    // DICOM data elements\r\n    while (offset < buffer.byteLength) {\r\n      // get the data element\r\n      dataElement = this.#readDataElement(dataReader, offset, implicit);\r\n      // increment offset\r\n      offset = dataElement.endOffset;\r\n      // store the data element\r\n      const key = dataElement.tag.getKey();\r\n      if (typeof this.#dataElements[key] === 'undefined') {\r\n        this.#dataElements[key] = dataElement;\r\n      } else {\r\n        logger.warn('Not saving duplicate tag: ' + key);\r\n      }\r\n    }\r\n\r\n    // safety checks...\r\n    if (isNaN(offset)) {\r\n      throw new Error('Problem while parsing, bad offset');\r\n    }\r\n    if (buffer.byteLength !== offset) {\r\n      logger.warn('Did not reach the end of the buffer: ' +\r\n        offset + ' != ' + buffer.byteLength);\r\n    }\r\n\r\n    //-------------------------------------------------\r\n    // values needed for data interpretation\r\n\r\n    // pixel specific\r\n    let pixelRepresentation = 0;\r\n    let bitsAllocated = 16;\r\n    if (typeof this.#dataElements['7FE00010'] !== 'undefined') {\r\n      // PixelRepresentation 0->unsigned, 1->signed\r\n      dataElement = this.#dataElements['00280103'];\r\n      if (typeof dataElement !== 'undefined') {\r\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\r\n        pixelRepresentation = dataElement.value[0];\r\n      } else {\r\n        logger.warn(\r\n          'Reading DICOM pixel data with default pixelRepresentation.');\r\n      }\r\n\r\n      // BitsAllocated\r\n      dataElement = this.#dataElements['00280100'];\r\n      if (typeof dataElement !== 'undefined') {\r\n        dataElement.value = this.#interpretElement(dataElement, dataReader);\r\n        bitsAllocated = dataElement.value[0];\r\n      } else {\r\n        logger.warn('Reading DICOM pixel data with default bitsAllocated.');\r\n      }\r\n    }\r\n\r\n    // default character set\r\n    if (typeof this.#defaultCharacterSet !== 'undefined') {\r\n      this.setDecoderCharacterSet(this.#defaultCharacterSet);\r\n    }\r\n\r\n    // SpecificCharacterSet\r\n    dataElement = this.#dataElements['00080005'];\r\n    if (typeof dataElement !== 'undefined') {\r\n      dataElement.value = this.#interpretElement(dataElement, dataReader);\r\n      let charSetTerm;\r\n      if (dataElement.value.length === 1) {\r\n        charSetTerm = dataElement.value[0];\r\n      } else {\r\n        charSetTerm = dataElement.value[1];\r\n        logger.warn('Unsupported character set with code extensions: \\'' +\r\n          charSetTerm + '\\'.');\r\n      }\r\n      this.setDecoderCharacterSet(getUtfLabel(charSetTerm));\r\n    }\r\n\r\n    // interpret the dicom elements\r\n    this.#interpret(\r\n      this.#dataElements, dataReader,\r\n      pixelRepresentation, bitsAllocated\r\n    );\r\n\r\n    // handle fragmented pixel buffer\r\n    // Reference: http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_8.2.html\r\n    // (third note, \"Depending on the transfer syntax...\")\r\n    dataElement = this.#dataElements['7FE00010'];\r\n    if (typeof dataElement !== 'undefined') {\r\n      if (dataElement.undefinedLength) {\r\n        let numberOfFrames = 1;\r\n        if (typeof this.#dataElements['00280008'] !== 'undefined') {\r\n          numberOfFrames = Number(this.#dataElements['00280008'].value[0]);\r\n        }\r\n        const pixItems = dataElement.value;\r\n        if (pixItems.length > 1 && pixItems.length > numberOfFrames) {\r\n          // concatenate pixel data items\r\n          // concat does not work on typed arrays\r\n          //this.pixelBuffer = this.pixelBuffer.concat( dataElement.data );\r\n          // manual concat...\r\n          const nItemPerFrame = pixItems.length / numberOfFrames;\r\n          const newPixItems = [];\r\n          let index = 0;\r\n          for (let f = 0; f < numberOfFrames; ++f) {\r\n            index = f * nItemPerFrame;\r\n            // calculate the size of a frame\r\n            let size = 0;\r\n            for (let i = 0; i < nItemPerFrame; ++i) {\r\n              size += pixItems[index + i].length;\r\n            }\r\n            // create new buffer\r\n            const newBuffer = new pixItems[0].constructor(size);\r\n            // fill new buffer\r\n            let fragOffset = 0;\r\n            for (let j = 0; j < nItemPerFrame; ++j) {\r\n              newBuffer.set(pixItems[index + j], fragOffset);\r\n              fragOffset += pixItems[index + j].length;\r\n            }\r\n            newPixItems[f] = newBuffer;\r\n          }\r\n          // store as pixel data\r\n          dataElement.value = newPixItems;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n} // class DicomParser\r\n","/**\r\n * ListenerHandler class: handles add/removing and firing listeners.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget#example\r\n */\r\nexport class ListenerHandler {\r\n  /**\r\n   * listeners.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listeners = {};\r\n\r\n  /**\r\n   * Add an event listener.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {object} callback The method associated with the provided\r\n   *    event type, will be called with the fired event.\r\n   */\r\n  add(type, callback) {\r\n    // create array if not present\r\n    if (typeof this.#listeners[type] === 'undefined') {\r\n      this.#listeners[type] = [];\r\n    }\r\n    // add callback to listeners array\r\n    this.#listeners[type].push(callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {object} callback The method associated with the provided\r\n   *   event type.\r\n   */\r\n  remove(type, callback) {\r\n    // check if the type is present\r\n    if (typeof this.#listeners[type] === 'undefined') {\r\n      return;\r\n    }\r\n    // remove from listeners array\r\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\r\n      if (this.#listeners[type][i] === callback) {\r\n        this.#listeners[type].splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  fireEvent = (event) => {\r\n    // check if they are listeners for the event type\r\n    if (typeof this.#listeners[event.type] === 'undefined') {\r\n      return;\r\n    }\r\n    // fire events from a copy of the listeners array\r\n    // to avoid interference from possible add/remove\r\n    const stack = this.#listeners[event.type].slice();\r\n    for (let i = 0; i < stack.length; ++i) {\r\n      stack[i](event);\r\n    }\r\n  };\r\n}\r\n","import {Index} from '../math/index';\r\nimport {Point2D} from '../math/point';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Image} from './image';\r\nimport {Point} from '../math/point';\r\nimport {Matrix33} from '../math/matrix';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Get an simple iterator for a given range for a one component data.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\r\n * @param {Function} dataAccessor Function to access data.\r\n * @param {number} start The start of the range (included).\r\n * @param {number} end The end of the range (excluded).\r\n * @param {number} [increment] The increment between indicies (default=1).\r\n * @returns {object} An iterator folowing the iterator and iterable protocol.\r\n */\r\nexport function simpleRange(dataAccessor, start, end, increment) {\r\n  if (typeof increment === 'undefined') {\r\n    increment = 1;\r\n  }\r\n  let nextIndex = start;\r\n  // result\r\n  return {\r\n    next: function () {\r\n      if (nextIndex < end) {\r\n        const result = {\r\n          value: dataAccessor(nextIndex),\r\n          done: false,\r\n          index: nextIndex\r\n        };\r\n        nextIndex += increment;\r\n        return result;\r\n      }\r\n      return {\r\n        done: true,\r\n        index: end\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get an iterator for a given range for a one component data.\r\n *\r\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\r\n * (for ex coronal2, ie zxy)\r\n *\r\n * @param {Function} dataAccessor Function to access data.\r\n * @param {number} start Zero-based index at which to start the iteration.\r\n * @param {number} maxIter The maximum number of iterations.\r\n * @param {number} increment Increment between indicies.\r\n * @param {number} blockMaxIter Number of applied increment after which\r\n *   blockIncrement is applied.\r\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\r\n *   the value is from block start to the next block start.\r\n * @param {boolean} reverse1 If true, loop from end to start.\r\n *   WARN: don't forget to set the value of start as the last index!\r\n * @param {boolean} reverse2 If true, loop from block end to block start.\r\n * @returns {object} An iterator folowing the iterator and iterable protocol.\r\n */\r\nexport function range(dataAccessor, start, maxIter, increment,\r\n  blockMaxIter, blockIncrement, reverse1, reverse2) {\r\n  if (typeof reverse1 === 'undefined') {\r\n    reverse1 = false;\r\n  }\r\n  if (typeof reverse2 === 'undefined') {\r\n    reverse2 = false;\r\n  }\r\n\r\n  // first index of the iteration\r\n  let nextIndex = start;\r\n  // adapt first index and increments to reverse values\r\n  if (reverse1) {\r\n    blockIncrement *= -1;\r\n    if (reverse2) {\r\n      // start at end of line\r\n      nextIndex -= (blockMaxIter - 1) * increment;\r\n    } else {\r\n      increment *= -1;\r\n    }\r\n  } else {\r\n    if (reverse2) {\r\n      // start at end of line\r\n      nextIndex += (blockMaxIter - 1) * increment;\r\n      increment *= -1;\r\n    }\r\n  }\r\n  const finalBlockIncrement = blockIncrement - blockMaxIter * increment;\r\n\r\n  // counters\r\n  let mainCount = 0;\r\n  let blockCount = 0;\r\n  // result\r\n  return {\r\n    next: function () {\r\n      if (mainCount < maxIter) {\r\n        const result = {\r\n          value: dataAccessor(nextIndex),\r\n          done: false,\r\n          index: nextIndex\r\n        };\r\n        nextIndex += increment;\r\n        ++mainCount;\r\n        ++blockCount;\r\n        if (blockCount === blockMaxIter) {\r\n          blockCount = 0;\r\n          nextIndex += finalBlockIncrement;\r\n        }\r\n        return result;\r\n      }\r\n      return {\r\n        done: true,\r\n        index: nextIndex\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get an iterator for a given range with bounds (for a one component data).\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\r\n * @param {Function} dataAccessor Function to access data.\r\n * @param {number} start The start of the range (included).\r\n * @param {number} end The end of the range (excluded).\r\n * @param {number} increment The increment between indicies.\r\n * @param {number} regionSize The size of the region to iterate through.\r\n * @param {number} regionOffset The offset between regions.\r\n * @returns {object} An iterator folowing the iterator and iterable protocol.\r\n */\r\nexport function rangeRegion(\r\n  dataAccessor, start, end, increment, regionSize, regionOffset) {\r\n  let nextIndex = start;\r\n  let regionElementCount = 0;\r\n  // result\r\n  return {\r\n    next: function () {\r\n      if (nextIndex < end) {\r\n        const result = {\r\n          value: dataAccessor(nextIndex),\r\n          done: false,\r\n          index: nextIndex\r\n        };\r\n        regionElementCount += 1;\r\n        nextIndex += increment;\r\n        if (regionElementCount === regionSize) {\r\n          regionElementCount = 0;\r\n          nextIndex += regionOffset;\r\n        }\r\n        return result;\r\n      }\r\n      return {\r\n        done: true,\r\n        index: end\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get an iterator for a given range with bounds (for a one component data).\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\r\n * @param {Function} dataAccessor Function to access data.\r\n * @param {number} start The start of the range (included).\r\n * @param {number} end The end of the range (excluded).\r\n * @param {number} increment The increment between indicies.\r\n * @param {Array} regions An array of regions: [off0, size, off1].\r\n * @returns {object} An iterator folowing the iterator and iterable protocol.\r\n */\r\nexport function rangeRegions(\r\n  dataAccessor, start, end, increment, regions) {\r\n  let nextIndex = start;\r\n  let regionCount = 0;\r\n  let regionElementCount = 0;\r\n  // result\r\n  return {\r\n    next: function () {\r\n      if (nextIndex < end) {\r\n        const result = {\r\n          value: dataAccessor(nextIndex),\r\n          done: false,\r\n          index: nextIndex\r\n        };\r\n        regionElementCount += 1;\r\n        nextIndex += increment;\r\n        if (regionElementCount === regions[regionCount][1]) {\r\n          regionElementCount = 0;\r\n          // off1 of current group\r\n          nextIndex += regions[regionCount][2];\r\n          regionCount += 1;\r\n          // off0 of next group\r\n          if (regionCount < regions.length) {\r\n            nextIndex += regions[regionCount][0];\r\n          }\r\n        }\r\n        return result;\r\n      }\r\n      return {\r\n        done: true,\r\n        index: end\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get an iterator for a given range for a 3 components data.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\r\n * @param {Function} dataAccessor Function to access data.\r\n * @param {number} start The start of the range (included).\r\n * @param {number} end The end of the range (excluded).\r\n *   (end - start) needs to be a multiple of 3...\r\n * @param {number} increment The increment between indicies (default=1).\r\n * @param {boolean} isPlanar A flag to know if the data is planar\r\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\r\n * @returns {object} A 3 components iterator folowing the iterator and iterable\r\n *   protocol, the value is an array of size 3 with each component.\r\n */\r\nexport function simpleRange3d(\r\n  dataAccessor, start, end, increment, isPlanar) {\r\n  if (typeof increment === 'undefined') {\r\n    increment = 1;\r\n  }\r\n  if (typeof isPlanar === 'undefined') {\r\n    isPlanar = false;\r\n  }\r\n  let nextIndex = start;\r\n  let componentIncrement = 1;\r\n  if (isPlanar) {\r\n    componentIncrement = (end - start) / 3;\r\n  } else {\r\n    increment *= 3;\r\n  }\r\n  let nextIndex1 = nextIndex + componentIncrement;\r\n  let nextIndex2 = nextIndex + 2 * componentIncrement;\r\n\r\n  // result\r\n  return {\r\n    next: function () {\r\n      if (nextIndex < end) {\r\n        const result = {\r\n          value: [\r\n            dataAccessor(nextIndex),\r\n            dataAccessor(nextIndex1),\r\n            dataAccessor(nextIndex2)\r\n          ],\r\n          done: false,\r\n          index: [nextIndex, nextIndex1, nextIndex2]\r\n        };\r\n        nextIndex += increment;\r\n        nextIndex1 += increment;\r\n        nextIndex2 += increment;\r\n        return result;\r\n      }\r\n      return {\r\n        done: true,\r\n        index: [end]\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get an iterator for a given range for a 3 components data.\r\n *\r\n * Using 'maxIter' and not an 'end' index since it fails in some edge cases\r\n * (for ex coronal2, ie zxy)\r\n *\r\n * @param {Function} dataAccessor Function to access data.\r\n * @param {number} start Zero-based index at which to start the iteration.\r\n * @param {number} maxIter The maximum number of iterations.\r\n * @param {number} increment Increment between indicies.\r\n * @param {number} blockMaxIter Number of applied increment after which\r\n *   blockIncrement is applied.\r\n * @param {number} blockIncrement Increment after blockMaxIter is reached,\r\n *   the value is from block start to the next block start.\r\n * @param {boolean} reverse1 If true, loop from end to start.\r\n *   WARN: don't forget to set the value of start as the last index!\r\n * @param {boolean} reverse2 If true, loop from block end to block start.\r\n * @param {boolean} isPlanar A flag to know if the data is planar\r\n *   (RRRR...GGGG...BBBB...) or not (RGBRGBRGBRGB...), defaults to false.\r\n * @returns {object} An iterator folowing the iterator and iterable protocol.\r\n */\r\nexport function range3d(dataAccessor, start, maxIter, increment,\r\n  blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar) {\r\n  const iters = [];\r\n  if (isPlanar) {\r\n    iters.push(range(\r\n      dataAccessor, start, maxIter, increment,\r\n      blockMaxIter, blockIncrement, reverse1, reverse2\r\n    ));\r\n    iters.push(range(\r\n      dataAccessor, start + maxIter * increment, maxIter, increment,\r\n      blockMaxIter, blockIncrement, reverse1, reverse2\r\n    ));\r\n    iters.push(range(\r\n      dataAccessor, start + 2 * maxIter * increment, maxIter, increment,\r\n      blockMaxIter, blockIncrement, reverse1, reverse2\r\n    ));\r\n  } else {\r\n    increment *= 3;\r\n    blockIncrement *= 3;\r\n    iters.push(range(\r\n      dataAccessor, start, maxIter, increment,\r\n      blockMaxIter, blockIncrement, reverse1, reverse2\r\n    ));\r\n    iters.push(range(\r\n      dataAccessor, start + 1, maxIter, increment,\r\n      blockMaxIter, blockIncrement, reverse1, reverse2\r\n    ));\r\n    iters.push(range(\r\n      dataAccessor, start + 2, maxIter, increment,\r\n      blockMaxIter, blockIncrement, reverse1, reverse2\r\n    ));\r\n  }\r\n\r\n  // result\r\n  return {\r\n    next: function () {\r\n      const r0 = iters[0].next();\r\n      const r1 = iters[1].next();\r\n      const r2 = iters[2].next();\r\n      if (!r0.done) {\r\n        return {\r\n          value: [\r\n            r0.value,\r\n            r1.value,\r\n            r2.value\r\n          ],\r\n          done: false,\r\n          index: [\r\n            r0.index,\r\n            r1.index,\r\n            r2.index\r\n          ]\r\n        };\r\n      }\r\n      return {\r\n        done: true,\r\n        index: r2.index\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get a list of values for a given iterator.\r\n *\r\n * @param {object} iterator The iterator to use to loop through data.\r\n * @returns {Array} The list of values.\r\n */\r\nexport function getIteratorValues(iterator) {\r\n  const values = [];\r\n  let ival = iterator.next();\r\n  while (!ival.done) {\r\n    values.push(ival.value);\r\n    ival = iterator.next();\r\n  }\r\n  return values;\r\n}\r\n\r\n/**\r\n * Get a slice index iterator.\r\n *\r\n * @param {Image} image The image to parse.\r\n * @param {Index} position The current position.\r\n * @param {boolean} isRescaled Flag for rescaled values (default false).\r\n * @param {Matrix33} viewOrientation The view orientation.\r\n * @returns {object} The slice iterator.\r\n */\r\nexport function getSliceIterator(\r\n  image, position, isRescaled, viewOrientation) {\r\n  const size = image.getGeometry().getSize();\r\n  // zero-ify non direction index\r\n  let dirMax2Index = 2;\r\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\r\n    dirMax2Index = viewOrientation.getColAbsMax(2).index;\r\n  }\r\n  const posValues = position.getValues();\r\n  // keep the main direction and any other than 3D\r\n  const indexFilter = function (element, index) {\r\n    return (index === dirMax2Index || index > 2) ? element : 0;\r\n  };\r\n  const posStart = new Index(posValues.map(indexFilter));\r\n  let start = size.indexToOffset(posStart);\r\n\r\n  // default to non rescaled data\r\n  if (typeof isRescaled === 'undefined') {\r\n    isRescaled = false;\r\n  }\r\n  let dataAccessor = null;\r\n  if (isRescaled) {\r\n    dataAccessor = function (offset) {\r\n      return image.getRescaledValueAtOffset(offset);\r\n    };\r\n  } else {\r\n    dataAccessor = function (offset) {\r\n      return image.getValueAtOffset(offset);\r\n    };\r\n  }\r\n\r\n  const ncols = size.get(0);\r\n  const nrows = size.get(1);\r\n  const nslices = size.get(2);\r\n  let sliceSize = size.getDimSize(2);\r\n\r\n  const ncomp = image.getNumberOfComponents();\r\n  const isPlanar = image.getPlanarConfiguration() === 1;\r\n  const getRange = function (\r\n    dataAccessor, start, maxIter, increment,\r\n    blockMaxIter, blockIncrement, reverse1, reverse2) {\r\n    if (ncomp === 1) {\r\n      return range(dataAccessor, start, maxIter, increment,\r\n        blockMaxIter, blockIncrement, reverse1, reverse2);\r\n    } else if (ncomp === 3) {\r\n      return range3d(dataAccessor, 3 * start, maxIter, increment,\r\n        blockMaxIter, blockIncrement, reverse1, reverse2, isPlanar);\r\n    }\r\n  };\r\n\r\n  let rangeObj = null;\r\n  if (viewOrientation && typeof viewOrientation !== 'undefined') {\r\n    const dirMax0 = viewOrientation.getColAbsMax(0);\r\n    const dirMax2 = viewOrientation.getColAbsMax(2);\r\n\r\n    // default reverse\r\n    const reverse1 = false;\r\n    const reverse2 = false;\r\n\r\n    let maxIter = null;\r\n    if (dirMax2.index === 2) {\r\n      // axial\r\n      maxIter = ncols * nrows;\r\n      if (dirMax0.index === 0) {\r\n        // xyz\r\n        rangeObj = getRange(dataAccessor,\r\n          start, maxIter, 1, ncols, ncols, reverse1, reverse2);\r\n      } else {\r\n        // yxz\r\n        rangeObj = getRange(dataAccessor,\r\n          start, maxIter, ncols, nrows, 1, reverse1, reverse2);\r\n      }\r\n    } else if (dirMax2.index === 0) {\r\n      // sagittal\r\n      maxIter = nslices * nrows;\r\n      if (dirMax0.index === 1) {\r\n        // yzx\r\n        rangeObj = getRange(dataAccessor,\r\n          start, maxIter, ncols, nrows, sliceSize, reverse1, reverse2);\r\n      } else {\r\n        // zyx\r\n        rangeObj = getRange(dataAccessor,\r\n          start, maxIter, sliceSize, nslices, ncols, reverse1, reverse2);\r\n      }\r\n    } else if (dirMax2.index === 1) {\r\n      // coronal\r\n      maxIter = nslices * ncols;\r\n      if (dirMax0.index === 0) {\r\n        // xzy\r\n        rangeObj = getRange(dataAccessor,\r\n          start, maxIter, 1, ncols, sliceSize, reverse1, reverse2);\r\n      } else {\r\n        // zxy\r\n        rangeObj = getRange(dataAccessor,\r\n          start, maxIter, sliceSize, nslices, 1, reverse1, reverse2);\r\n      }\r\n    } else {\r\n      throw new Error('Unknown direction: ' + dirMax2.index);\r\n    }\r\n  } else {\r\n    if (image.getNumberOfComponents() === 1) {\r\n      rangeObj = simpleRange(dataAccessor, start, start + sliceSize);\r\n    } else if (image.getNumberOfComponents() === 3) {\r\n      // 3 times bigger...\r\n      start *= 3;\r\n      sliceSize *= 3;\r\n      rangeObj = simpleRange3d(\r\n        dataAccessor, start, start + sliceSize, 1, isPlanar);\r\n    } else {\r\n      throw new Error('Unsupported number of components: ' +\r\n        image.getNumberOfComponents());\r\n    }\r\n  }\r\n\r\n  return rangeObj;\r\n}\r\n\r\n/**\r\n * Get a slice index iterator for a rectangular region.\r\n *\r\n * @param {Image} image The image to parse.\r\n * @param {Index} index The current position.\r\n * @param {boolean} isRescaled Flag for rescaled values (default false).\r\n * @param {Point2D} min The minimum position (optional).\r\n * @param {Point2D} max The maximum position (optional).\r\n * @returns {object} The slice iterator.\r\n */\r\nexport function getRegionSliceIterator(\r\n  image, index, isRescaled, min, max) {\r\n  if (image.getNumberOfComponents() !== 1) {\r\n    throw new Error('Unsupported number of components for region iterator: ' +\r\n      image.getNumberOfComponents());\r\n  }\r\n\r\n  // default to non rescaled data\r\n  if (typeof isRescaled === 'undefined') {\r\n    isRescaled = false;\r\n  }\r\n  let dataAccessor = null;\r\n  if (isRescaled) {\r\n    dataAccessor = function (offset) {\r\n      return image.getRescaledValueAtOffset(offset);\r\n    };\r\n  } else {\r\n    dataAccessor = function (offset) {\r\n      return image.getValueAtOffset(offset);\r\n    };\r\n  }\r\n\r\n  const size = image.getGeometry().getSize();\r\n  if (typeof min === 'undefined') {\r\n    min = new Point2D(0, 0);\r\n  }\r\n  if (typeof max === 'undefined') {\r\n    max = new Point2D(\r\n      size.get(0) - 1,\r\n      size.get(1)\r\n    );\r\n  }\r\n  // position to pixel for max: extra X is ok, remove extra Y\r\n  const startOffset = size.indexToOffset(index.getWithNew2D(\r\n    min.getX(), min.getY()\r\n  ));\r\n  const endOffset = size.indexToOffset(index.getWithNew2D(\r\n    max.getX(), max.getY() - 1\r\n  ));\r\n\r\n  // minimum 1 column\r\n  const rangeNumberOfColumns = Math.max(1, max.getX() - min.getX());\r\n  const rowIncrement = size.get(0) - rangeNumberOfColumns;\r\n\r\n  return rangeRegion(\r\n    dataAccessor, startOffset, endOffset + 1,\r\n    1, rangeNumberOfColumns, rowIncrement);\r\n}\r\n\r\n/**\r\n * Get a slice index iterator for a rectangular region.\r\n *\r\n * @param {Image} image The image to parse.\r\n * @param {Index} index The current position.\r\n * @param {boolean} isRescaled Flag for rescaled values (default false).\r\n * @param {Array} regions An array of regions.\r\n * @returns {object|undefined} The slice iterator.\r\n */\r\nexport function getVariableRegionSliceIterator(\r\n  image, index, isRescaled, regions) {\r\n  if (image.getNumberOfComponents() !== 1) {\r\n    throw new Error('Unsupported number of components for region iterator: ' +\r\n      image.getNumberOfComponents());\r\n  }\r\n\r\n  // default to non rescaled data\r\n  if (typeof isRescaled === 'undefined') {\r\n    isRescaled = false;\r\n  }\r\n  let dataAccessor = null;\r\n  if (isRescaled) {\r\n    dataAccessor = function (offset) {\r\n      return image.getRescaledValueAtOffset(offset);\r\n    };\r\n  } else {\r\n    dataAccessor = function (offset) {\r\n      return image.getValueAtOffset(offset);\r\n    };\r\n  }\r\n\r\n  const size = image.getGeometry().getSize();\r\n\r\n  const offsetRegions = [];\r\n  let region;\r\n  let min = null;\r\n  let max = null;\r\n  let regionIndex = null;\r\n  for (let i = 0; i < regions.length; ++i) {\r\n    region = regions[i];\r\n    const width = region[1][0] - region[0][0];\r\n    if (width !== 0) {\r\n      regionIndex = i;\r\n      if (!min) {\r\n        min = region[0];\r\n      }\r\n      offsetRegions.push([\r\n        region[0][0],\r\n        width,\r\n        size.get(0) - region[1][0]\r\n      ]);\r\n    }\r\n  }\r\n  if (regionIndex !== null) {\r\n    max = regions[regionIndex][1];\r\n  }\r\n\r\n  // exit if no offsets\r\n  if (offsetRegions.length === 0) {\r\n    return undefined;\r\n  }\r\n\r\n  const startOffset = size.indexToOffset(index.getWithNew2D(\r\n    min[0], min[1]\r\n  ));\r\n  const endOffset = size.indexToOffset(index.getWithNew2D(\r\n    max[0], max[1]\r\n  ));\r\n\r\n  return rangeRegions(\r\n    dataAccessor, startOffset, endOffset + 1,\r\n    1, offsetRegions);\r\n}\r\n\r\n/**\r\n * Get a colour iterator. The input array defines the colours and\r\n * their start index.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols\r\n * @param {Array} colours An array of {index, colour} pairs.\r\n * @param {number} end The end of the range (excluded).\r\n * @returns {object} An iterator folowing the iterator and iterable protocol.\r\n */\r\nexport function colourRange(colours, end) {\r\n  let nextIndex = 0;\r\n  let nextColourIndex = 0;\r\n  // result\r\n  return {\r\n    next: function () {\r\n      if (nextIndex < end) {\r\n        if (nextColourIndex + 1 < colours.length &&\r\n          nextIndex >= colours[nextColourIndex + 1].index) {\r\n          ++nextColourIndex;\r\n        }\r\n        const result = {\r\n          value: colours[nextColourIndex].colour,\r\n          done: false,\r\n          index: nextIndex\r\n        };\r\n        ++nextIndex;\r\n        return result;\r\n      }\r\n      return {\r\n        done: true,\r\n        index: end\r\n      };\r\n    }\r\n  };\r\n}\r\n","/**\r\n * Rescale Slope and Intercept\r\n */\r\nexport class RescaleSlopeAndIntercept {\r\n\r\n  /**\r\n   * The slope.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #slope;\r\n\r\n  /**\r\n   * The intercept.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #intercept;\r\n\r\n  /**\r\n   * @param {number} slope The slope of the RSI.\r\n   * @param {number} intercept The intercept of the RSI.\r\n   */\r\n  constructor(slope, intercept) {\r\n    /*// Check the rescale slope.\r\n      if(typeof(slope) === 'undefined') {\r\n          slope = 1;\r\n      }\r\n      // Check the rescale intercept.\r\n      if(typeof(intercept) === 'undefined') {\r\n          intercept = 0;\r\n      }*/\r\n    this.#slope = slope;\r\n    this.#intercept = intercept;\r\n  }\r\n\r\n  /**\r\n   * Get the slope of the RSI.\r\n   *\r\n   * @returns {number} The slope of the RSI.\r\n   */\r\n  getSlope() {\r\n    return this.#slope;\r\n  }\r\n\r\n  /**\r\n   * Get the intercept of the RSI.\r\n   *\r\n   * @returns {number} The intercept of the RSI.\r\n   */\r\n  getIntercept() {\r\n    return this.#intercept;\r\n  }\r\n\r\n  /**\r\n   * Apply the RSI on an input value.\r\n   *\r\n   * @param {number} value The input value.\r\n   * @returns {number} The value to rescale.\r\n   */\r\n  apply(value) {\r\n    return value * this.#slope + this.#intercept;\r\n  }\r\n\r\n  /**\r\n   * Check for RSI equality.\r\n   *\r\n   * @param {RescaleSlopeAndIntercept} rhs The other RSI to compare to.\r\n   * @returns {boolean} True if both RSI are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n          this.getSlope() === rhs.getSlope() &&\r\n          this.getIntercept() === rhs.getIntercept();\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the RSI.\r\n   *\r\n   * @returns {string} The RSI as a string.\r\n   */\r\n  toString() {\r\n    return (this.getSlope() + ', ' + this.getIntercept());\r\n  }\r\n\r\n  /**\r\n   * Is this RSI an ID RSI.\r\n   *\r\n   * @returns {boolean} True if the RSI has a slope of 1 and no intercept.\r\n   */\r\n  isID() {\r\n    return (this.getSlope() === 1 && this.getIntercept() === 0);\r\n  }\r\n\r\n} // class RescaleSlopeAndIntercept\r\n","import {Index} from '../math/index';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Matrix33} from '../math/matrix';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Immutable Size class.\r\n * Warning: the input array is NOT cloned, modifying it will\r\n *  modify the index values.\r\n */\r\nexport class Size {\r\n\r\n  /**\r\n   * The size values.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #values;\r\n\r\n  /**\r\n   * @param {Array} values The size values.\r\n   */\r\n  constructor(values) {\r\n    if (!values || typeof values === 'undefined') {\r\n      throw new Error('Cannot create size with no values.');\r\n    }\r\n    if (values.length === 0) {\r\n      throw new Error('Cannot create size with empty values.');\r\n    }\r\n    const valueCheck = function (val) {\r\n      return !isNaN(val) && val !== 0;\r\n    };\r\n    if (!values.every(valueCheck)) {\r\n      throw new Error('Cannot create size with non number or zero values.');\r\n    }\r\n    this.#values = values;\r\n  }\r\n\r\n  /**\r\n   * Get the size value at the given array index.\r\n   *\r\n   * @param {number} i The index to get.\r\n   * @returns {number} The value.\r\n   */\r\n  get(i) {\r\n    return this.#values[i];\r\n  }\r\n\r\n  /**\r\n   * Get the length of the index.\r\n   *\r\n   * @returns {number} The length.\r\n   */\r\n  length() {\r\n    return this.#values.length;\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the size.\r\n   *\r\n   * @returns {string} The Size as a string.\r\n   */\r\n  toString() {\r\n    return '(' + this.#values.toString() + ')';\r\n  }\r\n\r\n  /**\r\n   * Get the values of this index.\r\n   *\r\n   * @returns {Array} The array of values.\r\n   */\r\n  getValues() {\r\n    return this.#values.slice();\r\n  }\r\n\r\n  /**\r\n   * Check if a dimension exists and has more than one element.\r\n   *\r\n   * @param {number} dimension The dimension to check.\r\n   * @returns {boolean} True if the size is more than one.\r\n   */\r\n  moreThanOne(dimension) {\r\n    return this.length() >= dimension + 1 && this.get(dimension) !== 1;\r\n  }\r\n\r\n  /**\r\n   * Check if the associated data is scrollable in 3D.\r\n   *\r\n   * @param {Matrix33} [viewOrientation] The orientation matrix.\r\n   * @returns {boolean} True if scrollable.\r\n   */\r\n  canScroll3D(viewOrientation) {\r\n    let dimension = 2;\r\n    if (typeof viewOrientation !== 'undefined') {\r\n      dimension = viewOrientation.getThirdColMajorDirection();\r\n    }\r\n    return this.moreThanOne(dimension);\r\n  }\r\n\r\n  /**\r\n   * Check if the associated data is scrollable: either in 3D or\r\n   * in other directions.\r\n   *\r\n   * @param {Matrix33} viewOrientation The orientation matrix.\r\n   * @returns {boolean} True if scrollable.\r\n   */\r\n  canScroll(viewOrientation) {\r\n    let canScroll = this.canScroll3D(viewOrientation);\r\n    // check possible other dimensions\r\n    for (let i = 3; i < this.length(); ++i) {\r\n      canScroll = canScroll || this.moreThanOne(i);\r\n    }\r\n    return canScroll;\r\n  }\r\n\r\n  /**\r\n   * Get the size of a given dimension.\r\n   *\r\n   * @param {number} dimension The dimension.\r\n   * @param {number} [start] Optional start dimension to start counting from.\r\n   * @returns {number} The size.\r\n   */\r\n  getDimSize(dimension, start) {\r\n    if (dimension > this.length()) {\r\n      return null;\r\n    }\r\n    if (typeof start === 'undefined') {\r\n      start = 0;\r\n    } else {\r\n      if (start < 0 || start > dimension) {\r\n        throw new Error('Invalid start value for getDimSize');\r\n      }\r\n    }\r\n    let size = 1;\r\n    for (let i = start; i < dimension; ++i) {\r\n      size *= this.get(i);\r\n    }\r\n    return size;\r\n  }\r\n\r\n  /**\r\n   * Get the total size.\r\n   *\r\n   * @param {number} [start] Optional start dimension to base the offset on.\r\n   * @returns {number} The total size.\r\n   */\r\n  getTotalSize(start) {\r\n    return this.getDimSize(this.length(), start);\r\n  }\r\n\r\n  /**\r\n   * Check for equality.\r\n   *\r\n   * @param {Size} rhs The object to compare to.\r\n   * @returns {boolean} True if both objects are equal.\r\n   */\r\n  equals(rhs) {\r\n    // check input\r\n    if (!rhs) {\r\n      return false;\r\n    }\r\n    // check length\r\n    const length = this.length();\r\n    if (length !== rhs.length()) {\r\n      return false;\r\n    }\r\n    // check values\r\n    for (let i = 0; i < length; ++i) {\r\n      if (this.get(i) !== rhs.get(i)) {\r\n        return false;\r\n      }\r\n    }\r\n    // seems ok!\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Check that an index is within bounds.\r\n   *\r\n   * @param {Index} index The index to check.\r\n   * @param {Array} dirs Optional list of directions to check.\r\n   * @returns {boolean} True if the given coordinates are within bounds.\r\n   */\r\n  isInBounds(index, dirs) {\r\n    // check input\r\n    if (!index) {\r\n      return false;\r\n    }\r\n    // check length\r\n    const length = this.length();\r\n    if (length !== index.length()) {\r\n      return false;\r\n    }\r\n    // create dirs if not there\r\n    if (typeof dirs === 'undefined') {\r\n      dirs = [];\r\n      for (let j = 0; j < length; ++j) {\r\n        dirs.push(j);\r\n      }\r\n    } else {\r\n      for (let k = 0; k < length; ++k) {\r\n        if (dirs[k] > length - 1) {\r\n          throw new Error('Wrong input dir value: ' + dirs[k]);\r\n        }\r\n      }\r\n    }\r\n    // check values is 0 <= v < size\r\n    const inBound = function (value, size) {\r\n      return value >= 0 && value < size;\r\n    };\r\n    // check\r\n    for (let i = 0; i < dirs.length; ++i) {\r\n      if (!inBound(index.get(dirs[i]), this.get(dirs[i]))) {\r\n        return false;\r\n      }\r\n    }\r\n    // seems ok!\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Convert an index to an offset in memory.\r\n   *\r\n   * @param {Index} index The index to convert.\r\n   * @param {number} [start] Optional start dimension to base the offset on.\r\n   * @returns {number} The offset.\r\n   */\r\n  indexToOffset(index, start) {\r\n    // TODO check for equality\r\n    if (index.length() < this.length()) {\r\n      throw new Error('Incompatible index and size length');\r\n    }\r\n    if (typeof start === 'undefined') {\r\n      start = 0;\r\n    } else {\r\n      if (start < 0 || start > this.length() - 1) {\r\n        throw new Error('Invalid start value for indexToOffset');\r\n      }\r\n    }\r\n    let offset = 0;\r\n    for (let i = start; i < this.length(); ++i) {\r\n      offset += index.get(i) * this.getDimSize(i, start);\r\n    }\r\n    return offset;\r\n  }\r\n\r\n  /**\r\n   * Convert an offset in memory to an index.\r\n   *\r\n   * @param {number} offset The offset to convert.\r\n   * @returns {Index} The index.\r\n   */\r\n  offsetToIndex(offset) {\r\n    const values = new Array(this.length());\r\n    let off = offset;\r\n    let dimSize = 0;\r\n    for (let i = this.length() - 1; i > 0; --i) {\r\n      dimSize = this.getDimSize(i);\r\n      values[i] = Math.floor(off / dimSize);\r\n      off = off - values[i] * dimSize;\r\n    }\r\n    values[0] = off;\r\n    return new Index(values);\r\n  }\r\n\r\n  /**\r\n   * Get the 2D base of this size.\r\n   *\r\n   * @returns {object} The 2D base [0,1] as {x,y}.\r\n   */\r\n  get2D() {\r\n    return {\r\n      x: this.get(0),\r\n      y: this.get(1)\r\n    };\r\n  }\r\n\r\n} // Size class\r\n","/**\r\n * Immutable Spacing class.\r\n * Warning: the input array is NOT cloned, modifying it will\r\n *  modify the index values.\r\n */\r\nexport class Spacing {\r\n\r\n  /**\r\n   * The spacing values.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #values;\r\n\r\n  /**\r\n   * @param {Array} values The spacing values.\r\n   */\r\n  constructor(values) {\r\n    if (!values || typeof values === 'undefined') {\r\n      throw new Error('Cannot create spacing with no values.');\r\n    }\r\n    if (values.length === 0) {\r\n      throw new Error('Cannot create spacing with empty values.');\r\n    }\r\n    const valueCheck = function (val) {\r\n      return !isNaN(val) && val !== 0;\r\n    };\r\n    if (!values.every(valueCheck)) {\r\n      throw new Error('Cannot create spacing with non number or zero values.');\r\n    }\r\n    this.#values = values;\r\n  }\r\n\r\n  /**\r\n   * Get the spacing value at the given array index.\r\n   *\r\n   * @param {number} i The index to get.\r\n   * @returns {number} The value.\r\n   */\r\n  get(i) {\r\n    return this.#values[i];\r\n  }\r\n\r\n  /**\r\n   * Get the length of the spacing.\r\n   *\r\n   * @returns {number} The length.\r\n   */\r\n  length() {\r\n    return this.#values.length;\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the spacing.\r\n   *\r\n   * @returns {string} The spacing as a string.\r\n   */\r\n  toString() {\r\n    return '(' + this.#values.toString() + ')';\r\n  }\r\n\r\n  /**\r\n   * Get the values of this spacing.\r\n   *\r\n   * @returns {Array} The array of values.\r\n   */\r\n  getValues() {\r\n    return this.#values.slice();\r\n  }\r\n\r\n  /**\r\n   * Check for equality.\r\n   *\r\n   * @param {Spacing} rhs The object to compare to.\r\n   * @returns {boolean} True if both objects are equal.\r\n   */\r\n  equals(rhs) {\r\n    // check input\r\n    if (!rhs) {\r\n      return false;\r\n    }\r\n    // check length\r\n    const length = this.length();\r\n    if (length !== rhs.length()) {\r\n      return false;\r\n    }\r\n    // check values\r\n    for (let i = 0; i < length; ++i) {\r\n      if (this.get(i) !== rhs.get(i)) {\r\n        return false;\r\n      }\r\n    }\r\n    // seems ok!\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Get the 2D base of this size.\r\n   *\r\n   * @returns {object} The 2D base [col,row] as {x,y}.\r\n   */\r\n  get2D() {\r\n    return {\r\n      x: this.get(0),\r\n      y: this.get(1)\r\n    };\r\n  }\r\n\r\n} // Spacing class\r\n","import {\r\n  BIG_EPSILON,\r\n  isSimilar,\r\n  getIdentityMat33\r\n} from '../math/matrix';\r\nimport {Point3D, Point} from '../math/point';\r\nimport {Vector3D} from '../math/vector';\r\nimport {Index} from '../math/index';\r\nimport {logger} from '../utils/logger';\r\nimport {Size} from './size';\r\nimport {Spacing} from './spacing';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Matrix33} from '../math/matrix';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * 2D/3D Geometry class.\r\n */\r\nexport class Geometry {\r\n\r\n  /**\r\n   * Array of origins.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #origins;\r\n\r\n  /**\r\n   * Data size.\r\n   *\r\n   * @type {Size}\r\n   */\r\n  #size;\r\n\r\n  /**\r\n   * Data spacing.\r\n   *\r\n   * @type {Spacing}\r\n   */\r\n  #spacing;\r\n\r\n  /**\r\n   * Local helper object for time points.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #timeOrigins = {};\r\n\r\n  /**\r\n   * Initial time index.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #initialTime;\r\n\r\n  /**\r\n   * Data orientation.\r\n   *\r\n   * @type {Matrix33}\r\n   */\r\n  #orientation = getIdentityMat33();\r\n\r\n  /**\r\n   * Flag to know if new origins were added.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #newOrigins = false;\r\n\r\n  /**\r\n   * @param {Point3D} origin The object origin (a 3D point).\r\n   * @param {Size} size The object size.\r\n   * @param {Spacing} spacing The object spacing.\r\n   * @param {Matrix33} [orientation] The object orientation (3*3 matrix,\r\n   *   default to 3*3 identity).\r\n   * @param {number} [time] Optional time index.\r\n   */\r\n  constructor(origin, size, spacing, orientation, time) {\r\n    this.#origins = [origin];\r\n    this.#size = size;\r\n    this.#spacing = spacing;\r\n    if (typeof time !== 'undefined') {\r\n      this.#initialTime = time;\r\n      this.#timeOrigins[time] = [origin];\r\n    }\r\n    // check input orientation\r\n    if (typeof orientation !== 'undefined') {\r\n      this.#orientation = orientation;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the time value that was passed at construction.\r\n   *\r\n   * @returns {number} The time value.\r\n   */\r\n  getInitialTime() {\r\n    return this.#initialTime;\r\n  }\r\n\r\n  /**\r\n   * Get the total number of slices.\r\n   * Can be different from what is stored in the size object\r\n   *  during a volume with time points creation process.\r\n   *\r\n   * @returns {number} The total count.\r\n   */\r\n  getCurrentTotalNumberOfSlices() {\r\n    const keys = Object.keys(this.#timeOrigins);\r\n    if (keys.length === 0) {\r\n      return this.#origins.length;\r\n    }\r\n    let count = 0;\r\n    for (let i = 0; i < keys.length; ++i) {\r\n      count += this.#timeOrigins[keys[i]].length;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  /**\r\n   * Check if a time point has associated slices.\r\n   *\r\n   * @param {number} time The time point to check.\r\n   * @returns {boolean} True if slices are present.\r\n   */\r\n  hasSlicesAtTime(time) {\r\n    return typeof this.#timeOrigins[time] !== 'undefined';\r\n  }\r\n\r\n  /**\r\n   * Get the number of slices stored for time points preceding\r\n   * the input one.\r\n   *\r\n   * @param {number} time The time point to check.\r\n   * @returns {number|undefined} The count.\r\n   */\r\n  getCurrentNumberOfSlicesBeforeTime(time) {\r\n    const keys = Object.keys(this.#timeOrigins);\r\n    if (keys.length === 0) {\r\n      return undefined;\r\n    }\r\n    let count = 0;\r\n    for (let i = 0; i < keys.length; ++i) {\r\n      const key = keys[i];\r\n      if (parseInt(key, 10) === time) {\r\n        break;\r\n      }\r\n      count += this.#timeOrigins[key].length;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  /**\r\n   * Get the object origin.\r\n   * This should be the lowest origin to ease calculations (?).\r\n   *\r\n   * @returns {Point3D} The object origin.\r\n   */\r\n  getOrigin() {\r\n    return this.#origins[0];\r\n  }\r\n\r\n  /**\r\n   * Get the object origins.\r\n   *\r\n   * @returns {Array} The object origins.\r\n   */\r\n  getOrigins() {\r\n    return this.#origins;\r\n  }\r\n\r\n  /**\r\n   * Check if a point is in the origin list.\r\n   *\r\n   * @param {Point3D} point3D The point to check.\r\n   * @param {number} tol The comparison tolerance\r\n   *   default to Number.EPSILON.\r\n   * @returns {boolean} True if in list.\r\n   */\r\n  includesOrigin(point3D, tol) {\r\n    for (let i = 0; i < this.#origins.length; ++i) {\r\n      if (this.#origins[i].isSimilar(point3D, tol)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the object size.\r\n   * Warning: the size comes as stored in DICOM, meaning that it could\r\n   * be oriented.\r\n   *\r\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\r\n   * @returns {Size} The object size.\r\n   */\r\n  getSize(viewOrientation) {\r\n    let res = this.#size;\r\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\r\n      let values = getOrientedArray3D(\r\n        [\r\n          this.#size.get(0),\r\n          this.#size.get(1),\r\n          this.#size.get(2)\r\n        ],\r\n        viewOrientation);\r\n      values = values.map(Math.abs);\r\n      res = new Size(values.concat(this.#size.getValues().slice(3)));\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Calculate slice spacing from origins and replace current\r\n   *   if needed.\r\n   */\r\n  #updateSliceSpacing() {\r\n    const geoSliceSpacing = getSliceGeometrySpacing(\r\n      this.#origins,\r\n      this.#orientation\r\n    );\r\n    // update local if needed\r\n    if (typeof geoSliceSpacing !== 'undefined' &&\r\n      this.#spacing.get(2) !== geoSliceSpacing) {\r\n      logger.trace('Updating slice spacing.');\r\n      const values = this.#spacing.getValues();\r\n      values[2] = geoSliceSpacing;\r\n      this.#spacing = new Spacing(values);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the object spacing.\r\n   * Warning: the spacing comes as stored in DICOM, meaning that it could\r\n   * be oriented.\r\n   *\r\n   * @param {Matrix33} [viewOrientation] The view orientation (optional)\r\n   * @returns {Spacing} The object spacing.\r\n   */\r\n  getSpacing(viewOrientation) {\r\n    // update slice spacing after appendSlice\r\n    if (this.#newOrigins) {\r\n      this.#updateSliceSpacing();\r\n      this.#newOrigins = false;\r\n    }\r\n    let res = this.#spacing;\r\n    if (viewOrientation && typeof viewOrientation !== 'undefined') {\r\n      let orientedValues = getOrientedArray3D(\r\n        [\r\n          this.#spacing.get(0),\r\n          this.#spacing.get(1),\r\n          this.#spacing.get(2)\r\n        ],\r\n        viewOrientation);\r\n      orientedValues = orientedValues.map(Math.abs);\r\n      res = new Spacing(orientedValues);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Get the image spacing in real world.\r\n   *\r\n   * @returns {Spacing} The object spacing.\r\n   */\r\n  getRealSpacing() {\r\n    // asOneAndZeros to not change spacing values...\r\n    return this.getSpacing(\r\n      this.#orientation.getInverse().asOneAndZeros()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the object orientation.\r\n   *\r\n   * @returns {Matrix33} The object orientation.\r\n   */\r\n  getOrientation() {\r\n    return this.#orientation;\r\n  }\r\n\r\n  /**\r\n   * Get the slice position of a point in the current slice layout.\r\n   * Slice indices increase with decreasing origins (high index -> low origin),\r\n   * this simplified the handling of reconstruction since it means\r\n   * the displayed data is in the same 'direction' as the extracted data.\r\n   * As seen in the getOrigin method, the main origin is the lowest one.\r\n   * This implies that the index to world and reverse method do some flipping\r\n   * magic...\r\n   *\r\n   * @param {Point3D} point The point to evaluate.\r\n   * @param {number} time Optional time index.\r\n   * @returns {number} The slice index.\r\n   */\r\n  getSliceIndex(point, time) {\r\n    // cannot use this.worldToIndex(point).getK() since\r\n    // we cannot guaranty consecutive slices...\r\n\r\n    let localOrigins = this.#origins;\r\n    if (typeof time !== 'undefined') {\r\n      localOrigins = this.#timeOrigins[time];\r\n    }\r\n\r\n    // find the closest index\r\n    let closestSliceIndex = 0;\r\n    let minDist = point.getDistance(localOrigins[0]);\r\n    let dist = 0;\r\n    for (let i = 0; i < localOrigins.length; ++i) {\r\n      dist = point.getDistance(localOrigins[i]);\r\n      if (dist < minDist) {\r\n        minDist = dist;\r\n        closestSliceIndex = i;\r\n      }\r\n    }\r\n    const closestOrigin = localOrigins[closestSliceIndex];\r\n    // direction between the input point and the closest origin\r\n    const pointDir = point.minus(closestOrigin);\r\n    // use third orientation matrix column as base plane vector\r\n    const normal = new Vector3D(\r\n      this.#orientation.get(0, 2),\r\n      this.#orientation.get(1, 2),\r\n      this.#orientation.get(2, 2)\r\n    );\r\n    // a.dot(b) = ||a|| * ||b|| * cos(theta)\r\n    // (https://en.wikipedia.org/wiki/Dot_product#Geometric_definition)\r\n    // -> the sign of the dot product depends on the cosinus of\r\n    //    the angle between the vectors\r\n    //   -> >0 => vectors are codirectional\r\n    //   -> <0 => vectors are opposite\r\n    const dotProd = normal.dotProduct(pointDir);\r\n    // oposite vectors get higher index\r\n    const sliceIndex = dotProd > 0 ? closestSliceIndex + 1 : closestSliceIndex;\r\n    return sliceIndex;\r\n  }\r\n\r\n  /**\r\n   * Append an origin to the geometry.\r\n   *\r\n   * @param {Point3D} origin The origin to append.\r\n   * @param {number} index The index at which to append.\r\n   * @param {number} [time] Optional time index.\r\n   */\r\n  appendOrigin(origin, index, time) {\r\n    if (typeof time !== 'undefined') {\r\n      this.#timeOrigins[time].splice(index, 0, origin);\r\n    }\r\n    if (typeof time === 'undefined' || time === this.#initialTime) {\r\n      this.#newOrigins = true;\r\n      // add in origin array\r\n      this.#origins.splice(index, 0, origin);\r\n      // increment second dimension\r\n      const values = this.#size.getValues();\r\n      values[2] += 1;\r\n      this.#size = new Size(values);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append a frame to the geometry.\r\n   *\r\n   * @param {Point3D} origin The origin to append.\r\n   * @param {number} time Optional time index.\r\n   */\r\n  appendFrame(origin, time) {\r\n    // add origin to list\r\n    this.#timeOrigins[time] = [origin];\r\n    // increment third dimension\r\n    const sizeValues = this.#size.getValues();\r\n    const spacingValues = this.#spacing.getValues();\r\n    if (sizeValues.length === 4) {\r\n      sizeValues[3] += 1;\r\n    } else {\r\n      sizeValues.push(2);\r\n      spacingValues.push(1);\r\n    }\r\n    this.#size = new Size(sizeValues);\r\n    this.#spacing = new Spacing(spacingValues);\r\n  }\r\n\r\n  /**\r\n   * Get a string representation of the geometry.\r\n   *\r\n   * @returns {string} The geometry as a string.\r\n   */\r\n  toString() {\r\n    return 'Origin: ' + this.getOrigin() +\r\n      ', Size: ' + this.getSize() +\r\n      ', Spacing: ' + this.getSpacing() +\r\n      ', Orientation: ' + this.getOrientation();\r\n  }\r\n\r\n  /**\r\n   * Check for equality.\r\n   *\r\n   * @param {Geometry} rhs The object to compare to.\r\n   * @returns {boolean} True if both objects are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      this.getOrigin().equals(rhs.getOrigin()) &&\r\n      this.getSize().equals(rhs.getSize()) &&\r\n      this.getSpacing().equals(rhs.getSpacing());\r\n  }\r\n\r\n  /**\r\n   * Check that a point is within bounds.\r\n   *\r\n   * @param {Point} point The point to check.\r\n   * @returns {boolean} True if the given coordinates are within bounds.\r\n   */\r\n  isInBounds(point) {\r\n    return this.isIndexInBounds(this.worldToIndex(point));\r\n  }\r\n\r\n  /**\r\n   * Check that a index is within bounds.\r\n   *\r\n   * @param {Index} index The index to check.\r\n   * @param {Array} [dirs] Optional list of directions to check.\r\n   * @returns {boolean} True if the given coordinates are within bounds.\r\n   */\r\n  isIndexInBounds(index, dirs) {\r\n    return this.getSize().isInBounds(index, dirs);\r\n  }\r\n\r\n  /**\r\n   * Convert an index into world coordinates.\r\n   *\r\n   * @param {Index} index The index to convert.\r\n   * @returns {Point} The corresponding point.\r\n   */\r\n  indexToWorld(index) {\r\n    // apply spacing\r\n    // (spacing is oriented, apply before orientation)\r\n    const spacing = this.getSpacing();\r\n    const orientedPoint3D = new Point3D(\r\n      index.get(0) * spacing.get(0),\r\n      index.get(1) * spacing.get(1),\r\n      index.get(2) * spacing.get(2)\r\n    );\r\n    // de-orient\r\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\r\n    // keep >3d values\r\n    const values = index.getValues();\r\n    const origin = this.getOrigin();\r\n    values[0] = origin.getX() + point3D.getX();\r\n    values[1] = origin.getY() + point3D.getY();\r\n    values[2] = origin.getZ() + point3D.getZ();\r\n    // return point\r\n    return new Point(values);\r\n  }\r\n\r\n  /**\r\n   * Convert a 3D point into world coordinates.\r\n   *\r\n   * @param {Point3D} point The 3D point to convert.\r\n   * @returns {Point3D} The corresponding world 3D point.\r\n   */\r\n  pointToWorld(point) {\r\n    // apply spacing\r\n    // (spacing is oriented, apply before orientation)\r\n    const spacing = this.getSpacing();\r\n    const orientedPoint3D = new Point3D(\r\n      point.getX() * spacing.get(0),\r\n      point.getY() * spacing.get(1),\r\n      point.getZ() * spacing.get(2)\r\n    );\r\n    // de-orient\r\n    const point3D = this.getOrientation().multiplyPoint3D(orientedPoint3D);\r\n    // return point3D\r\n    const origin = this.getOrigin();\r\n    return new Point3D(\r\n      origin.getX() + point3D.getX(),\r\n      origin.getY() + point3D.getY(),\r\n      origin.getZ() + point3D.getZ()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Convert world coordinates into an index.\r\n   *\r\n   * @param {Point} point The point to convert.\r\n   * @returns {Index} The corresponding index.\r\n   */\r\n  worldToIndex(point) {\r\n    // compensate for origin\r\n    // (origin is not oriented, compensate before orientation)\r\n    // TODO: use slice origin...\r\n    const origin = this.getOrigin();\r\n    const point3D = new Point3D(\r\n      point.get(0) - origin.getX(),\r\n      point.get(1) - origin.getY(),\r\n      point.get(2) - origin.getZ()\r\n    );\r\n    // orient\r\n    const orientedPoint3D =\r\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\r\n    // keep >3d values\r\n    const values = point.getValues();\r\n    // apply spacing and round\r\n    const spacing = this.getSpacing();\r\n    values[0] = Math.round(orientedPoint3D.getX() / spacing.get(0));\r\n    values[1] = Math.round(orientedPoint3D.getY() / spacing.get(1));\r\n    values[2] = Math.round(orientedPoint3D.getZ() / spacing.get(2));\r\n\r\n    // return index\r\n    return new Index(values);\r\n  }\r\n\r\n  /**\r\n   * Convert world coordinates into an point.\r\n   *\r\n   * @param {Point} point The world point to convert.\r\n   * @returns {Point3D} The corresponding point.\r\n   */\r\n  worldToPoint(point) {\r\n    // compensate for origin\r\n    // (origin is not oriented, compensate before orientation)\r\n    const origin = this.getOrigin();\r\n    const point3D = new Point3D(\r\n      point.get(0) - origin.getX(),\r\n      point.get(1) - origin.getY(),\r\n      point.get(2) - origin.getZ()\r\n    );\r\n    // orient\r\n    const orientedPoint3D =\r\n      this.getOrientation().getInverse().multiplyPoint3D(point3D);\r\n    // keep >3d values\r\n    const values = point.getValues();\r\n    // apply spacing and round\r\n    const spacing = this.getSpacing();\r\n    values[0] = orientedPoint3D.getX() / spacing.get(0);\r\n    values[1] = orientedPoint3D.getY() / spacing.get(1);\r\n    values[2] = orientedPoint3D.getZ() / spacing.get(2);\r\n\r\n    // return index\r\n    return new Point3D(values[0], values[1], values[2]);\r\n  }\r\n\r\n} // class Geometry\r\n\r\n/**\r\n * Get the oriented values of an input 3D array.\r\n *\r\n * @param {Array} array3D The 3D array.\r\n * @param {Matrix33} orientation The orientation 3D matrix.\r\n * @returns {Array} The values reordered according to the orientation.\r\n */\r\nexport function getOrientedArray3D(array3D, orientation) {\r\n  // values = orientation * orientedValues\r\n  // -> inv(orientation) * values = orientedValues\r\n  return orientation.getInverse().multiplyArray3D(array3D);\r\n}\r\n\r\n/**\r\n * Get the raw values of an oriented input 3D array.\r\n *\r\n * @param {Array} array3D The 3D array.\r\n * @param {Matrix33} orientation The orientation 3D matrix.\r\n * @returns {Array} The values reordered to compensate the orientation.\r\n */\r\nexport function getDeOrientedArray3D(array3D, orientation) {\r\n  // values = orientation * orientedValues\r\n  return orientation.multiplyArray3D(array3D);\r\n}\r\n\r\n/**\r\n * Get the slice spacing from the difference in the Z directions\r\n * of input origins.\r\n *\r\n * @param {Array} origins An array of Point3D.\r\n * @param {Matrix33} orientation The oritentation matrix.\r\n * @param {boolean} [withCheck] Flag to activate spacing variation check,\r\n *   default to true.\r\n * @returns {number|undefined} The spacing.\r\n */\r\nexport function getSliceGeometrySpacing(origins, orientation, withCheck) {\r\n  if (typeof withCheck === 'undefined') {\r\n    withCheck = true;\r\n  }\r\n  // check origins\r\n  if (origins.length <= 1) {\r\n    return;\r\n  }\r\n  // (x, y, z) = orientationMatrix * (i, j, k)\r\n  // -> inv(orientationMatrix) * (x, y, z) = (i, j, k)\r\n  // applied on the patient position, reorders indices\r\n  // so that Z is the slice direction\r\n  const invOrientation = orientation.getInverse();\r\n  let origin1 = invOrientation.multiplyVector3D(origins[0]);\r\n  let origin2 = invOrientation.multiplyVector3D(origins[1]);\r\n  let sliceSpacing = Math.abs(origin1.getZ() - origin2.getZ());\r\n  const deltas = [];\r\n  for (let i = 0; i < origins.length - 1; ++i) {\r\n    origin1 = invOrientation.multiplyVector3D(origins[i]);\r\n    origin2 = invOrientation.multiplyVector3D(origins[i + 1]);\r\n    const diff = Math.abs(origin1.getZ() - origin2.getZ());\r\n    if (diff === 0) {\r\n      throw new Error('Zero slice spacing.' +\r\n        origin1.toString() + ' ' + origin2.toString());\r\n    }\r\n    // keep smallest\r\n    if (diff < sliceSpacing) {\r\n      sliceSpacing = diff;\r\n    }\r\n    if (withCheck) {\r\n      if (!isSimilar(sliceSpacing, diff, BIG_EPSILON)) {\r\n        deltas.push(Math.abs(sliceSpacing - diff));\r\n      }\r\n    }\r\n  }\r\n  // warn if non constant\r\n  if (withCheck && deltas.length !== 0) {\r\n    const sumReducer = function (sum, value) {\r\n      return sum + value;\r\n    };\r\n    const mean = deltas.reduce(sumReducer) / deltas.length;\r\n    if (mean > 1e-4) {\r\n      logger.warn('Varying slice spacing, mean delta: ' +\r\n        mean.toFixed(3) + ' (' + deltas.length + ' case(s))');\r\n    }\r\n  }\r\n\r\n  return sliceSpacing;\r\n}\r\n","import {\r\n  DicomParser,\r\n  getTransferSyntaxName\r\n} from './dicomParser';\r\nimport {\r\n  isPixelDataTag,\r\n  isItemDelimitationItemTag,\r\n  isSequenceDelimitationItemTag,\r\n  getItemTag,\r\n  getItemDelimitationItemTag,\r\n  getSequenceDelimitationItemTag,\r\n  getPixelDataTag,\r\n  getTagFromDictionary,\r\n  getTagFromKey\r\n} from './dicomTag';\r\nimport {isNativeLittleEndian} from './dataReader';\r\nimport {Spacing} from '../image/spacing';\r\nimport {logger} from '../utils/logger';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Tag} from './dicomTag';\r\nimport {DataElement} from './dataElement';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * DicomElements wrapper.\r\n *\r\n * Warning: limited support for merged meta data.\r\n */\r\nexport class DicomElementsWrapper {\r\n\r\n  /**\r\n   * Wrapped elements.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #dicomElements;\r\n\r\n  /**\r\n   * @param {Array} dicomElements The elements to wrap.\r\n   */\r\n  constructor(dicomElements) {\r\n    this.#dicomElements = dicomElements;\r\n  }\r\n\r\n  /**\r\n   * Get a DICOM Element value from a group/element key.\r\n   *\r\n   * @param {string} groupElementKey The key to retrieve.\r\n   * @param {boolean} [asArray] Get the value as an Array.\r\n   * @returns {object} The DICOM element value.\r\n   */\r\n  getFromKey(groupElementKey, asArray) {\r\n    // default\r\n    if (typeof asArray === 'undefined') {\r\n      asArray = false;\r\n    }\r\n    let value = null;\r\n    const dElement = this.#dicomElements[groupElementKey];\r\n    if (typeof dElement !== 'undefined') {\r\n      // raw value if only one\r\n      if (dElement.value.length === 1 && asArray === false) {\r\n        value = dElement.value[0];\r\n      } else {\r\n        value = dElement.value;\r\n      }\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Dump the DICOM tags to an object.\r\n   *\r\n   * @returns {object} The DICOM tags as an object.\r\n   */\r\n  dumpToObject() {\r\n    const keys = Object.keys(this.#dicomElements);\r\n    const obj = {};\r\n    let dicomElement = null;\r\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\r\n      dicomElement = this.#dicomElements[keys[i]];\r\n      const tag = getTagFromKey(keys[i]);\r\n      obj[this.#getTagName(tag)] =\r\n        this.#getElementAsObject(tag, dicomElement);\r\n    }\r\n    return obj;\r\n  }\r\n\r\n  /**\r\n   * Get a tag string name from the dictionary.\r\n   *\r\n   * @param {object} tag The DICOM tag object.\r\n   * @returns {string} The tag name.\r\n   */\r\n  #getTagName(tag) {\r\n    let name = tag.getNameFromDictionary();\r\n    if (name === null) {\r\n      name = tag.getKey();\r\n    }\r\n    return name;\r\n  }\r\n\r\n  /**\r\n   * Get a DICOM element as a simple object.\r\n   *\r\n   * @param {Tag} tag The DICOM tag.\r\n   * @param {object} dicomElement The DICOM element.\r\n   * @returns {object} The element as a simple object.\r\n   */\r\n  #getElementAsObject(tag, dicomElement) {\r\n    // element value\r\n    let value = null;\r\n\r\n    const isPixel = isPixelDataTag(tag);\r\n\r\n    const vr = dicomElement.vr;\r\n    if (vr === 'SQ' &&\r\n      typeof dicomElement.value !== 'undefined' &&\r\n      !isPixel) {\r\n      value = [];\r\n      const items = dicomElement.value;\r\n      let itemValues = null;\r\n      for (let i = 0; i < items.length; ++i) {\r\n        itemValues = {};\r\n        const keys = Object.keys(items[i]);\r\n        for (let k = 0; k < keys.length; ++k) {\r\n          const itemElement = items[i][keys[k]];\r\n          const tag = getTagFromKey(keys[k]);\r\n          const key = this.#getTagName(tag);\r\n          // do not inclure Item elements\r\n          if (key !== 'Item') {\r\n            itemValues[key] = this.#getElementAsObject(tag, itemElement);\r\n          }\r\n        }\r\n        value.push(itemValues);\r\n      }\r\n    } else {\r\n      value = this.#getElementValueAsString(tag, dicomElement);\r\n    }\r\n\r\n    // return\r\n    return {\r\n      value: value,\r\n      vr: vr\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Dump the DICOM tags to a string.\r\n   *\r\n   * @returns {string} The dumped file.\r\n   */\r\n  dump() {\r\n    const keys = Object.keys(this.#dicomElements);\r\n    let result = '\\n';\r\n    result += '# Dicom-File-Format\\n';\r\n    result += '\\n';\r\n    result += '# Dicom-Meta-Information-Header\\n';\r\n    result += '# Used TransferSyntax: ';\r\n    if (isNativeLittleEndian()) {\r\n      result += 'Little Endian Explicit\\n';\r\n    } else {\r\n      result += 'NOT Little Endian Explicit\\n';\r\n    }\r\n    let dicomElement = null;\r\n    let tag = null;\r\n    let checkHeader = true;\r\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\r\n      dicomElement = this.#dicomElements[keys[i]];\r\n      tag = getTagFromKey(keys[i]);\r\n      if (checkHeader && tag.getGroup() !== '0002') {\r\n        result += '\\n';\r\n        result += '# Dicom-Data-Set\\n';\r\n        result += '# Used TransferSyntax: ';\r\n        const syntax = this.#dicomElements['00020010'].value[0];\r\n        result += getTransferSyntaxName(syntax);\r\n        result += '\\n';\r\n        checkHeader = false;\r\n      }\r\n      result += this.#getElementAsString(tag, dicomElement) + '\\n';\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get a data element value as a string.\r\n   *\r\n   * @param {Tag} tag The DICOM tag.\r\n   * @param {object} dicomElement The DICOM element.\r\n   * @param {boolean} [pretty] When set to true, returns a 'pretified' content.\r\n   * @returns {string} A string representation of the DICOM element.\r\n   */\r\n  #getElementValueAsString(tag, dicomElement, pretty) {\r\n    let str = '';\r\n    const strLenLimit = 65;\r\n\r\n    // dafault to pretty output\r\n    if (typeof pretty === 'undefined') {\r\n      pretty = true;\r\n    }\r\n    // check dicom element input\r\n    if (typeof dicomElement === 'undefined' || dicomElement === null) {\r\n      return str;\r\n    }\r\n\r\n    // Polyfill for Number.isInteger.\r\n    const isInteger = Number.isInteger || function (value) {\r\n      return typeof value === 'number' &&\r\n        isFinite(value) &&\r\n        Math.floor(value) === value;\r\n    };\r\n\r\n    // TODO Support sequences.\r\n\r\n    if (dicomElement.vr !== 'SQ' &&\r\n      dicomElement.value.length === 1 && dicomElement.value[0] === '') {\r\n      str += '(no value available)';\r\n    } else if (isPixelDataTag(tag) &&\r\n      dicomElement.undefinedLength) {\r\n      str = '(PixelSequence)';\r\n    } else if (dicomElement.vr === 'DA' && pretty) {\r\n      const daObj = getDate(dicomElement);\r\n      const da = new Date(daObj.year, daObj.monthIndex, daObj.day);\r\n      str = da.toLocaleDateString();\r\n    } else if (dicomElement.vr === 'TM' && pretty) {\r\n      const tmObj = getTime(dicomElement);\r\n      str = tmObj.hours + ':' + tmObj.minutes + ':' + tmObj.seconds;\r\n    } else {\r\n      let isOtherVR = false;\r\n      if (dicomElement.vr.length !== 0) {\r\n        isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\r\n      }\r\n      const isFloatNumberVR = (dicomElement.vr === 'FL' ||\r\n        dicomElement.vr === 'FD' ||\r\n        dicomElement.vr === 'DS');\r\n      let valueStr = '';\r\n      for (let k = 0, lenk = dicomElement.value.length; k < lenk; ++k) {\r\n        valueStr = '';\r\n        if (k !== 0) {\r\n          valueStr += '\\\\';\r\n        }\r\n        if (isFloatNumberVR) {\r\n          const num = Number(dicomElement.value[k]);\r\n          if (!isInteger(num) && pretty) {\r\n            valueStr += num.toPrecision(4);\r\n          } else {\r\n            valueStr += num.toString();\r\n          }\r\n        } else if (isOtherVR) {\r\n          let tmp = dicomElement.value[k].toString(16);\r\n          if (dicomElement.vr === 'OB') {\r\n            tmp = '00'.substring(0, 2 - tmp.length) + tmp;\r\n          } else {\r\n            tmp = '0000'.substring(0, 4 - tmp.length) + tmp;\r\n          }\r\n          valueStr += tmp;\r\n        } else {\r\n          valueStr += dicomElement.value[k];\r\n        }\r\n        // check length\r\n        if (str.length + valueStr.length <= strLenLimit) {\r\n          str += valueStr;\r\n        } else {\r\n          str += '...';\r\n          break;\r\n        }\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  /**\r\n   * Get a data element as a string.\r\n   *\r\n   * @param {Tag} tag The DICOM tag.\r\n   * @param {object} dicomElement The DICOM element.\r\n   * @param {string} [prefix] A string to prepend this one.\r\n   * @returns {string} The element as a string.\r\n   */\r\n  #getElementAsString(tag, dicomElement, prefix) {\r\n    // default prefix\r\n    prefix = prefix || '';\r\n\r\n    // get tag anme from dictionary\r\n    const tagName = tag.getNameFromDictionary();\r\n\r\n    let deSize = dicomElement.value.length;\r\n    let isOtherVR = false;\r\n    if (dicomElement.vr.length !== 0) {\r\n      isOtherVR = (dicomElement.vr[0].toUpperCase() === 'O');\r\n    }\r\n\r\n    // no size for delimitations\r\n    if (isItemDelimitationItemTag(tag) ||\r\n      isSequenceDelimitationItemTag(tag)) {\r\n      deSize = 0;\r\n    } else if (isOtherVR) {\r\n      deSize = 1;\r\n    }\r\n\r\n    const isPixSequence = (isPixelDataTag(tag) &&\r\n      dicomElement.undefinedLength);\r\n\r\n    let line = null;\r\n\r\n    // (group,element)\r\n    line = '(';\r\n    line += tag.getGroup().toLowerCase();\r\n    line += ',';\r\n    line += tag.getElement().toLowerCase();\r\n    line += ') ';\r\n    // value representation\r\n    line += dicomElement.vr;\r\n    // value\r\n    if (dicomElement.vr !== 'SQ' &&\r\n      dicomElement.value.length === 1 &&\r\n      dicomElement.value[0] === '') {\r\n      line += ' (no value available)';\r\n      deSize = 0;\r\n    } else {\r\n      // simple number display\r\n      if (dicomElement.vr === 'na') {\r\n        line += ' ';\r\n        line += dicomElement.value[0];\r\n      } else if (isPixSequence) {\r\n        // pixel sequence\r\n        line += ' (PixelSequence #=' + deSize + ')';\r\n      } else if (dicomElement.vr === 'SQ') {\r\n        line += ' (Sequence with';\r\n        if (dicomElement.undefinedLength) {\r\n          line += ' undefined';\r\n        } else {\r\n          line += ' explicit';\r\n        }\r\n        line += ' length #=';\r\n        line += dicomElement.value.length;\r\n        line += ')';\r\n      } else if (isOtherVR ||\r\n          dicomElement.vr === 'pi' ||\r\n          dicomElement.vr === 'UL' ||\r\n          dicomElement.vr === 'US' ||\r\n          dicomElement.vr === 'SL' ||\r\n          dicomElement.vr === 'SS' ||\r\n          dicomElement.vr === 'FL' ||\r\n          dicomElement.vr === 'FD' ||\r\n          dicomElement.vr === 'AT') {\r\n        // 'O'ther array, limited display length\r\n        line += ' ';\r\n        line += this.#getElementValueAsString(tag, dicomElement, false);\r\n      } else {\r\n        // default\r\n        line += ' [';\r\n        line += this.#getElementValueAsString(tag, dicomElement, false);\r\n        line += ']';\r\n      }\r\n    }\r\n\r\n    // align #\r\n    const nSpaces = 55 - line.length;\r\n    if (nSpaces > 0) {\r\n      for (let s = 0; s < nSpaces; ++s) {\r\n        line += ' ';\r\n      }\r\n    }\r\n    line += ' # ';\r\n    if (dicomElement.vl < 100) {\r\n      line += ' ';\r\n    }\r\n    if (dicomElement.vl < 10) {\r\n      line += ' ';\r\n    }\r\n    line += dicomElement.vl;\r\n    line += ', ';\r\n    line += deSize; //dictElement[1];\r\n    line += ' ';\r\n    if (tagName !== null) {\r\n      line += tagName;\r\n    } else {\r\n      line += 'Unknown Tag & Data';\r\n    }\r\n\r\n    let message = null;\r\n\r\n    // continue for sequence\r\n    if (dicomElement.vr === 'SQ') {\r\n      let item = null;\r\n      for (let l = 0, lenl = dicomElement.value.length; l < lenl; ++l) {\r\n        item = dicomElement.value[l];\r\n        const itemKeys = Object.keys(item);\r\n        if (itemKeys.length === 0) {\r\n          continue;\r\n        }\r\n\r\n        // get the item element\r\n        const itemTag = getItemTag();\r\n        const itemElement = item['FFFEE000'];\r\n        message = '(Item with';\r\n        if (itemElement.undefinedLength) {\r\n          message += ' undefined';\r\n        } else {\r\n          message += ' explicit';\r\n        }\r\n        message += ' length #=' + (itemKeys.length - 1) + ')';\r\n        itemElement.value = [message];\r\n        itemElement.vr = 'na';\r\n\r\n        line += '\\n';\r\n        line += this.#getElementAsString(itemTag, itemElement, prefix + '  ');\r\n\r\n        for (let m = 0, lenm = itemKeys.length; m < lenm; ++m) {\r\n          const itemTag = getTagFromKey(itemKeys[m]);\r\n          if (itemKeys[m] !== 'xFFFEE000') {\r\n            line += '\\n';\r\n            line += this.#getElementAsString(itemTag, item[itemKeys[m]],\r\n              prefix + '    ');\r\n          }\r\n        }\r\n\r\n        message = '(ItemDelimitationItem';\r\n        if (!itemElement.undefinedLength) {\r\n          message += ' for re-encoding';\r\n        }\r\n        message += ')';\r\n        const itemDelimTag = getItemDelimitationItemTag();\r\n        const itemDelimElement = {\r\n          vr: 'na',\r\n          vl: '0',\r\n          value: [message]\r\n        };\r\n        line += '\\n';\r\n        line += this.#getElementAsString(\r\n          itemDelimTag, itemDelimElement, prefix + '  ');\r\n\r\n      }\r\n\r\n      message = '(SequenceDelimitationItem';\r\n      if (!dicomElement.undefinedLength) {\r\n        message += ' for re-encod.';\r\n      }\r\n      message += ')';\r\n      const sqDelimTag = getSequenceDelimitationItemTag();\r\n      const sqDelimElement = {\r\n        vr: 'na',\r\n        vl: '0',\r\n        value: [message]\r\n      };\r\n      line += '\\n';\r\n      line += this.#getElementAsString(sqDelimTag, sqDelimElement, prefix);\r\n    } else if (isPixSequence) {\r\n      // pixel sequence\r\n      let pixItem = null;\r\n      for (let n = 0, lenn = dicomElement.value.length; n < lenn; ++n) {\r\n        pixItem = dicomElement.value[n];\r\n        line += '\\n';\r\n        pixItem.vr = 'pi';\r\n        line += this.#getElementAsString(\r\n          getPixelDataTag(), pixItem, prefix + '  ');\r\n      }\r\n\r\n      const pixDelimTag = getSequenceDelimitationItemTag();\r\n      const pixDelimElement = {\r\n        vr: 'na',\r\n        vl: '0',\r\n        value: ['(SequenceDelimitationItem)']\r\n      };\r\n      line += '\\n';\r\n      line += this.#getElementAsString(pixDelimTag, pixDelimElement, prefix);\r\n    }\r\n\r\n    return prefix + line;\r\n  }\r\n\r\n  /**\r\n   * Get a DICOM Element value from a tag name.\r\n   * Uses the DICOM dictionary.\r\n   *\r\n   * @param {string} name The tag name.\r\n   * @returns {object} The DICOM element value.\r\n   */\r\n  getFromName(name) {\r\n    let value = null;\r\n    const tag = getTagFromDictionary(name);\r\n    // check that we are not at the end of the dictionary\r\n    if (tag !== null) {\r\n      value = this.getFromKey(tag.getKey());\r\n    }\r\n    return value;\r\n  }\r\n\r\n} // class DicomElementsWrapper\r\n\r\n/**\r\n * Extract the 2D size from dicom elements.\r\n *\r\n * @param {object} elements The DICOM elements.\r\n * @returns {object} The size.\r\n */\r\nexport function getImage2DSize(elements) {\r\n  // rows\r\n  const rows = elements['00280010'];\r\n  if (typeof rows === 'undefined') {\r\n    throw new Error('Missing DICOM image number of rows');\r\n  }\r\n  if (rows.value.length === 0) {\r\n    throw new Error('Empty DICOM image number of rows');\r\n  }\r\n  // columns\r\n  const columns = elements['00280011'];\r\n  if (typeof columns === 'undefined') {\r\n    throw new Error('Missing DICOM image number of columns');\r\n  }\r\n  if (columns.value.length === 0) {\r\n    throw new Error('Empty DICOM image number of columns');\r\n  }\r\n  return [columns.value[0], rows.value[0]];\r\n}\r\n\r\n/**\r\n * Get the pixel spacing from the different spacing tags.\r\n *\r\n * @param {object} elements The DICOM elements.\r\n * @returns {object} The read spacing or the default [1,1].\r\n */\r\nexport function getPixelSpacing(elements) {\r\n  // default\r\n  let rowSpacing = 1;\r\n  let columnSpacing = 1;\r\n\r\n  // 1. PixelSpacing\r\n  // 2. ImagerPixelSpacing\r\n  // 3. NominalScannedPixelSpacing\r\n  // 4. PixelAspectRatio\r\n  const keys = ['00280030', '00181164', '00182010', '00280034'];\r\n  for (let k = 0; k < keys.length; ++k) {\r\n    const spacing = elements[keys[k]];\r\n    if (spacing && spacing.value.length === 2) {\r\n      rowSpacing = parseFloat(spacing.value[0]);\r\n      columnSpacing = parseFloat(spacing.value[1]);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // check\r\n  if (columnSpacing === 0) {\r\n    logger.warn('Zero column spacing.');\r\n    columnSpacing = 1;\r\n  }\r\n  if (rowSpacing === 0) {\r\n    logger.warn('Zero row spacing.');\r\n    rowSpacing = 1;\r\n  }\r\n\r\n  // return\r\n  // (slice spacing will be calculated using the image position patient)\r\n  return new Spacing([columnSpacing, rowSpacing, 1]);\r\n}\r\n\r\n/**\r\n * Get the pixel data unit.\r\n *\r\n * @param {object} elements The DICOM elements.\r\n * @returns {string|null} The unit value if available.\r\n */\r\nexport function getPixelUnit(elements) {\r\n  let unit;\r\n  // 1. RescaleType\r\n  // 2. Units (for PET)\r\n  const keys = ['00281054', '00541001'];\r\n  for (let i = 0; i < keys.length; ++i) {\r\n    const element = elements[keys[i]];\r\n    if (typeof element !== 'undefined') {\r\n      unit = element.value[0];\r\n    }\r\n  }\r\n  // default rescale type for CT\r\n  if (typeof unit !== 'undefined') {\r\n    const modality = elements['00080060'].value[0];\r\n    if (modality === 'CT') {\r\n      unit = 'HU';\r\n    }\r\n  }\r\n  return unit;\r\n}\r\n\r\n/**\r\n * Get a 'date' object with {year, monthIndex, day} ready for the\r\n *   Date constructor from a DICOM element with vr=DA.\r\n *\r\n * @param {object} element The DICOM element with date information.\r\n * @returns {{year, monthIndex, day}|undefined} The 'date' object.\r\n */\r\nexport function getDate(element) {\r\n  if (typeof element === 'undefined') {\r\n    return undefined;\r\n  }\r\n  if (element.value.length !== 1) {\r\n    return undefined;\r\n  }\r\n  const daValue = element.value[0];\r\n  // Two possible formats:\r\n  // - standard 'YYYYMMDD'\r\n  // - non-standard 'YYYY.MM.DD' (previous ACR-NEMA)\r\n  let monthBeginIndex = 4;\r\n  let dayBeginIndex = 6;\r\n  if (daValue.length === 10) {\r\n    monthBeginIndex = 5;\r\n    dayBeginIndex = 8;\r\n  }\r\n  const daYears = parseInt(daValue.substring(0, 4), 10);\r\n  // 0-11 range\r\n  const daMonthIndex = daValue.length >= monthBeginIndex + 2\r\n    ? parseInt(daValue.substring(\r\n      monthBeginIndex, monthBeginIndex + 2), 10) - 1 : 0;\r\n  const daDay = daValue.length === dayBeginIndex + 2\r\n    ? parseInt(daValue.substring(\r\n      dayBeginIndex, dayBeginIndex + 2), 10) : 0;\r\n  return {\r\n    year: daYears,\r\n    monthIndex: daMonthIndex,\r\n    day: daDay\r\n  };\r\n}\r\n\r\n/**\r\n * Get a time object with {hours, minutes, seconds} ready for the\r\n *   Date constructor from a DICOM element with vr=TM.\r\n *\r\n * @param {object} element The DICOM element with date information.\r\n * @returns {{hours, minutes, seconds, milliseconds}|undefined} The time object.\r\n */\r\nexport function getTime(element) {\r\n  if (typeof element === 'undefined') {\r\n    return undefined;\r\n  }\r\n  if (element.value.length !== 1) {\r\n    return undefined;\r\n  }\r\n  // format: HH[MMSS.FFFFFF]\r\n  const tmValue = element.value[0];\r\n  const tmHours = parseInt(tmValue.substring(0, 2), 10);\r\n  const tmMinutes = tmValue.length >= 4\r\n    ? parseInt(tmValue.substring(2, 4), 10) : 0;\r\n  const tmSeconds = tmValue.length >= 6\r\n    ? parseInt(tmValue.substring(4, 6), 10) : 0;\r\n  const tmFracSecondsStr = tmValue.length >= 8\r\n    ? tmValue.substring(7, 10) : 0;\r\n  const tmMilliSeconds = tmFracSecondsStr === 0 ? 0\r\n    : parseInt(tmFracSecondsStr, 10) *\r\n      Math.pow(10, 3 - tmFracSecondsStr.length);\r\n  return {\r\n    hours: tmHours,\r\n    minutes: tmMinutes,\r\n    seconds: tmSeconds,\r\n    milliseconds: tmMilliSeconds\r\n  };\r\n}\r\n\r\n/**\r\n * Get a 'dateTime' object with {date, time} ready for the\r\n *   Date constructor from a DICOM element with vr=DT.\r\n *\r\n * @param {object} element The DICOM element with date-time information.\r\n * @returns {{date, time}|undefined} The time object.\r\n */\r\nexport function getDateTime(element) {\r\n  if (typeof element === 'undefined') {\r\n    return undefined;\r\n  }\r\n  if (element.value.length !== 1) {\r\n    return undefined;\r\n  }\r\n  // format: YYYYMMDDHHMMSS.FFFFFF&ZZXX\r\n  const dtFullValue = element.value[0];\r\n  // remove offset (&ZZXX)\r\n  const dtValue = dtFullValue.split('&')[0];\r\n  const dtDate = getDate({value: [dtValue.substring(0, 8)]});\r\n  const dtTime = dtValue.length >= 9\r\n    ? getTime({value: [dtValue.substring(8)]}) : undefined;\r\n  return {\r\n    date: dtDate,\r\n    time: dtTime\r\n  };\r\n}\r\n\r\n/**\r\n * Get the file list from a DICOMDIR\r\n *\r\n * @param {object} data The buffer data of the DICOMDIR\r\n * @returns {Array|undefined} The file list as an array ordered by\r\n *   STUDY > SERIES > IMAGES.\r\n */\r\nexport function getFileListFromDicomDir(data) {\r\n  // parse file\r\n  const parser = new DicomParser();\r\n  parser.parse(data);\r\n  const elements = parser.getDicomElements();\r\n\r\n  // Directory Record Sequence\r\n  if (typeof elements['00041220'] === 'undefined' ||\r\n    typeof elements['00041220'].value === 'undefined') {\r\n    logger.warn('No Directory Record Sequence found in DICOMDIR.');\r\n    return undefined;\r\n  }\r\n  const dirSeq = elements['00041220'].value;\r\n\r\n  if (dirSeq.length === 0) {\r\n    logger.warn('The Directory Record Sequence of the DICOMDIR is empty.');\r\n    return undefined;\r\n  }\r\n\r\n  const records = [];\r\n  let series = null;\r\n  let study = null;\r\n  for (let i = 0; i < dirSeq.length; ++i) {\r\n    // Directory Record Type\r\n    if (typeof dirSeq[i]['00041430'] === 'undefined' ||\r\n      typeof dirSeq[i]['00041430'].value === 'undefined') {\r\n      continue;\r\n    }\r\n    const recType = dirSeq[i]['00041430'].value[0];\r\n\r\n    // supposed to come in order...\r\n    if (recType === 'STUDY') {\r\n      study = [];\r\n      records.push(study);\r\n    } else if (recType === 'SERIES') {\r\n      series = [];\r\n      study.push(series);\r\n    } else if (recType === 'IMAGE') {\r\n      // Referenced File ID\r\n      if (typeof dirSeq[i]['00041500'] === 'undefined' ||\r\n        typeof dirSeq[i]['00041500'].value === 'undefined') {\r\n        continue;\r\n      }\r\n      const refFileIds = dirSeq[i]['00041500'].value;\r\n      // join ids\r\n      series.push(refFileIds.join('/'));\r\n    }\r\n  }\r\n  return records;\r\n}\r\n\r\n/**\r\n * Methods used to extract values from DICOM elements.\r\n *\r\n * Implemented as class and method to allow for override via its prototype.\r\n */\r\nexport class TagValueExtractor {\r\n  /**\r\n   * Get the time.\r\n   *\r\n   * @param {Object<string, DataElement>} _elements The DICOM elements.\r\n   * @returns {number|undefined} The time value if available.\r\n   */\r\n  getTime(_elements) {\r\n    // default returns undefined\r\n    return undefined;\r\n  }\r\n}\r\n","import {Size} from './size';\r\nimport {Geometry} from './geometry';\r\nimport {RescaleSlopeAndIntercept} from './rsi';\r\nimport {WindowCenterAndWidth} from './windowCenterAndWidth';\r\nimport {Image} from './image';\r\nimport {\r\n  isJpeg2000TransferSyntax,\r\n  isJpegBaselineTransferSyntax,\r\n  isJpegLosslessTransferSyntax\r\n} from '../dicom/dicomParser';\r\nimport {\r\n  getImage2DSize,\r\n  getPixelSpacing,\r\n  getPixelUnit,\r\n  TagValueExtractor\r\n} from '../dicom/dicomElementsWrapper';\r\nimport {Vector3D} from '../math/vector';\r\nimport {Matrix33} from '../math/matrix';\r\nimport {Point3D} from '../math/point';\r\nimport {logger} from '../utils/logger';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {DataElement} from '../dicom/dataElement';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * @typedef {Object<string, DataElement>} DataElements\r\n */\r\n\r\n/**\r\n * {@link Image} factory.\r\n */\r\nexport class ImageFactory {\r\n\r\n  /**\r\n   * Check dicom elements. Throws an error if not suitable.\r\n   *\r\n   * @param {DataElements} dataElements The DICOM data elements.\r\n   * @returns {object|undefined} A possible warning.\r\n   */\r\n  checkElements(dataElements) {\r\n    // will throw if columns or rows is not defined\r\n    getImage2DSize(dataElements);\r\n  }\r\n\r\n  /**\r\n   * Get an {@link Image} object from the read DICOM file.\r\n   *\r\n   * @param {DataElements} dataElements The DICOM tags.\r\n   * @param {Uint8Array | Int8Array |\r\n   *   Uint16Array | Int16Array |\r\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\r\n   * @param {number} numberOfFiles The input number of files.\r\n   * @returns {Image} A new Image.\r\n   */\r\n  create(dataElements, pixelBuffer, numberOfFiles) {\r\n    const size2D = getImage2DSize(dataElements);\r\n    const sizeValues = [size2D[0], size2D[1], 1];\r\n\r\n    // frames\r\n    const frames = dataElements['00280008'];\r\n    if (frames) {\r\n      sizeValues.push(frames.value[0]);\r\n    }\r\n\r\n    // image size\r\n    const size = new Size(sizeValues);\r\n\r\n    // image spacing\r\n    const spacing = getPixelSpacing(dataElements);\r\n\r\n    // TransferSyntaxUID\r\n    const syntax = dataElements['00020010'].value[0];\r\n    const jpeg2000 = isJpeg2000TransferSyntax(syntax);\r\n    const jpegBase = isJpegBaselineTransferSyntax(syntax);\r\n    const jpegLoss = isJpegLosslessTransferSyntax(syntax);\r\n\r\n    // ImagePositionPatient\r\n    const imagePositionPatient = dataElements['00200032'];\r\n    // slice position\r\n    let slicePosition = new Array(0, 0, 0);\r\n    if (typeof imagePositionPatient !== 'undefined') {\r\n      slicePosition = [\r\n        parseFloat(imagePositionPatient.value[0]),\r\n        parseFloat(imagePositionPatient.value[1]),\r\n        parseFloat(imagePositionPatient.value[2])\r\n      ];\r\n    }\r\n\r\n    // slice orientation (cosines are matrices' columns)\r\n    // http://dicom.nema.org/medical/dicom/current/output/chtml/part03/sect_C.7.6.2.html#sect_C.7.6.2.1.1\r\n    const imageOrientationPatient = dataElements['00200037'];\r\n    let orientationMatrix;\r\n    if (typeof imageOrientationPatient !== 'undefined') {\r\n      const rowCosines = new Vector3D(\r\n        parseFloat(imageOrientationPatient.value[0]),\r\n        parseFloat(imageOrientationPatient.value[1]),\r\n        parseFloat(imageOrientationPatient.value[2]));\r\n      const colCosines = new Vector3D(\r\n        parseFloat(imageOrientationPatient.value[3]),\r\n        parseFloat(imageOrientationPatient.value[4]),\r\n        parseFloat(imageOrientationPatient.value[5]));\r\n      const normal = rowCosines.crossProduct(colCosines);\r\n      /* eslint-disable array-element-newline */\r\n      orientationMatrix = new Matrix33([\r\n        rowCosines.getX(), colCosines.getX(), normal.getX(),\r\n        rowCosines.getY(), colCosines.getY(), normal.getY(),\r\n        rowCosines.getZ(), colCosines.getZ(), normal.getZ()\r\n      ]);\r\n      /* eslint-enable array-element-newline */\r\n    }\r\n\r\n    // geometry\r\n    const origin = new Point3D(\r\n      slicePosition[0], slicePosition[1], slicePosition[2]);\r\n    const extractor = new TagValueExtractor();\r\n    const time = extractor.getTime(dataElements);\r\n    const geometry = new Geometry(\r\n      origin, size, spacing, orientationMatrix, time);\r\n\r\n    // SOP Instance UID\r\n    let sopInstanceUid;\r\n    const siu = dataElements['00080018'];\r\n    if (typeof siu !== 'undefined') {\r\n      sopInstanceUid = siu.value[0];\r\n    }\r\n\r\n    // Sample per pixels\r\n    let samplesPerPixel = 1;\r\n    const spp = dataElements['00280002'];\r\n    if (typeof spp !== 'undefined') {\r\n      samplesPerPixel = spp.value[0];\r\n    }\r\n\r\n    // check buffer size\r\n    const bufferSize = size.getTotalSize() * samplesPerPixel;\r\n    if (bufferSize !== pixelBuffer.length) {\r\n      logger.warn('Badly sized pixel buffer: ' +\r\n        pixelBuffer.length + ' != ' + bufferSize);\r\n      if (bufferSize < pixelBuffer.length) {\r\n        pixelBuffer = pixelBuffer.slice(0, size.getTotalSize());\r\n      } else {\r\n        throw new Error('Underestimated buffer size, can\\'t fix it...');\r\n      }\r\n    }\r\n\r\n    // image\r\n    const image = new Image(geometry, pixelBuffer, [sopInstanceUid]);\r\n    // PhotometricInterpretation\r\n    const photometricInterpretation = dataElements['00280004'];\r\n    if (typeof photometricInterpretation !== 'undefined') {\r\n      let photo = photometricInterpretation.value[0].toUpperCase();\r\n      // jpeg decoders output RGB data\r\n      if ((jpeg2000 || jpegBase || jpegLoss) &&\r\n        (photo !== 'MONOCHROME1' && photo !== 'MONOCHROME2')) {\r\n        photo = 'RGB';\r\n      }\r\n      // check samples per pixels\r\n      if (photo === 'RGB' && samplesPerPixel === 1) {\r\n        photo = 'PALETTE COLOR';\r\n      }\r\n      image.setPhotometricInterpretation(photo);\r\n    }\r\n    // PlanarConfiguration\r\n    const planarConfiguration = dataElements['00280006'];\r\n    if (typeof planarConfiguration !== 'undefined') {\r\n      image.setPlanarConfiguration(planarConfiguration.value[0]);\r\n    }\r\n\r\n    // rescale slope and intercept\r\n    let slope = 1;\r\n    // RescaleSlope\r\n    const rescaleSlope = dataElements['00281053'];\r\n    if (typeof rescaleSlope !== 'undefined') {\r\n      const value = parseFloat(rescaleSlope.value[0]);\r\n      if (!isNaN(value)) {\r\n        slope = value;\r\n      }\r\n    }\r\n    let intercept = 0;\r\n    // RescaleIntercept\r\n    const rescaleIntercept = dataElements['00281052'];\r\n    if (typeof rescaleIntercept !== 'undefined') {\r\n      const value = parseFloat(rescaleIntercept.value[0]);\r\n      if (!isNaN(value)) {\r\n        intercept = value;\r\n      }\r\n    }\r\n    const rsi = new RescaleSlopeAndIntercept(slope, intercept);\r\n    image.setRescaleSlopeAndIntercept(rsi);\r\n\r\n    // meta information\r\n    const meta = {\r\n      numberOfFiles: numberOfFiles\r\n    };\r\n    const modality = dataElements['00080060'];\r\n    if (typeof modality !== 'undefined') {\r\n      meta.Modality = modality.value[0];\r\n    }\r\n    const sopClassUID = dataElements['00080016'];\r\n    if (typeof sopClassUID !== 'undefined') {\r\n      meta.SOPClassUID = sopClassUID.value[0];\r\n    }\r\n    const studyUID = dataElements['0020000D'];\r\n    if (typeof studyUID !== 'undefined') {\r\n      meta.StudyInstanceUID = studyUID.value[0];\r\n    }\r\n    const seriesUID = dataElements['0020000E'];\r\n    if (typeof seriesUID !== 'undefined') {\r\n      meta.SeriesInstanceUID = seriesUID.value[0];\r\n    }\r\n    const bits = dataElements['00280101'];\r\n    if (typeof bits !== 'undefined') {\r\n      meta.BitsStored = bits.value[0];\r\n    }\r\n    const pixelRep = dataElements['00280103'];\r\n    if (typeof pixelRep !== 'undefined') {\r\n      meta.PixelRepresentation = pixelRep.value[0];\r\n    }\r\n    // PixelRepresentation -> is signed\r\n    meta.IsSigned = meta.PixelRepresentation === 1;\r\n    // local pixel unit\r\n    const pixelUnit = getPixelUnit(dataElements);\r\n    if (typeof pixelUnit !== 'undefined') {\r\n      meta.pixelUnit = pixelUnit;\r\n    }\r\n    // FrameOfReferenceUID (optional)\r\n    const frameOfReferenceUID = dataElements['00200052'];\r\n    if (typeof frameOfReferenceUID !== 'undefined') {\r\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\r\n    }\r\n    // window level presets\r\n    const windowPresets = {};\r\n    const windowCenter = dataElements['00281050'];\r\n    const windowWidth = dataElements['00281051'];\r\n    const windowCWExplanation = dataElements['00281055'];\r\n    if (typeof windowCenter !== 'undefined' &&\r\n      typeof windowWidth !== 'undefined') {\r\n      let name;\r\n      for (let j = 0; j < windowCenter.value.length; ++j) {\r\n        const center = parseFloat(windowCenter.value[j]);\r\n        const width = parseFloat(windowWidth.value[j]);\r\n        if (center && width && width !== 0) {\r\n          name = '';\r\n          if (typeof windowCWExplanation !== 'undefined') {\r\n            name = windowCWExplanation.value[j];\r\n          }\r\n          if (name === '') {\r\n            name = 'Default' + j;\r\n          }\r\n          windowPresets[name] = {\r\n            wl: [new WindowCenterAndWidth(center, width)],\r\n            name: name\r\n          };\r\n        }\r\n        if (width === 0) {\r\n          logger.warn('Zero window width found in DICOM.');\r\n        }\r\n      }\r\n    }\r\n    meta.windowPresets = windowPresets;\r\n\r\n    // PALETTE COLOR luts\r\n    if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\r\n      const redLutElement = dataElements['00281201'];\r\n      const greenLutElement = dataElements['00281202'];\r\n      const blueLutElement = dataElements['00281203'];\r\n      let redLut;\r\n      let greenLut;\r\n      let blueLut;\r\n      // check red palette descriptor (should all be equal)\r\n      const descriptor = dataElements['00281101'];\r\n      if (typeof descriptor !== 'undefined' &&\r\n        descriptor.value.length === 3) {\r\n        if (descriptor.value[2] === 16) {\r\n          let doScale = false;\r\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\r\n          // Some implementations have encoded 8 bit entries with 16 bits\r\n          // allocated, padding the high bits;\r\n          let descSize = descriptor.value[0];\r\n          // (C.7.6.3.1.5 Palette Color Lookup Table Descriptor)\r\n          // The first Palette Color Lookup Table Descriptor value is the\r\n          // number of entries in the lookup table. When the number of table\r\n          // entries is equal to 216 then this value shall be 0.\r\n          if (descSize === 0) {\r\n            descSize = 65536;\r\n          }\r\n          // red palette VL\r\n          const vlSize = redLutElement.vl;\r\n          // check double size\r\n          if (vlSize !== 2 * descSize) {\r\n            doScale = true;\r\n            logger.info('16bits lut but size is not double. desc: ' +\r\n              descSize + ' vl: ' + vlSize);\r\n          }\r\n          // (C.7.6.3.1.6 Palette Color Lookup Table Data)\r\n          // Palette color values must always be scaled across the full\r\n          // range of available intensities\r\n          const bitsAllocated = parseInt(\r\n            dataElements['00280100'].value[0], 10);\r\n          if (bitsAllocated === 8) {\r\n            doScale = true;\r\n            logger.info(\r\n              'Scaling 16bits color lut since bits allocated is 8.');\r\n          }\r\n\r\n          if (doScale) {\r\n            const scaleTo8 = function (value) {\r\n              return value >> 8;\r\n            };\r\n\r\n            redLut = redLutElement.value.map(scaleTo8);\r\n            greenLut = greenLutElement.value.map(scaleTo8);\r\n            blueLut = blueLutElement.value.map(scaleTo8);\r\n          }\r\n        } else if (descriptor.value[2] === 8) {\r\n          // lut with vr=OW was read as Uint16, convert it to Uint8\r\n          logger.info(\r\n            'Scaling 16bits color lut since the lut descriptor is 8.');\r\n          let clone = redLutElement.value.slice(0);\r\n          // @ts-expect-error\r\n          redLut = new Uint8Array(clone.buffer);\r\n          clone = greenLutElement.value.slice(0);\r\n          // @ts-expect-error\r\n          greenLut = new Uint8Array(clone.buffer);\r\n          clone = blueLutElement.value.slice(0);\r\n          // @ts-expect-error\r\n          blueLut = new Uint8Array(clone.buffer);\r\n        }\r\n      }\r\n      // set the palette\r\n      meta.paletteLut = {\r\n        red: redLut,\r\n        green: greenLut,\r\n        blue: blueLut\r\n      };\r\n    }\r\n\r\n    // RecommendedDisplayFrameRate\r\n    const recommendedDisplayFrameRate = dataElements['00082144'];\r\n    if (typeof recommendedDisplayFrameRate !== 'undefined') {\r\n      meta.RecommendedDisplayFrameRate = parseInt(\r\n        recommendedDisplayFrameRate.value[0], 10);\r\n    }\r\n\r\n    // store the meta data\r\n    image.setMeta(meta);\r\n\r\n    return image;\r\n  }\r\n\r\n}","import {getImage2DSize} from '../dicom/dicomElementsWrapper';\r\nimport {Spacing} from '../image/spacing';\r\nimport {Image} from '../image/image';\r\nimport {Geometry, getSliceGeometrySpacing} from '../image/geometry';\r\nimport {Point3D} from '../math/point';\r\nimport {Vector3D} from '../math/vector';\r\nimport {Index} from '../math/index';\r\nimport {Matrix33, REAL_WORLD_EPSILON} from '../math/matrix';\r\nimport {logger} from '../utils/logger';\r\nimport {arraySortEquals} from '../utils/array';\r\nimport {\r\n  isEqualRgb,\r\n  cielabToSrgb,\r\n  uintLabToLab\r\n} from '../utils/colour';\r\nimport {Size} from './size';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {DataElement} from '../dicom/dataElement';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * @typedef {Object<string, DataElement>} DataElements\r\n */\r\n\r\n/**\r\n * Check two position patients for equality.\r\n *\r\n * @param {*} pos1 The first position patient.\r\n * @param {*} pos2 The second position patient.\r\n * @returns {boolean} True is equal.\r\n */\r\nfunction equalPosPat(pos1, pos2) {\r\n  return JSON.stringify(pos1) === JSON.stringify(pos2);\r\n}\r\n\r\n/**\r\n * @callback compareFn\r\n * @param {object} a The first object.\r\n * @param {object} b The first object.\r\n * @returns {number} >0 to sort a after b, <0 to sort a before b,\r\n *   0 to not change order.\r\n */\r\n\r\n/**\r\n * Get a position patient compare function accroding to an\r\n * input orientation.\r\n *\r\n * @param {Matrix33} orientation The orientation matrix.\r\n * @returns {compareFn} The position compare function.\r\n */\r\nfunction getComparePosPat(orientation) {\r\n  const invOrientation = orientation.getInverse();\r\n  return function (pos1, pos2) {\r\n    const p1 = invOrientation.multiplyArray3D(pos1);\r\n    const p2 = invOrientation.multiplyArray3D(pos2);\r\n    return p1[2] - p2[2];\r\n  };\r\n}\r\n\r\n/**\r\n * Check that a DICOM tag definition is present in a parsed element.\r\n *\r\n * @param {DataElements} dataElements The root dicom element.\r\n * @param {object} tagDefinition The tag definition as {name, tag, type, enum}.\r\n */\r\nfunction checkTag(dataElements, tagDefinition) {\r\n  const element = dataElements[tagDefinition.tag];\r\n  // check null and undefined\r\n  if (tagDefinition.type === 1 || tagDefinition.type === 2) {\r\n    if (typeof element === 'undefined') {\r\n      throw new Error('Missing or empty ' + tagDefinition.name);\r\n    }\r\n  } else {\r\n    if (typeof element === 'undefined') {\r\n      // non mandatory value, exit\r\n      return;\r\n    }\r\n  }\r\n  let includes = false;\r\n  let tagValue;\r\n  if (element.value.length === 1) {\r\n    tagValue = element.value[0];\r\n  } else {\r\n    tagValue = element.value;\r\n  }\r\n  if (Array.isArray(tagValue)) {\r\n    for (let i = 0; i < tagDefinition.enum.length; ++i) {\r\n      if (!Array.isArray(tagDefinition.enum[i])) {\r\n        throw new Error('Cannot compare array and non array tag value.');\r\n      }\r\n      if (arraySortEquals(tagDefinition.enum[i], tagValue)) {\r\n        includes = true;\r\n        break;\r\n      }\r\n    }\r\n  } else {\r\n    includes = tagDefinition.enum.includes(tagValue);\r\n  }\r\n  if (!includes) {\r\n    throw new Error(\r\n      'Unsupported ' + tagDefinition.name + ' value: ' + tagValue);\r\n  }\r\n}\r\n\r\n/**\r\n * List of DICOM Seg required tags.\r\n */\r\nconst RequiredDicomSegTags = [\r\n  {\r\n    name: 'TransferSyntaxUID',\r\n    tag: 'x00020010',\r\n    type: '1',\r\n    enum: ['1.2.840.10008.1.2.1']\r\n  },\r\n  {\r\n    name: 'MediaStorageSOPClassUID',\r\n    tag: 'x00020002',\r\n    type: '1',\r\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\r\n  },\r\n  {\r\n    name: 'SOPClassUID',\r\n    tag: 'x00020002',\r\n    type: '1',\r\n    enum: ['1.2.840.10008.5.1.4.1.1.66.4']\r\n  },\r\n  {\r\n    name: 'Modality',\r\n    tag: 'x00080060',\r\n    type: '1',\r\n    enum: ['SEG']\r\n  },\r\n  {\r\n    name: 'SegmentationType',\r\n    tag: 'x00620001',\r\n    type: '1',\r\n    enum: ['BINARY']\r\n  },\r\n  {\r\n    name: 'DimensionOrganizationType',\r\n    tag: 'x00209311',\r\n    type: '3',\r\n    enum: ['3D']\r\n  },\r\n  {\r\n    name: 'ImageType',\r\n    tag: 'x00080008',\r\n    type: '1',\r\n    enum: [['DERIVED', 'PRIMARY']]\r\n  },\r\n  {\r\n    name: 'SamplesPerPixel',\r\n    tag: 'x00280002',\r\n    type: '1',\r\n    enum: [1]\r\n  },\r\n  {\r\n    name: 'PhotometricInterpretation',\r\n    tag: 'x00280004',\r\n    type: '1',\r\n    enum: ['MONOCHROME2']\r\n  },\r\n  {\r\n    name: 'PixelRepresentation',\r\n    tag: 'x00280103',\r\n    type: '1',\r\n    enum: [0]\r\n  },\r\n  {\r\n    name: 'BitsAllocated',\r\n    tag: 'x00280100',\r\n    type: '1',\r\n    enum: [1]\r\n  },\r\n  {\r\n    name: 'BitsStored',\r\n    tag: 'x00280101',\r\n    type: '1',\r\n    enum: [1]\r\n  },\r\n  {\r\n    name: 'HighBit',\r\n    tag: 'x00280102',\r\n    type: '1',\r\n    enum: [0]\r\n  },\r\n];\r\n\r\n/**\r\n * Get the default DICOM seg tags as an object.\r\n *\r\n * @returns {object} The default tags.\r\n */\r\nfunction getDefaultDicomSegJson() {\r\n  const tags = {};\r\n  for (let i = 0; i < RequiredDicomSegTags.length; ++i) {\r\n    const reqTag = RequiredDicomSegTags[i];\r\n    tags[reqTag.name] = reqTag.enum[0];\r\n  }\r\n  return tags;\r\n}\r\n\r\n/**\r\n * Check the dimension organization from a dicom element.\r\n *\r\n * @param {DataElements} dataElements The root dicom element.\r\n * @returns {object} The dimension organizations and indices.\r\n */\r\nfunction getDimensionOrganization(dataElements) {\r\n  // Dimension Organization Sequence (required)\r\n  const orgSq = dataElements['00209221'];\r\n  if (typeof orgSq === 'undefined' || orgSq.value.length !== 1) {\r\n    throw new Error('Unsupported dimension organization sequence length');\r\n  }\r\n  // Dimension Organization UID\r\n  const orgUID = orgSq.value[0]['00209164'].value[0];\r\n\r\n  // Dimension Index Sequence (conditionally required)\r\n  const indices = [];\r\n  const indexSqElem = dataElements['00209222'];\r\n  if (typeof indexSqElem !== 'undefined') {\r\n    const indexSq = indexSqElem.value;\r\n    // expecting 2D index\r\n    if (indexSq.length !== 2) {\r\n      throw new Error('Unsupported dimension index sequence length');\r\n    }\r\n    let indexPointer;\r\n    for (let i = 0; i < indexSq.length; ++i) {\r\n      // Dimension Organization UID (required)\r\n      const indexOrg = indexSq[i]['00209164'].value[0];\r\n      if (indexOrg !== orgUID) {\r\n        throw new Error(\r\n          'Dimension Index Sequence contains a unknown Dimension Organization');\r\n      }\r\n      // Dimension Index Pointer (required)\r\n      indexPointer = indexSq[i]['00209165'].value[0];\r\n\r\n      const index = {\r\n        DimensionOrganizationUID: indexOrg,\r\n        DimensionIndexPointer: indexPointer\r\n      };\r\n      // Dimension Description Label (optional)\r\n      if (typeof indexSq[i]['00209421'] !== 'undefined') {\r\n        index.DimensionDescriptionLabel = indexSq[i]['00209421'].value[0];\r\n      }\r\n      // store\r\n      indices.push(index);\r\n    }\r\n    // expecting Image Position at last position\r\n    if (indexPointer !== '(0020,0032)') {\r\n      throw new Error('Unsupported non image position as last index');\r\n    }\r\n  }\r\n\r\n  return {\r\n    organizations: {\r\n      value: [\r\n        {\r\n          DimensionOrganizationUID: orgUID\r\n        }\r\n      ]\r\n    },\r\n    indices: {\r\n      value: indices\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Get a code object from a dicom element.\r\n *\r\n * @param {DataElements} dataElements The dicom element.\r\n * @returns {object} A code object.\r\n */\r\nfunction getCode(dataElements) {\r\n  // meaning -> CodeMeaning (type1)\r\n  const code = {\r\n    meaning: dataElements['00080104'].value[0]\r\n  };\r\n  // value -> CodeValue (type1C)\r\n  // longValue -> LongCodeValue (type1C)\r\n  // urnValue -> URNCodeValue (type1C)\r\n  if (dataElements['00080100']) {\r\n    code.value = dataElements['00080100'].value[0];\r\n  } else if (dataElements['00080119']) {\r\n    code.longValue = dataElements['00080119'].value[0];\r\n  } else if (dataElements['00080120']) {\r\n    code.urnValue = dataElements['00080120'].value[0];\r\n  } else {\r\n    throw Error('Invalid code with no value, no long value and no urn value.');\r\n  }\r\n  // schemeDesignator -> CodingSchemeDesignator (type1C)\r\n  if (typeof code.value !== 'undefined' ||\r\n    typeof code.longValue !== 'undefined') {\r\n    if (dataElements['00080102']) {\r\n      code.schemeDesignator = dataElements['00080102'].value[0];\r\n    } else {\r\n      throw Error(\r\n        'No coding sheme designator when code value or long value is present');\r\n    }\r\n  }\r\n  return code;\r\n}\r\n\r\n/**\r\n * Get a segment object from a dicom element.\r\n *\r\n * @param {DataElements} dataElements The dicom element.\r\n * @returns {object} A segment object.\r\n */\r\nfunction getSegment(dataElements) {\r\n  // number -> SegmentNumber (type1)\r\n  // label -> SegmentLabel (type1)\r\n  // algorithmType -> SegmentAlgorithmType (type1)\r\n  const segment = {\r\n    number: dataElements['00620004'].value[0],\r\n    label: dataElements['00620005'].value[0],\r\n    algorithmType: dataElements['00620008'].value[0]\r\n  };\r\n  // algorithmName -> SegmentAlgorithmName (type1C)\r\n  if (dataElements['00620009']) {\r\n    segment.algorithmName = dataElements['00620009'].value[0];\r\n  }\r\n  // // required if type is not MANUAL\r\n  // if (segment.algorithmType !== 'MANUAL' &&\r\n  //   (typeof segment.algorithmName === 'undefined' ||\r\n  //   segment.algorithmName.length === 0)) {\r\n  //   throw new Error('Empty algorithm name for non MANUAL algorithm type.');\r\n  // }\r\n  // displayValue ->\r\n  // - RecommendedDisplayGrayscaleValue\r\n  // - RecommendedDisplayCIELabValue converted to RGB\r\n  if (typeof dataElements['0062000C'] !== 'undefined') {\r\n    segment.displayValue = dataElements['006200C'].value;\r\n  } else if (typeof dataElements['0062000D'] !== 'undefined') {\r\n    const cielabElement = dataElements['0062000D'].value;\r\n    const rgb = cielabToSrgb(uintLabToLab({\r\n      l: cielabElement[0],\r\n      a: cielabElement[1],\r\n      b: cielabElement[2]\r\n    }));\r\n    segment.displayValue = rgb;\r\n  }\r\n  // Segmented Property Category Code Sequence (type1, only one)\r\n  if (typeof dataElements['00620003'] !== 'undefined') {\r\n    segment.propertyCategoryCode =\r\n      getCode(dataElements['00620003'].value[0]);\r\n  } else {\r\n    throw Error('Missing Segmented Property Category Code Sequence.');\r\n  }\r\n  // Segmented Property Type Code Sequence (type1)\r\n  if (typeof dataElements['0062000F'] !== 'undefined') {\r\n    segment.propertyTypeCode =\r\n      getCode(dataElements['0062000F'].value[0]);\r\n  } else {\r\n    throw Error('Missing Segmented Property Type Code Sequence.');\r\n  }\r\n  // tracking Id and UID (type1C)\r\n  if (typeof dataElements['00620020'] !== 'undefined') {\r\n    segment.trackingId = dataElements['00620020'].value[0];\r\n    segment.trackingUid = dataElements['00620021'].value[0];\r\n  }\r\n\r\n  return segment;\r\n}\r\n\r\n/**\r\n * Check if two segment objects are equal.\r\n *\r\n * @param {object} seg1 The first segment.\r\n * @param {object} seg2 The second segment.\r\n * @returns {boolean} True if both segment are equal.\r\n */\r\nexport function isEqualSegment(seg1, seg2) {\r\n  // basics\r\n  if (typeof seg1 === 'undefined' ||\r\n    typeof seg2 === 'undefined' ||\r\n    seg1 === null ||\r\n    seg2 === null) {\r\n    return false;\r\n  }\r\n  let isEqual = seg1.number === seg2.number &&\r\n    seg1.label === seg2.label &&\r\n    seg1.algorithmType === seg2.algorithmType;\r\n  // rgb\r\n  if (typeof seg1.displayValue.r !== 'undefined') {\r\n    if (typeof seg2.displayValue.r === 'undefined') {\r\n      isEqual = false;\r\n    } else {\r\n      isEqual = isEqual &&\r\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\r\n    }\r\n  } else {\r\n    isEqual = isEqual &&\r\n      seg1.displayValue === seg2.displayValue;\r\n  }\r\n  // algorithmName\r\n  if (typeof seg1.algorithmName !== 'undefined') {\r\n    if (typeof seg2.algorithmName === 'undefined') {\r\n      isEqual = false;\r\n    } else {\r\n      isEqual = isEqual &&\r\n        seg1.algorithmName === seg2.algorithmName;\r\n    }\r\n  }\r\n\r\n  return isEqual;\r\n}\r\n\r\n/**\r\n * Check if two segment objects are similar: either the\r\n * number or the displayValue are equal.\r\n *\r\n * @param {object} seg1 The first segment.\r\n * @param {object} seg2 The second segment.\r\n * @returns {boolean} True if both segment are similar.\r\n */\r\nexport function isSimilarSegment(seg1, seg2) {\r\n  // basics\r\n  if (typeof seg1 === 'undefined' ||\r\n    typeof seg2 === 'undefined' ||\r\n    seg1 === null ||\r\n    seg2 === null) {\r\n    return false;\r\n  }\r\n  let isSimilar = seg1.number === seg2.number;\r\n  // rgb\r\n  if (typeof seg1.displayValue.r !== 'undefined') {\r\n    if (typeof seg2.displayValue.r === 'undefined') {\r\n      isSimilar = false;\r\n    } else {\r\n      isSimilar = isSimilar ||\r\n        isEqualRgb(seg1.displayValue, seg2.displayValue);\r\n    }\r\n  } else {\r\n    isSimilar = isSimilar ||\r\n      seg1.displayValue === seg2.displayValue;\r\n  }\r\n\r\n  return isSimilar;\r\n}\r\n\r\n/**\r\n * Get a spacing object from a dicom measure element.\r\n *\r\n * @param {DataElements} dataElements The dicom element.\r\n * @returns {Spacing} A spacing object.\r\n */\r\nfunction getSpacingFromMeasure(dataElements) {\r\n  // Pixel Spacing\r\n  if (typeof dataElements['00280030'] === 'undefined') {\r\n    return null;\r\n  }\r\n  const pixelSpacing = dataElements['00280030'];\r\n  const spacingValues = [\r\n    parseFloat(pixelSpacing.value[0]),\r\n    parseFloat(pixelSpacing.value[1])\r\n  ];\r\n  // Slice Thickness\r\n  if (typeof dataElements['00180050'] !== 'undefined') {\r\n    spacingValues.push(parseFloat(dataElements['00180050'].value[0]));\r\n  } else if (typeof dataElements['00180088'] !== 'undefined') {\r\n    // Spacing Between Slices\r\n    spacingValues.push(parseFloat(dataElements['00180088'].value[0]));\r\n  }\r\n  return new Spacing(spacingValues);\r\n}\r\n\r\n/**\r\n * Get a frame information object from a dicom element.\r\n *\r\n * @param {DataElements} dataElements The dicom element.\r\n * @returns {object} A frame information object.\r\n */\r\nfunction getSegmentFrameInfo(dataElements) {\r\n  // Derivation Image Sequence\r\n  const derivationImages = [];\r\n  if (typeof dataElements['00089124'] !== 'undefined') {\r\n    const derivationImageSq = dataElements['00089124'].value;\r\n    // Source Image Sequence\r\n    for (let i = 0; i < derivationImageSq.length; ++i) {\r\n      const sourceImages = [];\r\n      if (typeof derivationImageSq[i]['00082112'] !== 'undefined') {\r\n        const sourceImageSq = derivationImageSq[i]['00082112'].value;\r\n        for (let j = 0; j < sourceImageSq.length; ++j) {\r\n          const sourceImage = {};\r\n          // Referenced SOP Class UID\r\n          if (typeof sourceImageSq[j]['00081150'] !== 'undefined') {\r\n            sourceImage.referencedSOPClassUID =\r\n              sourceImageSq[j]['00081150'].value[0];\r\n          }\r\n          // Referenced SOP Instance UID\r\n          if (typeof sourceImageSq[j]['00081155'] !== 'undefined') {\r\n            sourceImage.referencedSOPInstanceUID =\r\n              sourceImageSq[j]['00081155'].value[0];\r\n          }\r\n          sourceImages.push(sourceImage);\r\n        }\r\n      }\r\n      derivationImages.push(sourceImages);\r\n    }\r\n  }\r\n  // Frame Content Sequence (required, only one)\r\n  const frameContentSq = dataElements['00209111'].value;\r\n  // Dimension Index Value\r\n  const dimIndex = frameContentSq[0]['00209157'].value;\r\n  // Segment Identification Sequence (required, only one)\r\n  const segmentIdSq = dataElements['0062000A'].value;\r\n  // Referenced Segment Number\r\n  const refSegmentNumber = segmentIdSq[0]['0062000B'].value[0];\r\n  // Plane Position Sequence (required, only one)\r\n  const planePosSq = dataElements['00209113'].value;\r\n  // Image Position (Patient) (conditionally required)\r\n  const imagePosPat = planePosSq[0]['00200032'].value;\r\n  for (let p = 0; p < imagePosPat.length; ++p) {\r\n    imagePosPat[p] = parseFloat(imagePosPat[p]);\r\n  }\r\n  const frameInfo = {\r\n    dimIndex: dimIndex,\r\n    imagePosPat: imagePosPat,\r\n    derivationImages: derivationImages,\r\n    refSegmentNumber: refSegmentNumber\r\n  };\r\n  // Plane Orientation Sequence\r\n  if (typeof dataElements['00209116'] !== 'undefined') {\r\n    const framePlaneOrientationSeq = dataElements['00209116'];\r\n    if (framePlaneOrientationSeq.value.length !== 0) {\r\n      // should only be one Image Orientation (Patient)\r\n      const frameImageOrientation =\r\n        framePlaneOrientationSeq.value[0]['00200037'].value;\r\n      if (typeof frameImageOrientation !== 'undefined') {\r\n        frameInfo.imageOrientationPatient = frameImageOrientation;\r\n      }\r\n    }\r\n  }\r\n  // Pixel Measures Sequence\r\n  if (typeof dataElements['00289110'] !== 'undefined') {\r\n    const framePixelMeasuresSeq = dataElements['00289110'];\r\n    if (framePixelMeasuresSeq.value.length !== 0) {\r\n      // should only be one\r\n      const frameSpacing =\r\n        getSpacingFromMeasure(framePixelMeasuresSeq.value[0]);\r\n      if (typeof frameSpacing !== 'undefined') {\r\n        frameInfo.spacing = frameSpacing;\r\n      }\r\n    } else {\r\n      logger.warn(\r\n        'No shared functional group pixel measure sequence items.');\r\n    }\r\n  }\r\n\r\n  return frameInfo;\r\n}\r\n\r\n/**\r\n * Mask {@link Image} factory.\r\n */\r\nexport class MaskFactory {\r\n\r\n  /*\r\n   * Check dicom elements. Throws an error if not suitable.\r\n   *\r\n   * @param {object} _dicomElements The DICOM tags.\r\n   * @returns {object|undefined} A possible warning.\r\n   */\r\n  checkElements(_dicomElements) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Get an {@link Image} object from the read DICOM file.\r\n   *\r\n   * @param {DataElements} dataElements The DICOM tags.\r\n   * @param {Uint8Array | Int8Array |\r\n   *   Uint16Array | Int16Array |\r\n   *   Uint32Array | Int32Array} pixelBuffer The pixel buffer.\r\n   * @returns {Image} A new Image.\r\n   */\r\n  create(dataElements, pixelBuffer) {\r\n    // check required and supported tags\r\n    for (let d = 0; d < RequiredDicomSegTags.length; ++d) {\r\n      checkTag(dataElements, RequiredDicomSegTags[d]);\r\n    }\r\n\r\n    // image size\r\n    const size2D = getImage2DSize(dataElements);\r\n    const size = new Size([size2D[0], size2D[1], 1]);\r\n\r\n    const sliceSize = size.getTotalSize();\r\n\r\n    // frames\r\n    let frames = 1;\r\n    const framesElem = dataElements['00280008'];\r\n    if (typeof framesElem !== 'undefined') {\r\n      frames = parseInt(framesElem.value[0], 10);\r\n    }\r\n\r\n    if (frames !== pixelBuffer.length / sliceSize) {\r\n      throw new Error(\r\n        'Buffer and numberOfFrames meta are not equal.' +\r\n        frames + ' ' + pixelBuffer.length / sliceSize);\r\n    }\r\n\r\n    // Dimension Organization and Index\r\n    const dimension = getDimensionOrganization(dataElements);\r\n\r\n    // Segment Sequence\r\n    const segSequence = dataElements['00620002'];\r\n    if (typeof segSequence === 'undefined') {\r\n      throw new Error('Missing or empty segmentation sequence');\r\n    }\r\n    const segments = [];\r\n    let storeAsRGB = false;\r\n    for (let i = 0; i < segSequence.value.length; ++i) {\r\n      const segment = getSegment(segSequence.value[i]);\r\n      if (typeof segment.displayValue.r !== 'undefined' &&\r\n        typeof segment.displayValue.g !== 'undefined' &&\r\n        typeof segment.displayValue.b !== 'undefined') {\r\n        // create rgb image\r\n        storeAsRGB = true;\r\n      }\r\n      // store\r\n      segments.push(segment);\r\n    }\r\n\r\n\r\n    // Shared Functional Groups Sequence\r\n    let spacing;\r\n    let imageOrientationPatient;\r\n    const sharedFunctionalGroupsSeq = dataElements['52009229'];\r\n    if (typeof sharedFunctionalGroupsSeq !== 'undefined') {\r\n      // should be only one\r\n      const funcGroup0 = sharedFunctionalGroupsSeq.value[0];\r\n      // Plane Orientation Sequence\r\n      if (typeof funcGroup0['00209116'] !== 'undefined') {\r\n        const planeOrientationSeq = funcGroup0['00209116'];\r\n        if (planeOrientationSeq.value.length !== 0) {\r\n          // should be only one\r\n          imageOrientationPatient =\r\n            planeOrientationSeq.value[0]['00200037'].value;\r\n        } else {\r\n          logger.warn(\r\n            'No shared functional group plane orientation sequence items.');\r\n        }\r\n      }\r\n      // Pixel Measures Sequence\r\n      if (typeof funcGroup0['00289110'] !== 'undefined') {\r\n        const pixelMeasuresSeq = funcGroup0['00289110'];\r\n        if (pixelMeasuresSeq.value.length !== 0) {\r\n          // should be only one\r\n          spacing = getSpacingFromMeasure(pixelMeasuresSeq.value[0]);\r\n        } else {\r\n          logger.warn(\r\n            'No shared functional group pixel measure sequence items.');\r\n        }\r\n      }\r\n    }\r\n\r\n    const includesPosPat = function (arr, val) {\r\n      return arr.some(function (arrVal) {\r\n        return equalPosPat(val, arrVal);\r\n      });\r\n    };\r\n\r\n    const findIndexPosPat = function (arr, val) {\r\n      return arr.findIndex(function (arrVal) {\r\n        return equalPosPat(val, arrVal);\r\n      });\r\n    };\r\n\r\n    // Per-frame Functional Groups Sequence\r\n    const perFrameFuncGroupSequence = dataElements['52009230'];\r\n    if (typeof perFrameFuncGroupSequence === 'undefined') {\r\n      throw new Error('Missing or empty per frame functional sequence');\r\n    }\r\n    if (frames !== perFrameFuncGroupSequence.value.length) {\r\n      throw new Error(\r\n        'perFrameFuncGroupSequence meta and numberOfFrames are not equal.');\r\n    }\r\n    // create frame info object from per frame func\r\n    const frameInfos = [];\r\n    for (let j = 0; j < perFrameFuncGroupSequence.value.length; ++j) {\r\n      frameInfos.push(\r\n        getSegmentFrameInfo(perFrameFuncGroupSequence.value[j]));\r\n    }\r\n\r\n    // check frame infos\r\n    const framePosPats = [];\r\n    for (let ii = 0; ii < frameInfos.length; ++ii) {\r\n      if (!includesPosPat(framePosPats, frameInfos[ii].imagePosPat)) {\r\n        framePosPats.push(frameInfos[ii].imagePosPat);\r\n      }\r\n      // store orientation if needed, avoid multi\r\n      if (typeof frameInfos[ii].imageOrientationPatient !== 'undefined') {\r\n        if (typeof imageOrientationPatient === 'undefined') {\r\n          imageOrientationPatient = frameInfos[ii].imageOrientationPatient;\r\n        } else {\r\n          if (!arraySortEquals(\r\n            imageOrientationPatient, frameInfos[ii].imageOrientationPatient)) {\r\n            throw new Error('Unsupported multi orientation dicom seg.');\r\n          }\r\n        }\r\n      }\r\n      // store spacing if needed, avoid multi\r\n      if (typeof frameInfos[ii].spacing !== 'undefined') {\r\n        if (typeof spacing === 'undefined') {\r\n          spacing = frameInfos[ii].spacing;\r\n        } else {\r\n          if (!spacing.equals(frameInfos[ii].spacing)) {\r\n            throw new Error('Unsupported multi resolution dicom seg.');\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // check spacing and orientation\r\n    if (typeof spacing === 'undefined') {\r\n      throw new Error('No spacing found for DICOM SEG');\r\n    }\r\n    if (typeof imageOrientationPatient === 'undefined') {\r\n      throw new Error('No imageOrientationPatient found for DICOM SEG');\r\n    }\r\n\r\n    // orientation\r\n    const rowCosines = new Vector3D(\r\n      parseFloat(imageOrientationPatient[0]),\r\n      parseFloat(imageOrientationPatient[1]),\r\n      parseFloat(imageOrientationPatient[2]));\r\n    const colCosines = new Vector3D(\r\n      parseFloat(imageOrientationPatient[3]),\r\n      parseFloat(imageOrientationPatient[4]),\r\n      parseFloat(imageOrientationPatient[5]));\r\n    const normal = rowCosines.crossProduct(colCosines);\r\n    /* eslint-disable array-element-newline */\r\n    const orientationMatrix = new Matrix33([\r\n      rowCosines.getX(), colCosines.getX(), normal.getX(),\r\n      rowCosines.getY(), colCosines.getY(), normal.getY(),\r\n      rowCosines.getZ(), colCosines.getZ(), normal.getZ()\r\n    ]);\r\n\r\n    // sort positions patient\r\n    framePosPats.sort(getComparePosPat(orientationMatrix));\r\n\r\n    const point3DFromArray = function (arr) {\r\n      return new Point3D(arr[0], arr[1], arr[2]);\r\n    };\r\n\r\n    // frame origins\r\n    const frameOrigins = [];\r\n    for (let n = 0; n < framePosPats.length; ++n) {\r\n      frameOrigins.push(point3DFromArray(framePosPats[n]));\r\n    }\r\n\r\n    // use calculated spacing\r\n    let newSpacing = spacing;\r\n    const geoSliceSpacing = getSliceGeometrySpacing(\r\n      frameOrigins, orientationMatrix, false);\r\n    const spacingValues = spacing.getValues();\r\n    if (typeof geoSliceSpacing !== 'undefined' &&\r\n      geoSliceSpacing !== spacingValues[2]) {\r\n      spacingValues[2] = geoSliceSpacing;\r\n      newSpacing = new Spacing(spacingValues);\r\n    }\r\n\r\n    // tmp geometry with correct spacing but only one slice\r\n    const tmpGeometry = new Geometry(\r\n      frameOrigins[0], size, newSpacing, orientationMatrix);\r\n\r\n    // origin distance test\r\n    // TODO: maybe use sliceSpacing / 10\r\n    const isNotSmall = function (value) {\r\n      let res = value > REAL_WORLD_EPSILON;\r\n      if (res) {\r\n        // try larger epsilon\r\n        res = value > REAL_WORLD_EPSILON * 10;\r\n        if (!res) {\r\n          // warn if epsilon < value < epsilon * 10\r\n          logger.warn(\r\n            'Using larger real world epsilon in SEG pos pat adding'\r\n          );\r\n        } else {\r\n          res = value > REAL_WORLD_EPSILON * 100;\r\n          if (!res) {\r\n            // warn if epsilon < value < epsilon * 100\r\n            logger.warn(\r\n              'Using larger+ real world epsilon in SEG pos pat adding'\r\n            );\r\n          }\r\n        }\r\n      }\r\n      return res;\r\n    };\r\n\r\n    // add possibly missing posPats\r\n    const posPats = [];\r\n    posPats.push(framePosPats[0]);\r\n    let sliceIndex = 0;\r\n    for (let g = 1; g < framePosPats.length; ++g) {\r\n      ++sliceIndex;\r\n      let index = new Index([0, 0, sliceIndex]);\r\n      let point = tmpGeometry.indexToWorld(index).get3D();\r\n      const frameOrigin = frameOrigins[g];\r\n      // check if more pos pats are needed\r\n      let dist = frameOrigin.getDistance(point);\r\n      const distPrevious = dist;\r\n      // TODO: good threshold?\r\n      while (isNotSmall(dist)) {\r\n        logger.debug('Adding intermediate pos pats for DICOM seg at ' +\r\n          point.toString());\r\n        posPats.push([point.getX(), point.getY(), point.getZ()]);\r\n        ++sliceIndex;\r\n        index = new Index([0, 0, sliceIndex]);\r\n        point = tmpGeometry.indexToWorld(index).get3D();\r\n        dist = frameOrigin.getDistance(point);\r\n        if (dist > distPrevious) {\r\n          throw new Error(\r\n            'Test distance is increasing when adding intermediate pos pats');\r\n        }\r\n      }\r\n      // add frame pos pat\r\n      posPats.push(framePosPats[g]);\r\n    }\r\n\r\n    // as many slices as posPats\r\n    const numberOfSlices = posPats.length;\r\n\r\n    // final geometry\r\n    const geometry = new Geometry(\r\n      frameOrigins[0], size, newSpacing, orientationMatrix);\r\n    const uids = [0];\r\n    for (let m = 1; m < numberOfSlices; ++m) {\r\n      geometry.appendOrigin(point3DFromArray(posPats[m]), m);\r\n      uids.push(m);\r\n    }\r\n\r\n    const getFindSegmentFunc = function (number) {\r\n      return function (item) {\r\n        return item.number === number;\r\n      };\r\n    };\r\n\r\n    // create output buffer\r\n    const mul = storeAsRGB ? 3 : 1;\r\n    const buffer =\r\n      // @ts-ignore\r\n      new pixelBuffer.constructor(mul * sliceSize * numberOfSlices);\r\n    buffer.fill(0);\r\n    // merge frame buffers\r\n    let sliceOffset = null;\r\n    let frameOffset = null;\r\n    for (let f = 0; f < frameInfos.length; ++f) {\r\n      // get the slice index from the position in the posPat array\r\n      sliceIndex = findIndexPosPat(posPats, frameInfos[f].imagePosPat);\r\n      frameOffset = sliceSize * f;\r\n      sliceOffset = sliceSize * sliceIndex;\r\n      // get the frame display value\r\n      const frameSegment = segments.find(\r\n        getFindSegmentFunc(frameInfos[f].refSegmentNumber)\r\n      );\r\n      const pixelValue = frameSegment.displayValue;\r\n      for (let l = 0; l < sliceSize; ++l) {\r\n        if (pixelBuffer[frameOffset + l] !== 0) {\r\n          const offset = mul * (sliceOffset + l);\r\n          if (storeAsRGB) {\r\n            buffer[offset] = pixelValue.r;\r\n            buffer[offset + 1] = pixelValue.g;\r\n            buffer[offset + 2] = pixelValue.b;\r\n          } else {\r\n            buffer[offset] = pixelValue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // create image\r\n    const image = new Image(geometry, buffer, uids);\r\n    if (storeAsRGB) {\r\n      image.setPhotometricInterpretation('RGB');\r\n    }\r\n    // meta information\r\n    const meta = getDefaultDicomSegJson();\r\n    // Study\r\n    meta.StudyDate = dataElements['00080020'].value[0];\r\n    meta.StudyTime = dataElements['00080030'].value[0];\r\n    meta.StudyInstanceUID = dataElements['0020000D'].value[0];\r\n    meta.StudyID = dataElements['00200010'].value[0];\r\n    // Series\r\n    meta.SeriesInstanceUID = dataElements['0020000E'].value[0];\r\n    meta.SeriesNumber = dataElements['00200011'].value[0];\r\n    // ReferringPhysicianName\r\n    meta.ReferringPhysicianName = dataElements['00080090'].value[0];\r\n    // patient info\r\n    meta.PatientName = dataElements['00100010'].value[0];\r\n    meta.PatientID = dataElements['00100020'].value[0];\r\n    meta.PatientBirthDate = dataElements['00100030'].value[0];\r\n    meta.PatientSex = dataElements['00100040'].value[0];\r\n    // Enhanced General Equipment Module\r\n    meta.Manufacturer = dataElements['00080070'].value[0];\r\n    meta.ManufacturerModelName = dataElements['00081090'].value[0];\r\n    meta.DeviceSerialNumber = dataElements['00181000'].value[0];\r\n    meta.SoftwareVersions = dataElements['00181020'].value[0];\r\n    // dicom seg dimension\r\n    meta.DimensionOrganizationSequence = dimension.organizations;\r\n    meta.DimensionIndexSequence = dimension.indices;\r\n    // custom\r\n    meta.custom = {\r\n      segments: segments,\r\n      frameInfos: frameInfos,\r\n      SOPInstanceUID: dataElements['00080018'].value[0]\r\n    };\r\n\r\n    // number of files: in this case equal to number slices,\r\n    //   used to calculate buffer size\r\n    meta.numberOfFiles = numberOfSlices;\r\n    // FrameOfReferenceUID (optional)\r\n    const frameOfReferenceUID = dataElements['00200052'];\r\n    if (frameOfReferenceUID) {\r\n      meta.FrameOfReferenceUID = frameOfReferenceUID.value[0];\r\n    }\r\n    // LossyImageCompression (optional)\r\n    const lossyImageCompression = dataElements['00282110'];\r\n    if (lossyImageCompression) {\r\n      meta.LossyImageCompression = lossyImageCompression.value[0];\r\n    }\r\n\r\n    image.setMeta(meta);\r\n\r\n    return image;\r\n  }\r\n\r\n} // class MaskFactory\r\n","import {Index} from '../math/index';\r\nimport {Point3D} from '../math/point';\r\nimport {logger} from '../utils/logger';\r\nimport {getTypedArray} from '../dicom/dicomParser';\r\nimport {ListenerHandler} from '../utils/listen';\r\nimport {colourRange} from './iterator';\r\nimport {RescaleSlopeAndIntercept} from './rsi';\r\nimport {ImageFactory} from './imageFactory';\r\nimport {MaskFactory} from './maskFactory';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Geometry} from './geometry';\r\nimport {Matrix33} from '../math/matrix';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Get the slice index of an input slice into a volume geometry.\r\n *\r\n * @param {Geometry} volumeGeometry The volume geometry.\r\n * @param {Geometry} sliceGeometry The slice geometry.\r\n * @returns {Index} The index of the slice in the volume geomtry.\r\n */\r\nfunction getSliceIndex(volumeGeometry, sliceGeometry) {\r\n  // possible time\r\n  const timeId = sliceGeometry.getInitialTime();\r\n  // index values\r\n  const values = [];\r\n  // x, y\r\n  values.push(0);\r\n  values.push(0);\r\n  // z\r\n  values.push(volumeGeometry.getSliceIndex(sliceGeometry.getOrigin(), timeId));\r\n  // time\r\n  if (typeof timeId !== 'undefined') {\r\n    values.push(timeId);\r\n  }\r\n  // return index\r\n  return new Index(values);\r\n}\r\n\r\n/**\r\n * Create an Image from DICOM elements.\r\n *\r\n * @param {object} elements The DICOM elements.\r\n * @returns {Image} The Image object.\r\n */\r\nexport function createImage(elements) {\r\n  const factory = new ImageFactory();\r\n  return factory.create(\r\n    elements,\r\n    elements['7FE00010'].value[0],\r\n    1\r\n  );\r\n}\r\n\r\n/**\r\n * Create a mask Image from DICOM elements.\r\n *\r\n * @param {object} elements The DICOM elements.\r\n * @returns {Image} The mask Image object.\r\n */\r\nexport function createMaskImage(elements) {\r\n  const factory = new MaskFactory();\r\n  return factory.create(\r\n    elements,\r\n    elements['7FE00010'].value[0]\r\n  );\r\n}\r\n\r\n/**\r\n * Image class.\r\n * Usable once created, optional are:\r\n * - rescale slope and intercept (default 1:0),\r\n * - photometric interpretation (default MONOCHROME2),\r\n * - planar configuration (default RGBRGB...).\r\n *\r\n * @example\r\n * // XMLHttpRequest onload callback\r\n * const onload = function (event) {\r\n *   // parse the dicom buffer\r\n *   const dicomParser = new dwv.DicomParser();\r\n *   dicomParser.parse(event.target.response);\r\n *   // create the image object\r\n *   const image = dwv.createImage(dicomParser.getDicomElements());\r\n *   // result div\r\n *   const div = document.getElementById('dwv');\r\n *   // display the image size\r\n *   const size = image.getGeometry().getSize();\r\n *   div.appendChild(document.createTextNode(\r\n *     'Size: ' + size.toString() +\r\n *     ' (should be 256,256,1)'));\r\n *   // break line\r\n *   div.appendChild(document.createElement('br'));\r\n *   // display a pixel value\r\n *   div.appendChild(document.createTextNode(\r\n *     'Pixel @ [128,40,0]: ' +\r\n *     image.getRescaledValue(128,40,0) +\r\n *     ' (should be 101)'));\r\n * };\r\n * // DICOM file request\r\n * const request = new XMLHttpRequest();\r\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\r\n * request.open('GET', url);\r\n * request.responseType = 'arraybuffer';\r\n * request.onload = onload;\r\n * request.send();\r\n */\r\nexport class Image {\r\n\r\n  /**\r\n   * Data geometry.\r\n   *\r\n   * @type {Geometry}\r\n   */\r\n  #geometry;\r\n\r\n  /**\r\n   * List of compatible typed arrays.\r\n   *\r\n   * @typedef {(\r\n   *   Uint8Array | Int8Array |\r\n   *   Uint16Array | Int16Array |\r\n   *   Uint32Array | Int32Array\r\n   * )} TypedArray\r\n   */\r\n\r\n  /**\r\n   * Data buffer.\r\n   *\r\n   * @type {TypedArray}\r\n   */\r\n  #buffer;\r\n\r\n  /**\r\n   * Image UIDs.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #imageUids;\r\n\r\n  /**\r\n   * Constant rescale slope and intercept (default).\r\n   *\r\n   * @type {object}\r\n   */\r\n  #rsi = new RescaleSlopeAndIntercept(1, 0);\r\n\r\n  /**\r\n   * Varying rescale slope and intercept.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #rsis = null;\r\n\r\n  /**\r\n   * Flag to know if the RSIs are all identity (1,0).\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isIdentityRSI = true;\r\n\r\n  /**\r\n   * Flag to know if the RSIs are all equals.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isConstantRSI = true;\r\n\r\n  /**\r\n   * Photometric interpretation (MONOCHROME, RGB...).\r\n   *\r\n   * @type {string}\r\n   */\r\n  #photometricInterpretation = 'MONOCHROME2';\r\n\r\n  /**\r\n   * Planar configuration for RGB data (0:RGBRGBRGBRGB... or\r\n   *   1:RRR...GGG...BBB...).\r\n   *\r\n   * @type {number}\r\n   */\r\n  #planarConfiguration = 0;\r\n\r\n  /**\r\n   * Number of components.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #numberOfComponents;\r\n\r\n  /**\r\n   * Meta information.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #meta = {};\r\n\r\n  /**\r\n   * Data range.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #dataRange = null;\r\n\r\n  /**\r\n   * Rescaled data range.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #rescaledDataRange = null;\r\n\r\n  /**\r\n   * Histogram.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #histogram = null;\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * @param {Geometry} geometry The geometry of the image.\r\n   * @param {TypedArray} buffer The image data as a one dimensional buffer.\r\n   * @param {Array} [imageUids] An array of Uids indexed to slice number.\r\n   */\r\n  constructor(geometry, buffer, imageUids) {\r\n    this.#geometry = geometry;\r\n    this.#buffer = buffer;\r\n    this.#imageUids = imageUids;\r\n\r\n    this.#numberOfComponents = this.#buffer.length / (\r\n      this.#geometry.getSize().getTotalSize());\r\n  }\r\n\r\n  /**\r\n   * Get the image UID at a given index.\r\n   *\r\n   * @param {Index} [index] The index at which to get the id.\r\n   * @returns {string} The UID.\r\n   */\r\n  getImageUid(index) {\r\n    let uid = this.#imageUids[0];\r\n    if (this.#imageUids.length !== 1 && typeof index !== 'undefined') {\r\n      uid = this.#imageUids[this.getSecondaryOffset(index)];\r\n    }\r\n    return uid;\r\n  }\r\n\r\n  /**\r\n   * Get the geometry of the image.\r\n   *\r\n   * @returns {Geometry} The geometry.\r\n   */\r\n  getGeometry() {\r\n    return this.#geometry;\r\n  }\r\n\r\n  /**\r\n   * Get the data buffer of the image.\r\n   *\r\n   * @todo dangerous...\r\n   * @returns {TypedArray} The data buffer of the image.\r\n   */\r\n  getBuffer() {\r\n    return this.#buffer;\r\n  }\r\n\r\n  /**\r\n   * Can the image values be quantified?\r\n   *\r\n   * @returns {boolean} True if only one component.\r\n   */\r\n  canQuantify() {\r\n    return this.getNumberOfComponents() === 1;\r\n  }\r\n\r\n  /**\r\n   * Can window and level be applied to the data?\r\n   *\r\n   * @returns {boolean} True if the data is monochrome.\r\n   */\r\n  canWindowLevel() {\r\n    return this.getPhotometricInterpretation()\r\n      .match(/MONOCHROME/) !== null;\r\n  }\r\n\r\n  /**\r\n   * Can the data be scrolled?\r\n   *\r\n   * @param {Matrix33} viewOrientation The view orientation.\r\n   * @returns {boolean} True if the data has a third dimension greater than one\r\n   *   after applying the view orientation.\r\n   */\r\n  canScroll(viewOrientation) {\r\n    const size = this.getGeometry().getSize();\r\n    // also check the numberOfFiles in case we are in the middle of a load\r\n    let nFiles = 1;\r\n    if (typeof this.#meta.numberOfFiles !== 'undefined') {\r\n      nFiles = this.#meta.numberOfFiles;\r\n    }\r\n    return size.canScroll(viewOrientation) || nFiles !== 1;\r\n  }\r\n\r\n  /**\r\n   * Get the secondary offset max.\r\n   *\r\n   * @returns {number} The maximum offset.\r\n   */\r\n  #getSecondaryOffsetMax() {\r\n    return this.#geometry.getSize().getTotalSize(2);\r\n  }\r\n\r\n  /**\r\n   * Get the secondary offset: an offset that takes into account\r\n   *   the slice and above dimension numbers.\r\n   *\r\n   * @param {Index} index The index.\r\n   * @returns {number} The offset.\r\n   */\r\n  getSecondaryOffset(index) {\r\n    return this.#geometry.getSize().indexToOffset(index, 2);\r\n  }\r\n\r\n  /**\r\n   * Get the rescale slope and intercept.\r\n   *\r\n   * @param {Index} [index] The index (only needed for non constant rsi).\r\n   * @returns {object} The rescale slope and intercept.\r\n   */\r\n  getRescaleSlopeAndIntercept(index) {\r\n    let res = this.#rsi;\r\n    if (!this.isConstantRSI()) {\r\n      if (typeof index === 'undefined') {\r\n        throw new Error('Cannot get non constant RSI with empty slice index.');\r\n      }\r\n      const offset = this.getSecondaryOffset(index);\r\n      if (typeof this.#rsis[offset] !== 'undefined') {\r\n        res = this.#rsis[offset];\r\n      } else {\r\n        logger.warn('undefined non constant rsi at ' + offset);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Get the rsi at a specified (secondary) offset.\r\n   *\r\n   * @param {number} offset The desired (secondary) offset.\r\n   * @returns {object} The coresponding rsi.\r\n   */\r\n  #getRescaleSlopeAndInterceptAtOffset(offset) {\r\n    return this.#rsis[offset];\r\n  }\r\n\r\n  /**\r\n   * Set the rescale slope and intercept.\r\n   *\r\n   * @param {object} inRsi The input rescale slope and intercept.\r\n   * @param {number} [offset] The rsi offset (only needed for non constant rsi).\r\n   */\r\n  setRescaleSlopeAndIntercept(inRsi, offset) {\r\n    // update identity flag\r\n    this.#isIdentityRSI = this.#isIdentityRSI && inRsi.isID();\r\n    // update constant flag\r\n    if (!this.#isConstantRSI) {\r\n      if (typeof offset === 'undefined') {\r\n        throw new Error(\r\n          'Cannot store non constant RSI with empty slice index.');\r\n      }\r\n      this.#rsis.splice(offset, 0, inRsi);\r\n    } else {\r\n      if (!this.#rsi.equals(inRsi)) {\r\n        if (typeof offset === 'undefined') {\r\n          // no slice index, replace existing\r\n          this.#rsi = inRsi;\r\n        } else {\r\n          // first non constant rsi\r\n          this.#isConstantRSI = false;\r\n          // switch to non constant mode\r\n          this.#rsis = [];\r\n          // initialise RSIs\r\n          for (let i = 0, leni = this.#getSecondaryOffsetMax(); i < leni; ++i) {\r\n            this.#rsis.push(i);\r\n          }\r\n          // store\r\n          this.#rsi = null;\r\n          this.#rsis.splice(offset, 0, inRsi);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Are all the RSIs identity (1,0).\r\n   *\r\n   * @returns {boolean} True if they are.\r\n   */\r\n  isIdentityRSI() {\r\n    return this.#isIdentityRSI;\r\n  }\r\n\r\n  /**\r\n   * Are all the RSIs equal.\r\n   *\r\n   * @returns {boolean} True if they are.\r\n   */\r\n  isConstantRSI() {\r\n    return this.#isConstantRSI;\r\n  }\r\n\r\n  /**\r\n   * Get the photometricInterpretation of the image.\r\n   *\r\n   * @returns {string} The photometricInterpretation of the image.\r\n   */\r\n  getPhotometricInterpretation() {\r\n    return this.#photometricInterpretation;\r\n  }\r\n\r\n  /**\r\n   * Set the photometricInterpretation of the image.\r\n   *\r\n   * @param {string} interp The photometricInterpretation of the image.\r\n   */\r\n  setPhotometricInterpretation(interp) {\r\n    this.#photometricInterpretation = interp;\r\n  }\r\n\r\n  /**\r\n   * Get the planarConfiguration of the image.\r\n   *\r\n   * @returns {number} The planarConfiguration of the image.\r\n   */\r\n  getPlanarConfiguration() {\r\n    return this.#planarConfiguration;\r\n  }\r\n\r\n  /**\r\n   * Set the planarConfiguration of the image.\r\n   *\r\n   * @param {number} config The planarConfiguration of the image.\r\n   */\r\n  setPlanarConfiguration(config) {\r\n    this.#planarConfiguration = config;\r\n  }\r\n\r\n  /**\r\n   * Get the numberOfComponents of the image.\r\n   *\r\n   * @returns {number} The numberOfComponents of the image.\r\n   */\r\n  getNumberOfComponents() {\r\n    return this.#numberOfComponents;\r\n  }\r\n\r\n  /**\r\n   * Get the meta information of the image.\r\n   *\r\n   * @returns {object} The meta information of the image.\r\n   */\r\n  getMeta() {\r\n    return this.#meta;\r\n  }\r\n\r\n  /**\r\n   * Set the meta information of the image.\r\n   *\r\n   * @param {object} rhs The meta information of the image.\r\n   */\r\n  setMeta(rhs) {\r\n    this.#meta = rhs;\r\n  }\r\n\r\n  /**\r\n   * Get value at offset. Warning: No size check...\r\n   *\r\n   * @param {number} offset The desired offset.\r\n   * @returns {number} The value at offset.\r\n   */\r\n  getValueAtOffset(offset) {\r\n    return this.#buffer[offset];\r\n  }\r\n\r\n  /**\r\n   * Get the offsets where the buffer equals the input value.\r\n   * Loops through the whole volume, can get long for big data...\r\n   *\r\n   * @param {number|object} value The value to check.\r\n   * @returns {Array} The list of offsets.\r\n   */\r\n  getOffsets(value) {\r\n    // value to array\r\n    if (this.#numberOfComponents === 1) {\r\n      value = [value];\r\n    } else if (this.#numberOfComponents === 3 &&\r\n      typeof value.r !== 'undefined') {\r\n      value = [value.r, value.g, value.b];\r\n    }\r\n    // main loop\r\n    const offsets = [];\r\n    let equal;\r\n    for (let i = 0; i < this.#buffer.length; i = i + this.#numberOfComponents) {\r\n      equal = true;\r\n      for (let j = 0; j < this.#numberOfComponents; ++j) {\r\n        if (this.#buffer[i + j] !== value[j]) {\r\n          equal = false;\r\n          break;\r\n        }\r\n      }\r\n      if (equal) {\r\n        offsets.push(i);\r\n      }\r\n    }\r\n    return offsets;\r\n  }\r\n\r\n  /**\r\n   * Check if the input values are in the buffer.\r\n   * Could loop through the whole volume, can get long for big data...\r\n   *\r\n   * @param {Array} values The values to check.\r\n   * @returns {Array} A list of booleans for each input value,\r\n   *   set to true if the value is present in the buffer.\r\n   */\r\n  hasValues(values) {\r\n    // check input\r\n    if (typeof values === 'undefined' ||\r\n      values.length === 0) {\r\n      return [];\r\n    }\r\n    // final array value\r\n    const finalValues = [];\r\n    for (let v1 = 0; v1 < values.length; ++v1) {\r\n      if (this.#numberOfComponents === 1) {\r\n        finalValues.push([values[v1]]);\r\n      } else if (this.#numberOfComponents === 3) {\r\n        finalValues.push([\r\n          values[v1].r,\r\n          values[v1].g,\r\n          values[v1].b\r\n        ]);\r\n      }\r\n    }\r\n    // find callback\r\n    let equalFunc;\r\n    if (this.#numberOfComponents === 1) {\r\n      equalFunc = function (a, b) {\r\n        return a[0] === b[0];\r\n      };\r\n    } else if (this.#numberOfComponents === 3) {\r\n      equalFunc = function (a, b) {\r\n        return a[0] === b[0] &&\r\n          a[1] === b[1] &&\r\n          a[2] === b[2];\r\n      };\r\n    }\r\n    const getEqualCallback = function (value) {\r\n      return function (item) {\r\n        return equalFunc(item, value);\r\n      };\r\n    };\r\n    // main loop\r\n    const res = new Array(values.length);\r\n    res.fill(false);\r\n    const valuesToFind = finalValues.slice();\r\n    let equal;\r\n    let indicesToRemove;\r\n    for (let i = 0, leni = this.#buffer.length;\r\n      i < leni; i = i + this.#numberOfComponents) {\r\n      indicesToRemove = [];\r\n      for (let v = 0; v < valuesToFind.length; ++v) {\r\n        equal = true;\r\n        // check value(s)\r\n        for (let j = 0; j < this.#numberOfComponents; ++j) {\r\n          if (this.#buffer[i + j] !== valuesToFind[v][j]) {\r\n            equal = false;\r\n            break;\r\n          }\r\n        }\r\n        // if found, store answer and add to indices to remove\r\n        if (equal) {\r\n          const valIndex = finalValues.findIndex(\r\n            getEqualCallback(valuesToFind[v]));\r\n          res[valIndex] = true;\r\n          indicesToRemove.push(v);\r\n        }\r\n      }\r\n      // remove found values\r\n      for (let r = 0; r < indicesToRemove.length; ++r) {\r\n        valuesToFind.splice(indicesToRemove[r], 1);\r\n      }\r\n      // exit if no values to find\r\n      if (valuesToFind.length === 0) {\r\n        break;\r\n      }\r\n    }\r\n    // return\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Clone the image.\r\n   *\r\n   * @returns {Image} A clone of this image.\r\n   */\r\n  clone() {\r\n    // clone the image buffer\r\n    const clonedBuffer = this.#buffer.slice(0);\r\n    // create the image copy\r\n    const copy = new Image(this.getGeometry(), clonedBuffer, this.#imageUids);\r\n    // copy the RSI(s)\r\n    if (this.isConstantRSI()) {\r\n      copy.setRescaleSlopeAndIntercept(this.getRescaleSlopeAndIntercept());\r\n    } else {\r\n      for (let i = 0; i < this.#getSecondaryOffsetMax(); ++i) {\r\n        copy.setRescaleSlopeAndIntercept(\r\n          this.#getRescaleSlopeAndInterceptAtOffset(i), i);\r\n      }\r\n    }\r\n    // copy extras\r\n    copy.setPhotometricInterpretation(this.getPhotometricInterpretation());\r\n    copy.setPlanarConfiguration(this.getPlanarConfiguration());\r\n    copy.setMeta(this.getMeta());\r\n    // return\r\n    return copy;\r\n  }\r\n\r\n  /**\r\n   * Re-allocate buffer memory to an input size.\r\n   *\r\n   * @param {number} size The new size.\r\n   */\r\n  #realloc(size) {\r\n    // save buffer\r\n    let tmpBuffer = this.#buffer;\r\n    // create new\r\n    this.#buffer = getTypedArray(\r\n      this.#buffer.BYTES_PER_ELEMENT * 8,\r\n      this.#meta.IsSigned ? 1 : 0,\r\n      size);\r\n    if (this.#buffer === null) {\r\n      throw new Error('Cannot reallocate data for image.');\r\n    }\r\n    // put old in new\r\n    this.#buffer.set(tmpBuffer);\r\n    // clean\r\n    tmpBuffer = null;\r\n  }\r\n\r\n  /**\r\n   * Append a slice to the image.\r\n   *\r\n   * @param {Image} rhs The slice to append.\r\n   */\r\n  appendSlice(rhs) {\r\n    // check input\r\n    if (rhs === null) {\r\n      throw new Error('Cannot append null slice');\r\n    }\r\n    const rhsSize = rhs.getGeometry().getSize();\r\n    let size = this.#geometry.getSize();\r\n    if (rhsSize.get(2) !== 1) {\r\n      throw new Error('Cannot append more than one slice');\r\n    }\r\n    if (size.get(0) !== rhsSize.get(0)) {\r\n      throw new Error('Cannot append a slice with different number of columns');\r\n    }\r\n    if (size.get(1) !== rhsSize.get(1)) {\r\n      throw new Error('Cannot append a slice with different number of rows');\r\n    }\r\n    if (!this.#geometry.getOrientation().equals(\r\n      rhs.getGeometry().getOrientation(), 0.0001)) {\r\n      throw new Error('Cannot append a slice with different orientation');\r\n    }\r\n    if (this.#photometricInterpretation !==\r\n      rhs.getPhotometricInterpretation()) {\r\n      throw new Error(\r\n        'Cannot append a slice with different photometric interpretation');\r\n    }\r\n    // all meta should be equal\r\n    for (const key in this.#meta) {\r\n      if (key === 'windowPresets' || key === 'numberOfFiles' ||\r\n        key === 'custom') {\r\n        continue;\r\n      }\r\n      if (this.#meta[key] !== rhs.getMeta()[key]) {\r\n        throw new Error('Cannot append a slice with different ' + key);\r\n      }\r\n    }\r\n\r\n    // possible time\r\n    const timeId = rhs.getGeometry().getInitialTime();\r\n\r\n    // append frame if needed\r\n    let isNewFrame = false;\r\n    if (typeof timeId !== 'undefined' &&\r\n      !this.#geometry.hasSlicesAtTime(timeId)) {\r\n      // update grometry\r\n      this.appendFrame(timeId, rhs.getGeometry().getOrigin());\r\n      // update size\r\n      size = this.#geometry.getSize();\r\n      // update flag\r\n      isNewFrame = true;\r\n    }\r\n\r\n    // get slice index\r\n    const index = getSliceIndex(this.#geometry, rhs.getGeometry());\r\n\r\n    // calculate slice size\r\n    const sliceSize = this.#numberOfComponents * size.getDimSize(2);\r\n\r\n    // create full buffer if not done yet\r\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\r\n      throw new Error('Missing number of files for buffer manipulation.');\r\n    }\r\n    const fullBufferSize = sliceSize * this.#meta.numberOfFiles;\r\n    if (this.#buffer.length !== fullBufferSize) {\r\n      this.#realloc(fullBufferSize);\r\n    }\r\n\r\n    // slice index\r\n    const sliceIndex = index.get(2);\r\n\r\n    // slice index including possible 4D\r\n    let fullSliceIndex = sliceIndex;\r\n    if (typeof timeId !== 'undefined') {\r\n      fullSliceIndex +=\r\n        this.#geometry.getCurrentNumberOfSlicesBeforeTime(timeId);\r\n    }\r\n    // offset of the input slice\r\n    const indexOffset = fullSliceIndex * sliceSize;\r\n    const maxOffset =\r\n      this.#geometry.getCurrentTotalNumberOfSlices() * sliceSize;\r\n    // move content if needed\r\n    if (indexOffset < maxOffset) {\r\n      this.#buffer.set(\r\n        this.#buffer.subarray(indexOffset, maxOffset),\r\n        indexOffset + sliceSize\r\n      );\r\n    }\r\n    // add new slice content\r\n    this.#buffer.set(rhs.getBuffer(), indexOffset);\r\n\r\n    // update geometry\r\n    if (!isNewFrame) {\r\n      this.#geometry.appendOrigin(\r\n        rhs.getGeometry().getOrigin(), sliceIndex, timeId);\r\n    }\r\n    // update rsi\r\n    // (rhs should just have one rsi)\r\n    this.setRescaleSlopeAndIntercept(\r\n      rhs.getRescaleSlopeAndIntercept(), fullSliceIndex);\r\n\r\n    // current number of images\r\n    const numberOfImages = this.#imageUids.length;\r\n\r\n    // insert sop instance UIDs\r\n    this.#imageUids.splice(fullSliceIndex, 0, rhs.getImageUid());\r\n\r\n    // update window presets\r\n    if (typeof this.#meta.windowPresets !== 'undefined') {\r\n      const windowPresets = this.#meta.windowPresets;\r\n      const rhsPresets = rhs.getMeta().windowPresets;\r\n      const keys = Object.keys(rhsPresets);\r\n      let pkey = null;\r\n      for (let i = 0; i < keys.length; ++i) {\r\n        pkey = keys[i];\r\n        const rhsPreset = rhsPresets[pkey];\r\n        const windowPreset = windowPresets[pkey];\r\n        if (typeof windowPreset !== 'undefined') {\r\n          // if not set or false, check perslice\r\n          if (typeof windowPreset.perslice === 'undefined' ||\r\n            windowPreset.perslice === false) {\r\n            // if different preset.wl, mark it as perslice\r\n            if (!windowPreset.wl[0].equals(rhsPreset.wl[0])) {\r\n              windowPreset.perslice = true;\r\n              // fill wl array with copy of wl[0]\r\n              // (loop on number of images minus the existing one)\r\n              for (let j = 0; j < numberOfImages - 1; ++j) {\r\n                windowPreset.wl.push(windowPreset.wl[0]);\r\n              }\r\n            }\r\n          }\r\n          // store (first) rhs preset.wl if needed\r\n          if (typeof windowPreset.perslice !== 'undefined' &&\r\n            windowPreset.perslice === true) {\r\n            windowPresets[pkey].wl.splice(\r\n              fullSliceIndex, 0, rhsPreset.wl[0]);\r\n          }\r\n        } else {\r\n          // if not defined (it should be), store all\r\n          windowPresets[pkey] = rhsPresets[pkey];\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Append a frame buffer to the image.\r\n   *\r\n   * @param {object} frameBuffer The frame buffer to append.\r\n   * @param {number} frameIndex The frame index.\r\n   */\r\n  appendFrameBuffer(frameBuffer, frameIndex) {\r\n    // create full buffer if not done yet\r\n    const size = this.#geometry.getSize();\r\n    const frameSize = this.#numberOfComponents * size.getDimSize(2);\r\n    if (typeof this.#meta.numberOfFiles === 'undefined') {\r\n      throw new Error('Missing number of files for frame buffer manipulation.');\r\n    }\r\n    const fullBufferSize = frameSize * this.#meta.numberOfFiles;\r\n    if (this.#buffer.length !== fullBufferSize) {\r\n      this.#realloc(fullBufferSize);\r\n    }\r\n    // check index\r\n    if (frameIndex >= this.#meta.numberOfFiles) {\r\n      logger.warn('Ignoring frame at index ' + frameIndex +\r\n        ' (size: ' + this.#meta.numberOfFiles + ')');\r\n      return;\r\n    }\r\n    // append\r\n    this.#buffer.set(frameBuffer, frameSize * frameIndex);\r\n    // update geometry\r\n    this.appendFrame(frameIndex, new Point3D(0, 0, 0));\r\n  }\r\n\r\n  /**\r\n   * Append a frame to the image.\r\n   *\r\n   * @param {number} time The frame time value.\r\n   * @param {Point3D} origin The origin of the frame.\r\n   */\r\n  appendFrame(time, origin) {\r\n    this.#geometry.appendFrame(origin, time);\r\n    this.#fireEvent({type: 'appendframe'});\r\n    // memory will be updated at the first appendSlice or appendFrameBuffer\r\n  }\r\n\r\n  /**\r\n   * Get the data range.\r\n   *\r\n   * @returns {object} The data range.\r\n   */\r\n  getDataRange() {\r\n    if (!this.#dataRange) {\r\n      this.#dataRange = this.calculateDataRange();\r\n    }\r\n    return this.#dataRange;\r\n  }\r\n\r\n  /**\r\n   * Get the rescaled data range.\r\n   *\r\n   * @returns {object} The rescaled data range.\r\n   */\r\n  getRescaledDataRange() {\r\n    if (!this.#rescaledDataRange) {\r\n      this.#rescaledDataRange = this.calculateRescaledDataRange();\r\n    }\r\n    return this.#rescaledDataRange;\r\n  }\r\n\r\n  /**\r\n   * Get the histogram.\r\n   *\r\n   * @returns {Array} The histogram.\r\n   */\r\n  getHistogram() {\r\n    if (!this.#histogram) {\r\n      const res = this.calculateHistogram();\r\n      this.#dataRange = res.dataRange;\r\n      this.#rescaledDataRange = res.rescaledDataRange;\r\n      this.#histogram = res.histogram;\r\n    }\r\n    return this.#histogram;\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n  // ****************************************\r\n  // image data modifiers... carefull...\r\n  // ****************************************\r\n\r\n  /**\r\n   * Set the inner buffer values at given offsets.\r\n   *\r\n   * @param {Array} offsets List of offsets where to set the data.\r\n   * @param {object} value The value to set at the given offsets.\r\n   * @fires Image#imagechange\r\n   */\r\n  setAtOffsets(offsets, value) {\r\n    let offset;\r\n    for (let i = 0, leni = offsets.length; i < leni; ++i) {\r\n      offset = offsets[i];\r\n      this.#buffer[offset] = value.r;\r\n      this.#buffer[offset + 1] = value.g;\r\n      this.#buffer[offset + 2] = value.b;\r\n    }\r\n    // fire imagechange\r\n    this.#fireEvent({type: 'imagechange'});\r\n  }\r\n\r\n  /**\r\n   * Set the inner buffer values at given offsets.\r\n   *\r\n   * @param {Array} offsetsLists List of offset lists where to set the data.\r\n   * @param {object} value The value to set at the given offsets.\r\n   * @returns {Array} A list of objects representing the original values before\r\n   *  replacing them.\r\n   * @fires Image#imagechange\r\n   */\r\n  setAtOffsetsAndGetOriginals(offsetsLists, value) {\r\n    const originalColoursLists = [];\r\n\r\n    // update and store\r\n    for (let j = 0; j < offsetsLists.length; ++j) {\r\n      const offsets = offsetsLists[j];\r\n      // first colour\r\n      let offset = offsets[0] * 3;\r\n      let previousColour = {\r\n        r: this.#buffer[offset],\r\n        g: this.#buffer[offset + 1],\r\n        b: this.#buffer[offset + 2]\r\n      };\r\n      // original value storage\r\n      const originalColours = [];\r\n      originalColours.push({\r\n        index: 0,\r\n        colour: previousColour\r\n      });\r\n      for (let i = 0; i < offsets.length; ++i) {\r\n        offset = offsets[i] * 3;\r\n        const currentColour = {\r\n          r: this.#buffer[offset],\r\n          g: this.#buffer[offset + 1],\r\n          b: this.#buffer[offset + 2]\r\n        };\r\n        // check if new colour\r\n        if (previousColour.r !== currentColour.r ||\r\n          previousColour.g !== currentColour.g ||\r\n          previousColour.b !== currentColour.b) {\r\n          // store new colour\r\n          originalColours.push({\r\n            index: i,\r\n            colour: currentColour\r\n          });\r\n          previousColour = currentColour;\r\n        }\r\n        // write update colour\r\n        this.#buffer[offset] = value.r;\r\n        this.#buffer[offset + 1] = value.g;\r\n        this.#buffer[offset + 2] = value.b;\r\n      }\r\n      originalColoursLists.push(originalColours);\r\n    }\r\n    // fire imagechange\r\n    this.#fireEvent({type: 'imagechange'});\r\n    return originalColoursLists;\r\n  }\r\n\r\n  /**\r\n   * Set the inner buffer values at given offsets.\r\n   *\r\n   * @param {Array} offsetsLists List of offset lists where to set the data.\r\n   * @param {object|Array} value The value to set at the given offsets.\r\n   * @fires Image#imagechange\r\n   */\r\n  setAtOffsetsWithIterator(offsetsLists, value) {\r\n    for (let j = 0; j < offsetsLists.length; ++j) {\r\n      const offsets = offsetsLists[j];\r\n      let iterator;\r\n      if (typeof value !== 'undefined' &&\r\n        typeof value.r !== 'undefined') {\r\n        // input value is a simple color\r\n        iterator = colourRange(\r\n          [{index: 0, colour: value}], offsets.length);\r\n      } else {\r\n        // input value is a list of iterators\r\n        // created by setAtOffsetsAndGetOriginals\r\n        iterator = colourRange(\r\n          value[j], offsets.length);\r\n      }\r\n\r\n      // set values\r\n      let ival = iterator.next();\r\n      while (!ival.done) {\r\n        const offset = offsets[ival.index] * 3;\r\n        this.#buffer[offset] = ival.value.r;\r\n        this.#buffer[offset + 1] = ival.value.g;\r\n        this.#buffer[offset + 2] = ival.value.b;\r\n        ival = iterator.next();\r\n      }\r\n    }\r\n    /**\r\n     * Image change event.\r\n     *\r\n     * @event Image#imagechange\r\n     * @type {object}\r\n     */\r\n    this.#fireEvent({type: 'imagechange'});\r\n  }\r\n\r\n  /**\r\n   * Get the value of the image at a specific coordinate.\r\n   *\r\n   * @param {number} i The X index.\r\n   * @param {number} j The Y index.\r\n   * @param {number} k The Z index.\r\n   * @param {number} f The frame number.\r\n   * @returns {number} The value at the desired position.\r\n   * Warning: No size check...\r\n   */\r\n  getValue(i, j, k, f) {\r\n    const frame = (f || 0);\r\n    const index = new Index([i, j, k, frame]);\r\n    return this.getValueAtOffset(\r\n      this.getGeometry().getSize().indexToOffset(index));\r\n  }\r\n\r\n  /**\r\n   * Get the value of the image at a specific index.\r\n   *\r\n   * @param {Index} index The index.\r\n   * @returns {number} The value at the desired position.\r\n   * Warning: No size check...\r\n   */\r\n  getValueAtIndex(index) {\r\n    return this.getValueAtOffset(\r\n      this.getGeometry().getSize().indexToOffset(index));\r\n  }\r\n\r\n  /**\r\n   * Get the rescaled value of the image at a specific position.\r\n   *\r\n   * @param {number} i The X index.\r\n   * @param {number} j The Y index.\r\n   * @param {number} k The Z index.\r\n   * @param {number} f The frame number.\r\n   * @returns {number} The rescaled value at the desired position.\r\n   * Warning: No size check...\r\n   */\r\n  getRescaledValue(i, j, k, f) {\r\n    if (typeof f === 'undefined') {\r\n      f = 0;\r\n    }\r\n    let val = this.getValue(i, j, k, f);\r\n    if (!this.isIdentityRSI()) {\r\n      if (this.isConstantRSI()) {\r\n        val = this.getRescaleSlopeAndIntercept().apply(val);\r\n      } else {\r\n        const values = [i, j, k, f];\r\n        const index = new Index(values);\r\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\r\n      }\r\n    }\r\n    return val;\r\n  }\r\n\r\n  /**\r\n   * Get the rescaled value of the image at a specific index.\r\n   *\r\n   * @param {Index} index The index.\r\n   * @returns {number} The rescaled value at the desired position.\r\n   * Warning: No size check...\r\n   */\r\n  getRescaledValueAtIndex(index) {\r\n    return this.getRescaledValueAtOffset(\r\n      this.getGeometry().getSize().indexToOffset(index)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the rescaled value of the image at a specific offset.\r\n   *\r\n   * @param {number} offset The desired offset.\r\n   * @returns {number} The rescaled value at the desired offset.\r\n   * Warning: No size check...\r\n   */\r\n  getRescaledValueAtOffset(offset) {\r\n    let val = this.getValueAtOffset(offset);\r\n    if (!this.isIdentityRSI()) {\r\n      if (this.isConstantRSI()) {\r\n        val = this.getRescaleSlopeAndIntercept().apply(val);\r\n      } else {\r\n        const index = this.getGeometry().getSize().offsetToIndex(offset);\r\n        val = this.getRescaleSlopeAndIntercept(index).apply(val);\r\n      }\r\n    }\r\n    return val;\r\n  }\r\n\r\n  /**\r\n   * Calculate the data range of the image.\r\n   * WARNING: for speed reasons, only calculated on the first frame...\r\n   *\r\n   * @returns {object} The range {min, max}.\r\n   */\r\n  calculateDataRange() {\r\n    let min = this.getValueAtOffset(0);\r\n    let max = min;\r\n    let value = 0;\r\n    const size = this.getGeometry().getSize();\r\n    let leni = size.getTotalSize();\r\n    // max to 3D\r\n    if (size.length() >= 3) {\r\n      leni = size.getDimSize(3);\r\n    }\r\n    for (let i = 0; i < leni; ++i) {\r\n      value = this.getValueAtOffset(i);\r\n      if (value > max) {\r\n        max = value;\r\n      }\r\n      if (value < min) {\r\n        min = value;\r\n      }\r\n    }\r\n    // return\r\n    return {min: min, max: max};\r\n  }\r\n\r\n  /**\r\n   * Calculate the rescaled data range of the image.\r\n   * WARNING: for speed reasons, only calculated on the first frame...\r\n   *\r\n   * @returns {object} The range {min, max}.\r\n   */\r\n  calculateRescaledDataRange() {\r\n    if (this.isIdentityRSI()) {\r\n      return this.getDataRange();\r\n    } else if (this.isConstantRSI()) {\r\n      const range = this.getDataRange();\r\n      const resmin = this.getRescaleSlopeAndIntercept().apply(range.min);\r\n      const resmax = this.getRescaleSlopeAndIntercept().apply(range.max);\r\n      return {\r\n        min: ((resmin < resmax) ? resmin : resmax),\r\n        max: ((resmin > resmax) ? resmin : resmax)\r\n      };\r\n    } else {\r\n      let rmin = this.getRescaledValueAtOffset(0);\r\n      let rmax = rmin;\r\n      let rvalue = 0;\r\n      const size = this.getGeometry().getSize();\r\n      let leni = size.getTotalSize();\r\n      // max to 3D\r\n      if (size.length() === 3) {\r\n        leni = size.getDimSize(3);\r\n      }\r\n      for (let i = 0; i < leni; ++i) {\r\n        rvalue = this.getRescaledValueAtOffset(i);\r\n        if (rvalue > rmax) {\r\n          rmax = rvalue;\r\n        }\r\n        if (rvalue < rmin) {\r\n          rmin = rvalue;\r\n        }\r\n      }\r\n      // return\r\n      return {min: rmin, max: rmax};\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate the histogram of the image.\r\n   *\r\n   * @returns {object} The histogram, data range and rescaled data range.\r\n   */\r\n  calculateHistogram() {\r\n    const size = this.getGeometry().getSize();\r\n    const histo = [];\r\n    let min = this.getValueAtOffset(0);\r\n    let max = min;\r\n    let value = 0;\r\n    let rmin = this.getRescaledValueAtOffset(0);\r\n    let rmax = rmin;\r\n    let rvalue = 0;\r\n    for (let i = 0, leni = size.getTotalSize(); i < leni; ++i) {\r\n      value = this.getValueAtOffset(i);\r\n      if (value > max) {\r\n        max = value;\r\n      }\r\n      if (value < min) {\r\n        min = value;\r\n      }\r\n      rvalue = this.getRescaledValueAtOffset(i);\r\n      if (rvalue > rmax) {\r\n        rmax = rvalue;\r\n      }\r\n      if (rvalue < rmin) {\r\n        rmin = rvalue;\r\n      }\r\n      histo[rvalue] = (histo[rvalue] || 0) + 1;\r\n    }\r\n    // set data range\r\n    const dataRange = {min: min, max: max};\r\n    const rescaledDataRange = {min: rmin, max: rmax};\r\n    // generate data for plotting\r\n    const histogram = [];\r\n    for (let b = rmin; b <= rmax; ++b) {\r\n      histogram.push([b, (histo[b] || 0)]);\r\n    }\r\n    // return\r\n    return {\r\n      dataRange: dataRange,\r\n      rescaledDataRange: rescaledDataRange,\r\n      histogram: histogram\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Convolute the image with a given 2D kernel.\r\n   *\r\n   * Note: Uses raw buffer values.\r\n   *\r\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\r\n   * @returns {Image} The convoluted image.\r\n   */\r\n  convolute2D(weights) {\r\n    if (weights.length !== 9) {\r\n      throw new Error(\r\n        'The convolution matrix does not have a length of 9; it has ' +\r\n        weights.length);\r\n    }\r\n\r\n    const newImage = this.clone();\r\n    const newBuffer = newImage.getBuffer();\r\n\r\n    const imgSize = this.getGeometry().getSize();\r\n    const dimOffset = imgSize.getDimSize(2) * this.getNumberOfComponents();\r\n    for (let k = 0; k < imgSize.get(2); ++k) {\r\n      this.convoluteBuffer(weights, newBuffer, k * dimOffset);\r\n    }\r\n\r\n    return newImage;\r\n  }\r\n\r\n  /**\r\n   * Convolute an image buffer with a given 2D kernel.\r\n   *\r\n   * Note: Uses raw buffer values.\r\n   *\r\n   * @param {Array} weights The weights of the 2D kernel as a 3x3 matrix.\r\n   * @param {TypedArray} buffer The buffer to convolute.\r\n   * @param {number} startOffset The index to start at.\r\n   */\r\n  convoluteBuffer(\r\n    weights, buffer, startOffset) {\r\n    const imgSize = this.getGeometry().getSize();\r\n    const ncols = imgSize.get(0);\r\n    const nrows = imgSize.get(1);\r\n    const ncomp = this.getNumberOfComponents();\r\n\r\n    // number of component and planar configuration vars\r\n    let factor = 1;\r\n    let componentOffset = 1;\r\n    if (ncomp === 3) {\r\n      if (this.getPlanarConfiguration() === 0) {\r\n        factor = 3;\r\n      } else {\r\n        componentOffset = imgSize.getDimSize(2);\r\n      }\r\n    }\r\n\r\n    // allow special indent for matrices\r\n    /*jshint indent:false */\r\n\r\n    // default weight offset matrix\r\n    const wOff = [];\r\n    wOff[0] = (-ncols - 1) * factor;\r\n    wOff[1] = (-ncols) * factor;\r\n    wOff[2] = (-ncols + 1) * factor;\r\n    wOff[3] = -factor;\r\n    wOff[4] = 0;\r\n    wOff[5] = 1 * factor;\r\n    wOff[6] = (ncols - 1) * factor;\r\n    wOff[7] = (ncols) * factor;\r\n    wOff[8] = (ncols + 1) * factor;\r\n\r\n    // border weight offset matrices\r\n    // borders are extended (see http://en.wikipedia.org/wiki/Kernel_%28image_processing%29)\r\n\r\n    // i=0, j=0\r\n    const wOff00 = [];\r\n    wOff00[0] = wOff[4]; wOff00[1] = wOff[4]; wOff00[2] = wOff[5];\r\n    wOff00[3] = wOff[4]; wOff00[4] = wOff[4]; wOff00[5] = wOff[5];\r\n    wOff00[6] = wOff[7]; wOff00[7] = wOff[7]; wOff00[8] = wOff[8];\r\n    // i=0, j=*\r\n    const wOff0x = [];\r\n    wOff0x[0] = wOff[1]; wOff0x[1] = wOff[1]; wOff0x[2] = wOff[2];\r\n    wOff0x[3] = wOff[4]; wOff0x[4] = wOff[4]; wOff0x[5] = wOff[5];\r\n    wOff0x[6] = wOff[7]; wOff0x[7] = wOff[7]; wOff0x[8] = wOff[8];\r\n    // i=0, j=nrows\r\n    const wOff0n = [];\r\n    wOff0n[0] = wOff[1]; wOff0n[1] = wOff[1]; wOff0n[2] = wOff[2];\r\n    wOff0n[3] = wOff[4]; wOff0n[4] = wOff[4]; wOff0n[5] = wOff[5];\r\n    wOff0n[6] = wOff[4]; wOff0n[7] = wOff[4]; wOff0n[8] = wOff[5];\r\n\r\n    // i=*, j=0\r\n    const wOffx0 = [];\r\n    wOffx0[0] = wOff[3]; wOffx0[1] = wOff[4]; wOffx0[2] = wOff[5];\r\n    wOffx0[3] = wOff[3]; wOffx0[4] = wOff[4]; wOffx0[5] = wOff[5];\r\n    wOffx0[6] = wOff[6]; wOffx0[7] = wOff[7]; wOffx0[8] = wOff[8];\r\n    // i=*, j=* -> wOff\r\n    // i=*, j=nrows\r\n    const wOffxn = [];\r\n    wOffxn[0] = wOff[0]; wOffxn[1] = wOff[1]; wOffxn[2] = wOff[2];\r\n    wOffxn[3] = wOff[3]; wOffxn[4] = wOff[4]; wOffxn[5] = wOff[5];\r\n    wOffxn[6] = wOff[3]; wOffxn[7] = wOff[4]; wOffxn[8] = wOff[5];\r\n\r\n    // i=ncols, j=0\r\n    const wOffn0 = [];\r\n    wOffn0[0] = wOff[3]; wOffn0[1] = wOff[4]; wOffn0[2] = wOff[4];\r\n    wOffn0[3] = wOff[3]; wOffn0[4] = wOff[4]; wOffn0[5] = wOff[4];\r\n    wOffn0[6] = wOff[6]; wOffn0[7] = wOff[7]; wOffn0[8] = wOff[7];\r\n    // i=ncols, j=*\r\n    const wOffnx = [];\r\n    wOffnx[0] = wOff[0]; wOffnx[1] = wOff[1]; wOffnx[2] = wOff[1];\r\n    wOffnx[3] = wOff[3]; wOffnx[4] = wOff[4]; wOffnx[5] = wOff[4];\r\n    wOffnx[6] = wOff[6]; wOffnx[7] = wOff[7]; wOffnx[8] = wOff[7];\r\n    // i=ncols, j=nrows\r\n    const wOffnn = [];\r\n    wOffnn[0] = wOff[0]; wOffnn[1] = wOff[1]; wOffnn[2] = wOff[1];\r\n    wOffnn[3] = wOff[3]; wOffnn[4] = wOff[4]; wOffnn[5] = wOff[4];\r\n    wOffnn[6] = wOff[3]; wOffnn[7] = wOff[4]; wOffnn[8] = wOff[4];\r\n\r\n    // restore indent for rest of method\r\n    /*jshint indent:4 */\r\n\r\n    // loop vars\r\n    let pixelOffset = startOffset;\r\n    let newValue = 0;\r\n    let wOffFinal = [];\r\n    for (let c = 0; c < ncomp; ++c) {\r\n      // component offset\r\n      pixelOffset += c * componentOffset;\r\n      for (let j = 0; j < nrows; ++j) {\r\n        for (let i = 0; i < ncols; ++i) {\r\n          wOffFinal = wOff;\r\n          // special border cases\r\n          if (i === 0 && j === 0) {\r\n            wOffFinal = wOff00;\r\n          } else if (i === 0 && j === (nrows - 1)) {\r\n            wOffFinal = wOff0n;\r\n          } else if (i === (ncols - 1) && j === 0) {\r\n            wOffFinal = wOffn0;\r\n          } else if (i === (ncols - 1) && j === (nrows - 1)) {\r\n            wOffFinal = wOffnn;\r\n          } else if (i === 0 && j !== (nrows - 1) && j !== 0) {\r\n            wOffFinal = wOff0x;\r\n          } else if (i === (ncols - 1) && j !== (nrows - 1) && j !== 0) {\r\n            wOffFinal = wOffnx;\r\n          } else if (i !== 0 && i !== (ncols - 1) && j === 0) {\r\n            wOffFinal = wOffx0;\r\n          } else if (i !== 0 && i !== (ncols - 1) && j === (nrows - 1)) {\r\n            wOffFinal = wOffxn;\r\n          }\r\n          // calculate the weighed sum of the source image pixels that\r\n          // fall under the convolution matrix\r\n          newValue = 0;\r\n          for (let wi = 0; wi < 9; ++wi) {\r\n            newValue += this.getValueAtOffset(\r\n              pixelOffset + wOffFinal[wi]) * weights[wi];\r\n          }\r\n          buffer[pixelOffset] = newValue;\r\n          // increment pixel offset\r\n          pixelOffset += factor;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform an image using a specific operator.\r\n   * WARNING: no size check!\r\n   *\r\n   * @param {Function} operator The operator to use when transforming.\r\n   * @returns {Image} The transformed image.\r\n   * Note: Uses the raw buffer values.\r\n   */\r\n  transform(operator) {\r\n    const newImage = this.clone();\r\n    const newBuffer = newImage.getBuffer();\r\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\r\n      newBuffer[i] = operator(newImage.getValueAtOffset(i));\r\n    }\r\n    return newImage;\r\n  }\r\n\r\n  /**\r\n   * Compose this image with another one and using a specific operator.\r\n   * WARNING: no size check!\r\n   *\r\n   * @param {Image} rhs The image to compose with.\r\n   * @param {Function} operator The operator to use when composing.\r\n   * @returns {Image} The composed image.\r\n   * Note: Uses the raw buffer values.\r\n   */\r\n  compose(rhs, operator) {\r\n    const newImage = this.clone();\r\n    const newBuffer = newImage.getBuffer();\r\n    for (let i = 0, leni = newBuffer.length; i < leni; ++i) {\r\n      // using the operator on the local buffer, i.e. the\r\n      // latest (not original) data\r\n      newBuffer[i] = Math.floor(\r\n        operator(this.getValueAtOffset(i), rhs.getValueAtOffset(i))\r\n      );\r\n    }\r\n    return newImage;\r\n  }\r\n\r\n} // class Image\r\n","import {View} from './view';\r\nimport {luts} from './luts';\r\nimport {\r\n  WindowCenterAndWidth,\r\n  defaultPresets\r\n} from './windowCenterAndWidth';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Image} from './image';\r\nimport {DataElement} from '../dicom/dataElement';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * {@link View} factory.\r\n */\r\nexport class ViewFactory {\r\n\r\n  /**\r\n   * Get an View object from the read DICOM file.\r\n   *\r\n   * @param {Object<string, DataElement>} dataElements The DICOM tags.\r\n   * @param {Image} image The associated image.\r\n   * @returns {View} The new View.\r\n   */\r\n  create(dataElements, image) {\r\n    // view\r\n    const view = new View(image);\r\n\r\n    // default color map\r\n    if (image.getPhotometricInterpretation() === 'MONOCHROME1') {\r\n      view.setDefaultColourMap(luts.invPlain);\r\n    } else if (image.getPhotometricInterpretation() === 'PALETTE COLOR') {\r\n      const paletteLut = image.getMeta().paletteLut;\r\n      if (typeof (paletteLut) !== 'undefined') {\r\n        view.setDefaultColourMap(paletteLut);\r\n      }\r\n    }\r\n\r\n    // window level presets\r\n    let windowPresets = {};\r\n    // image presets\r\n    if (typeof image.getMeta().windowPresets !== 'undefined') {\r\n      windowPresets = image.getMeta().windowPresets;\r\n    }\r\n    // min/max\r\n    // Not filled yet since it is stil too costly to calculate min/max\r\n    // for each slice... It will be filled at first use\r\n    // (see view.setWindowLevelPreset).\r\n    // Order is important, if no wl from DICOM, this will be the default.\r\n    windowPresets.minmax = {name: 'minmax'};\r\n    // optional modality presets\r\n    if (typeof defaultPresets !== 'undefined') {\r\n      const modality = image.getMeta().Modality;\r\n      for (const key in defaultPresets[modality]) {\r\n        const preset = defaultPresets[modality][key];\r\n        windowPresets[key] = {\r\n          wl: [new WindowCenterAndWidth(preset.center, preset.width)],\r\n          name: key\r\n        };\r\n      }\r\n    }\r\n\r\n    // store\r\n    view.setWindowPresets(windowPresets);\r\n\r\n    // initialise the view\r\n    view.init();\r\n\r\n    return view;\r\n  }\r\n\r\n} // class ViewFactory\r\n","import {Index} from '../math/index';\r\nimport {RescaleLut} from './rescaleLut';\r\nimport {WindowLut} from './windowLut';\r\nimport {luts} from './luts';\r\nimport {WindowCenterAndWidth} from './windowCenterAndWidth';\r\nimport {generateImageDataMonochrome} from './viewMonochrome';\r\nimport {generateImageDataPaletteColor} from './viewPaletteColor';\r\nimport {generateImageDataRgb} from './viewRgb';\r\nimport {generateImageDataYbrFull} from './viewYbrFull';\r\nimport {ViewFactory} from './viewFactory';\r\nimport {getSliceIterator} from '../image/iterator';\r\nimport {ListenerHandler} from '../utils/listen';\r\nimport {logger} from '../utils/logger';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Image} from './image';\r\nimport {ColourMap} from './luts';\r\nimport {Matrix33} from '../math/matrix';\r\nimport {Point} from '../math/point';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * List of view event names.\r\n *\r\n * @type {Array}\r\n */\r\nexport const viewEventNames = [\r\n  'wlchange',\r\n  'wlpresetadd',\r\n  'colourchange',\r\n  'positionchange',\r\n  'opacitychange',\r\n  'alphafuncchange'\r\n];\r\n\r\n/**\r\n * Create a View from DICOM elements and image.\r\n *\r\n * @param {object} elements The DICOM elements.\r\n * @param {Image} image The associated image.\r\n * @returns {View} The View object.\r\n */\r\nexport function createView(elements, image) {\r\n  const factory = new ViewFactory();\r\n  return factory.create(elements, image);\r\n}\r\n\r\n/**\r\n * View class.\r\n *\r\n * Need to set the window lookup table once created\r\n * (either directly or with helper methods).\r\n *\r\n * @example\r\n * // XMLHttpRequest onload callback\r\n * const onload = function (event) {\r\n *   // parse the dicom buffer\r\n *   const dicomParser = new dwv.DicomParser();\r\n *   dicomParser.parse(event.target.response);\r\n *   // create the image object\r\n *   const image = dwv.createImage(dicomParser.getDicomElements());\r\n *   // create the view\r\n *   const view = dwv.createView(dicomParser.getDicomElements(), image);\r\n *   // setup canvas\r\n *   const canvas = document.createElement('canvas');\r\n *   canvas.width = 256;\r\n *   canvas.height = 256;\r\n *   const ctx = canvas.getContext(\"2d\");\r\n *   // update the image data\r\n *   const imageData = ctx.createImageData(256, 256);\r\n *   view.generateImageData(imageData);\r\n *   ctx.putImageData(imageData, 0, 0);\r\n *   // update html\r\n *   const div = document.getElementById('dwv');\r\n *   div.appendChild(canvas);;\r\n * };\r\n * // DICOM file request\r\n * const request = new XMLHttpRequest();\r\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\r\n * request.open('GET', url);\r\n * request.responseType = 'arraybuffer';\r\n * request.onload = onload;\r\n * request.send();\r\n */\r\nexport class View {\r\n\r\n  /**\r\n   * The associated image.\r\n   *\r\n   * @type {Image}\r\n   */\r\n  #image;\r\n\r\n  /**\r\n   * Window lookup tables, indexed per Rescale Slope and Intercept (RSI).\r\n   *\r\n   * @type {object}\r\n   */\r\n  #windowLuts = {};\r\n\r\n  /**\r\n   * Window presets.\r\n   * Minmax will be filled at first use (see view.setWindowLevelPreset).\r\n   *\r\n   * @type {object}\r\n   */\r\n  #windowPresets = {minmax: {name: 'minmax'}};\r\n\r\n  /**\r\n   * Current window preset name.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #currentPresetName = null;\r\n\r\n  /**\r\n   * Current window level.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #currentWl = null;\r\n\r\n  /**\r\n   * colour map.\r\n   *\r\n   * @type {ColourMap}\r\n   */\r\n  #colourMap = luts.plain;\r\n\r\n  /**\r\n   * Current position as a Point.\r\n   * Store position and not index to stay geometry independent.\r\n   *\r\n   * @type {Point}\r\n   */\r\n  #currentPosition = null;\r\n\r\n  /**\r\n   * View orientation. Undefined will use the original slice ordering.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #orientation;\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * @param {Image} image The associated image.\r\n   */\r\n  constructor(image) {\r\n    this.#image = image;\r\n\r\n    // listen to appendframe event to update the current position\r\n    //   to add the extra dimension\r\n    this.#image.addEventListener('appendframe', () => {\r\n      // update current position if first appendFrame\r\n      const index = this.getCurrentIndex();\r\n      if (index.length() === 3) {\r\n        // add dimension\r\n        const values = index.getValues();\r\n        values.push(0);\r\n        this.setCurrentIndex(new Index(values));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the associated image.\r\n   *\r\n   * @returns {Image} The associated image.\r\n   */\r\n  getImage() {\r\n    return this.#image;\r\n  }\r\n\r\n  /**\r\n   * Set the associated image.\r\n   *\r\n   * @param {Image} inImage The associated image.\r\n   */\r\n  setImage(inImage) {\r\n    this.#image = inImage;\r\n  }\r\n\r\n  /**\r\n   * Get the view orientation.\r\n   *\r\n   * @returns {Matrix33} The orientation matrix.\r\n   */\r\n  getOrientation() {\r\n    return this.#orientation;\r\n  }\r\n\r\n  /**\r\n   * Set the view orientation.\r\n   *\r\n   * @param {Matrix33} mat33 The orientation matrix.\r\n   */\r\n  setOrientation(mat33) {\r\n    this.#orientation = mat33;\r\n  }\r\n\r\n  /**\r\n   * Initialise the view: set initial index.\r\n   */\r\n  init() {\r\n    this.setInitialIndex();\r\n  }\r\n\r\n  /**\r\n   * Set the initial index to 0.\r\n   */\r\n  setInitialIndex() {\r\n    const geometry = this.#image.getGeometry();\r\n    const size = geometry.getSize();\r\n    const values = new Array(size.length());\r\n    values.fill(0);\r\n    // middle\r\n    values[0] = Math.floor(size.get(0) / 2);\r\n    values[1] = Math.floor(size.get(1) / 2);\r\n    values[2] = Math.floor(size.get(2) / 2);\r\n    this.setCurrentIndex(new Index(values), true);\r\n  }\r\n\r\n  /**\r\n   * Get the milliseconds per frame from frame rate.\r\n   *\r\n   * @param {number} recommendedDisplayFrameRate Recommended Display Frame Rate.\r\n   * @returns {number} The milliseconds per frame.\r\n   */\r\n  getPlaybackMilliseconds(recommendedDisplayFrameRate) {\r\n    if (!recommendedDisplayFrameRate) {\r\n      // Default to 10 FPS if none is found in the meta\r\n      recommendedDisplayFrameRate = 10;\r\n    }\r\n    // round milliseconds per frame to nearest whole number\r\n    return Math.round(1000 / recommendedDisplayFrameRate);\r\n  }\r\n\r\n  /**\r\n   * Per value alpha function.\r\n   *\r\n   * @param {*} _value The pixel value. Can be a number for monochrome\r\n   *  data or an array for RGB data.\r\n   * @param {number} _index The data index of the value.\r\n   * @returns {number} The coresponding alpha [0,255].\r\n   */\r\n  #alphaFunction = function (_value, _index) {\r\n    // default always returns fully visible\r\n    return 0xff;\r\n  };\r\n\r\n  /**\r\n   * @callback alphaFn\r\n   * @param {object} value The pixel value.\r\n   * @param {object} index The values' index.\r\n   * @returns {number} The value to display.\r\n   */\r\n\r\n  /**\r\n   * Get the alpha function.\r\n   *\r\n   * @returns {alphaFn} The function.\r\n   */\r\n  getAlphaFunction() {\r\n    return this.#alphaFunction;\r\n  }\r\n\r\n  /**\r\n   * Set alpha function.\r\n   *\r\n   * @param {alphaFn} func The function.\r\n   * @fires View#alphafuncchange\r\n   */\r\n  setAlphaFunction(func) {\r\n    this.#alphaFunction = func;\r\n    /**\r\n     * Alpha func change event.\r\n     *\r\n     * @event View#alphafuncchange\r\n     * @type {object}\r\n     */\r\n    this.#fireEvent({\r\n      type: 'alphafuncchange'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the window LUT of the image.\r\n   * Warning: can be undefined in no window/level was set.\r\n   *\r\n   * @param {object} [rsi] Optional image rsi, will take the one of the\r\n   *   current slice otherwise.\r\n   * @returns {WindowLut} The window LUT of the image.\r\n   * @fires View#wlchange\r\n   */\r\n  getCurrentWindowLut(rsi) {\r\n    // check position\r\n    if (!this.getCurrentIndex()) {\r\n      this.setInitialIndex();\r\n    }\r\n    const currentIndex = this.getCurrentIndex();\r\n    // use current rsi if not provided\r\n    if (typeof rsi === 'undefined') {\r\n      rsi = this.#image.getRescaleSlopeAndIntercept(currentIndex);\r\n    }\r\n\r\n    // get the current window level\r\n    let wl = null;\r\n    // special case for 'perslice' presets\r\n    if (this.#currentPresetName &&\r\n      typeof this.#windowPresets[this.#currentPresetName] !== 'undefined' &&\r\n      typeof this.#windowPresets[this.#currentPresetName].perslice !==\r\n        'undefined' &&\r\n      this.#windowPresets[this.#currentPresetName].perslice === true) {\r\n      // get the preset for this slice\r\n      const offset = this.#image.getSecondaryOffset(currentIndex);\r\n      wl = this.#windowPresets[this.#currentPresetName].wl[offset];\r\n    }\r\n    // regular case\r\n    if (!wl) {\r\n      // if no current, use first id\r\n      if (!this.#currentWl) {\r\n        this.setWindowLevelPresetById(0, true);\r\n      }\r\n      wl = this.#currentWl;\r\n    }\r\n\r\n    // get the window lut\r\n    let wlut = this.#windowLuts[rsi.toString()];\r\n    if (typeof wlut === 'undefined') {\r\n      // create the rescale lookup table\r\n      const rescaleLut = new RescaleLut(\r\n        this.#image.getRescaleSlopeAndIntercept(),\r\n        this.#image.getMeta().BitsStored);\r\n      // create the window lookup table\r\n      const windowLut = new WindowLut(\r\n        rescaleLut, this.#image.getMeta().IsSigned);\r\n      // store\r\n      this.addWindowLut(windowLut);\r\n      wlut = windowLut;\r\n    }\r\n\r\n    // update lut window level if not present or different from previous\r\n    const lutWl = wlut.getWindowLevel();\r\n    if (!wl.equals(lutWl)) {\r\n      // set lut window level\r\n      wlut.setWindowLevel(wl);\r\n      wlut.update();\r\n      // fire change event\r\n      if (!lutWl ||\r\n        lutWl.getWidth() !== wl.getWidth() ||\r\n        lutWl.getCenter() !== wl.getCenter()) {\r\n        this.#fireEvent({\r\n          type: 'wlchange',\r\n          value: [wl.getCenter(), wl.getWidth()],\r\n          wc: wl.getCenter(),\r\n          ww: wl.getWidth(),\r\n          skipGenerate: true\r\n        });\r\n      }\r\n    }\r\n\r\n    // return\r\n    return wlut;\r\n  }\r\n\r\n  /**\r\n   * Add the window LUT to the list.\r\n   *\r\n   * @param {WindowLut} wlut The window LUT of the image.\r\n   */\r\n  addWindowLut(wlut) {\r\n    const rsi = wlut.getRescaleLut().getRSI();\r\n    this.#windowLuts[rsi.toString()] = wlut;\r\n  }\r\n\r\n  /**\r\n   * Get the window presets.\r\n   *\r\n   * @returns {object} The window presets.\r\n   */\r\n  getWindowPresets() {\r\n    return this.#windowPresets;\r\n  }\r\n\r\n  /**\r\n   * Get the window presets names.\r\n   *\r\n   * @returns {object} The list of window presets names.\r\n   */\r\n  getWindowPresetsNames() {\r\n    return Object.keys(this.#windowPresets);\r\n  }\r\n\r\n  /**\r\n   * Set the window presets.\r\n   *\r\n   * @param {object} presets The window presets.\r\n   */\r\n  setWindowPresets(presets) {\r\n    this.#windowPresets = presets;\r\n  }\r\n\r\n  /**\r\n   * Set the default colour map.\r\n   *\r\n   * @param {ColourMap} map The colour map.\r\n   */\r\n  setDefaultColourMap(map) {\r\n    this.#colourMap = map;\r\n  }\r\n\r\n  /**\r\n   * Add window presets to the existing ones.\r\n   *\r\n   * @param {object} presets The window presets.\r\n   */\r\n  addWindowPresets(presets) {\r\n    const keys = Object.keys(presets);\r\n    let key = null;\r\n    for (let i = 0; i < keys.length; ++i) {\r\n      key = keys[i];\r\n      if (typeof this.#windowPresets[key] !== 'undefined') {\r\n        if (typeof this.#windowPresets[key].perslice !== 'undefined' &&\r\n        this.#windowPresets[key].perslice === true) {\r\n          throw new Error('Cannot add perslice preset');\r\n        } else {\r\n          this.#windowPresets[key] = presets[key];\r\n        }\r\n      } else {\r\n        // add new\r\n        this.#windowPresets[key] = presets[key];\r\n        // fire event\r\n        /**\r\n         * Window/level add preset event.\r\n         *\r\n         * @event View#wlpresetadd\r\n         * @type {object}\r\n         * @property {string} name The name of the preset.\r\n         */\r\n        this.#fireEvent({\r\n          type: 'wlpresetadd',\r\n          name: key\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the colour map of the image.\r\n   *\r\n   * @returns {ColourMap} The colour map of the image.\r\n   */\r\n  getColourMap() {\r\n    return this.#colourMap;\r\n  }\r\n\r\n  /**\r\n   * Set the colour map of the image.\r\n   *\r\n   * @param {ColourMap} map The colour map of the image.\r\n   * @fires View#colourchange\r\n   */\r\n  setColourMap(map) {\r\n    this.#colourMap = map;\r\n    /**\r\n     * Color change event.\r\n     *\r\n     * @event View#colourchange\r\n     * @type {object}\r\n     * @property {Array} value The changed value.\r\n     * @property {number} wc The new window center value.\r\n     * @property {number} ww The new window wdth value.\r\n     */\r\n    this.#fireEvent({\r\n      type: 'colourchange',\r\n      wc: this.getCurrentWindowLut().getWindowLevel().getCenter(),\r\n      ww: this.getCurrentWindowLut().getWindowLevel().getWidth()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the current position.\r\n   *\r\n   * @returns {Point} The current position.\r\n   */\r\n  getCurrentPosition() {\r\n    return this.#currentPosition;\r\n  }\r\n\r\n  /**\r\n   * Get the current index.\r\n   *\r\n   * @returns {Index} The current index.\r\n   */\r\n  getCurrentIndex() {\r\n    const position = this.getCurrentPosition();\r\n    if (!position) {\r\n      return null;\r\n    }\r\n    const geometry = this.getImage().getGeometry();\r\n    return geometry.worldToIndex(position);\r\n  }\r\n\r\n  /**\r\n   * Check is the provided position can be set.\r\n   *\r\n   * @param {Point} position The position.\r\n   * @returns {boolean} True is the position is in bounds.\r\n   */\r\n  canSetPosition(position) {\r\n    const geometry = this.#image.getGeometry();\r\n    const index = geometry.worldToIndex(position);\r\n    const dirs = [this.getScrollIndex()];\r\n    if (index.length() === 4) {\r\n      dirs.push(3);\r\n    }\r\n    return geometry.isIndexInBounds(index, dirs);\r\n  }\r\n\r\n  /**\r\n   * Get the origin at a given position.\r\n   *\r\n   * @param {Point} position The position.\r\n   * @returns {Point} The origin.\r\n   */\r\n  getOrigin(position) {\r\n    const geometry = this.#image.getGeometry();\r\n    let originIndex = 0;\r\n    if (typeof position !== 'undefined') {\r\n      const index = geometry.worldToIndex(position);\r\n      // index is reoriented, 2 is scroll index\r\n      originIndex = index.get(2);\r\n    }\r\n    return geometry.getOrigins()[originIndex];\r\n  }\r\n\r\n  /**\r\n   * Set the current position.\r\n   *\r\n   * @param {Point} position The new position.\r\n   * @param {boolean} silent Flag to fire event or not.\r\n   * @returns {boolean} False if not in bounds\r\n   * @fires View#positionchange\r\n   */\r\n  setCurrentPosition(position, silent) {\r\n    // send invalid event if not in bounds\r\n    const geometry = this.#image.getGeometry();\r\n    const index = geometry.worldToIndex(position);\r\n    const dirs = [this.getScrollIndex()];\r\n    if (index.length() === 4) {\r\n      dirs.push(3);\r\n    }\r\n    if (!geometry.isIndexInBounds(index, dirs)) {\r\n      if (!silent) {\r\n        // fire event with valid: false\r\n        this.#fireEvent({\r\n          type: 'positionchange',\r\n          value: [\r\n            index.getValues(),\r\n            position.getValues(),\r\n          ],\r\n          valid: false\r\n        });\r\n      }\r\n      return false;\r\n    }\r\n    return this.setCurrentIndex(index, silent);\r\n  }\r\n\r\n  /**\r\n   * Set the current index.\r\n   *\r\n   * @param {Index} index The new index.\r\n   * @param {boolean} [silent] Flag to fire event or not.\r\n   * @returns {boolean} False if not in bounds.\r\n   * @fires View#positionchange\r\n   */\r\n  setCurrentIndex(index, silent) {\r\n    // check input\r\n    if (typeof silent === 'undefined') {\r\n      silent = false;\r\n    }\r\n\r\n    const geometry = this.#image.getGeometry();\r\n    const position = geometry.indexToWorld(index);\r\n\r\n    // check if possible\r\n    const dirs = [this.getScrollIndex()];\r\n    if (index.length() === 4) {\r\n      dirs.push(3);\r\n    }\r\n    if (!geometry.isIndexInBounds(index, dirs)) {\r\n      // do no send invalid positionchange event: avoid empty repaint\r\n      return false;\r\n    }\r\n\r\n    // calculate diff dims before updating internal\r\n    let diffDims = null;\r\n    let currentIndex = null;\r\n    if (this.getCurrentPosition()) {\r\n      currentIndex = this.getCurrentIndex();\r\n    }\r\n    if (currentIndex) {\r\n      if (currentIndex.canCompare(index)) {\r\n        diffDims = currentIndex.compare(index);\r\n      } else {\r\n        diffDims = [];\r\n        const minLen = Math.min(currentIndex.length(), index.length());\r\n        for (let i = 0; i < minLen; ++i) {\r\n          if (currentIndex.get(i) !== index.get(i)) {\r\n            diffDims.push(i);\r\n          }\r\n        }\r\n        const maxLen = Math.max(currentIndex.length(), index.length());\r\n        for (let j = minLen; j < maxLen; ++j) {\r\n          diffDims.push(j);\r\n        }\r\n      }\r\n    } else {\r\n      diffDims = [];\r\n      for (let k = 0; k < index.length(); ++k) {\r\n        diffDims.push(k);\r\n      }\r\n    }\r\n\r\n    // assign\r\n    this.#currentPosition = position;\r\n\r\n    if (!silent) {\r\n      /**\r\n       * Position change event.\r\n       *\r\n       * @event View#positionchange\r\n       * @type {object}\r\n       * @property {Array} value The changed value as [index, pixelValue].\r\n       * @property {Array} diffDims An array of modified indices.\r\n       */\r\n      const posEvent = {\r\n        type: 'positionchange',\r\n        value: [\r\n          index.getValues(),\r\n          position.getValues(),\r\n        ],\r\n        diffDims: diffDims,\r\n        data: {\r\n          imageUid: this.#image.getImageUid(index)\r\n        }\r\n      };\r\n\r\n      // add value if possible\r\n      if (this.#image.canQuantify()) {\r\n        const pixValue = this.#image.getRescaledValueAtIndex(index);\r\n        posEvent.value.push(pixValue);\r\n      }\r\n\r\n      // fire\r\n      this.#fireEvent(posEvent);\r\n    }\r\n\r\n    // all good\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Set the view window/level.\r\n   *\r\n   * @param {number} center The window center.\r\n   * @param {number} width The window width.\r\n   * @param {string} [name] Associated preset name, defaults to 'manual'.\r\n   * Warning: uses the latest set rescale LUT or the default linear one.\r\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\r\n   * @fires View#wlchange\r\n   */\r\n  setWindowLevel(center, width, name, silent) {\r\n    // window width shall be >= 1 (see https://www.dabsoft.ch/dicom/3/C.11.2.1.2/)\r\n    if (width < 1) {\r\n      return;\r\n    }\r\n\r\n    // check input\r\n    if (typeof name === 'undefined') {\r\n      name = 'manual';\r\n    }\r\n    if (typeof silent === 'undefined') {\r\n      silent = false;\r\n    }\r\n\r\n    // new window level\r\n    const newWl = new WindowCenterAndWidth(center, width);\r\n\r\n    // check if new\r\n    const isNew = !newWl.equals(this.#currentWl);\r\n\r\n    // compare to previous if present\r\n    if (isNew) {\r\n      const isNewWidth = this.#currentWl\r\n        ? this.#currentWl.getWidth() !== width : true;\r\n      const isNewCenter = this.#currentWl\r\n        ? this.#currentWl.getCenter() !== center : true;\r\n      // assign\r\n      this.#currentWl = newWl;\r\n      this.#currentPresetName = name;\r\n\r\n      if (isNewWidth || isNewCenter) {\r\n        /**\r\n         * Window/level change event.\r\n         *\r\n         * @event View#wlchange\r\n         * @type {object}\r\n         * @property {Array} value The changed value.\r\n         * @property {number} wc The new window center value.\r\n         * @property {number} ww The new window wdth value.\r\n         * @property {boolean} skipGenerate Flag to skip view generation.\r\n         */\r\n        this.#fireEvent({\r\n          type: 'wlchange',\r\n          value: [center, width],\r\n          wc: center,\r\n          ww: width,\r\n          skipGenerate: silent\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the window level to the preset with the input name.\r\n   *\r\n   * @param {string} name The name of the preset to activate.\r\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\r\n   */\r\n  setWindowLevelPreset(name, silent) {\r\n    const preset = this.getWindowPresets()[name];\r\n    if (typeof preset === 'undefined') {\r\n      throw new Error('Unknown window level preset: \\'' + name + '\\'');\r\n    }\r\n    // special min/max\r\n    if (name === 'minmax' && typeof preset.wl === 'undefined') {\r\n      preset.wl = [this.getWindowLevelMinMax()];\r\n    }\r\n    // default to first\r\n    let wl = preset.wl[0];\r\n    // check if 'perslice' case\r\n    if (typeof preset.perslice !== 'undefined' &&\r\n      preset.perslice === true) {\r\n      const offset = this.#image.getSecondaryOffset(this.getCurrentIndex());\r\n      wl = preset.wl[offset];\r\n    }\r\n    // set w/l\r\n    this.setWindowLevel(\r\n      wl.getCenter(), wl.getWidth(), name, silent);\r\n  }\r\n\r\n  /**\r\n   * Set the window level to the preset with the input id.\r\n   *\r\n   * @param {number} id The id of the preset to activate.\r\n   * @param {boolean} [silent] Flag to launch events with skipGenerate.\r\n   */\r\n  setWindowLevelPresetById(id, silent) {\r\n    const keys = Object.keys(this.getWindowPresets());\r\n    this.setWindowLevelPreset(keys[id], silent);\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Get the image window/level that covers the full data range.\r\n   * Warning: uses the latest set rescale LUT or the default linear one.\r\n   *\r\n   * @returns {WindowCenterAndWidth} A min/max window level.\r\n   */\r\n  getWindowLevelMinMax() {\r\n    const range = this.getImage().getRescaledDataRange();\r\n    const min = range.min;\r\n    const max = range.max;\r\n    let width = max - min;\r\n    // full black / white images, defaults to 1.\r\n    if (width < 1) {\r\n      logger.warn('Zero or negative window width, defaulting to one.');\r\n      width = 1;\r\n    }\r\n    const center = min + width / 2;\r\n    return new WindowCenterAndWidth(center, width);\r\n  }\r\n\r\n  /**\r\n   * Set the image window/level to cover the full data range.\r\n   * Warning: uses the latest set rescale LUT or the default linear one.\r\n   */\r\n  setWindowLevelMinMax() {\r\n    // calculate center and width\r\n    const wl = this.getWindowLevelMinMax();\r\n    // set window level\r\n    this.setWindowLevel(wl.getCenter(), wl.getWidth(), 'minmax');\r\n  }\r\n\r\n  /**\r\n   * Generate display image data to be given to a canvas.\r\n   *\r\n   * @param {ImageData} data The iamge data to fill in.\r\n   * @param {Index} index Optional index at which to generate,\r\n   *   otherwise generates at current index.\r\n   */\r\n  generateImageData(data, index) {\r\n    // check index\r\n    if (typeof index === 'undefined') {\r\n      if (!this.getCurrentIndex()) {\r\n        this.setInitialIndex();\r\n      }\r\n      index = this.getCurrentIndex();\r\n    }\r\n\r\n    const image = this.getImage();\r\n    const iterator = getSliceIterator(\r\n      image, index, false, this.getOrientation());\r\n\r\n    const photoInterpretation = image.getPhotometricInterpretation();\r\n    switch (photoInterpretation) {\r\n    case 'MONOCHROME1':\r\n    case 'MONOCHROME2':\r\n      generateImageDataMonochrome(\r\n        data,\r\n        iterator,\r\n        this.getAlphaFunction(),\r\n        this.getCurrentWindowLut(),\r\n        this.getColourMap()\r\n      );\r\n      break;\r\n\r\n    case 'PALETTE COLOR':\r\n      generateImageDataPaletteColor(\r\n        data,\r\n        iterator,\r\n        this.getAlphaFunction(),\r\n        this.getColourMap(),\r\n        image.getMeta().BitsStored === 16\r\n      );\r\n      break;\r\n\r\n    case 'RGB':\r\n      generateImageDataRgb(\r\n        data,\r\n        iterator,\r\n        this.getAlphaFunction()\r\n      );\r\n      break;\r\n\r\n    case 'YBR_FULL':\r\n      generateImageDataYbrFull(\r\n        data,\r\n        iterator,\r\n        this.getAlphaFunction()\r\n      );\r\n      break;\r\n\r\n    default:\r\n      throw new Error(\r\n        'Unsupported photometric interpretation: ' + photoInterpretation);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Increment the provided dimension.\r\n   *\r\n   * @param {number} dim The dimension to increment.\r\n   * @param {boolean} silent Do not send event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  incrementIndex(dim, silent) {\r\n    const index = this.getCurrentIndex();\r\n    const values = new Array(index.length());\r\n    values.fill(0);\r\n    if (dim < values.length) {\r\n      values[dim] = 1;\r\n    } else {\r\n      console.warn('Cannot increment given index: ', dim, values.length);\r\n    }\r\n    const incr = new Index(values);\r\n    const newIndex = index.add(incr);\r\n    return this.setCurrentIndex(newIndex, silent);\r\n  }\r\n\r\n  /**\r\n   * Decrement the provided dimension.\r\n   *\r\n   * @param {number} dim The dimension to increment.\r\n   * @param {boolean} silent Do not send event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  decrementIndex(dim, silent) {\r\n    const index = this.getCurrentIndex();\r\n    const values = new Array(index.length());\r\n    values.fill(0);\r\n    if (dim < values.length) {\r\n      values[dim] = -1;\r\n    } else {\r\n      console.warn('Cannot decrement given index: ', dim, values.length);\r\n    }\r\n    const incr = new Index(values);\r\n    const newIndex = index.add(incr);\r\n    return this.setCurrentIndex(newIndex, silent);\r\n  }\r\n\r\n  /**\r\n   * Get the scroll dimension index.\r\n   *\r\n   * @returns {number} The index.\r\n   */\r\n  getScrollIndex() {\r\n    let index = null;\r\n    const orientation = this.getOrientation();\r\n    if (typeof orientation !== 'undefined') {\r\n      index = orientation.getThirdColMajorDirection();\r\n    } else {\r\n      index = 2;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Decrement the scroll dimension index.\r\n   *\r\n   * @param {boolean} silent Do not send event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  decrementScrollIndex(silent) {\r\n    return this.decrementIndex(this.getScrollIndex(), silent);\r\n  }\r\n\r\n  /**\r\n   * Increment the scroll dimension index.\r\n   *\r\n   * @param {boolean} silent Do not send event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  incrementScrollIndex(silent) {\r\n    return this.incrementIndex(this.getScrollIndex(), silent);\r\n  }\r\n\r\n} // class View\r\n","// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {WindowLut} from './windowLut';\r\nimport {ColourMap} from './luts';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Generate image data for 'MONOCHROME*' photometric interpretation.\r\n *\r\n * @param {ImageData} array The array to store the outut data\r\n * @param {object} iterator Position iterator.\r\n * @param {Function} alphaFunc The alpha function.\r\n * @param {WindowLut} windowLut The window/level LUT.\r\n * @param {ColourMap} colourMap The colour map.\r\n */\r\nexport function generateImageDataMonochrome(\r\n  array,\r\n  iterator,\r\n  alphaFunc,\r\n  windowLut,\r\n  colourMap) {\r\n  let index = 0;\r\n  let pxValue = 0;\r\n  let ival = iterator.next();\r\n  while (!ival.done) {\r\n    // pixel value\r\n    pxValue = windowLut.getValue(ival.value);\r\n    // store data\r\n    array.data[index] = colourMap.red[pxValue];\r\n    array.data[index + 1] = colourMap.green[pxValue];\r\n    array.data[index + 2] = colourMap.blue[pxValue];\r\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\r\n    // increment\r\n    index += 4;\r\n    ival = iterator.next();\r\n  }\r\n}\r\n","import {logger} from '../utils/logger';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {ColourMap} from './luts';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Generate image data for 'PALETTE COLOR' photometric interpretation.\r\n *\r\n * @param {ImageData} array The array to store the outut data\r\n * @param {object} iterator Position iterator.\r\n * @param {Function} alphaFunc The alpha function.\r\n * @param {ColourMap} colourMap The colour map.\r\n * @param {boolean} is16BitsStored Flag to know if the data is 16bits.\r\n */\r\nexport function generateImageDataPaletteColor(\r\n  array,\r\n  iterator,\r\n  alphaFunc,\r\n  colourMap,\r\n  is16BitsStored) {\r\n  // right shift 8\r\n  const to8 = function (value) {\r\n    return value >> 8;\r\n  };\r\n\r\n  if (is16BitsStored) {\r\n    logger.info('Scaling 16bits data to 8bits.');\r\n  }\r\n\r\n  let index = 0;\r\n  let pxValue = 0;\r\n  let ival = iterator.next();\r\n  while (!ival.done) {\r\n    // pixel value\r\n    pxValue = ival.value;\r\n    // store data\r\n    // TODO check pxValue fits in lut\r\n    if (is16BitsStored) {\r\n      array.data[index] = to8(colourMap.red[pxValue]);\r\n      array.data[index + 1] = to8(colourMap.green[pxValue]);\r\n      array.data[index + 2] = to8(colourMap.blue[pxValue]);\r\n    } else {\r\n      array.data[index] = colourMap.red[pxValue];\r\n      array.data[index + 1] = colourMap.green[pxValue];\r\n      array.data[index + 2] = colourMap.blue[pxValue];\r\n    }\r\n    array.data[index + 3] = alphaFunc(pxValue, ival.index);\r\n    // increment\r\n    index += 4;\r\n    ival = iterator.next();\r\n  }\r\n}\r\n","/**\r\n * Generate image data for 'RGB' photometric interpretation.\r\n *\r\n * @param {ImageData} array The array to store the outut data\r\n * @param {object} iterator Position iterator.\r\n * @param {Function} alphaFunc The alpha function.\r\n */\r\nexport function generateImageDataRgb(\r\n  array,\r\n  iterator,\r\n  alphaFunc) {\r\n  let index = 0;\r\n  let ival = iterator.next();\r\n  while (!ival.done) {\r\n    // store data\r\n    array.data[index] = ival.value[0];\r\n    array.data[index + 1] = ival.value[1];\r\n    array.data[index + 2] = ival.value[2];\r\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\r\n    // increment\r\n    index += 4;\r\n    ival = iterator.next();\r\n  }\r\n}\r\n","import {ybrToRgb} from '../utils/colour';\r\n\r\n/**\r\n * Generate image data for 'YBR_FULL' photometric interpretation.\r\n *\r\n * @param {ImageData} array The array to store the outut data\r\n * @param {object} iterator Position iterator.\r\n * @param {Function} alphaFunc The alpha function.\r\n */\r\nexport function generateImageDataYbrFull(\r\n  array,\r\n  iterator,\r\n  alphaFunc) {\r\n  let index = 0;\r\n  let rgb = null;\r\n  let ival = iterator.next();\r\n  while (!ival.done) {\r\n    // convert ybr to rgb\r\n    rgb = ybrToRgb(ival.value[0], ival.value[1], ival.value[2]);\r\n    // store data\r\n    array.data[index] = rgb.r;\r\n    array.data[index + 1] = rgb.g;\r\n    array.data[index + 2] = rgb.b;\r\n    array.data[index + 3] = alphaFunc(ival.value, ival.index);\r\n    // increment\r\n    index += 4;\r\n    ival = iterator.next();\r\n  }\r\n}\r\n","import {Vector3D} from '../math/vector';\r\nimport {Point3D} from '../math/point';\r\nimport {getTargetOrientation} from '../gui/layerGroup';\r\nimport {getOrientedArray3D, getDeOrientedArray3D} from './geometry';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Matrix33} from '../math/matrix';\r\nimport {Spacing} from './spacing';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Plane geometry helper.\r\n */\r\nexport class PlaneHelper {\r\n\r\n  /**\r\n   * The associated spacing.\r\n   *\r\n   * @type {Spacing}\r\n   */\r\n  #spacing;\r\n\r\n  /**\r\n   * The image orientation.\r\n   *\r\n   * @type {Matrix33}\r\n   */\r\n  #imageOrientation;\r\n\r\n  /**\r\n   * The viewe orientation.\r\n   *\r\n   * @type {Matrix33}\r\n   */\r\n  #viewOrientation;\r\n\r\n  /**\r\n   * The target orientation.\r\n   *\r\n   * @type {Matrix33}\r\n   */\r\n  #targetOrientation;\r\n\r\n  /**\r\n   * @param {Spacing} spacing The spacing.\r\n   * @param {Matrix33} imageOrientation The image oientation.\r\n   * @param {Matrix33} viewOrientation The view orientation.\r\n   */\r\n  constructor(spacing, imageOrientation, viewOrientation) {\r\n    this.#spacing = spacing;\r\n    this.#imageOrientation = imageOrientation;\r\n    this.#viewOrientation = viewOrientation;\r\n\r\n    this.#targetOrientation = getTargetOrientation(\r\n      imageOrientation, viewOrientation);\r\n  }\r\n\r\n  /**\r\n   * Get a 3D offset from a plane one.\r\n   *\r\n   * @param {object} offset2D The plane offset as {x,y}.\r\n   * @returns {Vector3D} The 3D world offset.\r\n   */\r\n  getOffset3DFromPlaneOffset(offset2D) {\r\n    // make 3D\r\n    const planeOffset = new Vector3D(\r\n      offset2D.x, offset2D.y, 0);\r\n    // de-orient\r\n    const pixelOffset = this.getTargetDeOrientedVector3D(planeOffset);\r\n    // ~indexToWorld\r\n    return new Vector3D(\r\n      pixelOffset.getX() * this.#spacing.get(0),\r\n      pixelOffset.getY() * this.#spacing.get(1),\r\n      pixelOffset.getZ() * this.#spacing.get(2));\r\n  }\r\n\r\n  /**\r\n   * Get a plane offset from a 3D one.\r\n   *\r\n   * @param {object} offset3D The 3D offset as {x,y,z}.\r\n   * @returns {object} The plane offset as {x,y}.\r\n   */\r\n  getPlaneOffsetFromOffset3D(offset3D) {\r\n    // ~worldToIndex\r\n    const pixelOffset = new Vector3D(\r\n      offset3D.x / this.#spacing.get(0),\r\n      offset3D.y / this.#spacing.get(1),\r\n      offset3D.z / this.#spacing.get(2));\r\n    // orient\r\n    const planeOffset = this.getTargetOrientedVector3D(pixelOffset);\r\n    // make 2D\r\n    return {\r\n      x: planeOffset.getX(),\r\n      y: planeOffset.getY()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Orient an input vector from real to target space.\r\n   *\r\n   * @param {Vector3D} vector The input vector.\r\n   * @returns {Vector3D} The oriented vector.\r\n   */\r\n  getTargetOrientedVector3D(vector) {\r\n    let planeVector = vector;\r\n    if (typeof this.#targetOrientation !== 'undefined') {\r\n      planeVector =\r\n        this.#targetOrientation.getInverse().multiplyVector3D(vector);\r\n    }\r\n    return planeVector;\r\n  }\r\n\r\n  /**\r\n   * De-orient an input vector from target to real space.\r\n   *\r\n   * @param {Vector3D} planeVector The input vector.\r\n   * @returns {Vector3D} The de-orienteded vector.\r\n   */\r\n  getTargetDeOrientedVector3D(planeVector) {\r\n    let vector = planeVector;\r\n    if (typeof this.#targetOrientation !== 'undefined') {\r\n      vector = this.#targetOrientation.multiplyVector3D(planeVector);\r\n    }\r\n    return vector;\r\n  }\r\n\r\n  /**\r\n   * De-orient an input point from target to real space.\r\n   *\r\n   * @param {Point3D} planePoint The input point.\r\n   * @returns {Point3D} The de-orienteded point.\r\n   */\r\n  getTargetDeOrientedPoint3D(planePoint) {\r\n    let point = planePoint;\r\n    if (typeof this.#targetOrientation !== 'undefined') {\r\n      point = this.#targetOrientation.multiplyPoint3D(planePoint);\r\n    }\r\n    return point;\r\n  }\r\n\r\n  /**\r\n   * Orient an input vector from target to image space.\r\n   *\r\n   * @param {Vector3D} planeVector The input vector.\r\n   * @returns {Vector3D} The orienteded vector.\r\n   */\r\n  getImageOrientedVector3D(planeVector) {\r\n    let vector = planeVector;\r\n    if (typeof this.#viewOrientation !== 'undefined') {\r\n      // image oriented => view de-oriented\r\n      const values = getDeOrientedArray3D(\r\n        [\r\n          planeVector.getX(),\r\n          planeVector.getY(),\r\n          planeVector.getZ()\r\n        ],\r\n        this.#viewOrientation);\r\n      vector = new Vector3D(\r\n        values[0],\r\n        values[1],\r\n        values[2]\r\n      );\r\n    }\r\n    return vector;\r\n  }\r\n\r\n  /**\r\n   * Orient an input point from target to image space.\r\n   *\r\n   * @param {Point3D} planePoint The input vector.\r\n   * @returns {Point3D} The orienteded vector.\r\n   */\r\n  getImageOrientedPoint3D(planePoint) {\r\n    let point = planePoint;\r\n    if (typeof this.#viewOrientation !== 'undefined') {\r\n      // image oriented => view de-oriented\r\n      const values = getDeOrientedArray3D(\r\n        [\r\n          planePoint.getX(),\r\n          planePoint.getY(),\r\n          planePoint.getZ()\r\n        ],\r\n        this.#viewOrientation);\r\n      point = new Point3D(\r\n        values[0],\r\n        values[1],\r\n        values[2]\r\n      );\r\n    }\r\n    return point;\r\n  }\r\n\r\n  /**\r\n   * De-orient an input vector from image to target space.\r\n   *\r\n   * @param {Vector3D} vector The input vector.\r\n   * @returns {Vector3D} The de-orienteded vector.\r\n   */\r\n  getImageDeOrientedVector3D(vector) {\r\n    let planeVector = vector;\r\n    if (typeof this.#viewOrientation !== 'undefined') {\r\n      // image de-oriented => view oriented\r\n      const orientedValues = getOrientedArray3D(\r\n        [\r\n          vector.getX(),\r\n          vector.getY(),\r\n          vector.getZ()\r\n        ],\r\n        this.#viewOrientation);\r\n      planeVector = new Vector3D(\r\n        orientedValues[0],\r\n        orientedValues[1],\r\n        orientedValues[2]\r\n      );\r\n    }\r\n    return planeVector;\r\n  }\r\n\r\n  /**\r\n   * De-orient an input point from image to target space.\r\n   *\r\n   * @param {Point3D} point The input point.\r\n   * @returns {Point3D} The de-orienteded point.\r\n   */\r\n  getImageDeOrientedPoint3D(point) {\r\n    let planePoint = point;\r\n    if (typeof this.#viewOrientation !== 'undefined') {\r\n      // image de-oriented => view oriented\r\n      const orientedValues = getOrientedArray3D(\r\n        [\r\n          point.getX(),\r\n          point.getY(),\r\n          point.getZ()\r\n        ],\r\n        this.#viewOrientation);\r\n      planePoint = new Point3D(\r\n        orientedValues[0],\r\n        orientedValues[1],\r\n        orientedValues[2]\r\n      );\r\n    }\r\n    return planePoint;\r\n  }\r\n\r\n  /**\r\n   * Reorder values to follow target orientation.\r\n   *\r\n   * @param {object} values Values as {x,y,z}.\r\n   * @returns {object} Reoriented values as {x,y,z}.\r\n   */\r\n  getTargetOrientedPositiveXYZ(values) {\r\n    const orientedValues = getOrientedArray3D(\r\n      [\r\n        values.x,\r\n        values.y,\r\n        values.z\r\n      ],\r\n      this.#targetOrientation);\r\n    return {\r\n      x: orientedValues[0],\r\n      y: orientedValues[1],\r\n      z: orientedValues[2]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the (view) scroll dimension index.\r\n   *\r\n   * @returns {number} The index.\r\n   */\r\n  getScrollIndex() {\r\n    let index = null;\r\n    if (typeof this.#viewOrientation !== 'undefined') {\r\n      index = this.#viewOrientation.getThirdColMajorDirection();\r\n    } else {\r\n      index = 2;\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Get the native (image) scroll dimension index.\r\n   *\r\n   * @returns {number} The index.\r\n   */\r\n  getNativeScrollIndex() {\r\n    let index = null;\r\n    if (typeof this.#imageOrientation !== 'undefined') {\r\n      index = this.#imageOrientation.getThirdColMajorDirection();\r\n    } else {\r\n      index = 2;\r\n    }\r\n    return index;\r\n  }\r\n\r\n} // class PlaneHelper\r\n","import {getIdentityMat33, getCoronalMat33} from '../math/matrix';\r\nimport {Index} from '../math/index';\r\nimport {Point} from '../math/point';\r\nimport {Vector3D} from '../math/vector';\r\nimport {viewEventNames} from '../image/view';\r\nimport {ListenerHandler} from '../utils/listen';\r\nimport {logger} from '../utils/logger';\r\nimport {ViewLayer} from './viewLayer';\r\nimport {DrawLayer} from './drawLayer';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Matrix33} from '../math/matrix';\r\nimport {Point3D} from '../math/point';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Get the layer div id.\r\n *\r\n * @param {string} groupDivId The layer group div id.\r\n * @param {number} layerId The lyaer id.\r\n * @returns {string} A string id.\r\n */\r\nexport function getLayerDivId(groupDivId, layerId) {\r\n  return groupDivId + '-layer-' + layerId;\r\n}\r\n\r\n/**\r\n * Get the layer details from a div id.\r\n *\r\n * @param {string} idString The layer div id.\r\n * @returns {object} The layer details as {groupDivId, layerId}.\r\n */\r\nexport function getLayerDetailsFromLayerDivId(idString) {\r\n  const split = idString.split('-layer-');\r\n  if (split.length !== 2) {\r\n    logger.warn('Not the expected layer div id format...');\r\n  }\r\n  return {\r\n    groupDivId: split[0],\r\n    layerId: split[1]\r\n  };\r\n}\r\n\r\n/**\r\n * Get the layer details from a mouse event.\r\n *\r\n * @param {object} event The event to get the layer div id from. Expecting\r\n * an event origininating from a canvas inside a layer HTML div\r\n * with the 'layer' class and id generated with `getLayerDivId`.\r\n * @returns {object} The layer details as {groupDivId, layerId}.\r\n */\r\nexport function getLayerDetailsFromEvent(event) {\r\n  let res = null;\r\n  // get the closest element from the event target and with the 'layer' class\r\n  const layerDiv = event.target.closest('.layer');\r\n  if (layerDiv && typeof layerDiv.id !== 'undefined') {\r\n    res = getLayerDetailsFromLayerDivId(layerDiv.id);\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * Get the view orientation according to an image and target orientation.\r\n * The view orientation is used to go from target to image space.\r\n *\r\n * @param {Matrix33} imageOrientation The image geometry.\r\n * @param {Matrix33} targetOrientation The target orientation.\r\n * @returns {Matrix33} The view orientation.\r\n */\r\nexport function getViewOrientation(imageOrientation, targetOrientation) {\r\n  let viewOrientation = getIdentityMat33();\r\n  if (typeof targetOrientation !== 'undefined') {\r\n    // i: image, v: view, t: target, O: orientation, P: point\r\n    // [Img] -- Oi --> [Real] <-- Ot -- [Target]\r\n    // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\r\n    // -> Ov = (Oi)-1 * Ot\r\n    // TODO: asOneAndZeros simplifies but not nice...\r\n    viewOrientation =\r\n      imageOrientation.asOneAndZeros().getInverse().multiply(targetOrientation);\r\n  }\r\n  // TODO: why abs???\r\n  return viewOrientation.getAbs();\r\n}\r\n\r\n/**\r\n * Get the target orientation according to an image and view orientation.\r\n * The target orientation is used to go from target to real space.\r\n *\r\n * @param {Matrix33} imageOrientation The image geometry.\r\n * @param {Matrix33} viewOrientation The view orientation.\r\n * @returns {Matrix33} The target orientation.\r\n */\r\nexport function getTargetOrientation(imageOrientation, viewOrientation) {\r\n  // i: image, v: view, t: target, O: orientation, P: point\r\n  // [Img] -- Oi --> [Real] <-- Ot -- [Target]\r\n  // Pi = (Oi)-1 * Ot * Pt = Ov * Pt\r\n  // -> Ot = Oi * Ov\r\n  // note: asOneAndZeros as in getViewOrientation...\r\n  let targetOrientation =\r\n    imageOrientation.asOneAndZeros().multiply(viewOrientation);\r\n\r\n  // TODO: why abs???\r\n  const simpleImageOrientation = imageOrientation.asOneAndZeros().getAbs();\r\n  if (simpleImageOrientation.equals(getCoronalMat33().getAbs())) {\r\n    targetOrientation = targetOrientation.getAbs();\r\n  }\r\n\r\n  return targetOrientation;\r\n}\r\n\r\n/**\r\n * Get a scaled offset to adapt to new scale and such as the input center\r\n * stays at the same position.\r\n *\r\n * @param {object} offset The previous offset as {x,y}.\r\n * @param {object} scale The previous scale as {x,y}.\r\n * @param {object} newScale The new scale as {x,y}.\r\n * @param {object} center The scale center as {x,y}.\r\n * @returns {object} The scaled offset as {x,y}.\r\n */\r\nexport function getScaledOffset(offset, scale, newScale, center) {\r\n  // worldPoint = indexPoint / scale + offset\r\n  //=> indexPoint = (worldPoint - offset ) * scale\r\n\r\n  // plane center should stay the same:\r\n  // indexCenter / newScale + newOffset =\r\n  //   indexCenter / oldScale + oldOffset\r\n  //=> newOffset = indexCenter / oldScale + oldOffset -\r\n  //     indexCenter / newScale\r\n  //=> newOffset = worldCenter - indexCenter / newScale\r\n  const indexCenter = {\r\n    x: (center.x - offset.x) * scale.x,\r\n    y: (center.y - offset.y) * scale.y\r\n  };\r\n  return {\r\n    x: center.x - (indexCenter.x / newScale.x),\r\n    y: center.y - (indexCenter.y / newScale.y)\r\n  };\r\n}\r\n\r\n/**\r\n * Layer group.\r\n *\r\n * Display position: {x,y}\r\n * Plane position: Index (access: get(i))\r\n * (world) Position: Point3D (access: getX, getY, getZ)\r\n *\r\n * Display -> World:\r\n * planePos = viewLayer.displayToPlanePos(displayPos)\r\n * -> compensate for layer scale and offset\r\n * pos = viewController.getPositionFromPlanePoint(planePos)\r\n *\r\n * World -> display\r\n * planePos = viewController.getOffset3DFromPlaneOffset(pos)\r\n * no need yet for a planePos to displayPos...\r\n */\r\nexport class LayerGroup {\r\n\r\n  /**\r\n   * The container div.\r\n   *\r\n   * @type {HTMLElement}\r\n   */\r\n  #containerDiv;\r\n\r\n  /**\r\n   * List of layers.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #layers = [];\r\n\r\n  /**\r\n   * The layer scale as {x,y}.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #scale = {x: 1, y: 1, z: 1};\r\n\r\n  /**\r\n   * The base scale as {x,y}: all posterior scale will be on top of this one.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #baseScale = {x: 1, y: 1, z: 1};\r\n\r\n  /**\r\n   * The layer offset as {x,y}.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #offset = {x: 0, y: 0, z: 0};\r\n\r\n  /**\r\n   * Active view layer index.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #activeViewLayerIndex = null;\r\n\r\n  /**\r\n   * Active draw layer index.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #activeDrawLayerIndex = null;\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {ListenerHandler}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * The target orientation matrix.\r\n   *\r\n   * @type {Matrix33}\r\n   */\r\n  #targetOrientation;\r\n\r\n  /**\r\n   * Flag to activate crosshair or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #showCrosshair = false;\r\n\r\n  /**\r\n   * The current position used for the crosshair.\r\n   *\r\n   * @type {Point}\r\n   */\r\n  #currentPosition;\r\n\r\n  /**\r\n   * @param {HTMLElement} containerDiv The associated HTML div.\r\n   */\r\n  constructor(containerDiv) {\r\n    this.#containerDiv = containerDiv;\r\n  }\r\n\r\n  /**\r\n   * Get the target orientation.\r\n   *\r\n   * @returns {Matrix33} The orientation matrix.\r\n   */\r\n  getTargetOrientation() {\r\n    return this.#targetOrientation;\r\n  }\r\n\r\n  /**\r\n   * Set the target orientation.\r\n   *\r\n   * @param {Matrix33} orientation The orientation matrix.\r\n   */\r\n  setTargetOrientation(orientation) {\r\n    this.#targetOrientation = orientation;\r\n  }\r\n\r\n  /**\r\n   * Get the showCrosshair flag.\r\n   *\r\n   * @returns {boolean} True to display the crosshair.\r\n   */\r\n  getShowCrosshair() {\r\n    return this.#showCrosshair;\r\n  }\r\n\r\n  /**\r\n   * Set the showCrosshair flag.\r\n   *\r\n   * @param {boolean} flag True to display the crosshair.\r\n   */\r\n  setShowCrosshair(flag) {\r\n    this.#showCrosshair = flag;\r\n    if (flag) {\r\n      // listen to offset and zoom change\r\n      this.addEventListener('offsetchange', this.#updateCrosshairOnChange);\r\n      this.addEventListener('zoomchange', this.#updateCrosshairOnChange);\r\n      // show crosshair div\r\n      this.#showCrosshairDiv();\r\n    } else {\r\n      // listen to offset and zoom change\r\n      this.removeEventListener('offsetchange', this.#updateCrosshairOnChange);\r\n      this.removeEventListener('zoomchange', this.#updateCrosshairOnChange);\r\n      // remove crosshair div\r\n      this.#removeCrosshairDiv();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update crosshair on offset or zoom change.\r\n   *\r\n   * @param {object} _event The change event.\r\n   */\r\n  #updateCrosshairOnChange = (_event) => {\r\n    this.#showCrosshairDiv();\r\n  };\r\n\r\n  /**\r\n   * Get the Id of the container div.\r\n   *\r\n   * @returns {string} The id of the div.\r\n   */\r\n  getDivId() {\r\n    return this.#containerDiv.id;\r\n  }\r\n\r\n  /**\r\n   * Get the layer scale.\r\n   *\r\n   * @returns {object} The scale as {x,y,z}.\r\n   */\r\n  getScale() {\r\n    return this.#scale;\r\n  }\r\n\r\n  /**\r\n   * Get the base scale.\r\n   *\r\n   * @returns {object} The scale as {x,y,z}.\r\n   */\r\n  getBaseScale() {\r\n    return this.#baseScale;\r\n  }\r\n\r\n  /**\r\n   * Get the added scale: the scale added to the base scale\r\n   *\r\n   * @returns {object} The scale as {x,y,z}.\r\n   */\r\n  getAddedScale() {\r\n    return {\r\n      x: this.#scale.x / this.#baseScale.x,\r\n      y: this.#scale.y / this.#baseScale.y,\r\n      z: this.#scale.z / this.#baseScale.z\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the layer offset.\r\n   *\r\n   * @returns {object} The offset as {x,y,z}.\r\n   */\r\n  getOffset() {\r\n    return this.#offset;\r\n  }\r\n\r\n  /**\r\n   * Get the number of layers handled by this class.\r\n   *\r\n   * @returns {number} The number of layers.\r\n   */\r\n  getNumberOfLayers() {\r\n    return this.#layers.length;\r\n  }\r\n\r\n  /**\r\n   * Get the active image layer.\r\n   *\r\n   * @returns {ViewLayer} The layer.\r\n   */\r\n  getActiveViewLayer() {\r\n    return this.#layers[this.#activeViewLayerIndex];\r\n  }\r\n\r\n  /**\r\n   * Get the view layers associated to a data index.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @returns {ViewLayer[]} The layers.\r\n   */\r\n  getViewLayersByDataIndex(index) {\r\n    const res = [];\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      if (this.#layers[i] instanceof ViewLayer &&\r\n        this.#layers[i].getDataIndex() === index) {\r\n        res.push(this.#layers[i]);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Search view layers for equal imae meta data.\r\n   *\r\n   * @param {object} meta The meta data to find.\r\n   * @returns {ViewLayer[]} The list of view layers that contain matched data.\r\n   */\r\n  searchViewLayers(meta) {\r\n    const res = [];\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      if (this.#layers[i] instanceof ViewLayer) {\r\n        if (this.#layers[i].getViewController().equalImageMeta(meta)) {\r\n          res.push(this.#layers[i]);\r\n        }\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Get the view layers data indices.\r\n   *\r\n   * @returns {Array} The list of indices.\r\n   */\r\n  getViewDataIndices() {\r\n    const res = [];\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      if (this.#layers[i] instanceof ViewLayer) {\r\n        res.push(this.#layers[i].getDataIndex());\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Get the active draw layer.\r\n   *\r\n   * @returns {DrawLayer} The layer.\r\n   */\r\n  getActiveDrawLayer() {\r\n    return this.#layers[this.#activeDrawLayerIndex];\r\n  }\r\n\r\n  /**\r\n   * Get the draw layers associated to a data index.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @returns {DrawLayer[]} The layers.\r\n   */\r\n  getDrawLayersByDataIndex(index) {\r\n    const res = [];\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      if (this.#layers[i] instanceof DrawLayer &&\r\n        this.#layers[i].getDataIndex() === index) {\r\n        res.push(this.#layers[i]);\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Set the active view layer.\r\n   *\r\n   * @param {number} index The index of the layer to set as active.\r\n   */\r\n  setActiveViewLayer(index) {\r\n    this.#activeViewLayerIndex = index;\r\n  }\r\n\r\n  /**\r\n   * Set the active view layer with a data index.\r\n   *\r\n   * @param {number} index The data index.\r\n   */\r\n  setActiveViewLayerByDataIndex(index) {\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      if (this.#layers[i] instanceof ViewLayer &&\r\n        this.#layers[i].getDataIndex() === index) {\r\n        this.setActiveViewLayer(i);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the active draw layer.\r\n   *\r\n   * @param {number} index The index of the layer to set as active.\r\n   */\r\n  setActiveDrawLayer(index) {\r\n    this.#activeDrawLayerIndex = index;\r\n  }\r\n\r\n  /**\r\n   * Set the active draw layer with a data index.\r\n   *\r\n   * @param {number} index The data index.\r\n   */\r\n  setActiveDrawLayerByDataIndex(index) {\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      if (this.#layers[i] instanceof DrawLayer &&\r\n        this.#layers[i].getDataIndex() === index) {\r\n        this.setActiveDrawLayer(i);\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a view layer.\r\n   *\r\n   * @returns {ViewLayer} The created layer.\r\n   */\r\n  addViewLayer() {\r\n    // layer index\r\n    const viewLayerIndex = this.#layers.length;\r\n    // create div\r\n    const div = this.#getNextLayerDiv();\r\n    // prepend to container\r\n    this.#containerDiv.append(div);\r\n    // view layer\r\n    const layer = new ViewLayer(div);\r\n    // add layer\r\n    this.#layers.push(layer);\r\n    // mark it as active\r\n    this.setActiveViewLayer(viewLayerIndex);\r\n    // bind view layer events\r\n    this.#bindViewLayer(layer);\r\n    // return\r\n    return layer;\r\n  }\r\n\r\n  /**\r\n   * Add a draw layer.\r\n   *\r\n   * @returns {DrawLayer} The created layer.\r\n   */\r\n  addDrawLayer() {\r\n    // store active index\r\n    this.#activeDrawLayerIndex = this.#layers.length;\r\n    // create div\r\n    const div = this.#getNextLayerDiv();\r\n    // prepend to container\r\n    this.#containerDiv.append(div);\r\n    // draw layer\r\n    const layer = new DrawLayer(div);\r\n    // add layer\r\n    this.#layers.push(layer);\r\n    // bind draw layer events\r\n    this.#bindDrawLayer(layer);\r\n    // return\r\n    return layer;\r\n  }\r\n\r\n  /**\r\n   * Bind view layer events to this.\r\n   *\r\n   * @param {ViewLayer} viewLayer The view layer to bind.\r\n   */\r\n  #bindViewLayer(viewLayer) {\r\n    // listen to position change to update other group layers\r\n    viewLayer.addEventListener(\r\n      'positionchange', this.updateLayersToPositionChange);\r\n    // propagate view viewLayer-layer events\r\n    for (let j = 0; j < viewEventNames.length; ++j) {\r\n      viewLayer.addEventListener(viewEventNames[j], this.#fireEvent);\r\n    }\r\n    // propagate viewLayer events\r\n    viewLayer.addEventListener('renderstart', this.#fireEvent);\r\n    viewLayer.addEventListener('renderend', this.#fireEvent);\r\n  }\r\n\r\n  /**\r\n   * Bind draw layer events to this.\r\n   *\r\n   * @param {DrawLayer} drawLayer The draw layer to bind.\r\n   */\r\n  #bindDrawLayer(drawLayer) {\r\n    // propagate drawLayer events\r\n    drawLayer.addEventListener('drawcreate', this.#fireEvent);\r\n    drawLayer.addEventListener('drawdelete', this.#fireEvent);\r\n  }\r\n\r\n  /**\r\n   * Get the next layer DOM div.\r\n   *\r\n   * @returns {HTMLDivElement} A DOM div.\r\n   */\r\n  #getNextLayerDiv() {\r\n    const div = document.createElement('div');\r\n    div.id = getLayerDivId(this.getDivId(), this.#layers.length);\r\n    div.className = 'layer';\r\n    div.style.pointerEvents = 'none';\r\n    return div;\r\n  }\r\n\r\n  /**\r\n   * Empty the layer list.\r\n   */\r\n  empty() {\r\n    this.#layers = [];\r\n    // reset active indices\r\n    this.#activeViewLayerIndex = null;\r\n    this.#activeDrawLayerIndex = null;\r\n    // clean container div\r\n    const previous = this.#containerDiv.getElementsByClassName('layer');\r\n    if (previous) {\r\n      while (previous.length > 0) {\r\n        previous[0].remove();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show a crosshair at a given position.\r\n   *\r\n   * @param {Point} [position] The position where to show the crosshair,\r\n   *   defaults to current position.\r\n   */\r\n  #showCrosshairDiv(position) {\r\n    if (typeof position === 'undefined') {\r\n      position = this.#currentPosition;\r\n    }\r\n\r\n    // remove previous\r\n    this.#removeCrosshairDiv();\r\n\r\n    // use first layer as base for calculating position and\r\n    // line sizes\r\n    const layer0 = this.#layers[0];\r\n    const vc = layer0.getViewController();\r\n    const p2D = vc.getPlanePositionFromPosition(position);\r\n    const displayPos = layer0.planePosToDisplay(p2D.x, p2D.y);\r\n\r\n    const lineH = document.createElement('hr');\r\n    lineH.id = this.getDivId() + '-scroll-crosshair-horizontal';\r\n    lineH.className = 'horizontal';\r\n    lineH.style.width = this.#containerDiv.offsetWidth + 'px';\r\n    lineH.style.left = '0px';\r\n    lineH.style.top = displayPos.y + 'px';\r\n\r\n    const lineV = document.createElement('hr');\r\n    lineV.id = this.getDivId() + '-scroll-crosshair-vertical';\r\n    lineV.className = 'vertical';\r\n    lineV.style.width = this.#containerDiv.offsetHeight + 'px';\r\n    lineV.style.left = (displayPos.x) + 'px';\r\n    lineV.style.top = '0px';\r\n\r\n    this.#containerDiv.appendChild(lineH);\r\n    this.#containerDiv.appendChild(lineV);\r\n  }\r\n\r\n  /**\r\n   * Remove crosshair divs.\r\n   */\r\n  #removeCrosshairDiv() {\r\n    let div = document.getElementById(\r\n      this.getDivId() + '-scroll-crosshair-horizontal');\r\n    if (div) {\r\n      div.remove();\r\n    }\r\n    div = document.getElementById(\r\n      this.getDivId() + '-scroll-crosshair-vertical');\r\n    if (div) {\r\n      div.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update layers (but not the active view layer) to a position change.\r\n   *\r\n   * @param {object} event The position change event.\r\n   * @function\r\n   */\r\n  updateLayersToPositionChange = (event) => {\r\n    // pause positionchange listeners\r\n    for (let j = 0; j < this.#layers.length; ++j) {\r\n      if (this.#layers[j] instanceof ViewLayer) {\r\n        this.#layers[j].removeEventListener(\r\n          'positionchange', this.updateLayersToPositionChange);\r\n        this.#layers[j].removeEventListener('positionchange', this.#fireEvent);\r\n      }\r\n    }\r\n\r\n    const index = new Index(event.value[0]);\r\n    const position = new Point(event.value[1]);\r\n\r\n    // store current position\r\n    this.#currentPosition = position;\r\n\r\n    if (this.#showCrosshair) {\r\n      this.#showCrosshairDiv(position);\r\n    }\r\n\r\n    // origin of the first view layer\r\n    let baseViewLayerOrigin0 = null;\r\n    let baseViewLayerOrigin = null;\r\n    // update position for all layers except the source one\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n\r\n      // update base offset (does not trigger redraw)\r\n      // TODO check draw layers update\r\n      let hasSetOffset = false;\r\n      if (this.#layers[i] instanceof ViewLayer) {\r\n        const vc = this.#layers[i].getViewController();\r\n        // origin0 should always be there\r\n        const origin0 = vc.getOrigin();\r\n        // depending on position, origin could be undefined\r\n        const origin = vc.getOrigin(position);\r\n\r\n        if (!baseViewLayerOrigin) {\r\n          baseViewLayerOrigin0 = origin0;\r\n          baseViewLayerOrigin = origin;\r\n        } else {\r\n          if (vc.canSetPosition(position) &&\r\n            typeof origin !== 'undefined') {\r\n            // TODO: compensate for possible different orientation between views\r\n\r\n            const scrollDiff = baseViewLayerOrigin0.minus(origin0);\r\n            const scrollOffset = new Vector3D(\r\n              scrollDiff.getX(), scrollDiff.getY(), scrollDiff.getZ());\r\n\r\n            const planeDiff = baseViewLayerOrigin.minus(origin);\r\n            const planeOffset = new Vector3D(\r\n              planeDiff.getX(), planeDiff.getY(), planeDiff.getZ());\r\n\r\n            hasSetOffset =\r\n              this.#layers[i].setBaseOffset(scrollOffset, planeOffset);\r\n          }\r\n        }\r\n      }\r\n\r\n      // update position (triggers redraw)\r\n      let hasSetPos = false;\r\n      if (this.#layers[i].getId() !== event.srclayerid) {\r\n        hasSetPos = this.#layers[i].setCurrentPosition(position, index);\r\n      }\r\n\r\n      // force redraw if needed\r\n      if (!hasSetPos && hasSetOffset) {\r\n        this.#layers[i].draw();\r\n      }\r\n    }\r\n\r\n    // re-start positionchange listeners\r\n    for (let k = 0; k < this.#layers.length; ++k) {\r\n      if (this.#layers[k] instanceof ViewLayer) {\r\n        this.#layers[k].addEventListener(\r\n          'positionchange', this.updateLayersToPositionChange);\r\n        this.#layers[k].addEventListener('positionchange', this.#fireEvent);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calculate the fit scale: the scale that fits the largest data.\r\n   *\r\n   * @returns {number|undefined} The fit scale.\r\n   */\r\n  calculateFitScale() {\r\n    // check container\r\n    if (this.#containerDiv.offsetWidth === 0 &&\r\n      this.#containerDiv.offsetHeight === 0) {\r\n      throw new Error('Cannot fit to zero sized container.');\r\n    }\r\n    // get max size\r\n    const maxSize = this.getMaxSize();\r\n    if (typeof maxSize === 'undefined') {\r\n      return undefined;\r\n    }\r\n    // return best fit\r\n    return Math.min(\r\n      this.#containerDiv.offsetWidth / maxSize.x,\r\n      this.#containerDiv.offsetHeight / maxSize.y\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set the layer group fit scale.\r\n   *\r\n   * @param {number} scaleIn The fit scale.\r\n   */\r\n  setFitScale(scaleIn) {\r\n    // get maximum size\r\n    const maxSize = this.getMaxSize();\r\n    // exit if none\r\n    if (typeof maxSize === 'undefined') {\r\n      return;\r\n    }\r\n\r\n    const containerSize = {\r\n      x: this.#containerDiv.offsetWidth,\r\n      y: this.#containerDiv.offsetHeight\r\n    };\r\n    // offset to keep data centered\r\n    const fitOffset = {\r\n      x: -0.5 * (containerSize.x - Math.floor(maxSize.x * scaleIn)),\r\n      y: -0.5 * (containerSize.y - Math.floor(maxSize.y * scaleIn))\r\n    };\r\n\r\n    // apply to layers\r\n    for (let j = 0; j < this.#layers.length; ++j) {\r\n      this.#layers[j].fitToContainer(scaleIn, containerSize, fitOffset);\r\n    }\r\n\r\n    // update crosshair\r\n    if (this.#showCrosshair) {\r\n      this.#showCrosshairDiv();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the largest data size.\r\n   *\r\n   * @returns {object|undefined} The largest size as {x,y}.\r\n   */\r\n  getMaxSize() {\r\n    let maxSize = {x: 0, y: 0};\r\n    for (let j = 0; j < this.#layers.length; ++j) {\r\n      if (this.#layers[j] instanceof ViewLayer) {\r\n        const size = this.#layers[j].getImageWorldSize();\r\n        if (size.x > maxSize.x) {\r\n          maxSize.x = size.x;\r\n        }\r\n        if (size.y > maxSize.y) {\r\n          maxSize.y = size.y;\r\n        }\r\n      }\r\n    }\r\n    if (maxSize.x === 0 && maxSize.y === 0) {\r\n      maxSize = undefined;\r\n    }\r\n    return maxSize;\r\n  }\r\n\r\n  /**\r\n   * Flip all layers along the Z axis without offset compensation.\r\n   */\r\n  flipScaleZ() {\r\n    this.#baseScale.z *= -1;\r\n    this.setScale(this.#baseScale);\r\n  }\r\n\r\n  /**\r\n   * Add scale to the layers. Scale cannot go lower than 0.1.\r\n   *\r\n   * @param {number} scaleStep The scale to add.\r\n   * @param {Point3D} center The scale center Point3D.\r\n   */\r\n  addScale(scaleStep, center) {\r\n    const newScale = {\r\n      x: this.#scale.x * (1 + scaleStep),\r\n      y: this.#scale.y * (1 + scaleStep),\r\n      z: this.#scale.z * (1 + scaleStep)\r\n    };\r\n    this.setScale(newScale, center);\r\n  }\r\n\r\n  /**\r\n   * Set the layers' scale.\r\n   *\r\n   * @param {object} newScale The scale to apply as {x,y,z}.\r\n   * @param {Point3D} [center] The scale center Point3D.\r\n   * @fires LayerGroup#zoomchange\r\n   */\r\n  setScale(newScale, center) {\r\n    this.#scale = newScale;\r\n    // apply to layers\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      this.#layers[i].setScale(this.#scale, center);\r\n    }\r\n\r\n    // event value\r\n    const value = [\r\n      newScale.x,\r\n      newScale.y,\r\n      newScale.z\r\n    ];\r\n    if (typeof center !== 'undefined') {\r\n      value.push(center.getX());\r\n      value.push(center.getY());\r\n      value.push(center.getZ());\r\n    }\r\n\r\n    /**\r\n     * Zoom change event.\r\n     *\r\n     * @event LayerGroup#zoomchange\r\n     * @type {object}\r\n     * @property {Array} value The changed value.\r\n     */\r\n    this.#fireEvent({\r\n      type: 'zoomchange',\r\n      value: value\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add translation to the layers.\r\n   *\r\n   * @param {object} translation The translation as {x,y,z}.\r\n   */\r\n  addTranslation(translation) {\r\n    this.setOffset({\r\n      x: this.#offset.x - translation.x,\r\n      y: this.#offset.y - translation.y,\r\n      z: this.#offset.z - translation.z\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the layers' offset.\r\n   *\r\n   * @param {object} newOffset The offset as {x,y,z}.\r\n   * @fires LayerGroup#offsetchange\r\n   */\r\n  setOffset(newOffset) {\r\n    // store\r\n    this.#offset = newOffset;\r\n    // apply to layers\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      this.#layers[i].setOffset(this.#offset);\r\n    }\r\n\r\n    /**\r\n     * Offset change event.\r\n     *\r\n     * @event LayerGroup#offsetchange\r\n     * @type {object}\r\n     * @property {Array} value The changed value.\r\n     */\r\n    this.#fireEvent({\r\n      type: 'offsetchange',\r\n      value: [\r\n        this.#offset.x,\r\n        this.#offset.y,\r\n        this.#offset.z\r\n      ]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reset the stage to its initial scale and no offset.\r\n   */\r\n  reset() {\r\n    this.setScale(this.#baseScale);\r\n    this.setOffset({x: 0, y: 0, z: 0});\r\n  }\r\n\r\n  /**\r\n   * Draw the layer.\r\n   */\r\n  draw() {\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      this.#layers[i].draw();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Display the layer.\r\n   *\r\n   * @param {boolean} flag Whether to display the layer or not.\r\n   */\r\n  display(flag) {\r\n    for (let i = 0; i < this.#layers.length; ++i) {\r\n      this.#layers[i].display(flag);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n} // LayerGroup class\r\n","import {logger} from '../utils/logger';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Image} from './image';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Mask segment helper.\r\n */\r\nexport class MaskSegmentHelper {\r\n\r\n  /**\r\n   * The associated mask.\r\n   *\r\n   * @type {Image}\r\n   */\r\n  #mask;\r\n\r\n  /**\r\n   * The segments: array of segment description.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #segments;\r\n\r\n  /**\r\n   * List of ids of hidden segments.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #hiddenSegments = [];\r\n\r\n  /**\r\n   * @param {Image} mask The associated mask image.\r\n   */\r\n  constructor(mask) {\r\n    this.#mask = mask;\r\n    this.#segments = mask.getMeta().custom.segments;\r\n  }\r\n\r\n  /**\r\n   * Check if a segment is part of the inner segment list.\r\n   *\r\n   * @param {number} segmentNumber The segment number.\r\n   * @returns {boolean} True if the segment is included.\r\n   */\r\n  hasSegment(segmentNumber) {\r\n    return typeof this.getSegment(segmentNumber) !== 'undefined';\r\n  }\r\n\r\n  /**\r\n   * Check if a segment is present in a mask image.\r\n   *\r\n   * @param {Array} numbers Array of segment numbers.\r\n   * @returns {Array} Array of boolean set to true\r\n   *   if the segment is present in the mask.\r\n   */\r\n  maskHasSegments(numbers) {\r\n    // create values using displayValue\r\n    const values = [];\r\n    const unknowns = [];\r\n    for (let i = 0; i < numbers.length; ++i) {\r\n      const segment = this.getSegment(numbers[i]);\r\n      if (typeof segment !== 'undefined') {\r\n        values.push(segment.displayValue);\r\n      } else {\r\n        logger.warn('Unknown segment in maskHasSegments: ' + numbers[i]);\r\n        unknowns.push(i);\r\n      }\r\n    }\r\n    const res = this.#mask.hasValues(values);\r\n    // insert unknowns as false in result\r\n    for (let j = 0; j < unknowns.length; ++j) {\r\n      res.splice(unknowns[j], 0, false);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Get a segment from the inner segment list.\r\n   *\r\n   * @param {number} segmentNumber The segment number.\r\n   * @returns {object} The segment.\r\n   */\r\n  getSegment(segmentNumber) {\r\n    return this.#segments.find(function (item) {\r\n      return item.number === segmentNumber;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the inner segment list.\r\n   *\r\n   * @returns {Array} The list of segments.\r\n   */\r\n  getSegments() {\r\n    return this.#segments;\r\n  }\r\n\r\n  /**\r\n   * Set the inner segment list.\r\n   *\r\n   * @param {Array} list The segment list.\r\n   */\r\n  setSegments(list) {\r\n    this.#segments = list;\r\n  }\r\n\r\n  /**\r\n   * Set the hidden segment list.\r\n   * TODO: not sure if needed...\r\n   *\r\n   * @param {Array} list The list of hidden segment numbers.\r\n   */\r\n  setHiddenSegments(list) {\r\n    this.#hiddenSegments = list;\r\n  }\r\n\r\n  /**\r\n   * Get the index of a segment in the hidden list.\r\n   *\r\n   * @param {number} segmentNumber The segment number.\r\n   * @returns {number|undefined} The index in the array.\r\n   */\r\n  #getHiddenIndex(segmentNumber) {\r\n    return this.#hiddenSegments.findIndex(function (item) {\r\n      return item === segmentNumber;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if a segment is in the hidden list.\r\n   *\r\n   * @param {number} segmentNumber The segment number.\r\n   * @returns {boolean} True if the segment is in the list.\r\n   */\r\n  isHidden(segmentNumber) {\r\n    return this.#getHiddenIndex(segmentNumber) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Add a segment to the hidden list.\r\n   *\r\n   * @param {number} segmentNumber The segment number.\r\n   */\r\n  addToHidden(segmentNumber) {\r\n    if (!this.isHidden(segmentNumber)) {\r\n      this.#hiddenSegments.push(segmentNumber);\r\n    } else {\r\n      logger.warn(\r\n        'Segment is allready in the hidden list: ' + segmentNumber);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a segment from the hidden list.\r\n   *\r\n   * @param {number} segmentNumber The segment number.\r\n   */\r\n  removeFromHidden(segmentNumber) {\r\n    const index = this.#getHiddenIndex(segmentNumber);\r\n    if (index !== -1) {\r\n      this.#hiddenSegments.splice(index, 1);\r\n    } else {\r\n      logger.warn('Segment is not in the hidden list: ' + segmentNumber);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @callback alphaFn\r\n   * @param {object} value The pixel value.\r\n   * @param {object} index The values' index.\r\n   * @returns {number} The value to display.\r\n   */\r\n\r\n  /**\r\n   * Get the alpha function to apply hidden colors.\r\n   *\r\n   * @returns {alphaFn} The corresponding alpha function.\r\n   */\r\n  getAlphaFunc() {\r\n    // get colours\r\n    const hiddenColours = [{r: 0, g: 0, b: 0}];\r\n    for (let i = 0; i < this.#hiddenSegments.length; ++i) {\r\n      const segment = this.getSegment(this.#hiddenSegments[i]);\r\n      if (typeof segment !== 'undefined') {\r\n        hiddenColours.push(segment.displayValue);\r\n      }\r\n    }\r\n\r\n    // create alpha function\r\n    return function (value/*, index*/) {\r\n      for (let i = 0; i < hiddenColours.length; ++i) {\r\n        if (value[0] === hiddenColours[i].r &&\r\n          value[1] === hiddenColours[i].g &&\r\n          value[2] === hiddenColours[i].b) {\r\n          return 0;\r\n        }\r\n      }\r\n      // default\r\n      return 255;\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @callback eventFn\r\n   * @param {object} event The event.\r\n   */\r\n\r\n  /**\r\n   * Delete a segment.\r\n   *\r\n   * @param {number} segmentNumber The segment number.\r\n   * @param {eventFn} cmdCallback The command event callback.\r\n   * @param {Function} exeCallback The post execution callback.\r\n   */\r\n  deleteSegment(segmentNumber, cmdCallback, exeCallback) {\r\n    const delcmd = new DeleteSegmentCommand(\r\n      this.#mask, this.getSegment(segmentNumber));\r\n    delcmd.onExecute = cmdCallback;\r\n    delcmd.onUndo = cmdCallback;\r\n    if (delcmd.isValid()) {\r\n      delcmd.execute();\r\n      // callback\r\n      exeCallback(delcmd);\r\n      // possibly hidden\r\n      if (this.isHidden(segmentNumber)) {\r\n        this.removeFromHidden(segmentNumber);\r\n      }\r\n    }\r\n  }\r\n\r\n} // class MaskSegmentHelper\r\n\r\n/**\r\n * Delete segment command.\r\n */\r\nexport class DeleteSegmentCommand {\r\n\r\n  /**\r\n   * The associated mask.\r\n   *\r\n   * @type {Image}\r\n   */\r\n  #mask;\r\n\r\n  /**\r\n   * The segment to remove.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #segment;\r\n\r\n  /**\r\n   * Flag to send creation events.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isSilent;\r\n\r\n  /**\r\n   * List of offsets.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #offsets;\r\n\r\n  /**\r\n   * @param {Image} mask The mask image.\r\n   * @param {object} segment The segment to remove.\r\n   * @param {boolean} [silent] Whether to send a creation event or not.\r\n   */\r\n  constructor(mask, segment, silent) {\r\n    this.#mask = mask;\r\n    this.#segment = segment;\r\n\r\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\r\n    // list of offsets with the colour to delete\r\n    this.#offsets = mask.getOffsets(segment.displayValue);\r\n  }\r\n\r\n  /**\r\n   * Get the command name.\r\n   *\r\n   * @returns {string} The command name.\r\n   */\r\n  getName() {\r\n    return 'Delete-segment';\r\n  }\r\n\r\n  /**\r\n   * Check if a command is valid and can be executed.\r\n   *\r\n   * @returns {boolean} True if the command is valid.\r\n   */\r\n  isValid() {\r\n    return this.#offsets.length !== 0;\r\n  }\r\n\r\n  /**\r\n   * Execute the command.\r\n   *\r\n   * @fires DeleteSegmentCommand#masksegmentdelete\r\n   */\r\n  execute() {\r\n    // remove\r\n    this.#mask.setAtOffsets(this.#offsets, {r: 0, g: 0, b: 0});\r\n\r\n    // callback\r\n    if (!this.#isSilent) {\r\n      /**\r\n       * Segment delete event.\r\n       *\r\n       * @event DeleteSegmentCommand#masksegmentdelete\r\n       * @type {object}\r\n       * @property {number} segmentnumber The segment number.\r\n       */\r\n      this.onExecute({\r\n        type: 'masksegmentdelete',\r\n        segmentnumber: this.#segment.number\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Undo the command.\r\n   *\r\n   * @fires DeleteSegmentCommand#masksegmentredraw\r\n   */\r\n  undo() {\r\n    // re-draw\r\n    this.#mask.setAtOffsets(this.#offsets, this.#segment.displayValue);\r\n\r\n    // callback\r\n    /**\r\n     * Segment redraw event.\r\n     *\r\n     * @event DeleteSegmentCommand#masksegmentredraw\r\n     * @type {object}\r\n     * @property {number} segmentnumber The segment number.\r\n     */\r\n    this.onUndo({\r\n      type: 'masksegmentredraw',\r\n      segmentnumber: this.#segment.number\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle an execute event.\r\n   *\r\n   * @param {object} _event The execute event with type and id.\r\n   */\r\n  onExecute(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n  /**\r\n   * Handle an undo event.\r\n   *\r\n   * @param {object} _event The undo event with type and id.\r\n   */\r\n  onUndo(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n} // DeleteSegmentCommand class\r\n","import {Index} from '../math/index';\r\nimport {Vector3D} from '../math/vector';\r\nimport {Point3D} from '../math/point';\r\nimport {isIdentityMat33} from '../math/matrix';\r\nimport {Size} from '../image/size';\r\nimport {Spacing} from '../image/spacing';\r\nimport {Image} from '../image/image';\r\nimport {Geometry} from '../image/geometry';\r\nimport {PlaneHelper} from '../image/planeHelper';\r\nimport {MaskSegmentHelper} from '../image/maskSegmentHelper';\r\nimport {\r\n  getSliceIterator,\r\n  getIteratorValues,\r\n  getRegionSliceIterator,\r\n  getVariableRegionSliceIterator\r\n} from '../image/iterator';\r\nimport {luts} from '../image/luts';\r\nimport {ListenerHandler} from '../utils/listen';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {View} from '../image/view';\r\nimport {ColourMap} from '../image/luts';\r\nimport {Point, Point2D} from '../math/point';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * View controller.\r\n */\r\nexport class ViewController {\r\n\r\n  /**\r\n   * Associated View.\r\n   *\r\n   * @type {View}\r\n   */\r\n  #view;\r\n\r\n  /**\r\n   * Associated data index.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #index;\r\n\r\n  /**\r\n   * Plane helper.\r\n   *\r\n   * @type {PlaneHelper}\r\n   */\r\n  #planeHelper;\r\n\r\n  /**\r\n   * Mask segment helper.\r\n   *\r\n   * @type {MaskSegmentHelper}\r\n   */\r\n  #maskSegmentHelper;\r\n\r\n  // third dimension player ID (created by setInterval)\r\n  #playerID = null;\r\n  // associated data index\r\n  #dataIndex;\r\n\r\n  /**\r\n   * @param {View} view The associated view.\r\n   * @param {number} index The associated data index.\r\n   */\r\n  constructor(view, index) {\r\n    // check view\r\n    if (typeof view.getImage() === 'undefined') {\r\n      throw new Error('View does not have an image, cannot setup controller');\r\n    }\r\n\r\n    this.#view = view;\r\n    this.#index = index;\r\n\r\n    // setup the plane helper\r\n    this.#planeHelper = new PlaneHelper(\r\n      view.getImage().getGeometry().getRealSpacing(),\r\n      view.getImage().getGeometry().getOrientation(),\r\n      view.getOrientation()\r\n    );\r\n\r\n    // mask segment helper\r\n    if (view.getImage().getMeta().Modality === 'SEG') {\r\n      this.#maskSegmentHelper =\r\n        new MaskSegmentHelper(view.getImage());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Get the plane helper.\r\n   *\r\n   * @returns {object} The helper.\r\n   */\r\n  getPlaneHelper() {\r\n    return this.#planeHelper;\r\n  }\r\n\r\n  /**\r\n   * Check is the associated image is a mask.\r\n   *\r\n   * @returns {boolean} True if the associated image is a mask.\r\n   */\r\n  isMask() {\r\n    return typeof this.#maskSegmentHelper !== 'undefined';\r\n  }\r\n\r\n  /**\r\n   * Get the mask segment helper.\r\n   *\r\n   * @returns {object} The helper.\r\n   */\r\n  getMaskSegmentHelper() {\r\n    return this.#maskSegmentHelper;\r\n  }\r\n\r\n  /**\r\n   * Apply the hidden segments list by setting\r\n   * the corresponding alpha function.\r\n   */\r\n  applyHiddenSegments() {\r\n    if (this.isMask) {\r\n      this.setViewAlphaFunction(this.#maskSegmentHelper.getAlphaFunc());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Delete a segment.\r\n   *\r\n   * @param {number} segmentNumber The segment number.\r\n   * @param {Function} exeCallback The post execution callback.\r\n   */\r\n  deleteSegment(segmentNumber, exeCallback) {\r\n    if (this.isMask) {\r\n      this.#maskSegmentHelper.deleteSegment(\r\n        segmentNumber, this.#fireEvent, exeCallback);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialise the controller.\r\n   */\r\n  initialise() {\r\n    // set window/level to first preset\r\n    this.setWindowLevelPresetById(0);\r\n    // default position\r\n    this.setCurrentPosition(this.getPositionFromPlanePoint(0, 0));\r\n  }\r\n\r\n  /**\r\n   * Get the window/level presets names.\r\n   *\r\n   * @returns {Array} The presets names.\r\n   */\r\n  getWindowLevelPresetsNames() {\r\n    return this.#view.getWindowPresetsNames();\r\n  }\r\n\r\n  /**\r\n   * Add window/level presets to the view.\r\n   *\r\n   * @param {object} presets A preset object.\r\n   * @returns {object} The list of presets.\r\n   */\r\n  addWindowLevelPresets(presets) {\r\n    return this.#view.addWindowPresets(presets);\r\n  }\r\n\r\n  /**\r\n   * Set the window level to the preset with the input name.\r\n   *\r\n   * @param {string} name The name of the preset to activate.\r\n   */\r\n  setWindowLevelPreset(name) {\r\n    this.#view.setWindowLevelPreset(name);\r\n  }\r\n\r\n  /**\r\n   * Set the window level to the preset with the input id.\r\n   *\r\n   * @param {number} id The id of the preset to activate.\r\n   */\r\n  setWindowLevelPresetById(id) {\r\n    this.#view.setWindowLevelPresetById(id);\r\n  }\r\n\r\n  /**\r\n   * Check if the controller is playing.\r\n   *\r\n   * @returns {boolean} True if the controler is playing.\r\n   */\r\n  isPlaying() {\r\n    return (this.#playerID !== null);\r\n  }\r\n\r\n  /**\r\n   * Get the current position.\r\n   *\r\n   * @returns {Point} The position.\r\n   */\r\n  getCurrentPosition() {\r\n    return this.#view.getCurrentPosition();\r\n  }\r\n\r\n  /**\r\n   * Get the current index.\r\n   *\r\n   * @returns {Index} The current index.\r\n   */\r\n  getCurrentIndex() {\r\n    return this.#view.getCurrentIndex();\r\n  }\r\n\r\n  /**\r\n   * Get the current oriented index.\r\n   *\r\n   * @returns {Index} The index.\r\n   */\r\n  getCurrentOrientedIndex() {\r\n    let res = this.#view.getCurrentIndex();\r\n    if (typeof this.#view.getOrientation() !== 'undefined') {\r\n      // view oriented => image de-oriented\r\n      const vector = this.#planeHelper.getImageDeOrientedVector3D(\r\n        new Vector3D(res.get(0), res.get(1), res.get(2))\r\n      );\r\n      res = new Index([\r\n        vector.getX(), vector.getY(), vector.getZ()\r\n      ]);\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Get the scroll index.\r\n   *\r\n   * @returns {number} The index.\r\n   */\r\n  getScrollIndex() {\r\n    return this.#view.getScrollIndex();\r\n  }\r\n\r\n  /**\r\n   * Get the current scroll index value.\r\n   *\r\n   * @returns {object} The value.\r\n   */\r\n  getCurrentScrollIndexValue() {\r\n    return this.#view.getCurrentIndex().get(this.#view.getScrollIndex());\r\n  }\r\n\r\n  /**\r\n   * Get the origin at a given posittion.\r\n   *\r\n   * @param {Point} position The input position.\r\n   * @returns {Point} The origin.\r\n   */\r\n  getOrigin(position) {\r\n    return this.#view.getOrigin(position);\r\n  }\r\n\r\n  /**\r\n   * Get the current scroll position value.\r\n   *\r\n   * @returns {object} The value.\r\n   */\r\n  getCurrentScrollPosition() {\r\n    const scrollIndex = this.#view.getScrollIndex();\r\n    return this.#view.getCurrentPosition().get(scrollIndex);\r\n  }\r\n\r\n  /**\r\n   * Generate display image data to be given to a canvas.\r\n   *\r\n   * @param {ImageData} array The array to fill in.\r\n   * @param {Index} index Optional index at which to generate,\r\n   *   otherwise generates at current index.\r\n   */\r\n  generateImageData(array, index) {\r\n    this.#view.generateImageData(array, index);\r\n  }\r\n\r\n  /**\r\n   * Set the associated image.\r\n   *\r\n   * @param {Image} img The associated image.\r\n   * @param {number} index The data index of the image.\r\n   */\r\n  setImage(img, index) {\r\n    this.#view.setImage(img);\r\n    this.#dataIndex = index;\r\n  }\r\n\r\n  /**\r\n   * Get the current spacing.\r\n   *\r\n   * @returns {Array} The 2D spacing.\r\n   */\r\n  get2DSpacing() {\r\n    const spacing = this.#view.getImage().getGeometry().getSpacing();\r\n    return [spacing.get(0), spacing.get(1)];\r\n  }\r\n\r\n  /**\r\n   * Get the image rescaled value at the input position.\r\n   *\r\n   * @param {Point} position the input position.\r\n   * @returns {number|undefined} The image value or undefined if out of bounds\r\n   *   or no quantifiable (for ex RGB).\r\n   */\r\n  getRescaledImageValue(position) {\r\n    const image = this.#view.getImage();\r\n    if (!image.canQuantify()) {\r\n      return;\r\n    }\r\n    const geometry = image.getGeometry();\r\n    const index = geometry.worldToIndex(position);\r\n    let value;\r\n    if (geometry.isIndexInBounds(index)) {\r\n      value = image.getRescaledValueAtIndex(index);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Get the image pixel unit.\r\n   *\r\n   * @returns {string} The unit\r\n   */\r\n  getPixelUnit() {\r\n    return this.#view.getImage().getMeta().pixelUnit;\r\n  }\r\n\r\n  /**\r\n   * Get some values from the associated image in a region.\r\n   *\r\n   * @param {Point2D} min Minimum point.\r\n   * @param {Point2D} max Maximum point.\r\n   * @returns {Array} A list of values.\r\n   */\r\n  getImageRegionValues(min, max) {\r\n    let image = this.#view.getImage();\r\n    const orientation = this.#view.getOrientation();\r\n    let position = this.getCurrentIndex();\r\n    let rescaled = true;\r\n\r\n    // created oriented slice if needed\r\n    if (!isIdentityMat33(orientation)) {\r\n      // generate slice values\r\n      const sliceIter = getSliceIterator(\r\n        image,\r\n        position,\r\n        rescaled,\r\n        orientation\r\n      );\r\n      const sliceValues = getIteratorValues(sliceIter);\r\n      // oriented geometry\r\n      const orientedSize = image.getGeometry().getSize(orientation);\r\n      const sizeValues = orientedSize.getValues();\r\n      sizeValues[2] = 1;\r\n      const sliceSize = new Size(sizeValues);\r\n      const orientedSpacing = image.getGeometry().getSpacing(orientation);\r\n      const spacingValues = orientedSpacing.getValues();\r\n      spacingValues[2] = 1;\r\n      const sliceSpacing = new Spacing(spacingValues);\r\n      const sliceOrigin = new Point3D(0, 0, 0);\r\n      const sliceGeometry =\r\n        new Geometry(sliceOrigin, sliceSize, sliceSpacing);\r\n      // slice image\r\n      // @ts-ignore\r\n      image = new Image(sliceGeometry, sliceValues);\r\n      // update position\r\n      position = new Index([0, 0, 0]);\r\n      rescaled = false;\r\n    }\r\n\r\n    // get region values\r\n    const iter = getRegionSliceIterator(\r\n      image, position, rescaled, min, max);\r\n    let values = [];\r\n    if (iter) {\r\n      values = getIteratorValues(iter);\r\n    }\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Get some values from the associated image in variable regions.\r\n   *\r\n   * @param {Array} regions A list of regions.\r\n   * @returns {Array} A list of values.\r\n   */\r\n  getImageVariableRegionValues(regions) {\r\n    const iter = getVariableRegionSliceIterator(\r\n      this.#view.getImage(),\r\n      this.getCurrentIndex(),\r\n      true, regions\r\n    );\r\n    let values = [];\r\n    if (iter) {\r\n      values = getIteratorValues(iter);\r\n    }\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Can the image values be quantified?\r\n   *\r\n   * @returns {boolean} True if possible.\r\n   */\r\n  canQuantifyImage() {\r\n    return this.#view.getImage().canQuantify();\r\n  }\r\n\r\n  /**\r\n   * Can window and level be applied to the data?\r\n   *\r\n   * @returns {boolean} True if possible.\r\n   */\r\n  canWindowLevel() {\r\n    return this.#view.getImage().canWindowLevel();\r\n  }\r\n\r\n  /**\r\n   * Can the data be scrolled?\r\n   *\r\n   * @returns {boolean} True if the data has either the third dimension\r\n   * or above greater than one.\r\n   */\r\n  canScroll() {\r\n    return this.#view.getImage().canScroll(this.#view.getOrientation());\r\n  }\r\n\r\n  /**\r\n   * Get the image size.\r\n   *\r\n   * @returns {Size} The size.\r\n   */\r\n  getImageSize() {\r\n    return this.#view.getImage().getGeometry().getSize(\r\n      this.#view.getOrientation());\r\n  }\r\n\r\n  /**\r\n   * Get the image world (mm) 2D size.\r\n   *\r\n   * @returns {object} The 2D size as {x,y}.\r\n   */\r\n  getImageWorldSize() {\r\n    const geometry = this.#view.getImage().getGeometry();\r\n    const size = geometry.getSize(this.#view.getOrientation()).get2D();\r\n    const spacing = geometry.getSpacing(this.#view.getOrientation()).get2D();\r\n    return {\r\n      x: size.x * spacing.x,\r\n      y: size.y * spacing.y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the image rescaled data range.\r\n   *\r\n   * @returns {object} The range as {min, max}.\r\n   */\r\n  getImageRescaledDataRange() {\r\n    return this.#view.getImage().getRescaledDataRange();\r\n  }\r\n\r\n  /**\r\n   * Compare the input meta data to the associated image one.\r\n   *\r\n   * @param {object} meta The meta data.\r\n   * @returns {boolean} True if the associated image has equal meta data.\r\n   */\r\n  equalImageMeta(meta) {\r\n    const imageMeta = this.#view.getImage().getMeta();\r\n    // loop through input meta keys\r\n    const metaKeys = Object.keys(meta);\r\n    for (let i = 0; i < metaKeys.length; ++i) {\r\n      const metaKey = metaKeys[i];\r\n      if (typeof imageMeta[metaKey] === 'undefined') {\r\n        return false;\r\n      }\r\n      if (imageMeta[metaKey] !== meta[metaKey]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Check is the provided position can be set.\r\n   *\r\n   * @param {Point} position The position.\r\n   * @returns {boolean} True is the position is in bounds.\r\n   */\r\n  canSetPosition(position) {\r\n    return this.#view.canSetPosition(position);\r\n  }\r\n\r\n  /**\r\n   * Set the current position.\r\n   *\r\n   * @param {Point} pos The position.\r\n   * @param {boolean} [silent] If true, does not fire a\r\n   *   positionchange event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  setCurrentPosition(pos, silent) {\r\n    return this.#view.setCurrentPosition(pos, silent);\r\n  }\r\n\r\n  /**\r\n   * Get a position from a 2D (x,y) position.\r\n   *\r\n   * @param {number} x The column position.\r\n   * @param {number} y The row position.\r\n   * @returns {Point} The associated position.\r\n   */\r\n  getPositionFromPlanePoint(x, y) {\r\n    // keep third direction\r\n    const k = this.getCurrentScrollIndexValue();\r\n    const planePoint = new Point3D(x, y, k);\r\n    // de-orient\r\n    const point = this.#planeHelper.getImageOrientedPoint3D(planePoint);\r\n    // ~indexToWorld to not loose precision\r\n    const geometry = this.#view.getImage().getGeometry();\r\n    const point3D = geometry.pointToWorld(point);\r\n    // merge with current position to keep extra dimensions\r\n    return this.getCurrentPosition().mergeWith3D(point3D);\r\n  }\r\n\r\n  /**\r\n   * Get a 2D (x,y) position from a position.\r\n   *\r\n   * @param {Point} point The 3D position.\r\n   * @returns {object} The 2D position.\r\n   */\r\n  getPlanePositionFromPosition(point) {\r\n    // orient\r\n    const geometry = this.#view.getImage().getGeometry();\r\n    // ~worldToIndex to not loose precision\r\n    const point3D = geometry.worldToPoint(point);\r\n    const planePoint = this.#planeHelper.getImageDeOrientedPoint3D(point3D);\r\n    // return\r\n    return {\r\n      x: planePoint.getX(),\r\n      y: planePoint.getY(),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Set the current index.\r\n   *\r\n   * @param {Index} index The index.\r\n   * @param {boolean} [silent] If true, does not fire a positionchange event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  setCurrentIndex(index, silent) {\r\n    return this.#view.setCurrentIndex(index, silent);\r\n  }\r\n\r\n  /**\r\n   * Get a plane 3D position from a plane 2D position: does not compensate\r\n   *   for the image origin. Needed for setting the scale center...\r\n   *\r\n   * @param {object} point2D The 2D position as {x,y}.\r\n   * @returns {Point3D} The 3D point.\r\n   */\r\n  getPlanePositionFromPlanePoint(point2D) {\r\n    // keep third direction\r\n    const k = this.getCurrentScrollIndexValue();\r\n    const planePoint = new Point3D(point2D.x, point2D.y, k);\r\n    // de-orient\r\n    const point = this.#planeHelper.getTargetDeOrientedPoint3D(planePoint);\r\n    // ~indexToWorld to not loose precision\r\n    const geometry = this.#view.getImage().getGeometry();\r\n    const spacing = geometry.getRealSpacing();\r\n    return new Point3D(\r\n      point.getX() * spacing.get(0),\r\n      point.getY() * spacing.get(1),\r\n      point.getZ() * spacing.get(2));\r\n  }\r\n\r\n  /**\r\n   * Get a 3D offset from a plane one.\r\n   *\r\n   * @param {object} offset2D The plane offset as {x,y}.\r\n   * @returns {Vector3D} The 3D world offset.\r\n   */\r\n  getOffset3DFromPlaneOffset(offset2D) {\r\n    return this.#planeHelper.getOffset3DFromPlaneOffset(offset2D);\r\n  }\r\n\r\n  /**\r\n   * Increment the provided dimension.\r\n   *\r\n   * @param {number} dim The dimension to increment.\r\n   * @param {boolean} [silent] Do not send event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  incrementIndex(dim, silent) {\r\n    return this.#view.incrementIndex(dim, silent);\r\n  }\r\n\r\n  /**\r\n   * Decrement the provided dimension.\r\n   *\r\n   * @param {number} dim The dimension to increment.\r\n   * @param {boolean} [silent] Do not send event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  decrementIndex(dim, silent) {\r\n    return this.#view.decrementIndex(dim, silent);\r\n  }\r\n\r\n  /**\r\n   * Decrement the scroll dimension index.\r\n   *\r\n   * @param {boolean} [silent] Do not send event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  decrementScrollIndex(silent) {\r\n    return this.#view.decrementScrollIndex(silent);\r\n  }\r\n\r\n  /**\r\n   * Increment the scroll dimension index.\r\n   *\r\n   * @param {boolean} [silent] Do not send event.\r\n   * @returns {boolean} False if not in bounds.\r\n   */\r\n  incrementScrollIndex(silent) {\r\n    return this.#view.incrementScrollIndex(silent);\r\n  }\r\n\r\n  /**\r\n   * Scroll play: loop through all slices.\r\n   */\r\n  play() {\r\n    // ensure data is scrollable: dim >= 3\r\n    if (!this.canScroll()) {\r\n      return;\r\n    }\r\n    if (this.#playerID === null) {\r\n      const image = this.#view.getImage();\r\n      const recommendedDisplayFrameRate =\r\n        image.getMeta().RecommendedDisplayFrameRate;\r\n      const milliseconds = this.#view.getPlaybackMilliseconds(\r\n        recommendedDisplayFrameRate);\r\n      const size = image.getGeometry().getSize();\r\n      const canScroll3D = size.canScroll3D();\r\n\r\n      this.#playerID = setInterval(() => {\r\n        let canDoMore = false;\r\n        if (canScroll3D) {\r\n          canDoMore = this.incrementScrollIndex();\r\n        } else {\r\n          canDoMore = this.incrementIndex(3);\r\n        }\r\n        // end of scroll, loop back\r\n        if (!canDoMore) {\r\n          const pos1 = this.getCurrentIndex();\r\n          const values = pos1.getValues();\r\n          const orientation = this.#view.getOrientation();\r\n          if (canScroll3D) {\r\n            values[orientation.getThirdColMajorDirection()] = 0;\r\n          } else {\r\n            values[3] = 0;\r\n          }\r\n          const index = new Index(values);\r\n          const geometry = this.#view.getImage().getGeometry();\r\n          this.setCurrentPosition(geometry.indexToWorld(index));\r\n        }\r\n      }, milliseconds);\r\n    } else {\r\n      this.stop();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop scroll playing.\r\n   */\r\n  stop() {\r\n    if (this.#playerID !== null) {\r\n      clearInterval(this.#playerID);\r\n      this.#playerID = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the window/level.\r\n   *\r\n   * @returns {object} The window center and width.\r\n   */\r\n  getWindowLevel() {\r\n    return {\r\n      width: this.#view.getCurrentWindowLut().getWindowLevel().getWidth(),\r\n      center: this.#view.getCurrentWindowLut().getWindowLevel().getCenter()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Set the window/level.\r\n   *\r\n   * @param {number} wc The window center.\r\n   * @param {number} ww The window width.\r\n   */\r\n  setWindowLevel(wc, ww) {\r\n    this.#view.setWindowLevel(wc, ww);\r\n  }\r\n\r\n  /**\r\n   * Get the colour map.\r\n   *\r\n   * @returns {ColourMap} The colour map.\r\n   */\r\n  getColourMap() {\r\n    return this.#view.getColourMap();\r\n  }\r\n\r\n  /**\r\n   * Set the colour map.\r\n   *\r\n   * @param {ColourMap} colourMap The colour map.\r\n   */\r\n  setColourMap(colourMap) {\r\n    this.#view.setColourMap(colourMap);\r\n  }\r\n\r\n  /**\r\n   * @callback alphaFn\r\n   * @param {object} value The pixel value.\r\n   * @param {object} index The values' index.\r\n   * @returns {number} The value to display.\r\n   */\r\n\r\n  /**\r\n   * Set the view per value alpha function.\r\n   *\r\n   * @param {alphaFn} func The function.\r\n   */\r\n  setViewAlphaFunction(func) {\r\n    this.#view.setAlphaFunction(func);\r\n  }\r\n\r\n  /**\r\n   * Set the colour map from a name.\r\n   *\r\n   * @param {string} name The name of the colour map to set.\r\n   */\r\n  setColourMapFromName(name) {\r\n    // check if we have it\r\n    if (!luts[name]) {\r\n      throw new Error('Unknown colour map: \\'' + name + '\\'');\r\n    }\r\n    // enable it\r\n    this.setColourMap(luts[name]);\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    event.dataid = this.#dataIndex;\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n} // class ViewController\r\n","import {logger} from '../utils/logger';\r\n\r\n/**\r\n * List of interaction event names.\r\n */\r\nexport const InteractionEventNames = [\r\n  'mousedown',\r\n  'mousemove',\r\n  'mouseup',\r\n  'mouseout',\r\n  'wheel',\r\n  'dblclick',\r\n  'touchstart',\r\n  'touchmove',\r\n  'touchend'\r\n];\r\n\r\n/**\r\n * Get a HTML element associated to a container div.\r\n *\r\n * @param {string} containerDivId The id of the container div.\r\n * @param {string} name The name or id to find.\r\n * @returns {object} The found element or null.\r\n * @deprecated\r\n */\r\nexport function getElement(containerDivId, name) {\r\n  // get by class in the container div\r\n  const parent = document.getElementById(containerDivId);\r\n  if (!parent) {\r\n    return null;\r\n  }\r\n  const elements = parent.getElementsByClassName(name);\r\n  // getting the last element since some libraries (ie jquery-mobile) create\r\n  // span in front of regular tags (such as select)...\r\n  let element = elements[elements.length - 1];\r\n  // if not found get by id with 'containerDivId-className'\r\n  if (typeof element === 'undefined') {\r\n    element = document.getElementById(containerDivId + '-' + name);\r\n  }\r\n  return element;\r\n}\r\n\r\n/**\r\n * Overridalbe custom UI object for client defined UI.\r\n */\r\nexport const customUI = {\r\n  /**\r\n   * Open a dialogue to edit roi data. Defaults to window.prompt.\r\n   *\r\n   * @param {object} data The roi data.\r\n   * @param {Function} callback The callback to launch on dialogue exit.\r\n   */\r\n  openRoiDialog(data, callback) {\r\n    const textExpr = prompt('Label', data.textExpr);\r\n    if (textExpr !== null) {\r\n      data.textExpr = textExpr;\r\n      callback(data);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Get the positions (without the parent offset) of a list of touch events.\r\n *\r\n * @param {Array} touches The list of touch events.\r\n * @returns {Array} The list of positions of the touch events.\r\n */\r\nfunction getTouchesPositions(touches) {\r\n  // get the touch offset from all its parents\r\n  let offsetLeft = 0;\r\n  let offsetTop = 0;\r\n  if (touches.length !== 0 &&\r\n    typeof touches[0].target !== 'undefined') {\r\n    let offsetParent = touches[0].target.offsetParent;\r\n    while (offsetParent) {\r\n      if (!isNaN(offsetParent.offsetLeft)) {\r\n        offsetLeft += offsetParent.offsetLeft;\r\n      }\r\n      if (!isNaN(offsetParent.offsetTop)) {\r\n        offsetTop += offsetParent.offsetTop;\r\n      }\r\n      offsetParent = offsetParent.offsetParent;\r\n    }\r\n  } else {\r\n    logger.debug('No touch target offset parent.');\r\n  }\r\n  // set its position\r\n  const positions = [];\r\n  for (let i = 0; i < touches.length; ++i) {\r\n    positions.push({\r\n      x: touches[i].pageX - offsetLeft,\r\n      y: touches[i].pageY - offsetTop\r\n    });\r\n  }\r\n  return positions;\r\n}\r\n\r\n/**\r\n * Get the offset of an input event.\r\n *\r\n * @param {object} event The event to get the offset from.\r\n * @returns {Array} The array of offsets.\r\n */\r\nexport function getEventOffset(event) {\r\n  let positions = [];\r\n  if (typeof event.targetTouches !== 'undefined' &&\r\n    event.targetTouches.length !== 0) {\r\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/targetTouches\r\n    positions = getTouchesPositions(event.targetTouches);\r\n  } else if (typeof event.changedTouches !== 'undefined' &&\r\n    event.changedTouches.length !== 0) {\r\n    // see https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\r\n    positions = getTouchesPositions(event.changedTouches);\r\n  } else {\r\n    // offsetX/Y: the offset in the X coordinate of the mouse pointer\r\n    // between that event and the padding edge of the target node\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX\r\n    // https://caniuse.com/mdn-api_mouseevent_offsetx\r\n    positions.push({\r\n      x: event.offsetX,\r\n      y: event.offsetY\r\n    });\r\n  }\r\n  return positions;\r\n}\r\n\r\n/**\r\n * Test if a canvas with the input size can be created.\r\n *\r\n * @see https://github.com/ivmartel/dwv/issues/902\r\n * @see https://github.com/jhildenbiddle/canvas-size/blob/v1.2.4/src/canvas-test.js\r\n * @param {number} width The canvas width.\r\n * @param {number} height The canvas height.\r\n * @returns {boolean} True is the canvas can be created.\r\n */\r\nexport function canCreateCanvas(width, height) {\r\n  // test canvas with input size\r\n  const testCvs = document.createElement('canvas');\r\n  testCvs.width = width;\r\n  testCvs.height = height;\r\n  // crop canvas to speed up test\r\n  const cropCvs = document.createElement('canvas');\r\n  cropCvs.width = 1;\r\n  cropCvs.height = 1;\r\n  // contexts\r\n  const testCtx = testCvs.getContext('2d');\r\n  const cropCtx = cropCvs.getContext('2d');\r\n  // set data\r\n  if (testCtx) {\r\n    testCtx.fillRect(width - 1, height - 1, 1, 1);\r\n    // Render the test pixel in the bottom-right corner of the\r\n    // test canvas in the top-left of the 1x1 crop canvas. This\r\n    // dramatically reducing the time for getImageData to complete.\r\n    cropCtx.drawImage(testCvs, width - 1, height - 1, 1, 1, 0, 0, 1, 1);\r\n  }\r\n  // Verify image data (alpha component, Pass = 255, Fail = 0)\r\n  return cropCtx && cropCtx.getImageData(0, 0, 1, 1).data[3] !== 0;\r\n}\r\n","import {Index} from '../math/index';\r\nimport {ListenerHandler} from '../utils/listen';\r\nimport {viewEventNames} from '../image/view';\r\nimport {ViewController} from '../app/viewController';\r\nimport {\r\n  canCreateCanvas,\r\n  InteractionEventNames\r\n} from './generic';\r\nimport {getScaledOffset} from './layerGroup';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Vector3D} from '../math/vector';\r\nimport {Point, Point3D} from '../math/point';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * View layer.\r\n */\r\nexport class ViewLayer {\r\n\r\n  /**\r\n   * Container div.\r\n   *\r\n   * @type {HTMLElement}\r\n   */\r\n  #containerDiv;\r\n\r\n  /**\r\n   * The view controller.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #viewController = null;\r\n\r\n  /**\r\n   * The main display canvas.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #canvas = null;\r\n\r\n  /**\r\n   * The offscreen canvas: used to store the raw, unscaled pixel data.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #offscreenCanvas = null;\r\n\r\n  /**\r\n   * The associated CanvasRenderingContext2D.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #context = null;\r\n\r\n  /**\r\n   * Flag to know if the current position is valid.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isValidPosition = true;\r\n\r\n  /**\r\n   * The image data array.\r\n   *\r\n   * @type {ImageData}\r\n   */\r\n  #imageData = null;\r\n\r\n  /**\r\n   * The layer base size as {x,y}.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #baseSize;\r\n\r\n  /**\r\n   * The layer base spacing as {x,y}.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #baseSpacing;\r\n\r\n  /**\r\n   * The layer opacity.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #opacity = 1;\r\n\r\n  /**\r\n   * The layer scale.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #scale = {x: 1, y: 1};\r\n\r\n  /**\r\n   * The layer fit scale.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #fitScale = {x: 1, y: 1};\r\n\r\n  /**\r\n   * The layer offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #offset = {x: 0, y: 0};\r\n\r\n  /**\r\n   * The base layer offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #baseOffset = {x: 0, y: 0};\r\n\r\n  /**\r\n   * The view offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #viewOffset = {x: 0, y: 0};\r\n\r\n  /**\r\n   * The zoom offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #zoomOffset = {x: 0, y: 0};\r\n\r\n  /**\r\n   * The flip offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #flipOffset = {x: 0, y: 0};\r\n\r\n  /**\r\n   * Data update flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #needsDataUpdate = null;\r\n\r\n  /**\r\n   * The associated data index.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #dataIndex = null;\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Image smoothing flag.\r\n   * see: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/imageSmoothingEnabled\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #imageSmoothingEnabled = false;\r\n\r\n  /**\r\n   * @param {HTMLElement} containerDiv The layer div, its id will be used\r\n   *   as this layer id.\r\n   */\r\n  constructor(containerDiv) {\r\n    this.#containerDiv = containerDiv;\r\n    // specific css class name\r\n    this.#containerDiv.className += ' viewLayer';\r\n  }\r\n\r\n  /**\r\n   * Get the associated data index.\r\n   *\r\n   * @returns {number} The index.\r\n   */\r\n  getDataIndex() {\r\n    return this.#dataIndex;\r\n  }\r\n\r\n  /**\r\n   * Set the imageSmoothingEnabled flag value.\r\n   *\r\n   * @param {boolean} flag True to enable smoothing.\r\n   */\r\n  enableImageSmoothing(flag) {\r\n    this.#imageSmoothingEnabled = flag;\r\n  }\r\n\r\n  /**\r\n   * Set the associated view.\r\n   *\r\n   * @param {object} view The view.\r\n   * @param {number} index The associated data index.\r\n   */\r\n  setView(view, index) {\r\n    this.#dataIndex = index;\r\n    // local listeners\r\n    view.addEventListener('wlchange', this.#onWLChange);\r\n    view.addEventListener('colourchange', this.#onColourChange);\r\n    view.addEventListener('positionchange', this.#onPositionChange);\r\n    view.addEventListener('alphafuncchange', this.#onAlphaFuncChange);\r\n    // view events\r\n    for (let j = 0; j < viewEventNames.length; ++j) {\r\n      view.addEventListener(viewEventNames[j], this.#fireEvent);\r\n    }\r\n    // create view controller\r\n    this.#viewController = new ViewController(view, index);\r\n  }\r\n\r\n  /**\r\n   * Get the view controller.\r\n   *\r\n   * @returns {ViewController} The controller.\r\n   */\r\n  getViewController() {\r\n    return this.#viewController;\r\n  }\r\n\r\n  /**\r\n   * Get the canvas image data.\r\n   *\r\n   * @returns {object} The image data.\r\n   */\r\n  getImageData() {\r\n    return this.#imageData;\r\n  }\r\n\r\n  /**\r\n   * Handle an image set event.\r\n   *\r\n   * @param {object} event The event.\r\n   * @function\r\n   */\r\n  onimageset = (event) => {\r\n    // event.value = [index, image]\r\n    if (this.#dataIndex === event.dataid) {\r\n      this.#viewController.setImage(event.value[0], this.#dataIndex);\r\n      this.#setBaseSize(this.#viewController.getImageSize().get2D());\r\n      this.#needsDataUpdate = true;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle an image change event.\r\n   *\r\n   * @param {object} event The event.\r\n   * @function\r\n   */\r\n  onimagechange = (event) => {\r\n    // event.value = [index]\r\n    if (this.#dataIndex === event.dataid) {\r\n      this.#needsDataUpdate = true;\r\n    }\r\n  };\r\n\r\n  // common layer methods [start] ---------------\r\n\r\n  /**\r\n   * Get the id of the layer.\r\n   *\r\n   * @returns {string} The string id.\r\n   */\r\n  getId() {\r\n    return this.#containerDiv.id;\r\n  }\r\n\r\n  /**\r\n   * Get the layer base size (without scale).\r\n   *\r\n   * @returns {object} The size as {x,y}.\r\n   */\r\n  getBaseSize() {\r\n    return this.#baseSize;\r\n  }\r\n\r\n  /**\r\n   * Get the image world (mm) 2D size.\r\n   *\r\n   * @returns {object} The 2D size as {x,y}.\r\n   */\r\n  getImageWorldSize() {\r\n    return this.#viewController.getImageWorldSize();\r\n  }\r\n\r\n  /**\r\n   * Get the layer opacity.\r\n   *\r\n   * @returns {number} The opacity ([0:1] range).\r\n   */\r\n  getOpacity() {\r\n    return this.#opacity;\r\n  }\r\n\r\n  /**\r\n   * Set the layer opacity.\r\n   *\r\n   * @param {number} alpha The opacity ([0:1] range).\r\n   */\r\n  setOpacity(alpha) {\r\n    if (alpha === this.#opacity) {\r\n      return;\r\n    }\r\n\r\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\r\n\r\n    /**\r\n     * Opacity change event.\r\n     *\r\n     * @event App#opacitychange\r\n     * @type {object}\r\n     * @property {string} type The event type.\r\n     */\r\n    const event = {\r\n      type: 'opacitychange',\r\n      value: [this.#opacity]\r\n    };\r\n    this.#fireEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Add a flip offset along the layer X axis.\r\n   */\r\n  addFlipOffsetX() {\r\n    // flip scale is handled by layer group\r\n    // flip offset\r\n    this.#flipOffset.x += this.#canvas.width / this.#scale.x;\r\n    this.#offset.x += this.#flipOffset.x;\r\n  }\r\n\r\n  /**\r\n   * Add a flip offset along the layer Y axis.\r\n   */\r\n  addFlipOffsetY() {\r\n    // flip scale is handled by layer group\r\n    // flip offset\r\n    this.#flipOffset.y += this.#canvas.height / this.#scale.y;\r\n    this.#offset.y += this.#flipOffset.y;\r\n  }\r\n\r\n  /**\r\n   * Set the layer scale.\r\n   *\r\n   * @param {object} newScale The scale as {x,y}.\r\n   * @param {Point3D} [center] The scale center.\r\n   */\r\n  setScale(newScale, center) {\r\n    const helper = this.#viewController.getPlaneHelper();\r\n    const orientedNewScale = helper.getTargetOrientedPositiveXYZ(newScale);\r\n    const finalNewScale = {\r\n      x: this.#fitScale.x * orientedNewScale.x,\r\n      y: this.#fitScale.y * orientedNewScale.y\r\n    };\r\n\r\n    if (Math.abs(newScale.x) === 1 &&\r\n      Math.abs(newScale.y) === 1 &&\r\n      Math.abs(newScale.z) === 1) {\r\n      // reset zoom offset for scale=1\r\n      const resetOffset = {\r\n        x: this.#offset.x - this.#zoomOffset.x,\r\n        y: this.#offset.y - this.#zoomOffset.y\r\n      };\r\n      // store new offset\r\n      this.#zoomOffset = {x: 0, y: 0};\r\n      this.#offset = resetOffset;\r\n    } else {\r\n      if (typeof center !== 'undefined') {\r\n        let worldCenter = helper.getPlaneOffsetFromOffset3D({\r\n          x: center.getX(),\r\n          y: center.getY(),\r\n          z: center.getZ()\r\n        });\r\n        // center was obtained with viewLayer.displayToMainPlanePos\r\n        // compensated for baseOffset\r\n        // TODO: justify...\r\n        worldCenter = {\r\n          x: worldCenter.x + this.#baseOffset.x,\r\n          y: worldCenter.y + this.#baseOffset.y\r\n        };\r\n\r\n        const newOffset = getScaledOffset(\r\n          this.#offset, this.#scale, finalNewScale, worldCenter);\r\n\r\n        const newZoomOffset = {\r\n          x: this.#zoomOffset.x + newOffset.x - this.#offset.x,\r\n          y: this.#zoomOffset.y + newOffset.y - this.#offset.y\r\n        };\r\n        // store new offset\r\n        this.#zoomOffset = newZoomOffset;\r\n        this.#offset = newOffset;\r\n      }\r\n    }\r\n\r\n    // store new scale\r\n    this.#scale = finalNewScale;\r\n  }\r\n\r\n  /**\r\n   * Set the base layer offset. Updates the layer offset.\r\n   *\r\n   * @param {Vector3D} scrollOffset The scroll offset vector.\r\n   * @param {Vector3D} planeOffset The plane offset vector.\r\n   * @returns {boolean} True if the offset was updated.\r\n   */\r\n  setBaseOffset(scrollOffset, planeOffset) {\r\n    const helper = this.#viewController.getPlaneHelper();\r\n    const scrollIndex = helper.getNativeScrollIndex();\r\n    const newOffset = helper.getPlaneOffsetFromOffset3D({\r\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\r\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\r\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\r\n    });\r\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\r\n    this.#baseOffset.y !== newOffset.y;\r\n    // reset offset if needed\r\n    if (needsUpdate) {\r\n      this.#offset = {\r\n        x: this.#offset.x - this.#baseOffset.x + newOffset.x,\r\n        y: this.#offset.y - this.#baseOffset.y + newOffset.y\r\n      };\r\n      this.#baseOffset = newOffset;\r\n    }\r\n    return needsUpdate;\r\n  }\r\n\r\n  /**\r\n   * Set the layer offset.\r\n   *\r\n   * @param {object} newOffset The offset as {x,y}.\r\n   */\r\n  setOffset(newOffset) {\r\n    const helper = this.#viewController.getPlaneHelper();\r\n    const planeNewOffset = helper.getPlaneOffsetFromOffset3D(newOffset);\r\n    this.#offset = {\r\n      x: planeNewOffset.x +\r\n        this.#viewOffset.x +\r\n        this.#baseOffset.x +\r\n        this.#zoomOffset.x +\r\n        this.#flipOffset.x,\r\n      y: planeNewOffset.y +\r\n        this.#viewOffset.y +\r\n        this.#baseOffset.y +\r\n        this.#zoomOffset.y +\r\n        this.#flipOffset.y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Transform a display position to an index.\r\n   *\r\n   * @param {number} x The X position.\r\n   * @param {number} y The Y position.\r\n   * @returns {Index} The equivalent index.\r\n   */\r\n  displayToPlaneIndex(x, y) {\r\n    const planePos = this.displayToPlanePos(x, y);\r\n    return new Index([\r\n      Math.floor(planePos.x),\r\n      Math.floor(planePos.y)\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Remove scale from a display position.\r\n   *\r\n   * @param {number} x The X position.\r\n   * @param {number} y The Y position.\r\n   * @returns {object} The de-scaled position as {x,y}.\r\n   */\r\n  displayToPlaneScale(x, y) {\r\n    return {\r\n      x: x / this.#scale.x,\r\n      y: y / this.#scale.y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get a plane position from a display position.\r\n   *\r\n   * @param {number} x The X position.\r\n   * @param {number} y The Y position.\r\n   * @returns {object} The plane position as {x,y}.\r\n   */\r\n  displayToPlanePos(x, y) {\r\n    const deScaled = this.displayToPlaneScale(x, y);\r\n    return {\r\n      x: deScaled.x + this.#offset.x,\r\n      y: deScaled.y + this.#offset.y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get a display position from a plane position.\r\n   *\r\n   * @param {number} x The X position.\r\n   * @param {number} y The Y position.\r\n   * @returns {object} The display position as {x,y}.\r\n   */\r\n  planePosToDisplay(x, y) {\r\n    return {\r\n      x: (x - this.#offset.x + this.#baseOffset.x) * this.#scale.x,\r\n      y: (y - this.#offset.y + this.#baseOffset.y) * this.#scale.y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get a main plane position from a display position.\r\n   *\r\n   * @param {number} x The X position.\r\n   * @param {number} y The Y position.\r\n   * @returns {object} The main plane position as {x,y}.\r\n   */\r\n  displayToMainPlanePos(x, y) {\r\n    const planePos = this.displayToPlanePos(x, y);\r\n    return {\r\n      x: planePos.x - this.#baseOffset.x,\r\n      y: planePos.y - this.#baseOffset.y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Display the layer.\r\n   *\r\n   * @param {boolean} flag Whether to display the layer or not.\r\n   */\r\n  display(flag) {\r\n    this.#containerDiv.style.display = flag ? '' : 'none';\r\n  }\r\n\r\n  /**\r\n   * Check if the layer is visible.\r\n   *\r\n   * @returns {boolean} True if the layer is visible.\r\n   */\r\n  isVisible() {\r\n    return this.#containerDiv.style.display === '';\r\n  }\r\n\r\n  /**\r\n   * Draw the content (imageData) of the layer.\r\n   * The imageData variable needs to be set\r\n   *\r\n   * @fires App#renderstart\r\n   * @fires App#renderend\r\n   */\r\n  draw() {\r\n    // skip for non valid position\r\n    if (!this.#isValidPosition) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Render start event.\r\n     *\r\n     * @event App#renderstart\r\n     * @type {object}\r\n     * @property {string} type The event type.\r\n     */\r\n    let event = {\r\n      type: 'renderstart',\r\n      layerid: this.getId(),\r\n      dataid: this.getDataIndex()\r\n    };\r\n    this.#fireEvent(event);\r\n\r\n    // update data if needed\r\n    if (this.#needsDataUpdate) {\r\n      this.#updateImageData();\r\n    }\r\n\r\n    // context opacity\r\n    this.#context.globalAlpha = this.#opacity;\r\n\r\n    // clear context\r\n    this.clear();\r\n\r\n    // draw the cached canvas on the context\r\n    // transform takes as input a, b, c, d, e, f to create\r\n    // the transform matrix (column-major order):\r\n    // [ a c e ]\r\n    // [ b d f ]\r\n    // [ 0 0 1 ]\r\n    this.#context.setTransform(\r\n      this.#scale.x,\r\n      0,\r\n      0,\r\n      this.#scale.y,\r\n      -1 * this.#offset.x * this.#scale.x,\r\n      -1 * this.#offset.y * this.#scale.y\r\n    );\r\n\r\n    // disable smoothing (set just before draw, could be reset by resize)\r\n    this.#context.imageSmoothingEnabled = this.#imageSmoothingEnabled;\r\n    // draw image\r\n    this.#context.drawImage(this.#offscreenCanvas, 0, 0);\r\n\r\n    /**\r\n     * Render end event.\r\n     *\r\n     * @event App#renderend\r\n     * @type {object}\r\n     * @property {string} type The event type.\r\n     */\r\n    event = {\r\n      type: 'renderend',\r\n      layerid: this.getId(),\r\n      dataid: this.getDataIndex()\r\n    };\r\n    this.#fireEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Initialise the layer: set the canvas and context\r\n   *\r\n   * @param {object} size The image size as {x,y}.\r\n   * @param {object} spacing The image spacing as {x,y}.\r\n   * @param {number} alpha The initial data opacity.\r\n   */\r\n  initialise(size, spacing, alpha) {\r\n    // set locals\r\n    this.#baseSpacing = spacing;\r\n    this.#opacity = Math.min(Math.max(alpha, 0), 1);\r\n\r\n    // create canvas\r\n    // (canvas size is set in fitToContainer)\r\n    this.#canvas = document.createElement('canvas');\r\n    this.#containerDiv.appendChild(this.#canvas);\r\n\r\n    // check that the getContext method exists\r\n    if (!this.#canvas.getContext) {\r\n      alert('Error: no canvas.getContext method.');\r\n      return;\r\n    }\r\n    // get the 2D context\r\n    this.#context = this.#canvas.getContext('2d');\r\n    if (!this.#context) {\r\n      alert('Error: failed to get the 2D context.');\r\n      return;\r\n    }\r\n\r\n    // off screen canvas\r\n    this.#offscreenCanvas = document.createElement('canvas');\r\n\r\n    // set base size: needs an existing context and off screen canvas\r\n    this.#setBaseSize(size);\r\n\r\n    // update data on first draw\r\n    this.#needsDataUpdate = true;\r\n  }\r\n\r\n  /**\r\n   * Set the base size of the layer.\r\n   *\r\n   * @param {object} size The size as {x,y}.\r\n   */\r\n  #setBaseSize(size) {\r\n    // check canvas creation\r\n    if (!canCreateCanvas(size.x, size.y)) {\r\n      throw new Error('Cannot create canvas with size ' +\r\n        size.x + ', ' + size.y);\r\n    }\r\n\r\n    // set local\r\n    this.#baseSize = size;\r\n\r\n    // off screen canvas\r\n    this.#offscreenCanvas.width = this.#baseSize.x;\r\n    this.#offscreenCanvas.height = this.#baseSize.y;\r\n    // original empty image data array\r\n    this.#context.clearRect(0, 0, this.#baseSize.x, this.#baseSize.y);\r\n    this.#imageData = this.#context.createImageData(\r\n      this.#baseSize.x, this.#baseSize.y);\r\n  }\r\n\r\n  /**\r\n   * Fit the layer to its parent container.\r\n   *\r\n   * @param {number} fitScale1D The 1D fit scale.\r\n   * @param {object} fitSize The fit size as {x,y}.\r\n   * @param {object} fitOffset The fit offset as {x,y}.\r\n   */\r\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\r\n    let needsDraw = false;\r\n\r\n    // update canvas size if needed (triggers canvas reset)\r\n    if (this.#canvas.width !== fitSize.x || this.#canvas.height !== fitSize.y) {\r\n      if (!canCreateCanvas(fitSize.x, fitSize.y)) {\r\n        throw new Error('Cannot resize canvas ' + fitSize.x + ', ' + fitSize.y);\r\n      }\r\n      // canvas size  change triggers canvas reset\r\n      this.#canvas.width = fitSize.x;\r\n      this.#canvas.height = fitSize.y;\r\n      // update draw flag\r\n      needsDraw = true;\r\n    }\r\n    // previous fit scale\r\n    const previousFitScale = this.#fitScale;\r\n    // previous scale without fit\r\n    const previousScale = {\r\n      x: this.#scale.x / this.#fitScale.x,\r\n      y: this.#scale.y / this.#fitScale.y\r\n    };\r\n    // fit scale\r\n    const newFitScale = {\r\n      x: fitScale1D * this.#baseSpacing.x,\r\n      y: fitScale1D * this.#baseSpacing.y\r\n    };\r\n    // scale\r\n    const newScale = {\r\n      x: previousScale.x * newFitScale.x,\r\n      y: previousScale.y * newFitScale.y\r\n    };\r\n    // check if different\r\n    if (previousScale.x !== newScale.x || previousScale.y !== newScale.y) {\r\n      this.#fitScale = newFitScale;\r\n      this.#scale = newScale;\r\n      // update draw flag\r\n      needsDraw = true;\r\n    }\r\n\r\n    // view offset\r\n    const newViewOffset = {\r\n      x: fitOffset.x / newFitScale.x,\r\n      y: fitOffset.y / newFitScale.y\r\n    };\r\n    const newFlipOffset = {\r\n      x: this.#flipOffset.x * previousFitScale.x / newFitScale.x,\r\n      y: this.#flipOffset.y * previousFitScale.y / newFitScale.y\r\n    };\r\n    // check if different\r\n    if (this.#viewOffset.x !== newViewOffset.x ||\r\n      this.#viewOffset.y !== newViewOffset.y ||\r\n      this.#flipOffset.x !== newFlipOffset.x ||\r\n      this.#flipOffset.y !== newFlipOffset.y) {\r\n      // update private local offsets\r\n      this.#flipOffset = newFlipOffset;\r\n      this.#viewOffset = newViewOffset;\r\n      // update global offset\r\n      this.#offset = {\r\n        x: this.#viewOffset.x +\r\n          this.#baseOffset.x +\r\n          this.#zoomOffset.x +\r\n          this.#flipOffset.x,\r\n        y: this.#viewOffset.y +\r\n          this.#baseOffset.y +\r\n          this.#zoomOffset.y +\r\n          this.#flipOffset.y\r\n      };\r\n      // update draw flag\r\n      needsDraw = true;\r\n    }\r\n\r\n    // draw if needed\r\n    if (needsDraw) {\r\n      this.draw();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Enable and listen to container interaction events.\r\n   */\r\n  bindInteraction() {\r\n    // allow pointer events\r\n    this.#containerDiv.style.pointerEvents = 'auto';\r\n    // interaction events\r\n    const names = InteractionEventNames;\r\n    for (let i = 0; i < names.length; ++i) {\r\n      const eventName = names[i];\r\n      const passive = eventName !== 'wheel';\r\n      this.#containerDiv.addEventListener(\r\n        names[i], this.#fireEvent, {passive: passive});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disable and stop listening to container interaction events.\r\n   */\r\n  unbindInteraction() {\r\n    // disable pointer events\r\n    this.#containerDiv.style.pointerEvents = 'none';\r\n    // interaction events\r\n    const names = InteractionEventNames;\r\n    for (let i = 0; i < names.length; ++i) {\r\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    event.srclayerid = this.getId();\r\n    event.dataid = this.#dataIndex;\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n  // common layer methods [end] ---------------\r\n\r\n  /**\r\n   * Update the canvas image data.\r\n   */\r\n  #updateImageData() {\r\n    // generate image data\r\n    this.#viewController.generateImageData(this.#imageData);\r\n    // pass the data to the off screen canvas\r\n    this.#offscreenCanvas.getContext('2d').putImageData(this.#imageData, 0, 0);\r\n    // update data flag\r\n    this.#needsDataUpdate = false;\r\n  }\r\n\r\n  /**\r\n   * Handle window/level change.\r\n   *\r\n   * @param {object} event The event fired when changing the window/level.\r\n   */\r\n  #onWLChange = (event) => {\r\n    // generate and draw if no skip flag\r\n    const skip = typeof event.skipGenerate !== 'undefined' &&\r\n      event.skipGenerate === true;\r\n    if (!skip) {\r\n      this.#needsDataUpdate = true;\r\n      this.draw();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle colour map change.\r\n   *\r\n   * @param {object} event The event fired when changing the colour map.\r\n   */\r\n  #onColourChange = (event) => {\r\n    const skip = typeof event.skipGenerate !== 'undefined' &&\r\n      event.skipGenerate === true;\r\n    if (!skip) {\r\n      this.#needsDataUpdate = true;\r\n      this.draw();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle position change.\r\n   *\r\n   * @param {object} event The event fired when changing the position.\r\n   */\r\n  #onPositionChange = (event) => {\r\n    const skip = typeof event.skipGenerate !== 'undefined' &&\r\n      event.skipGenerate === true;\r\n    if (!skip) {\r\n      let valid = true;\r\n      if (typeof event.valid !== 'undefined') {\r\n        valid = event.valid;\r\n      }\r\n      // clear for non valid events\r\n      if (!valid) {\r\n        // clear only once\r\n        if (this.#isValidPosition) {\r\n          this.#isValidPosition = false;\r\n          this.clear();\r\n        }\r\n      } else {\r\n        // 3D dimensions\r\n        const dims3D = [0, 1, 2];\r\n        // remove scroll index\r\n        const indexScrollIndex =\r\n          dims3D.indexOf(this.#viewController.getScrollIndex());\r\n        dims3D.splice(indexScrollIndex, 1);\r\n        // remove non scroll index from diff dims\r\n        const diffDims = event.diffDims.filter(function (item) {\r\n          return dims3D.indexOf(item) === -1;\r\n        });\r\n        // update if we have something left\r\n        if (diffDims.length !== 0 || !this.#isValidPosition) {\r\n          // reset valid flag\r\n          this.#isValidPosition = true;\r\n          // reset update flag\r\n          this.#needsDataUpdate = true;\r\n          this.draw();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle alpha function change.\r\n   *\r\n   * @param {object} event The event fired when changing the function.\r\n   */\r\n  #onAlphaFuncChange = (event) => {\r\n    const skip = typeof event.skipGenerate !== 'undefined' &&\r\n      event.skipGenerate === true;\r\n    if (!skip) {\r\n      this.#needsDataUpdate = true;\r\n      this.draw();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the current position.\r\n   *\r\n   * @param {Point} position The new position.\r\n   * @param {Index} _index The new index.\r\n   * @returns {boolean} True if the position was updated.\r\n   */\r\n  setCurrentPosition(position, _index) {\r\n    return this.#viewController.setCurrentPosition(position);\r\n  }\r\n\r\n  /**\r\n   * Clear the context.\r\n   */\r\n  clear() {\r\n    // clear the context: reset the transform first\r\n    // store the current transformation matrix\r\n    this.#context.save();\r\n    // use the identity matrix while clearing the canvas\r\n    this.#context.setTransform(1, 0, 0, 1, 0, 0);\r\n    this.#context.clearRect(0, 0, this.#canvas.width, this.#canvas.height);\r\n    // restore the transform\r\n    this.#context.restore();\r\n  }\r\n\r\n} // ViewLayer class\r\n","import {getShadowColour} from '../utils/colour';\r\n\r\n/**\r\n * Style class.\r\n */\r\nexport class Style {\r\n  /**\r\n   * Font size.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #fontSize = 10;\r\n\r\n  /**\r\n   * Font family.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #fontFamily = 'Verdana';\r\n\r\n  /**\r\n   * Text colour.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #textColour = '#fff';\r\n\r\n  /**\r\n   * Line colour.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #lineColour = '#ffff80';\r\n\r\n  /**\r\n   * Base scale.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #baseScale = {x: 1, y: 1};\r\n\r\n  /**\r\n   * Zoom scale.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #zoomScale = {x: 1, y: 1};\r\n\r\n  /**\r\n   * Stroke width.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #strokeWidth = 2;\r\n\r\n  /**\r\n   * Shadow offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #shadowOffset = {x: 0.25, y: 0.25};\r\n\r\n  /**\r\n   * Tag opacity.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #tagOpacity = 0.2;\r\n\r\n  /**\r\n   * Text padding.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #textPadding = 3;\r\n\r\n  /**\r\n   * Get the font family.\r\n   *\r\n   * @returns {string} The font family.\r\n   */\r\n  getFontFamily() {\r\n    return this.#fontFamily;\r\n  }\r\n\r\n  /**\r\n   * Get the font size.\r\n   *\r\n   * @returns {number} The font size.\r\n   */\r\n  getFontSize() {\r\n    return this.#fontSize;\r\n  }\r\n\r\n  /**\r\n   * Get the stroke width.\r\n   *\r\n   * @returns {number} The stroke width.\r\n   */\r\n  getStrokeWidth() {\r\n    return this.#strokeWidth;\r\n  }\r\n\r\n  /**\r\n   * Get the text colour.\r\n   *\r\n   * @returns {string} The text colour.\r\n   */\r\n  getTextColour() {\r\n    return this.#textColour;\r\n  }\r\n\r\n  /**\r\n   * Get the line colour.\r\n   *\r\n   * @returns {string} The line colour.\r\n   */\r\n  getLineColour() {\r\n    return this.#lineColour;\r\n  }\r\n\r\n  /**\r\n   * Set the line colour.\r\n   *\r\n   * @param {string} colour The line colour.\r\n   */\r\n  setLineColour(colour) {\r\n    this.#lineColour = colour;\r\n  }\r\n\r\n  /**\r\n   * Set the base scale.\r\n   *\r\n   * @param {number} scale The scale as {x,y}.\r\n   */\r\n  setBaseScale(scale) {\r\n    this.#baseScale = scale;\r\n  }\r\n\r\n  /**\r\n   * Set the zoom scale.\r\n   *\r\n   * @param {object} scale The scale as {x,y}.\r\n   */\r\n  setZoomScale(scale) {\r\n    this.#zoomScale = scale;\r\n  }\r\n\r\n  /**\r\n   * Get the base scale.\r\n   *\r\n   * @returns {number} The scale as {x,y}.\r\n   */\r\n  getBaseScale() {\r\n    return this.#baseScale;\r\n  }\r\n\r\n  /**\r\n   * Get the zoom scale.\r\n   *\r\n   * @returns {object} The scale as {x,y}.\r\n   */\r\n  getZoomScale() {\r\n    return this.#zoomScale;\r\n  }\r\n\r\n  /**\r\n   * Scale an input value using the base scale.\r\n   *\r\n   * @param {number} value The value to scale.\r\n   * @returns {number} The scaled value.\r\n   */\r\n  scale(value) {\r\n    // TODO: 2D?\r\n    return value / this.#baseScale.x;\r\n  }\r\n\r\n  /**\r\n   * Apply zoom scale on an input value.\r\n   *\r\n   * @param {number} value The value to scale.\r\n   * @returns {object} The scaled value as {x,y}.\r\n   */\r\n  applyZoomScale(value) {\r\n    // times 2 so that the font size 10 looks like a 10...\r\n    // (same logic as in the DrawController::updateLabelScale)\r\n    return {\r\n      x: 2 * value / this.#zoomScale.x,\r\n      y: 2 * value / this.#zoomScale.y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get the shadow offset.\r\n   *\r\n   * @returns {object} The offset as {x,y}.\r\n   */\r\n  getShadowOffset() {\r\n    return this.#shadowOffset;\r\n  }\r\n\r\n  /**\r\n   * Get the tag opacity.\r\n   *\r\n   * @returns {number} The opacity.\r\n   */\r\n  getTagOpacity() {\r\n    return this.#tagOpacity;\r\n  }\r\n\r\n  /**\r\n   * Get the text padding.\r\n   *\r\n   * @returns {number} The padding.\r\n   */\r\n  getTextPadding() {\r\n    return this.#textPadding;\r\n  }\r\n\r\n  /**\r\n   * Get the font definition string.\r\n   *\r\n   * @returns {string} The font definition string.\r\n   */\r\n  getFontStr() {\r\n    return ('normal ' + this.getFontSize() + 'px sans-serif');\r\n  }\r\n\r\n  /**\r\n   * Get the line height.\r\n   *\r\n   * @returns {number} The line height.\r\n   */\r\n  getLineHeight() {\r\n    return (this.getFontSize() + this.getFontSize() / 5);\r\n  }\r\n\r\n  /**\r\n   * Get the font size scaled to the display.\r\n   *\r\n   * @returns {number} The scaled font size.\r\n   */\r\n  getScaledFontSize() {\r\n    return this.scale(this.getFontSize());\r\n  }\r\n\r\n  /**\r\n   * Get the stroke width scaled to the display.\r\n   *\r\n   * @returns {number} The scaled stroke width.\r\n   */\r\n  getScaledStrokeWidth() {\r\n    return this.scale(this.getStrokeWidth());\r\n  }\r\n\r\n  /**\r\n   * Get the shadow line colour.\r\n   *\r\n   * @returns {string} The shadow line colour.\r\n   */\r\n  getShadowLineColour() {\r\n    return getShadowColour(this.getLineColour());\r\n  }\r\n\r\n} // class Style\r\n","// external\r\nimport Konva from 'konva';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Style} from '../gui/style';\r\nimport {ViewController} from '../app/viewController';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Get the display name of the input shape.\r\n *\r\n * @param {object} shape The Konva shape.\r\n * @returns {string} The display name.\r\n */\r\nexport function getShapeDisplayName(shape) {\r\n  let displayName = 'shape';\r\n  if (shape instanceof Konva.Line) {\r\n    if (shape.points().length === 4) {\r\n      displayName = 'line';\r\n    } else if (shape.points().length === 6) {\r\n      displayName = 'protractor';\r\n    } else {\r\n      displayName = 'roi';\r\n    }\r\n  } else if (shape instanceof Konva.Rect) {\r\n    displayName = 'rectangle';\r\n  } else if (shape instanceof Konva.Ellipse) {\r\n    displayName = 'ellipse';\r\n  }\r\n  // return\r\n  return displayName;\r\n}\r\n\r\n/**\r\n * Draw group command.\r\n */\r\nexport class DrawGroupCommand {\r\n\r\n  /**\r\n   * The group to draw.\r\n   *\r\n   * @type {Konva.Group}\r\n   */\r\n  #group;\r\n\r\n  /**\r\n   * The shape display name.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #name;\r\n\r\n  /**\r\n   * The Konva layer.\r\n   *\r\n   * @type {Konva.Layer}\r\n   */\r\n  #layer;\r\n\r\n  /**\r\n   * Flag to send events.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isSilent;\r\n\r\n  /**\r\n   * The group parent.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #parent;\r\n\r\n  /**\r\n   * @param {Konva.Group} group The group draw.\r\n   * @param {string} name The shape display name.\r\n   * @param {Konva.Layer} layer The layer where to draw the group.\r\n   * @param {boolean} [silent] Whether to send a creation event or not.\r\n   */\r\n  constructor(group, name, layer, silent) {\r\n    this.#group = group;\r\n    this.#name = name;\r\n    this.#layer = layer;\r\n    this.#isSilent = (typeof silent === 'undefined') ? false : silent;\r\n    this.#parent = group.getParent();\r\n  }\r\n\r\n  /**\r\n   * Get the command name.\r\n   *\r\n   * @returns {string} The command name.\r\n   */\r\n  getName() {\r\n    return 'Draw-' + this.#name;\r\n  }\r\n\r\n  /**\r\n   * Execute the command.\r\n   *\r\n   * @fires DrawGroupCommand#drawcreate\r\n   */\r\n  execute() {\r\n    // add the group to the parent (in case of undo/redo)\r\n    this.#parent.add(this.#group);\r\n    // draw\r\n    this.#layer.draw();\r\n    // callback\r\n    if (!this.#isSilent) {\r\n      /**\r\n       * Draw create event.\r\n       *\r\n       * @event DrawGroupCommand#drawcreate\r\n       * @type {object}\r\n       * @property {number} id The id of the create draw.\r\n       */\r\n      this.onExecute({\r\n        type: 'drawcreate',\r\n        id: this.#group.id()\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Undo the command.\r\n   *\r\n   * @fires DeleteGroupCommand#drawdelete\r\n   */\r\n  undo() {\r\n    // remove the group from the parent layer\r\n    this.#group.remove();\r\n    // draw\r\n    this.#layer.draw();\r\n    // callback\r\n    this.onUndo({\r\n      type: 'drawdelete',\r\n      id: this.#group.id()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle an execute event.\r\n   *\r\n   * @param {object} _event The execute event with type and id.\r\n   */\r\n  onExecute(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n  /**\r\n   * Handle an undo event.\r\n   *\r\n   * @param {object} _event The undo event with type and id.\r\n   */\r\n  onUndo(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n} // DrawGroupCommand class\r\n\r\n\r\n/**\r\n * Move group command.\r\n */\r\nexport class MoveGroupCommand {\r\n\r\n  /**\r\n   * The group to move.\r\n   *\r\n   * @type {Konva.Group}\r\n   */\r\n  #group;\r\n\r\n  /**\r\n   * The shape display name.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #name;\r\n\r\n  /**\r\n   * The 2D translation as {x,y}.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #translation;\r\n\r\n  /**\r\n   * The Konva layer.\r\n   *\r\n   * @type {Konva.Layer}\r\n   */\r\n  #layer;\r\n\r\n  /**\r\n   * @param {Konva.Group} group The group draw.\r\n   * @param {string} name The shape display name.\r\n   * @param {object} translation A 2D translation to move the group by.\r\n   * @param {Konva.Layer} layer The layer where to move the group.\r\n   */\r\n  constructor(group, name, translation, layer) {\r\n    this.#group = group;\r\n    this.#name = name;\r\n    this.#translation = translation;\r\n    this.#layer = layer;\r\n  }\r\n\r\n  /**\r\n   * Get the command name.\r\n   *\r\n   * @returns {string} The command name.\r\n   */\r\n  getName() {\r\n    return 'Move-' + this.#name;\r\n  }\r\n\r\n  /**\r\n   * Execute the command.\r\n   *\r\n   * @fires MoveGroupCommand#drawmove\r\n   */\r\n  execute() {\r\n    // translate group\r\n    this.#group.move(this.#translation);\r\n    // draw\r\n    this.#layer.draw();\r\n    // callback\r\n    /**\r\n     * Draw move event.\r\n     *\r\n     * @event MoveGroupCommand#drawmove\r\n     * @type {object}\r\n     * @property {number} id The id of the create draw.\r\n     */\r\n    this.onExecute({\r\n      type: 'drawmove',\r\n      id: this.#group.id()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Undo the command.\r\n   *\r\n   * @fires MoveGroupCommand#drawmove\r\n   */\r\n  undo() {\r\n    // invert translate group\r\n    const minusTrans = {\r\n      x: -this.#translation.x,\r\n      y: -this.#translation.y\r\n    };\r\n    this.#group.move(minusTrans);\r\n    // draw\r\n    this.#layer.draw();\r\n    // callback\r\n    this.onUndo({\r\n      type: 'drawmove',\r\n      id: this.#group.id()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle an execute event.\r\n   *\r\n   * @param {object} _event The execute event with type and id.\r\n   */\r\n  onExecute(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n  /**\r\n   * Handle an undo event.\r\n   *\r\n   * @param {object} _event The undo event with type and id.\r\n   */\r\n  onUndo(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n} // MoveGroupCommand class\r\n\r\n\r\n/**\r\n * Change group command.\r\n */\r\nexport class ChangeGroupCommand {\r\n\r\n  /**\r\n   * The shape display name.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #name;\r\n\r\n  /**\r\n   * The shape factory.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #factory;\r\n\r\n  /**\r\n   * The start anchor.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #startAnchor;\r\n\r\n  /**\r\n   * The end anchor.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #endAnchor;\r\n\r\n  /**\r\n   * The Konva layer.\r\n   *\r\n   * @type {Konva.Layer}\r\n   */\r\n  #layer;\r\n\r\n  /**\r\n   * The associated view controller.\r\n   *\r\n   * @type {ViewController}\r\n   */\r\n  #viewController;\r\n\r\n  /**\r\n   * The app style.\r\n   *\r\n   * @type {Style}\r\n   */\r\n  #style;\r\n\r\n  /**\r\n   * @param {string} name The shape display name.\r\n   * @param {object} factory The shape factory.\r\n   * @param {object} startAnchor The anchor that starts the change.\r\n   * @param {object} endAnchor The anchor that ends the change.\r\n   * @param {Konva.Layer} layer The layer where to change the group.\r\n   * @param {ViewController} viewController The associated viewController.\r\n   * @param {Style} style The app style.\r\n   */\r\n  constructor(\r\n    name, factory, startAnchor, endAnchor, layer, viewController, style) {\r\n    this.#name = name;\r\n    this.#factory = factory;\r\n    this.#startAnchor = startAnchor;\r\n    this.#endAnchor = endAnchor;\r\n    this.#layer = layer;\r\n    this.#viewController = viewController;\r\n    this.#style = style;\r\n  }\r\n\r\n  /**\r\n   * Get the command name.\r\n   *\r\n   * @returns {string} The command name.\r\n   */\r\n  getName() {\r\n    return 'Change-' + this.#name;\r\n  }\r\n\r\n  /**\r\n   * Execute the command.\r\n   *\r\n   * @fires ChangeGroupCommand#drawchange\r\n   */\r\n  execute() {\r\n    // change shape\r\n    this.#factory.update(\r\n      this.#endAnchor,\r\n      this.#style,\r\n      this.#viewController\r\n    );\r\n    // draw\r\n    this.#layer.draw();\r\n    // callback\r\n    /**\r\n     * Draw change event.\r\n     *\r\n     * @event ChangeGroupCommand#drawchange\r\n     * @type {object}\r\n     */\r\n    this.onExecute({\r\n      type: 'drawchange',\r\n      id: this.#endAnchor.getParent().id()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Undo the command.\r\n   *\r\n   * @fires ChangeGroupCommand#drawchange\r\n   */\r\n  undo() {\r\n    // invert change shape\r\n    this.#factory.update(\r\n      this.#startAnchor,\r\n      this.#style,\r\n      this.#viewController\r\n    );\r\n    // draw\r\n    this.#layer.draw();\r\n    // callback\r\n    this.onUndo({\r\n      type: 'drawchange',\r\n      id: this.#startAnchor.getParent().id()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle an execute event.\r\n   *\r\n   * @param {object} _event The execute event with type and id.\r\n   */\r\n  onExecute(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n  /**\r\n   * Handle an undo event.\r\n   *\r\n   * @param {object} _event The undo event with type and id.\r\n   */\r\n  onUndo(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n} // ChangeGroupCommand class\r\n\r\n/**\r\n * Delete group command.\r\n */\r\nexport class DeleteGroupCommand {\r\n\r\n  /**\r\n   * The group to draw.\r\n   *\r\n   * @type {Konva.Group}\r\n   */\r\n  #group;\r\n\r\n  /**\r\n   * The shape display name.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #name;\r\n\r\n  /**\r\n   * The Konva layer.\r\n   *\r\n   * @type {Konva.Layer}\r\n   */\r\n  #layer;\r\n\r\n  /**\r\n   * The group parent.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #parent;\r\n\r\n  /**\r\n   * @param {object} group The group draw.\r\n   * @param {string} name The shape display name.\r\n   * @param {object} layer The layer where to delete the group.\r\n   */\r\n  constructor(group, name, layer) {\r\n    this.#group = group;\r\n    this.#name = name;\r\n    this.#layer = layer;\r\n    this.#parent = group.getParent();\r\n  }\r\n\r\n  /**\r\n   * Get the command name.\r\n   *\r\n   * @returns {string} The command name.\r\n   */\r\n  getName() {\r\n    return 'Delete-' + this.#name;\r\n  }\r\n\r\n  /**\r\n   * Execute the command.\r\n   *\r\n   * @fires DeleteGroupCommand#drawdelete\r\n   */\r\n  execute() {\r\n    // remove the group from its parent\r\n    this.#group.remove();\r\n    // draw\r\n    this.#layer.draw();\r\n    // callback\r\n    /**\r\n     * Draw delete event.\r\n     *\r\n     * @event DeleteGroupCommand#drawdelete\r\n     * @type {object}\r\n     * @property {number} id The id of the create draw.\r\n     */\r\n    this.onExecute({\r\n      type: 'drawdelete',\r\n      id: this.#group.id()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Undo the command.\r\n   *\r\n   * @fires DrawGroupCommand#drawcreate\r\n   */\r\n  undo() {\r\n    // add the group to its parent\r\n    this.#parent.add(this.#group);\r\n    // draw\r\n    this.#layer.draw();\r\n    // callback\r\n    this.onUndo({\r\n      type: 'drawcreate',\r\n      id: this.#group.id()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle an execute event.\r\n   *\r\n   * @param {object} _event The execute event with type and id.\r\n   */\r\n  onExecute(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n  /**\r\n   * Handle an undo event.\r\n   *\r\n   * @param {object} _event The undo event with type and id.\r\n   */\r\n  onUndo(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n} // DeleteGroupCommand class\r\n","import {getIndexFromStringId} from '../math/index';\r\nimport {logger} from '../utils/logger';\r\nimport {replaceFlags} from '../utils/string';\r\nimport {getShadowColour} from '../utils/colour';\r\nimport {\r\n  getShapeDisplayName,\r\n  DrawGroupCommand,\r\n  DeleteGroupCommand\r\n} from '../tools/drawCommands';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Index} from '../math/index';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Konva.\r\n *\r\n * @external Konva\r\n * @see https://konvajs.org/\r\n */\r\nimport Konva from 'konva';\r\n\r\n/**\r\n * Is an input node's name 'shape'.\r\n *\r\n * @param {object} node A Konva node.\r\n * @returns {boolean} True if the node's name is 'shape'.\r\n */\r\nexport function isNodeNameShape(node) {\r\n  return node.name() === 'shape';\r\n}\r\n\r\n/**\r\n * Is a node an extra shape associated with a main one.\r\n *\r\n * @param {object} node A Konva node.\r\n * @returns {boolean} True if the node's name starts with 'shape-'.\r\n */\r\nexport function isNodeNameShapeExtra(node) {\r\n  return node.name().startsWith('shape-');\r\n}\r\n\r\n/**\r\n * Is an input node's name 'label'.\r\n *\r\n * @param {object} node A Konva node.\r\n * @returns {boolean} True if the node's name is 'label'.\r\n */\r\nexport function isNodeNameLabel(node) {\r\n  return node.name() === 'label';\r\n}\r\n\r\n/**\r\n * Is an input node a position node.\r\n *\r\n * @param {object} node A Konva node.\r\n * @returns {boolean} True if the node's name is 'position-group'.\r\n */\r\nexport function isPositionNode(node) {\r\n  return node.name() === 'position-group';\r\n}\r\n\r\n/**\r\n * @callback testFn\r\n * @param {object} node The node.\r\n * @returns {boolean} True if the node passes the test.\r\n */\r\n\r\n/**\r\n * Get a lambda to check a node's id.\r\n *\r\n * @param {string} id The id to check.\r\n * @returns {testFn} A function to check a node's id.\r\n */\r\nexport function isNodeWithId(id) {\r\n  return function (node) {\r\n    return node.id() === id;\r\n  };\r\n}\r\n\r\n/**\r\n * Is the input node a node that has the 'stroke' method.\r\n *\r\n * @param {object} node A Konva node.\r\n * @returns {boolean} True if the node's name is 'anchor' and 'label'.\r\n */\r\nexport function canNodeChangeColour(node) {\r\n  return node.name() !== 'anchor' && node.name() !== 'label';\r\n}\r\n\r\n/**\r\n * Debug function to output the layer hierarchy as text.\r\n *\r\n * @param {object} layer The Konva layer.\r\n * @param {string} prefix A display prefix (used in recursion).\r\n * @returns {string} A text representation of the hierarchy.\r\n */\r\nexport function getHierarchyLog(layer, prefix) {\r\n  if (typeof prefix === 'undefined') {\r\n    prefix = '';\r\n  }\r\n  const kids = layer.getChildren();\r\n  let log = prefix + '|__ ' + layer.name() + ': ' + layer.id() + '\\n';\r\n  for (let i = 0; i < kids.length; ++i) {\r\n    log += getHierarchyLog(kids[i], prefix + '    ');\r\n  }\r\n  return log;\r\n}\r\n\r\n/**\r\n * Draw controller.\r\n */\r\nexport class DrawController {\r\n\r\n  /**\r\n   * The Konva layer.\r\n   *\r\n   * @type {Konva.Layer}\r\n   */\r\n  #konvaLayer;\r\n\r\n  /**\r\n   * Current position group id.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #currentPosGroupId = null;\r\n\r\n  /**\r\n   * @param {Konva.Layer} konvaLayer The draw layer.\r\n   */\r\n  constructor(konvaLayer) {\r\n    this.#konvaLayer = konvaLayer;\r\n  }\r\n\r\n  /**\r\n   * Get the current position group.\r\n   *\r\n   * @returns {object} The Konva.Group.\r\n   */\r\n  getCurrentPosGroup() {\r\n    // get position groups\r\n    const posGroups = this.#konvaLayer.getChildren((node) => {\r\n      return node.id() === this.#currentPosGroupId;\r\n    });\r\n    // if one group, use it\r\n    // if no group, create one\r\n    let posGroup = null;\r\n    if (posGroups.length === 1) {\r\n      posGroup = posGroups[0];\r\n    } else if (posGroups.length === 0) {\r\n      posGroup = new Konva.Group();\r\n      posGroup.name('position-group');\r\n      posGroup.id(this.#currentPosGroupId);\r\n      posGroup.visible(true); // dont inherit\r\n      // add new group to layer\r\n      this.#konvaLayer.add(posGroup);\r\n    } else {\r\n      logger.warn('Unexpected number of draw position groups.');\r\n    }\r\n    // return\r\n    return posGroup;\r\n  }\r\n\r\n  /**\r\n   * Reset: clear the layers array.\r\n   */\r\n  reset() {\r\n    this.#konvaLayer = null;\r\n  }\r\n\r\n  /**\r\n   * Get a Konva group using its id.\r\n   *\r\n   * @param {string} id The group id.\r\n   * @returns {object|undefined} The Konva group.\r\n   */\r\n  getGroup(id) {\r\n    const group = this.#konvaLayer.findOne('#' + id);\r\n    if (typeof group === 'undefined') {\r\n      logger.warn('Cannot find node with id: ' + id\r\n      );\r\n    }\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Activate the current draw layer.\r\n   *\r\n   * @param {Index} index The current position.\r\n   * @param {number} scrollIndex The scroll index.\r\n   */\r\n  activateDrawLayer(index, scrollIndex) {\r\n    // TODO: add layer info\r\n    // get and store the position group id\r\n    const dims = [scrollIndex];\r\n    for (let j = 3; j < index.length(); ++j) {\r\n      dims.push(j);\r\n    }\r\n    this.#currentPosGroupId = index.toStringId(dims);\r\n\r\n    // get all position groups\r\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\r\n    // reset or set the visible property\r\n    let visible;\r\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\r\n      visible = false;\r\n      if (posGroups[i].id() === this.#currentPosGroupId) {\r\n        visible = true;\r\n      }\r\n      // group members inherit the visible property\r\n      posGroups[i].visible(visible);\r\n    }\r\n\r\n    // show current draw layer\r\n    this.#konvaLayer.draw();\r\n  }\r\n\r\n  /**\r\n   * Get a list of drawing display details.\r\n   *\r\n   * @returns {Array} A list of draw details as\r\n   *   {id, position, type, color, meta}\r\n   */\r\n  getDrawDisplayDetails() {\r\n    const list = [];\r\n    const groups = this.#konvaLayer.getChildren();\r\n    for (let j = 0, lenj = groups.length; j < lenj; ++j) {\r\n      const position = getIndexFromStringId(groups[j].id());\r\n      // @ts-ignore\r\n      const collec = groups[j].getChildren();\r\n      for (let i = 0, leni = collec.length; i < leni; ++i) {\r\n        const shape = collec[i].getChildren(isNodeNameShape)[0];\r\n        const label = collec[i].getChildren(isNodeNameLabel)[0];\r\n        const text = label.getChildren()[0];\r\n        let type = shape.className;\r\n        if (type === 'Line') {\r\n          const shapeExtrakids = collec[i].getChildren(\r\n            isNodeNameShapeExtra);\r\n          if (shape.closed()) {\r\n            type = 'Roi';\r\n          } else if (shapeExtrakids.length !== 0) {\r\n            const extraName0 = shapeExtrakids[0].name();\r\n            if (extraName0.indexOf('triangle') !== -1) {\r\n              type = 'Arrow';\r\n            } else if (extraName0.indexOf('arc') !== -1) {\r\n              type = 'Protractor';\r\n            } else {\r\n              type = 'Ruler';\r\n            }\r\n          }\r\n        }\r\n        if (type === 'Rect') {\r\n          type = 'Rectangle';\r\n        }\r\n        list.push({\r\n          id: collec[i].id(),\r\n          position: position.toString(),\r\n          type: type,\r\n          color: shape.stroke(),\r\n          meta: text.meta\r\n        });\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Get a list of drawing store details. Used in state.\r\n   *\r\n   * @returns {object} A list of draw details including id, text, quant...\r\n   * TODO Unify with getDrawDisplayDetails?\r\n   */\r\n  getDrawStoreDetails() {\r\n    const drawingsDetails = {};\r\n\r\n    // get all position groups\r\n    const posGroups = this.#konvaLayer.getChildren(isPositionNode);\r\n\r\n    let posKids;\r\n    let group;\r\n    for (let i = 0, leni = posGroups.length; i < leni; ++i) {\r\n      // @ts-ignore\r\n      posKids = posGroups[i].getChildren();\r\n      for (let j = 0, lenj = posKids.length; j < lenj; ++j) {\r\n        group = posKids[j];\r\n        // remove anchors\r\n        const anchors = group.find('.anchor');\r\n        for (let a = 0; a < anchors.length; ++a) {\r\n          anchors[a].remove();\r\n        }\r\n        // get text\r\n        const texts = group.find('.text');\r\n        if (texts.length !== 1) {\r\n          logger.warn('There should not be more than one text per shape.');\r\n        }\r\n        // get meta (non konva vars)\r\n        drawingsDetails[group.id()] = {\r\n          meta: texts[0].meta\r\n        };\r\n      }\r\n    }\r\n    return drawingsDetails;\r\n  }\r\n\r\n  /**\r\n   * Set the drawings on the current stage.\r\n   *\r\n   * @param {Array} drawings An array of drawings.\r\n   * @param {Array} drawingsDetails An array of drawings details.\r\n   * @param {object} cmdCallback The DrawCommand callback.\r\n   * @param {object} exeCallback The callback to call once the\r\n   *   DrawCommand has been executed.\r\n   */\r\n  setDrawings(\r\n    drawings, drawingsDetails, cmdCallback, exeCallback) {\r\n    // regular Konva deserialize\r\n    const stateLayer = Konva.Node.create(drawings);\r\n\r\n    // get all position groups\r\n    const statePosGroups = stateLayer.getChildren(isPositionNode);\r\n\r\n    for (let i = 0, leni = statePosGroups.length; i < leni; ++i) {\r\n      const statePosGroup = statePosGroups[i];\r\n\r\n      // Get or create position-group if it does not exist and\r\n      // append it to konvaLayer\r\n      let posGroup = this.#konvaLayer.getChildren(\r\n        isNodeWithId(statePosGroup.id()))[0];\r\n      if (typeof posGroup === 'undefined') {\r\n        posGroup = new Konva.Group({\r\n          id: statePosGroup.id(),\r\n          name: 'position-group',\r\n          visible: false\r\n        });\r\n        this.#konvaLayer.add(posGroup);\r\n      }\r\n\r\n      const statePosKids = statePosGroup.getChildren();\r\n      for (let j = 0, lenj = statePosKids.length; j < lenj; ++j) {\r\n        // shape group (use first one since it will be removed from\r\n        // the group when we change it)\r\n        const stateGroup = statePosKids[0];\r\n        // add group to posGroup (switches its parent)\r\n        // @ts-ignore\r\n        posGroup.add(stateGroup);\r\n        // shape\r\n        const shape = stateGroup.getChildren(isNodeNameShape)[0];\r\n        // create the draw command\r\n        const cmd = new DrawGroupCommand(\r\n          stateGroup, shape.className, this.#konvaLayer);\r\n        // draw command callbacks\r\n        cmd.onExecute = cmdCallback;\r\n        cmd.onUndo = cmdCallback;\r\n        // details\r\n        if (drawingsDetails) {\r\n          const details = drawingsDetails[stateGroup.id()];\r\n          const label = stateGroup.getChildren(isNodeNameLabel)[0];\r\n          const text = label.getText();\r\n          // store details\r\n          text.meta = details.meta;\r\n          // reset text (it was not encoded)\r\n          text.setText(replaceFlags(\r\n            text.meta.textExpr, text.meta.quantification\r\n          ));\r\n        }\r\n        // execute\r\n        cmd.execute();\r\n        exeCallback(cmd);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update a drawing from its details.\r\n   *\r\n   * @param {object} drawDetails Details of the drawing to update.\r\n   */\r\n  updateDraw(drawDetails) {\r\n    // get the group\r\n    const group = this.#konvaLayer.findOne('#' + drawDetails.id);\r\n    if (typeof group === 'undefined') {\r\n      logger.warn(\r\n        '[updateDraw] Cannot find group with id: ' + drawDetails.id\r\n      );\r\n      return;\r\n    }\r\n    // shape\r\n    // @ts-ignore\r\n    const shapes = group.getChildren(isNodeNameShape);\r\n    for (let i = 0; i < shapes.length; ++i) {\r\n      shapes[i].stroke(drawDetails.color);\r\n    }\r\n    // shape extra\r\n    // @ts-ignore\r\n    const shapesExtra = group.getChildren(isNodeNameShapeExtra);\r\n    for (let j = 0; j < shapesExtra.length; ++j) {\r\n      if (typeof shapesExtra[j].stroke() !== 'undefined') {\r\n        shapesExtra[j].stroke(drawDetails.color);\r\n      } else if (typeof shapesExtra[j].fill() !== 'undefined') {\r\n        // for example text\r\n        shapesExtra[j].fill(drawDetails.color);\r\n      }\r\n    }\r\n    // label\r\n    // @ts-ignore\r\n    const label = group.getChildren(isNodeNameLabel)[0];\r\n    const shadowColor = getShadowColour(drawDetails.color);\r\n    const kids = label.getChildren();\r\n    for (let k = 0; k < kids.length; ++k) {\r\n      const kid = kids[k];\r\n      kid.fill(drawDetails.color);\r\n      if (kids[k].className === 'Text') {\r\n        const text = kids[k];\r\n        text.shadowColor(shadowColor);\r\n        if (typeof drawDetails.meta !== 'undefined') {\r\n          text.meta = drawDetails.meta;\r\n          text.setText(replaceFlags(\r\n            text.meta.textExpr, text.meta.quantification\r\n          ));\r\n          label.setVisible(text.meta.textExpr.length !== 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    // udpate current layer\r\n    this.#konvaLayer.draw();\r\n  }\r\n\r\n  /**\r\n   * Delete a Draw from the stage.\r\n   *\r\n   * @param {object} group The group to delete.\r\n   * @param {object} cmdCallback The DeleteCommand callback.\r\n   * @param {object} exeCallback The callback to call once the\r\n   *  DeleteCommand has been executed.\r\n   */\r\n  deleteDrawGroup(group, cmdCallback, exeCallback) {\r\n    const shape = group.getChildren(isNodeNameShape)[0];\r\n    const shapeDisplayName = getShapeDisplayName(shape);\r\n    const delcmd = new DeleteGroupCommand(\r\n      group, shapeDisplayName, this.#konvaLayer);\r\n    delcmd.onExecute = cmdCallback;\r\n    delcmd.onUndo = cmdCallback;\r\n    delcmd.execute();\r\n    // callback\r\n    exeCallback(delcmd);\r\n  }\r\n\r\n  /**\r\n   * Delete a Draw from the stage.\r\n   *\r\n   * @param {string} id The id of the group to delete.\r\n   * @param {Function} cmdCallback The DeleteCommand callback.\r\n   * @param {Function} exeCallback The callback to call once the\r\n   *  DeleteCommand has been executed.\r\n   * @returns {boolean} False if the group cannot be found.\r\n   */\r\n  deleteDraw(id, cmdCallback, exeCallback) {\r\n    // get the group\r\n    const group = this.getGroup(id);\r\n    if (typeof group === 'undefined') {\r\n      return false;\r\n    }\r\n    // delete\r\n    this.deleteDrawGroup(group, cmdCallback, exeCallback);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Delete all Draws from the stage.\r\n   *\r\n   * @param {Function} cmdCallback The DeleteCommand callback.\r\n   * @param {Function} exeCallback The callback to call once the\r\n   *  DeleteCommand has been executed.\r\n   */\r\n  deleteDraws(cmdCallback, exeCallback) {\r\n    const groups = this.#konvaLayer.getChildren();\r\n    while (groups.length) {\r\n      this.deleteDrawGroup(groups[0], cmdCallback, exeCallback);\r\n    }\r\n  }\r\n\r\n} // class DrawController\r\n","import {ListenerHandler} from '../utils/listen';\r\nimport {DrawController} from '../app/drawController';\r\nimport {getScaledOffset} from './layerGroup';\r\nimport {InteractionEventNames} from './generic';\r\n\r\n// external\r\nimport Konva from 'konva';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Point, Point3D} from '../math/point';\r\nimport {Index} from '../math/index';\r\nimport {Vector3D} from '../math/vector';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Draw layer.\r\n */\r\nexport class DrawLayer {\r\n\r\n  /**\r\n   * The container div.\r\n   *\r\n   * @type {HTMLDivElement}\r\n   */\r\n  #containerDiv;\r\n\r\n  /**\r\n   * Konva stage.\r\n   *\r\n   * @type {Konva.Stage}\r\n   */\r\n  #konvaStage = null;\r\n\r\n  /**\r\n   * The layer base size as {x,y}.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #baseSize;\r\n\r\n  /**\r\n   * The layer base spacing as {x,y}.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #baseSpacing;\r\n\r\n  /**\r\n   * The layer fit scale.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #fitScale = {x: 1, y: 1};\r\n\r\n  /**\r\n   * The base layer offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #baseOffset = {x: 0, y: 0};\r\n\r\n  /**\r\n   * The view offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #viewOffset = {x: 0, y: 0};\r\n\r\n  /**\r\n   * The zoom offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #zoomOffset = {x: 0, y: 0};\r\n\r\n  /**\r\n   * The flip offset.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #flipOffset = {x: 0, y: 0};\r\n\r\n  /**\r\n   * The draw controller.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #drawController = null;\r\n\r\n  /**\r\n   * The plane helper.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #planeHelper;\r\n\r\n  /**\r\n   * The associated data index.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #dataIndex = null;\r\n\r\n  /**\r\n   * @param {HTMLDivElement} containerDiv The layer div, its id will be used\r\n   *   as this layer id.\r\n   */\r\n  constructor(containerDiv) {\r\n    this.#containerDiv = containerDiv;\r\n    // specific css class name\r\n    this.#containerDiv.className += ' drawLayer';\r\n  }\r\n\r\n  /**\r\n   * Get the associated data index.\r\n   *\r\n   * @returns {number} The index.\r\n   */\r\n  getDataIndex() {\r\n    return this.#dataIndex;\r\n  }\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Get the Konva stage.\r\n   *\r\n   * @returns {object} The stage.\r\n   */\r\n  getKonvaStage() {\r\n    return this.#konvaStage;\r\n  }\r\n\r\n  /**\r\n   * Get the Konva layer.\r\n   *\r\n   * @returns {object} The layer.\r\n   */\r\n  getKonvaLayer() {\r\n    // there should only be one layer\r\n    return this.#konvaStage.getLayers()[0];\r\n  }\r\n\r\n  /**\r\n   * Get the draw controller.\r\n   *\r\n   * @returns {object} The controller.\r\n   */\r\n  getDrawController() {\r\n    return this.#drawController;\r\n  }\r\n\r\n  /**\r\n   * Set the plane helper.\r\n   *\r\n   * @param {object} helper The helper.\r\n   */\r\n  setPlaneHelper(helper) {\r\n    this.#planeHelper = helper;\r\n  }\r\n\r\n  // common layer methods [start] ---------------\r\n\r\n  /**\r\n   * Get the id of the layer.\r\n   *\r\n   * @returns {string} The string id.\r\n   */\r\n  getId() {\r\n    return this.#containerDiv.id;\r\n  }\r\n\r\n  /**\r\n   * Get the layer base size (without scale).\r\n   *\r\n   * @returns {object} The size as {x,y}.\r\n   */\r\n  getBaseSize() {\r\n    return this.#baseSize;\r\n  }\r\n\r\n  /**\r\n   * Get the layer opacity.\r\n   *\r\n   * @returns {number} The opacity ([0:1] range).\r\n   */\r\n  getOpacity() {\r\n    return this.#konvaStage.opacity();\r\n  }\r\n\r\n  /**\r\n   * Set the layer opacity.\r\n   *\r\n   * @param {number} alpha The opacity ([0:1] range).\r\n   */\r\n  setOpacity(alpha) {\r\n    this.#konvaStage.opacity(Math.min(Math.max(alpha, 0), 1));\r\n  }\r\n\r\n  /**\r\n   * Add a flip offset along the layer X axis.\r\n   */\r\n  addFlipOffsetX() {\r\n    // flip scale is handled by layer group\r\n    // flip offset\r\n    const scale = this.#konvaStage.scale();\r\n    const size = this.#konvaStage.size();\r\n    this.#flipOffset.x += size.width / scale.x;\r\n    // apply\r\n    const offset = this.#konvaStage.offset();\r\n    offset.x += this.#flipOffset.x;\r\n    this.#konvaStage.offset(offset);\r\n  }\r\n\r\n  /**\r\n   * Add a flip offset along the layer Y axis.\r\n   */\r\n  addFlipOffsetY() {\r\n    // flip scale is handled by layer group\r\n    // flip offset\r\n    const scale = this.#konvaStage.scale();\r\n    const size = this.#konvaStage.size();\r\n    this.#flipOffset.y += size.height / scale.y;\r\n    // apply\r\n    const offset = this.#konvaStage.offset();\r\n    offset.y += this.#flipOffset.y;\r\n    this.#konvaStage.offset(offset);\r\n  }\r\n\r\n  /**\r\n   * Set the layer scale.\r\n   *\r\n   * @param {object} newScale The scale as {x,y}.\r\n   * @param {Point3D} [center] The scale center.\r\n   */\r\n  setScale(newScale, center) {\r\n    const orientedNewScale =\r\n      this.#planeHelper.getTargetOrientedPositiveXYZ(newScale);\r\n    const finalNewScale = {\r\n      x: this.#fitScale.x * orientedNewScale.x,\r\n      y: this.#fitScale.y * orientedNewScale.y\r\n    };\r\n\r\n    const offset = this.#konvaStage.offset();\r\n\r\n    if (Math.abs(newScale.x) === 1 &&\r\n      Math.abs(newScale.y) === 1 &&\r\n      Math.abs(newScale.z) === 1) {\r\n      // reset zoom offset for scale=1\r\n      const resetOffset = {\r\n        x: offset.x - this.#zoomOffset.x,\r\n        y: offset.y - this.#zoomOffset.y\r\n      };\r\n      // store new offset\r\n      this.#zoomOffset = {x: 0, y: 0};\r\n      this.#konvaStage.offset(resetOffset);\r\n    } else {\r\n      if (typeof center !== 'undefined') {\r\n        let worldCenter = this.#planeHelper.getPlaneOffsetFromOffset3D({\r\n          x: center.getX(),\r\n          y: center.getY(),\r\n          z: center.getZ()\r\n        });\r\n        // center was obtained with viewLayer.displayToMainPlanePos\r\n        // compensated for baseOffset\r\n        // TODO: justify...\r\n        worldCenter = {\r\n          x: worldCenter.x + this.#baseOffset.x,\r\n          y: worldCenter.y + this.#baseOffset.y\r\n        };\r\n\r\n        const newOffset = getScaledOffset(\r\n          offset, this.#konvaStage.scale(), finalNewScale, worldCenter);\r\n\r\n        const newZoomOffset = {\r\n          x: this.#zoomOffset.x + newOffset.x - offset.x,\r\n          y: this.#zoomOffset.y + newOffset.y - offset.y\r\n        };\r\n        // store new offset\r\n        this.#zoomOffset = newZoomOffset;\r\n        this.#konvaStage.offset(newOffset);\r\n      }\r\n    }\r\n\r\n    this.#konvaStage.scale(finalNewScale);\r\n    // update labels\r\n    this.#updateLabelScale(finalNewScale);\r\n  }\r\n\r\n  /**\r\n   * Set the layer offset.\r\n   *\r\n   * @param {object} newOffset The offset as {x,y}.\r\n   */\r\n  setOffset(newOffset) {\r\n    const planeNewOffset =\r\n      this.#planeHelper.getPlaneOffsetFromOffset3D(newOffset);\r\n    this.#konvaStage.offset({\r\n      x: planeNewOffset.x +\r\n        this.#viewOffset.x +\r\n        this.#baseOffset.x +\r\n        this.#zoomOffset.x +\r\n        this.#flipOffset.x,\r\n      y: planeNewOffset.y +\r\n        this.#viewOffset.y +\r\n        this.#baseOffset.y +\r\n        this.#zoomOffset.y +\r\n        this.#flipOffset.y\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the base layer offset. Updates the layer offset.\r\n   *\r\n   * @param {Vector3D} scrollOffset The scroll offset vector.\r\n   * @param {Vector3D} planeOffset The plane offset vector.\r\n   * @returns {boolean} True if the offset was updated.\r\n   */\r\n  setBaseOffset(scrollOffset, planeOffset) {\r\n    const scrollIndex = this.#planeHelper.getNativeScrollIndex();\r\n    const newOffset = this.#planeHelper.getPlaneOffsetFromOffset3D({\r\n      x: scrollIndex === 0 ? scrollOffset.getX() : planeOffset.getX(),\r\n      y: scrollIndex === 1 ? scrollOffset.getY() : planeOffset.getY(),\r\n      z: scrollIndex === 2 ? scrollOffset.getZ() : planeOffset.getZ(),\r\n    });\r\n    const needsUpdate = this.#baseOffset.x !== newOffset.x ||\r\n      this.#baseOffset.y !== newOffset.y;\r\n    // reset offset if needed\r\n    if (needsUpdate) {\r\n      const offset = this.#konvaStage.offset();\r\n      this.#konvaStage.offset({\r\n        x: offset.x - this.#baseOffset.x + newOffset.x,\r\n        y: offset.y - this.#baseOffset.y + newOffset.y\r\n      });\r\n      this.#baseOffset = newOffset;\r\n    }\r\n    return needsUpdate;\r\n  }\r\n\r\n  /**\r\n   * Display the layer.\r\n   *\r\n   * @param {boolean} flag Whether to display the layer or not.\r\n   */\r\n  display(flag) {\r\n    this.#containerDiv.style.display = flag ? '' : 'none';\r\n  }\r\n\r\n  /**\r\n   * Check if the layer is visible.\r\n   *\r\n   * @returns {boolean} True if the layer is visible.\r\n   */\r\n  isVisible() {\r\n    return this.#containerDiv.style.display === '';\r\n  }\r\n\r\n  /**\r\n   * Draw the content (imageData) of the layer.\r\n   * The imageData variable needs to be set\r\n   */\r\n  draw() {\r\n    this.#konvaStage.draw();\r\n  }\r\n\r\n  /**\r\n   * Initialise the layer: set the canvas and context\r\n   *\r\n   * @param {object} size The image size as {x,y}.\r\n   * @param {object} spacing The image spacing as {x,y}.\r\n   * @param {number} index The associated data index.\r\n   */\r\n  initialise(size, spacing, index) {\r\n    // set locals\r\n    this.#baseSize = size;\r\n    this.#baseSpacing = spacing;\r\n    this.#dataIndex = index;\r\n\r\n    // create stage\r\n    this.#konvaStage = new Konva.Stage({\r\n      container: this.#containerDiv,\r\n      width: this.#baseSize.x,\r\n      height: this.#baseSize.y,\r\n      listening: false\r\n    });\r\n    // reset style\r\n    // (avoids a not needed vertical scrollbar)\r\n    this.#konvaStage.getContent().setAttribute('style', '');\r\n\r\n    // create layer\r\n    const konvaLayer = new Konva.Layer({\r\n      listening: false,\r\n      visible: true\r\n    });\r\n    this.#konvaStage.add(konvaLayer);\r\n\r\n    // create draw controller\r\n    this.#drawController = new DrawController(konvaLayer);\r\n  }\r\n\r\n  /**\r\n   * Fit the layer to its parent container.\r\n   *\r\n   * @param {number} fitScale1D The 1D fit scale.\r\n   * @param {object} fitSize The fit size as {x,y}.\r\n   * @param {object} fitOffset The fit offset as {x,y}.\r\n   */\r\n  fitToContainer(fitScale1D, fitSize, fitOffset) {\r\n    // update konva\r\n    this.#konvaStage.width(fitSize.x);\r\n    this.#konvaStage.height(fitSize.y);\r\n\r\n    // previous scale without fit\r\n    const previousScale = {\r\n      x: this.#konvaStage.scale().x / this.#fitScale.x,\r\n      y: this.#konvaStage.scale().y / this.#fitScale.y\r\n    };\r\n    // update fit scale\r\n    this.#fitScale = {\r\n      x: fitScale1D * this.#baseSpacing.x,\r\n      y: fitScale1D * this.#baseSpacing.y\r\n    };\r\n    // update scale\r\n    this.#konvaStage.scale({\r\n      x: previousScale.x * this.#fitScale.x,\r\n      y: previousScale.y * this.#fitScale.y\r\n    });\r\n\r\n    // update offsets\r\n    this.#viewOffset = {\r\n      x: fitOffset.x / this.#fitScale.x,\r\n      y: fitOffset.y / this.#fitScale.y\r\n    };\r\n    this.#konvaStage.offset({\r\n      x: this.#viewOffset.x +\r\n        this.#baseOffset.x +\r\n        this.#zoomOffset.x +\r\n        this.#flipOffset.x,\r\n      y: this.#viewOffset.y +\r\n        this.#baseOffset.y +\r\n        this.#zoomOffset.y +\r\n        this.#flipOffset.y\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check the visibility of a given group.\r\n   *\r\n   * @param {string} id The id of the group.\r\n   * @returns {boolean} True if the group is visible.\r\n   */\r\n  isGroupVisible(id) {\r\n    // get the group\r\n    const group = this.#drawController.getGroup(id);\r\n    if (typeof group === 'undefined') {\r\n      return false;\r\n    }\r\n    // get visibility\r\n    return group.isVisible();\r\n  }\r\n\r\n  /**\r\n   * Toggle the visibility of a given group.\r\n   *\r\n   * @param {string} id The id of the group.\r\n   * @returns {boolean} False if the group cannot be found.\r\n   */\r\n  toggleGroupVisibility(id) {\r\n    // get the group\r\n    const group = this.#drawController.getGroup(id);\r\n    if (typeof group === 'undefined') {\r\n      return false;\r\n    }\r\n    // toggle visible\r\n    group.visible(!group.isVisible());\r\n\r\n    // udpate\r\n    this.draw();\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Delete a Draw from the stage.\r\n   *\r\n   * @param {string} id The id of the group to delete.\r\n   * @param {object} exeCallback The callback to call once the\r\n   *  DeleteCommand has been executed.\r\n   */\r\n  deleteDraw(id, exeCallback) {\r\n    this.#drawController.deleteDraw(id, this.#fireEvent, exeCallback);\r\n  }\r\n\r\n  /**\r\n   * Delete all Draws from the stage.\r\n   *\r\n   * @param {object} exeCallback The callback to call once the\r\n   *  DeleteCommand has been executed.\r\n   */\r\n  deleteDraws(exeCallback) {\r\n    this.#drawController.deleteDraws(this.#fireEvent, exeCallback);\r\n  }\r\n\r\n  /**\r\n   * Enable and listen to container interaction events.\r\n   */\r\n  bindInteraction() {\r\n    this.#konvaStage.listening(true);\r\n    // allow pointer events\r\n    this.#containerDiv.style.pointerEvents = 'auto';\r\n    // interaction events\r\n    const names = InteractionEventNames;\r\n    for (let i = 0; i < names.length; ++i) {\r\n      this.#containerDiv.addEventListener(names[i], this.#fireEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disable and stop listening to container interaction events.\r\n   */\r\n  unbindInteraction() {\r\n    this.#konvaStage.listening(false);\r\n    // disable pointer events\r\n    this.#containerDiv.style.pointerEvents = 'none';\r\n    // interaction events\r\n    const names = InteractionEventNames;\r\n    for (let i = 0; i < names.length; ++i) {\r\n      this.#containerDiv.removeEventListener(names[i], this.#fireEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the current position.\r\n   *\r\n   * @param {Point} position The new position.\r\n   * @param {Index} index The new index.\r\n   * @returns {boolean} True if the position was updated.\r\n   */\r\n  setCurrentPosition(position, index) {\r\n    this.getDrawController().activateDrawLayer(\r\n      index, this.#planeHelper.getScrollIndex());\r\n    // TODO: add check\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    event.srclayerid = this.getId();\r\n    event.dataid = this.#dataIndex;\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n  // common layer methods [end] ---------------\r\n\r\n  /**\r\n   * Update label scale: compensate for it so\r\n   *   that label size stays visually the same.\r\n   *\r\n   * @param {object} scale The scale to compensate for as {x,y}.\r\n   */\r\n  #updateLabelScale(scale) {\r\n    // same formula as in style::applyZoomScale:\r\n    // compensate for scale and times 2 so that font 10 looks like a 10\r\n    const ratioX = 2 / scale.x;\r\n    const ratioY = 2 / scale.y;\r\n    // compensate scale for labels\r\n    const labels = this.#konvaStage.find('Label');\r\n    for (let i = 0; i < labels.length; ++i) {\r\n      labels[i].scale({x: ratioX, y: ratioY});\r\n    }\r\n  }\r\n\r\n} // DrawLayer class\r\n","import {Point, Point3D} from '../math/point';\r\nimport {LayerGroup} from './layerGroup';\r\n\r\n/**\r\n * Window/level binder.\r\n */\r\nexport class WindowLevelBinder {\r\n  getEventType = function () {\r\n    return 'wlchange';\r\n  };\r\n  getCallback = function (layerGroup) {\r\n    return function (event) {\r\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\r\n      if (viewLayers.length !== 0) {\r\n        const vc = viewLayers[0].getViewController();\r\n        vc.setWindowLevel(event.value[0], event.value[1]);\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * Position binder.\r\n */\r\nexport class PositionBinder {\r\n  getEventType = function () {\r\n    return 'positionchange';\r\n  };\r\n  getCallback = function (layerGroup) {\r\n    return function (event) {\r\n      const pointValues = event.value[1];\r\n      const vc = layerGroup.getActiveViewLayer().getViewController();\r\n      // handle different number of dimensions\r\n      const currentPos = vc.getCurrentPosition();\r\n      const currentDims = currentPos.length();\r\n      const inputDims = pointValues.length;\r\n      if (inputDims !== currentDims) {\r\n        if (inputDims === currentDims - 1) {\r\n          // add missing dim, for ex: input 3D -> current 4D\r\n          pointValues.push(currentPos.get(currentDims - 1));\r\n        } else if (inputDims === currentDims + 1) {\r\n          // remove extra dim, for ex: input 4D -> current 3D\r\n          pointValues.pop();\r\n        }\r\n      }\r\n      vc.setCurrentPosition(new Point(pointValues));\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * Zoom binder.\r\n */\r\nexport class ZoomBinder {\r\n  getEventType = function () {\r\n    return 'zoomchange';\r\n  };\r\n  getCallback = function (layerGroup) {\r\n    return function (event) {\r\n      const scale = {\r\n        x: event.value[0],\r\n        y: event.value[1],\r\n        z: event.value[2]\r\n      };\r\n      let center;\r\n      if (event.value.length === 6) {\r\n        center = new Point3D(\r\n          event.value[3],\r\n          event.value[4],\r\n          event.value[5]\r\n        );\r\n      }\r\n      layerGroup.setScale(scale, center);\r\n      layerGroup.draw();\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * Offset binder.\r\n */\r\nexport class OffsetBinder {\r\n  getEventType = function () {\r\n    return 'offsetchange';\r\n  };\r\n  getCallback = function (layerGroup) {\r\n    return function (event) {\r\n      layerGroup.setOffset({\r\n        x: event.value[0],\r\n        y: event.value[1],\r\n        z: event.value[2]\r\n      });\r\n      layerGroup.draw();\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * Opacity binder. Only propagates to view layers of the same data.\r\n */\r\nexport class OpacityBinder {\r\n  getEventType = function () {\r\n    return 'opacitychange';\r\n  };\r\n  getCallback = function (layerGroup) {\r\n    return function (event) {\r\n      // exit if no data index\r\n      if (typeof event.dataid === 'undefined') {\r\n        return;\r\n      }\r\n      // propagate to first view layer\r\n      const viewLayers = layerGroup.getViewLayersByDataIndex(event.dataid);\r\n      if (viewLayers.length !== 0) {\r\n        viewLayers[0].setOpacity(event.value);\r\n        viewLayers[0].draw();\r\n      }\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * List of binders.\r\n */\r\nexport const binderList = {\r\n  WindowLevelBinder,\r\n  PositionBinder,\r\n  ZoomBinder,\r\n  OffsetBinder,\r\n  OpacityBinder\r\n};\r\n\r\n/**\r\n * Stage: controls a list of layer groups and their\r\n * synchronisation.\r\n */\r\nexport class Stage {\r\n\r\n  // associated layer groups\r\n  #layerGroups = [];\r\n  // active layer group index\r\n  #activeLayerGroupIndex = null;\r\n\r\n  // layer group binders\r\n  #binders = [];\r\n  // binder callbacks\r\n  #callbackStore = null;\r\n\r\n  /**\r\n   * Get the layer group at the given index.\r\n   *\r\n   * @param {number} index The index.\r\n   * @returns {LayerGroup} The layer group.\r\n   */\r\n  getLayerGroup(index) {\r\n    return this.#layerGroups[index];\r\n  }\r\n\r\n  /**\r\n   * Get the number of layer groups that form the stage.\r\n   *\r\n   * @returns {number} The number of layer groups.\r\n   */\r\n  getNumberOfLayerGroups() {\r\n    return this.#layerGroups.length;\r\n  }\r\n\r\n  /**\r\n   * Get the active layer group.\r\n   *\r\n   * @returns {LayerGroup} The layer group.\r\n   */\r\n  getActiveLayerGroup() {\r\n    return this.getLayerGroup(this.#activeLayerGroupIndex);\r\n  }\r\n\r\n  /**\r\n   * Get the view layers associated to a data index.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @returns {Array} The layers.\r\n   */\r\n  getViewLayersByDataIndex(index) {\r\n    let res = [];\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      res = res.concat(this.#layerGroups[i].getViewLayersByDataIndex(index));\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Get the draw layers associated to a data index.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @returns {Array} The layers.\r\n   */\r\n  getDrawLayersByDataIndex(index) {\r\n    let res = [];\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      res = res.concat(this.#layerGroups[i].getDrawLayersByDataIndex(index));\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Add a layer group to the list.\r\n   *\r\n   * @param {object} htmlElement The HTML element of the layer group.\r\n   * @returns {LayerGroup} The newly created layer group.\r\n   */\r\n  addLayerGroup(htmlElement) {\r\n    this.#activeLayerGroupIndex = this.#layerGroups.length;\r\n    const layerGroup = new LayerGroup(htmlElement);\r\n    // add to storage\r\n    const isBound = this.#callbackStore && this.#callbackStore.length !== 0;\r\n    if (isBound) {\r\n      this.unbindLayerGroups();\r\n    }\r\n    this.#layerGroups.push(layerGroup);\r\n    if (isBound) {\r\n      this.bindLayerGroups();\r\n    }\r\n    // return created group\r\n    return layerGroup;\r\n  }\r\n\r\n  /**\r\n   * Get a layer group from an HTML element id.\r\n   *\r\n   * @param {string} id The element id to find.\r\n   * @returns {LayerGroup} The layer group.\r\n   */\r\n  getLayerGroupByDivId(id) {\r\n    return this.#layerGroups.find(function (item) {\r\n      return item.getDivId() === id;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the layer groups binders.\r\n   *\r\n   * @param {Array} list The list of binder objects.\r\n   */\r\n  setBinders(list) {\r\n    if (typeof list === 'undefined' || list === null) {\r\n      throw new Error('Cannot set null or undefined binders');\r\n    }\r\n    if (this.#binders.length !== 0) {\r\n      this.unbindLayerGroups();\r\n    }\r\n    this.#binders = list.slice();\r\n    this.bindLayerGroups();\r\n  }\r\n\r\n  /**\r\n   * Empty the layer group list.\r\n   */\r\n  empty() {\r\n    this.unbindLayerGroups();\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      this.#layerGroups[i].empty();\r\n    }\r\n    this.#layerGroups = [];\r\n    this.#activeLayerGroupIndex = null;\r\n  }\r\n\r\n  /**\r\n   * Reset the stage: calls reset on all layer groups.\r\n   */\r\n  reset() {\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      this.#layerGroups[i].reset();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Draw the stage: calls draw on all layer groups.\r\n   */\r\n  draw() {\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      this.#layerGroups[i].draw();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Synchronise the fit scale of the group layers.\r\n   */\r\n  syncLayerGroupScale() {\r\n    let minScale;\r\n    const hasScale = [];\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      const scale = this.#layerGroups[i].calculateFitScale();\r\n      if (typeof scale !== 'undefined') {\r\n        hasScale.push(i);\r\n        if (typeof minScale === 'undefined' || scale < minScale) {\r\n          minScale = scale;\r\n        }\r\n      }\r\n    }\r\n    // exit if no scale\r\n    if (typeof minScale === 'undefined') {\r\n      return;\r\n    }\r\n    // apply min scale to layers\r\n    for (let j = 0; j < this.#layerGroups.length; ++j) {\r\n      if (hasScale.includes(j)) {\r\n        this.#layerGroups[j].setFitScale(minScale);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Bind the layer groups of the stage.\r\n   */\r\n  bindLayerGroups() {\r\n    if (this.#layerGroups.length === 0 ||\r\n      this.#layerGroups.length === 1 ||\r\n      this.#binders.length === 0) {\r\n      return;\r\n    }\r\n    // create callback store\r\n    this.#callbackStore = new Array(this.#layerGroups.length);\r\n    // add listeners\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      for (let j = 0; j < this.#binders.length; ++j) {\r\n        this.#addEventListeners(i, this.#binders[j]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind the layer groups of the stage.\r\n   */\r\n  unbindLayerGroups() {\r\n    if (this.#layerGroups.length === 0 ||\r\n      this.#layerGroups.length === 1 ||\r\n      this.#binders.length === 0 ||\r\n      !this.#callbackStore) {\r\n      return;\r\n    }\r\n    // remove listeners\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      for (let j = 0; j < this.#binders.length; ++j) {\r\n        this.#removeEventListeners(i, this.#binders[j]);\r\n      }\r\n    }\r\n    // clear callback store\r\n    this.#callbackStore = null;\r\n  }\r\n\r\n  /**\r\n   * Get the binder callback function for a given layer group index.\r\n   * The function is created if not yet stored.\r\n   *\r\n   * @param {object} binder The layer binder.\r\n   * @param {number} index The index of the associated layer group.\r\n   * @returns {Function} The binder function.\r\n   */\r\n  #getBinderCallback(binder, index) {\r\n    if (typeof this.#callbackStore[index] === 'undefined') {\r\n      this.#callbackStore[index] = [];\r\n    }\r\n    const store = this.#callbackStore[index];\r\n    let binderObj = store.find(function (elem) {\r\n      return elem.binder === binder;\r\n    });\r\n    if (typeof binderObj === 'undefined') {\r\n      // create new callback object\r\n      binderObj = {\r\n        binder: binder,\r\n        callback: (event) => {\r\n          // stop listeners\r\n          this.#removeEventListeners(index, binder);\r\n          // apply binder\r\n          binder.getCallback(this.#layerGroups[index])(event);\r\n          // re-start listeners\r\n          this.#addEventListeners(index, binder);\r\n        }\r\n      };\r\n      this.#callbackStore[index].push(binderObj);\r\n    }\r\n    return binderObj.callback;\r\n  }\r\n\r\n  /**\r\n   * Add event listeners for a given layer group index and binder.\r\n   *\r\n   * @param {number} index The index of the associated layer group.\r\n   * @param {object} binder The layer binder.\r\n   */\r\n  #addEventListeners(index, binder) {\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      if (i !== index) {\r\n        this.#layerGroups[index].addEventListener(\r\n          binder.getEventType(),\r\n          this.#getBinderCallback(binder, i)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove event listeners for a given layer group index and binder.\r\n   *\r\n   * @param {number} index The index of the associated layer group.\r\n   * @param {object} binder The layer binder.\r\n   */\r\n  #removeEventListeners(index, binder) {\r\n    for (let i = 0; i < this.#layerGroups.length; ++i) {\r\n      if (i !== index) {\r\n        this.#layerGroups[index].removeEventListener(\r\n          binder.getEventType(),\r\n          this.#getBinderCallback(binder, i)\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n} // class Stage\r\n","import {Index} from '../math/index';\r\nimport {colourNameToHex} from '../utils/colour';\r\n\r\n// external\r\nimport Konva from 'konva';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * State class.\r\n * Saves: data url/path, display info.\r\n *\r\n * History:\r\n * - v0.5 (dwv 0.30.0, 12/2021)\r\n *   - store position as array\r\n *   - new draw position group key\r\n * - v0.4 (dwv 0.29.0, 06/2021)\r\n *   - move drawing details into meta property\r\n *   - remove scale center and translation, add offset\r\n * - v0.3 (dwv v0.23.0, 03/2018)\r\n *   - new drawing structure, drawings are now the full layer object and\r\n *     using toObject to avoid saving a string representation\r\n *   - new details structure: simple array of objects referenced by draw ids\r\n * - v0.2 (dwv v0.17.0, 12/2016)\r\n *   - adds draw details: array [nslices][nframes] of detail objects\r\n * - v0.1 (dwv v0.15.0, 07/2016)\r\n *   - adds version\r\n *   - drawings: array [nslices][nframes] with all groups\r\n * - initial release (dwv v0.10.0, 05/2015), no version number...\r\n *   - content: window-center, window-width, position, scale,\r\n *       scaleCenter, translation, drawings\r\n *   - drawings: array [nslices] with all groups\r\n */\r\nexport class State {\r\n  /**\r\n   * Save the application state as JSON.\r\n   *\r\n   * @param {App} app The associated application.\r\n   * @returns {string} The state as a JSON string.\r\n   */\r\n  toJSON(app) {\r\n    const layerGroup = app.getActiveLayerGroup();\r\n    const viewController =\r\n      layerGroup.getActiveViewLayer().getViewController();\r\n    const position = viewController.getCurrentIndex();\r\n    const drawLayer = layerGroup.getActiveDrawLayer();\r\n    const drawController = drawLayer.getDrawController();\r\n    // return a JSON string\r\n    return JSON.stringify({\r\n      version: '0.5',\r\n      'window-center': viewController.getWindowLevel().center,\r\n      'window-width': viewController.getWindowLevel().width,\r\n      position: position.getValues(),\r\n      scale: app.getAddedScale(),\r\n      offset: app.getOffset(),\r\n      drawings: drawLayer.getKonvaLayer().toObject(),\r\n      drawingsDetails: drawController.getDrawStoreDetails()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load an application state from JSON.\r\n   *\r\n   * @param {string} json The state as a JSON string.\r\n   * @returns {object} The state object.\r\n   */\r\n  fromJSON(json) {\r\n    const data = JSON.parse(json);\r\n    let res = null;\r\n    if (data.version === '0.1') {\r\n      res = this.#readV01(data);\r\n    } else if (data.version === '0.2') {\r\n      res = this.#readV02(data);\r\n    } else if (data.version === '0.3') {\r\n      res = this.#readV03(data);\r\n    } else if (data.version === '0.4') {\r\n      res = this.#readV04(data);\r\n    } else if (data.version === '0.5') {\r\n      res = this.#readV05(data);\r\n    } else {\r\n      throw new Error('Unknown state file format version: \\'' +\r\n        data.version + '\\'.');\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Load an application state from JSON.\r\n   *\r\n   * @param {App} app The app to apply the state to.\r\n   * @param {object} data The state data.\r\n   */\r\n  apply(app, data) {\r\n    const layerGroup = app.getActiveLayerGroup();\r\n    const viewController =\r\n      layerGroup.getActiveViewLayer().getViewController();\r\n    // display\r\n    viewController.setWindowLevel(\r\n      data['window-center'], data['window-width']);\r\n    // position is index...\r\n    viewController.setCurrentIndex(new Index(data.position));\r\n    // apply saved scale on top of current base one\r\n    const baseScale = app.getActiveLayerGroup().getBaseScale();\r\n    let scale = null;\r\n    let offset = null;\r\n    if (typeof data.scaleCenter !== 'undefined') {\r\n      scale = {\r\n        x: data.scale * baseScale.x,\r\n        y: data.scale * baseScale.y,\r\n        z: 1\r\n      };\r\n      // ---- transform translation (now) ----\r\n      // Tx = -offset.x * scale.x\r\n      // => offset.x = -Tx / scale.x\r\n      // ---- transform translation (before) ----\r\n      // origin.x = centerX - (centerX - origin.x) * (newZoomX / zoom.x);\r\n      // (zoom.x -> initial zoom = base scale, origin.x = 0)\r\n      // Tx = origin.x + (trans.x * zoom.x)\r\n      const originX = data.scaleCenter.x - data.scaleCenter.x * data.scale;\r\n      const originY = data.scaleCenter.y - data.scaleCenter.y * data.scale;\r\n      const oldTx = originX + data.translation.x * scale.x;\r\n      const oldTy = originY + data.translation.y * scale.y;\r\n      offset = {\r\n        x: -oldTx / scale.x,\r\n        y: -oldTy / scale.y,\r\n        z: 0\r\n      };\r\n    } else {\r\n      scale = {\r\n        x: data.scale.x * baseScale.x,\r\n        y: data.scale.y * baseScale.y,\r\n        z: baseScale.z\r\n      };\r\n      offset = {\r\n        x: data.offset.x,\r\n        y: data.offset.y,\r\n        z: 0\r\n      };\r\n    }\r\n    app.getActiveLayerGroup().setScale(scale);\r\n    app.getActiveLayerGroup().setOffset(offset);\r\n    // render to draw the view layer\r\n    app.render(0); //todo: fix\r\n    // drawings (will draw the draw layer)\r\n    app.setDrawings(data.drawings, data.drawingsDetails);\r\n  }\r\n\r\n  /**\r\n   * Read an application state from an Object in v0.1 format.\r\n   *\r\n   * @param {object} data The Object representation of the state.\r\n   * @returns {object} The state object.\r\n   */\r\n  #readV01(data) {\r\n    // v0.1 -> v0.2\r\n    const v02DAndD = v01Tov02DrawingsAndDetails(data.drawings);\r\n    // v0.2 -> v0.3, v0.4\r\n    data.drawings = v02Tov03Drawings(v02DAndD.drawings).toObject();\r\n    data.drawingsDetails = v03Tov04DrawingsDetails(\r\n      v02DAndD.drawingsDetails);\r\n    // v0.4 -> v0.5\r\n    data = v04Tov05Data(data);\r\n    data.drawings = v04Tov05Drawings(data.drawings);\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read an application state from an Object in v0.2 format.\r\n   *\r\n   * @param {object} data The Object representation of the state.\r\n   * @returns {object} The state object.\r\n   */\r\n  #readV02(data) {\r\n    // v0.2 -> v0.3, v0.4\r\n    data.drawings = v02Tov03Drawings(data.drawings).toObject();\r\n    data.drawingsDetails = v03Tov04DrawingsDetails(\r\n      v02Tov03DrawingsDetails(data.drawingsDetails));\r\n    // v0.4 -> v0.5\r\n    data = v04Tov05Data(data);\r\n    data.drawings = v04Tov05Drawings(data.drawings);\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read an application state from an Object in v0.3 format.\r\n   *\r\n   * @param {object} data The Object representation of the state.\r\n   * @returns {object} The state object.\r\n   */\r\n  #readV03(data) {\r\n    // v0.3 -> v0.4\r\n    data.drawingsDetails = v03Tov04DrawingsDetails(data.drawingsDetails);\r\n    // v0.4 -> v0.5\r\n    data = v04Tov05Data(data);\r\n    data.drawings = v04Tov05Drawings(data.drawings);\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Read an application state from an Object in v0.4 format.\r\n   *\r\n   * @param {object} data The Object representation of the state.\r\n   * @returns {object} The state object.\r\n   */\r\n  #readV04(data) {\r\n    // v0.4 -> v0.5\r\n    data = v04Tov05Data(data);\r\n    data.drawings = v04Tov05Drawings(data.drawings);\r\n    return data;\r\n  }\r\n  /**\r\n   * Read an application state from an Object in v0.5 format.\r\n   *\r\n   * @param {object} data The Object representation of the state.\r\n   * @returns {object} The state object.\r\n   */\r\n  #readV05(data) {\r\n    return data;\r\n  }\r\n\r\n} // State class\r\n\r\n/**\r\n * Convert drawings from v0.2 to v0.3.\r\n * v0.2: one layer per slice/frame\r\n * v0.3: one layer, one group per slice. setDrawing expects the full stage\r\n *\r\n * @param {Array} drawings An array of drawings.\r\n * @returns {object} The layer with the converted drawings.\r\n */\r\nfunction v02Tov03Drawings(drawings) {\r\n  // Auxiliar variables\r\n  let group, groupShapes, parentGroup;\r\n  // Avoid errors when dropping multiple states\r\n  //drawLayer.getChildren().each(function(node){\r\n  //    node.visible(false);\r\n  //});\r\n\r\n  /**\r\n   * Get the draw group id for a given position.\r\n   *\r\n   * @param {Index} currentPosition The current position.\r\n   * @returns {string} The group id.\r\n   */\r\n  function getDrawPositionGroupId(currentPosition) {\r\n    const sliceNumber = currentPosition.get(2);\r\n    const frameNumber = currentPosition.length() === 4\r\n      ? currentPosition.get(3) : 0;\r\n    return 'slice-' + sliceNumber + '_frame-' + frameNumber;\r\n  }\r\n\r\n  const drawLayer = new Konva.Layer({\r\n    listening: false,\r\n    visible: true\r\n  });\r\n\r\n  // Get the positions-groups data\r\n  const groupDrawings = typeof drawings === 'string'\r\n    ? JSON.parse(drawings) : drawings;\r\n  // Iterate over each position-groups\r\n  for (let k = 0, lenk = groupDrawings.length; k < lenk; ++k) {\r\n    // Iterate over each frame\r\n    for (let f = 0, lenf = groupDrawings[k].length; f < lenf; ++f) {\r\n      groupShapes = groupDrawings[k][f];\r\n      if (groupShapes.length !== 0) {\r\n        // Create position-group set as visible and append it to drawLayer\r\n        parentGroup = new Konva.Group({\r\n          id: getDrawPositionGroupId(new Index([1, 1, k, f])),\r\n          name: 'position-group',\r\n          visible: false\r\n        });\r\n\r\n        // Iterate over shapes-group\r\n        for (let g = 0, leng = groupShapes.length; g < leng; ++g) {\r\n          // create the konva group\r\n          group = Konva.Node.create(groupShapes[g]);\r\n          // enforce draggable: only the shape was draggable in v0.2,\r\n          // now the whole group is.\r\n          group.draggable(true);\r\n          group.getChildren().forEach(function (gnode) {\r\n            gnode.draggable(false);\r\n          });\r\n          // add to position group\r\n          parentGroup.add(group);\r\n        }\r\n        // add to layer\r\n        drawLayer.add(parentGroup);\r\n      }\r\n    }\r\n  }\r\n\r\n  return drawLayer;\r\n}\r\n\r\n/**\r\n * Convert drawings from v0.1 to v0.2.\r\n * v0.1: text on its own\r\n * v0.2: text as part of label\r\n *\r\n * @param {Array} inputDrawings An array of drawings.\r\n * @returns {object} The converted drawings.\r\n */\r\nfunction v01Tov02DrawingsAndDetails(inputDrawings) {\r\n  const newDrawings = [];\r\n  const drawingsDetails = {};\r\n\r\n  let drawGroups;\r\n  let drawGroup;\r\n  // loop over each slice\r\n  for (let k = 0, lenk = inputDrawings.length; k < lenk; ++k) {\r\n    // loop over each frame\r\n    newDrawings[k] = [];\r\n    for (let f = 0, lenf = inputDrawings[k].length; f < lenf; ++f) {\r\n      // draw group\r\n      drawGroups = inputDrawings[k][f];\r\n      const newFrameDrawings = [];\r\n      // Iterate over shapes-group\r\n      for (let g = 0, leng = drawGroups.length; g < leng; ++g) {\r\n        // create konva group from input\r\n        drawGroup = Konva.Node.create(drawGroups[g]);\r\n        // force visible (not set in state)\r\n        drawGroup.visible(true);\r\n        // label position\r\n        let pos = {x: 0, y: 0};\r\n        // update shape colour\r\n        const kshape = drawGroup.getChildren(function (node) {\r\n          return node.name() === 'shape';\r\n        })[0];\r\n        kshape.stroke(colourNameToHex(kshape.stroke()));\r\n        // special line case\r\n        if (drawGroup.name() === 'line-group') {\r\n          // update name\r\n          drawGroup.name('ruler-group');\r\n          // add ticks\r\n          const ktick0 = new Konva.Line({\r\n            points: [kshape.points()[0],\r\n              kshape.points()[1],\r\n              kshape.points()[0],\r\n              kshape.points()[1]],\r\n            name: 'shape-tick0'\r\n          });\r\n          drawGroup.add(ktick0);\r\n          const ktick1 = new Konva.Line({\r\n            points: [kshape.points()[2],\r\n              kshape.points()[3],\r\n              kshape.points()[2],\r\n              kshape.points()[3]],\r\n            name: 'shape-tick1'\r\n          });\r\n          drawGroup.add(ktick1);\r\n        }\r\n        // special protractor case: update arc name\r\n        const karcs = drawGroup.getChildren(function (node) {\r\n          return node.name() === 'arc';\r\n        });\r\n        if (karcs.length === 1) {\r\n          karcs[0].name('shape-arc');\r\n        }\r\n        // get its text\r\n        const ktexts = drawGroup.getChildren(function (node) {\r\n          return node.name() === 'text';\r\n        });\r\n        // update text: move it into a label\r\n        let ktext = new Konva.Text({\r\n          name: 'text',\r\n          text: ''\r\n        });\r\n        if (ktexts.length === 1) {\r\n          pos.x = ktexts[0].x();\r\n          pos.y = ktexts[0].y();\r\n          // remove it from the group\r\n          ktexts[0].remove();\r\n          // use it\r\n          ktext = ktexts[0];\r\n        } else {\r\n          // use shape position if no text\r\n          if (kshape.points().length !== 0) {\r\n            pos = {x: kshape.points()[0],\r\n              y: kshape.points()[1]};\r\n          }\r\n        }\r\n        // create new label with text and tag\r\n        const klabel = new Konva.Label({\r\n          x: pos.x,\r\n          y: pos.y,\r\n          name: 'label'\r\n        });\r\n        klabel.add(ktext);\r\n        klabel.add(new Konva.Tag());\r\n        // add label to group\r\n        drawGroup.add(klabel);\r\n        // add group to list\r\n        newFrameDrawings.push(JSON.stringify(drawGroup.toObject()));\r\n\r\n        // create details (v0.3 format)\r\n        let textExpr = ktext.text();\r\n        const txtLen = textExpr.length;\r\n        let quant = null;\r\n        // adapt to text with flag\r\n        if (drawGroup.name() === 'ruler-group') {\r\n          quant = {\r\n            length: {\r\n              value: parseFloat(textExpr.substring(0, txtLen - 2)),\r\n              unit: textExpr.substring(-2)\r\n            }\r\n          };\r\n          textExpr = '{length}';\r\n        } else if (drawGroup.name() === 'ellipse-group' ||\r\n                    drawGroup.name() === 'rectangle-group') {\r\n          quant = {\r\n            surface: {\r\n              value: parseFloat(textExpr.substring(0, txtLen - 3)),\r\n              unit: textExpr.substring(-3)\r\n            }\r\n          };\r\n          textExpr = '{surface}';\r\n        } else if (drawGroup.name() === 'protractor-group' ||\r\n                    drawGroup.name() === 'rectangle-group') {\r\n          quant = {\r\n            angle: {\r\n              value: parseFloat(textExpr.substring(0, txtLen - 1)),\r\n              unit: textExpr.substring(-1)\r\n            }\r\n          };\r\n          textExpr = '{angle}';\r\n        }\r\n        // set details\r\n        drawingsDetails[drawGroup.id()] = {\r\n          textExpr: textExpr,\r\n          longText: '',\r\n          quant: quant\r\n        };\r\n\r\n      }\r\n      newDrawings[k].push(newFrameDrawings);\r\n    }\r\n  }\r\n\r\n  return {drawings: newDrawings, drawingsDetails: drawingsDetails};\r\n}\r\n\r\n/**\r\n * Convert drawing details from v0.2 to v0.3.\r\n * - v0.2: array [nslices][nframes] with all\r\n * - v0.3: simple array of objects referenced by draw ids\r\n *\r\n * @param {Array} details An array of drawing details.\r\n * @returns {object} The converted drawings.\r\n */\r\nfunction v02Tov03DrawingsDetails(details) {\r\n  const res = {};\r\n  // Get the positions-groups data\r\n  const groupDetails = typeof details === 'string'\r\n    ? JSON.parse(details) : details;\r\n  // Iterate over each position-groups\r\n  for (let k = 0, lenk = groupDetails.length; k < lenk; ++k) {\r\n    // Iterate over each frame\r\n    for (let f = 0, lenf = groupDetails[k].length; f < lenf; ++f) {\r\n      // Iterate over shapes-group\r\n      for (let g = 0, leng = groupDetails[k][f].length; g < leng; ++g) {\r\n        const group = groupDetails[k][f][g];\r\n        res[group.id] = {\r\n          textExpr: group.textExpr,\r\n          longText: group.longText,\r\n          quant: group.quant\r\n        };\r\n      }\r\n    }\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * Convert drawing details from v0.3 to v0.4.\r\n * - v0.3: properties at group root\r\n * - v0.4: properties in group meta object\r\n *\r\n * @param {Array} details An array of drawing details.\r\n * @returns {object} The converted drawings.\r\n */\r\nfunction v03Tov04DrawingsDetails(details) {\r\n  const res = {};\r\n  const keys = Object.keys(details);\r\n  // Iterate over each position-groups\r\n  for (let k = 0, lenk = keys.length; k < lenk; ++k) {\r\n    const detail = details[keys[k]];\r\n    res[keys[k]] = {\r\n      meta: {\r\n        textExpr: detail.textExpr,\r\n        longText: detail.longText,\r\n        quantification: detail.quant\r\n      }\r\n    };\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * Convert drawing from v0.4 to v0.5.\r\n * - v0.4: position as object\r\n * - v0.5: position as array\r\n *\r\n * @param {object} data An array of drawing.\r\n * @returns {object} The converted drawings.\r\n */\r\nfunction v04Tov05Data(data) {\r\n  const pos = data.position;\r\n  data.position = [pos.i, pos.j, pos.k];\r\n  return data;\r\n}\r\n\r\n/**\r\n * Convert drawing from v0.4 to v0.5.\r\n * - v0.4: draw id as 'slice-0_frame-1'\r\n * - v0.5: draw id as '#2-0_#3-1''\r\n *\r\n * @param {object} inputDrawings An array of drawing.\r\n * @returns {object} The converted drawings.\r\n */\r\nfunction v04Tov05Drawings(inputDrawings) {\r\n  // Iterate over each position-groups\r\n  const posGroups = inputDrawings.children;\r\n  for (let k = 0, lenk = posGroups.length; k < lenk; ++k) {\r\n    const posGroup = posGroups[k];\r\n    const id = posGroup.attrs.id;\r\n    const ids = id.split('_');\r\n    const sliceNumber = parseInt(ids[0].substring(6), 10); // 'slice-0'\r\n    const frameNumber = parseInt(ids[1].substring(6), 10); // 'frame-0'\r\n    let newId = '#2-';\r\n    if (sliceNumber === 0 && frameNumber !== 0) {\r\n      newId += frameNumber;\r\n    } else {\r\n      newId += sliceNumber;\r\n    }\r\n    posGroup.attrs.id = newId;\r\n  }\r\n  return inputDrawings;\r\n}\r\n","import {logger} from './logger';\r\nimport {splitKeyValueString} from './string';\r\n\r\n/**\r\n * Get an full object URL from a string uri.\r\n *\r\n * @param {string} uri A string representing the url.\r\n * @returns {URL} A URL object.\r\n */\r\nexport function getUrlFromUri(uri) {\r\n  // add base to allow for relative urls\r\n  // (base is not used for absolute urls)\r\n  return new URL(uri, window.location.origin);\r\n}\r\n\r\n/**\r\n * Split an input URI:\r\n * 'root?key0=val00&key0=val01&key1=val10' returns\r\n * { base : root, query : [ key0 : [val00, val01], key1 : val1 ] }\r\n * Returns an empty object if the input string is not correct (null, empty...)\r\n * or if it is not a query string (no question mark).\r\n *\r\n * @param {string} uri The string to split.\r\n * @returns {object} The split string.\r\n */\r\nexport function splitUri(uri) {\r\n  // result\r\n  const result = {};\r\n  // check if query string\r\n  let sepIndex = null;\r\n  if (uri && (sepIndex = uri.indexOf('?')) !== -1) {\r\n    // base: before the '?'\r\n    result.base = uri.substring(0, sepIndex);\r\n    // query : after the '?' and until possible '#'\r\n    let hashIndex = uri.indexOf('#');\r\n    if (hashIndex === -1) {\r\n      hashIndex = uri.length;\r\n    }\r\n    const query = uri.substring(sepIndex + 1, hashIndex);\r\n    // split key/value pairs of the query\r\n    result.query = splitKeyValueString(query);\r\n  }\r\n  // return\r\n  return result;\r\n}\r\n\r\n/**\r\n * Get the query part, split into an array, of an input URI.\r\n * The URI scheme is: 'base?query#fragment'\r\n *\r\n * @param {string} uri The input URI.\r\n * @returns {object} The query part, split into an array, of the input URI.\r\n */\r\nexport function getUriQuery(uri) {\r\n  // split\r\n  const parts = splitUri(uri);\r\n  // check not empty\r\n  if (Object.keys(parts).length === 0) {\r\n    return null;\r\n  }\r\n  // return query\r\n  return parts.query;\r\n}\r\n\r\n/**\r\n * Generic URI query decoder.\r\n * Supports manifest:\r\n *   [dwv root]?input=encodeURIComponent('[manifest file]')&type=manifest\r\n * or encoded URI with base and key value/pairs:\r\n *   [dwv root]?input=encodeURIComponent([root]?key0=value0&key1=value1)\r\n *\r\n * @param {object} query The query part to the input URI.\r\n * @param {Function} callback The function to call with the decoded file urls.\r\n * @param {object} options Optional url request options.\r\n */\r\nexport function decodeQuery(query, callback, options) {\r\n  // manifest\r\n  if (query.type && query.type === 'manifest') {\r\n    decodeManifestQuery(query, callback);\r\n  } else {\r\n    // default case: encoded URI with base and key/value pairs\r\n    callback(\r\n      decodeKeyValueUri(query.input, query.dwvReplaceMode),\r\n      options);\r\n  }\r\n}\r\n\r\n/**\r\n * Decode a Key/Value pair URI. If a key is repeated, the result\r\n * be an array of base + each key.\r\n *\r\n * @param {string} uri The URI to decode.\r\n * @param {string} replaceMode The key replace mode.\r\n *   replaceMode can be:\r\n *   - key (default): keep the key\r\n *   - other than key: do not use the key\r\n *   'file' is a special case where the '?' of the query is not kept.\r\n * @returns {Array} The list of input file urls.\r\n */\r\nexport function decodeKeyValueUri(uri, replaceMode) {\r\n  const result = [];\r\n\r\n  // repeat key replace mode (default to keep key)\r\n  let repeatKeyReplaceMode = 'key';\r\n  if (replaceMode) {\r\n    repeatKeyReplaceMode = replaceMode;\r\n  }\r\n\r\n  // decode input URI\r\n  const queryUri = decodeURIComponent(uri);\r\n  // get key/value pairs from input URI\r\n  const inputQueryPairs = splitUri(queryUri);\r\n  if (Object.keys(inputQueryPairs).length === 0) {\r\n    result.push(queryUri);\r\n  } else {\r\n    const keys = Object.keys(inputQueryPairs.query);\r\n    // find repeat key\r\n    let repeatKey = null;\r\n    for (let i = 0; i < keys.length; ++i) {\r\n      if (inputQueryPairs.query[keys[i]] instanceof Array) {\r\n        repeatKey = keys[i];\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!repeatKey) {\r\n      result.push(queryUri);\r\n    } else {\r\n      const repeatList = inputQueryPairs.query[repeatKey];\r\n      // build base uri\r\n      let baseUrl = inputQueryPairs.base;\r\n      // add '?' when:\r\n      // - base is not empty\r\n      // - the repeatKey is not 'file'\r\n      // root/path/to/?file=0.jpg&file=1.jpg\r\n      if (baseUrl !== '' && repeatKey !== 'file') {\r\n        baseUrl += '?';\r\n      }\r\n      let gotOneArg = false;\r\n      for (let j = 0; j < keys.length; ++j) {\r\n        if (keys[j] !== repeatKey) {\r\n          if (gotOneArg) {\r\n            baseUrl += '&';\r\n          }\r\n          baseUrl += keys[j] + '=' + inputQueryPairs.query[keys[j]];\r\n          gotOneArg = true;\r\n        }\r\n      }\r\n      // append built urls to result\r\n      let url;\r\n      for (let k = 0; k < repeatList.length; ++k) {\r\n        url = baseUrl;\r\n        if (gotOneArg) {\r\n          url += '&';\r\n        }\r\n        if (repeatKeyReplaceMode === 'key') {\r\n          url += repeatKey + '=';\r\n        }\r\n        // other than 'key' mode: do nothing\r\n        url += repeatList[k];\r\n        result.push(url);\r\n      }\r\n    }\r\n  }\r\n  // return\r\n  return result;\r\n}\r\n\r\n/**\r\n * Decode a manifest query.\r\n *\r\n * @external XMLHttpRequest\r\n * @param {object} query The manifest query: {input, nslices},\r\n * with input the input URI and nslices the number of slices.\r\n * @param {Function} callback The function to call with the decoded urls.\r\n */\r\nfunction decodeManifestQuery(query, callback) {\r\n  let uri = '';\r\n  if (query.input[0] === '/') {\r\n    uri = window.location.protocol + '//' + window.location.host;\r\n  }\r\n  // TODO: needs to be decoded (decodeURIComponent?\r\n  uri += query.input;\r\n\r\n  /**\r\n   * Handle error.\r\n   *\r\n   * @param {object} event The error event.\r\n   */\r\n  function onError(event) {\r\n    logger.warn('RequestError while receiving manifest: ' +\r\n      event.target.status);\r\n  }\r\n\r\n  /**\r\n   * Handle load.\r\n   *\r\n   * @param {object} event The load event.\r\n   */\r\n  function onLoad(event) {\r\n    callback(decodeManifest(event.target.responseXML, query.nslices));\r\n  }\r\n\r\n  const request = new XMLHttpRequest();\r\n  request.open('GET', decodeURIComponent(uri), true);\r\n  request.responseType = 'document';\r\n  request.onload = onLoad;\r\n  request.onerror = onError;\r\n  request.send(null);\r\n}\r\n\r\n/**\r\n * Decode an XML manifest.\r\n *\r\n * @param {object} manifest The manifest to decode.\r\n * @param {number} nslices The number of slices to load.\r\n * @returns {Array} The decoded manifest.\r\n */\r\nexport function decodeManifest(manifest, nslices) {\r\n  const result = [];\r\n  // wado url\r\n  const wadoElement = manifest.getElementsByTagName('wado_query');\r\n  const wadoURL = wadoElement[0].getAttribute('wadoURL');\r\n  const rootURL = wadoURL + '?requestType=WADO&contentType=application/dicom&';\r\n  // patient list\r\n  const patientList = manifest.getElementsByTagName('Patient');\r\n  if (patientList.length > 1) {\r\n    logger.warn('More than one patient, loading first one.');\r\n  }\r\n  // study list\r\n  const studyList = patientList[0].getElementsByTagName('Study');\r\n  if (studyList.length > 1) {\r\n    logger.warn('More than one study, loading first one.');\r\n  }\r\n  const studyUID = studyList[0].getAttribute('StudyInstanceUID');\r\n  // series list\r\n  const seriesList = studyList[0].getElementsByTagName('Series');\r\n  if (seriesList.length > 1) {\r\n    logger.warn('More than one series, loading first one.');\r\n  }\r\n  const seriesUID = seriesList[0].getAttribute('SeriesInstanceUID');\r\n  // instance list\r\n  const instanceList = seriesList[0].getElementsByTagName('Instance');\r\n  // loop on instances and push links\r\n  let max = instanceList.length;\r\n  if (nslices < max) {\r\n    max = nslices;\r\n  }\r\n  for (let i = 0; i < max; ++i) {\r\n    const sopInstanceUID = instanceList[i].getAttribute('SOPInstanceUID');\r\n    const link = rootURL +\r\n        '&studyUID=' + studyUID +\r\n        '&seriesUID=' + seriesUID +\r\n        '&objectUID=' + sopInstanceUID;\r\n    result.push(link);\r\n  }\r\n  // return\r\n  return result;\r\n}\r\n","import {ListenerHandler} from '../utils/listen';\r\n\r\n/**\r\n * UndoStack class.\r\n */\r\nexport class UndoStack {\r\n  /**\r\n   * Array of commands.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #stack = [];\r\n\r\n  /**\r\n   * Current command index.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #curCmdIndex = 0;\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Get the stack size.\r\n   *\r\n   * @returns {number} The size of the stack.\r\n   */\r\n  getStackSize() {\r\n    return this.#stack.length;\r\n  }\r\n\r\n  /**\r\n   * Get the current stack index.\r\n   *\r\n   * @returns {number} The stack index.\r\n   */\r\n  getCurrentStackIndex() {\r\n    return this.#curCmdIndex;\r\n  }\r\n\r\n  /**\r\n   * Add a command to the stack.\r\n   *\r\n   * @param {object} cmd The command to add.\r\n   * @fires UndoStack#undoadd\r\n   */\r\n  add(cmd) {\r\n    // clear commands after current index\r\n    this.#stack = this.#stack.slice(0, this.#curCmdIndex);\r\n    // store command\r\n    this.#stack.push(cmd);\r\n    // increment index\r\n    ++this.#curCmdIndex;\r\n    /**\r\n     * Command add to undo stack event.\r\n     *\r\n     * @event UndoStack#undoadd\r\n     * @type {object}\r\n     * @property {string} command The name of the command added to the\r\n     *   undo stack.\r\n     */\r\n    this.#fireEvent({\r\n      type: 'undoadd',\r\n      command: cmd.getName()\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Undo the last command.\r\n   *\r\n   * @fires UndoStack#undo\r\n   */\r\n  undo() {\r\n    // a bit inefficient...\r\n    if (this.#curCmdIndex > 0) {\r\n      // decrement command index\r\n      --this.#curCmdIndex;\r\n      // undo last command\r\n      this.#stack[this.#curCmdIndex].undo();\r\n      /**\r\n       * Command undo event.\r\n       *\r\n       * @event UndoStack#undo\r\n       * @type {object}\r\n       * @property {string} command The name of the undone command.\r\n       */\r\n      this.#fireEvent({\r\n        type: 'undo',\r\n        command: this.#stack[this.#curCmdIndex].getName()\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Redo the last command.\r\n   *\r\n   * @fires UndoStack#redo\r\n   */\r\n  redo() {\r\n    if (this.#curCmdIndex < this.#stack.length) {\r\n      // run last command\r\n      this.#stack[this.#curCmdIndex].execute();\r\n      /**\r\n       * Command redo event.\r\n       *\r\n       * @event UndoStack#redo\r\n       * @type {object}\r\n       * @property {string} command The name of the redone command.\r\n       */\r\n      this.#fireEvent({\r\n        type: 'redo',\r\n        command: this.#stack[this.#curCmdIndex].getName()\r\n      });\r\n      // increment command index\r\n      ++this.#curCmdIndex;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *    event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n} // UndoStack class\r\n","import {InteractionEventNames, getEventOffset} from '../gui/generic';\r\n\r\n/**\r\n * Toolbox controller.\r\n */\r\nexport class ToolboxController {\r\n\r\n  /**\r\n   * List of tools to control.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #toolList;\r\n\r\n  /**\r\n   * Selected tool.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #selectedTool = null;\r\n\r\n  /**\r\n   * Callback store to allow attach/detach.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #callbackStore = [];\r\n\r\n  /**\r\n   * Current layers bound to tool.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #boundLayers = {};\r\n\r\n  /**\r\n   * @param {object} toolList The list of tool objects.\r\n   */\r\n  constructor(toolList) {\r\n    this.#toolList = toolList;\r\n  }\r\n\r\n  /**\r\n   * Initialise.\r\n   */\r\n  init() {\r\n    for (const key in this.#toolList) {\r\n      this.#toolList[key].init();\r\n    }\r\n    // keydown listener\r\n    window.addEventListener('keydown',\r\n      this.#getOnMouch('window', 'keydown'), true);\r\n  }\r\n\r\n  /**\r\n   * Get the tool list.\r\n   *\r\n   * @returns {Array} The list of tool objects.\r\n   */\r\n  getToolList() {\r\n    return this.#toolList;\r\n  }\r\n\r\n  /**\r\n   * Check if a tool is in the tool list.\r\n   *\r\n   * @param {string} name The name to check.\r\n   * @returns {boolean} The tool list element for the given name.\r\n   */\r\n  hasTool(name) {\r\n    return typeof this.getToolList()[name] !== 'undefined';\r\n  }\r\n\r\n  /**\r\n   * Get the selected tool.\r\n   *\r\n   * @returns {object} The selected tool.\r\n   */\r\n  getSelectedTool() {\r\n    return this.#selectedTool;\r\n  }\r\n\r\n  /**\r\n   * Get the selected tool event handler.\r\n   *\r\n   * @param {string} eventType The event type, for example\r\n   *   mousedown, touchstart...\r\n   * @returns {Function} The event handler.\r\n   */\r\n  getSelectedToolEventHandler(eventType) {\r\n    return this.getSelectedTool()[eventType];\r\n  }\r\n\r\n  /**\r\n   * Set the selected tool.\r\n   *\r\n   * @param {string} name The name of the tool.\r\n   */\r\n  setSelectedTool(name) {\r\n    // check if we have it\r\n    if (!this.hasTool(name)) {\r\n      throw new Error('Unknown tool: \\'' + name + '\\'');\r\n    }\r\n    // de-activate previous\r\n    if (this.#selectedTool) {\r\n      this.#selectedTool.activate(false);\r\n    }\r\n    // set internal var\r\n    this.#selectedTool = this.#toolList[name];\r\n    // activate new tool\r\n    this.#selectedTool.activate(true);\r\n  }\r\n\r\n  /**\r\n   * Set the selected tool live features.\r\n   *\r\n   * @param {object} list The list of features.\r\n   */\r\n  setToolFeatures(list) {\r\n    if (this.getSelectedTool()) {\r\n      this.getSelectedTool().setFeatures(list);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listen to layer interaction events.\r\n   *\r\n   * @param {object} layer The layer to listen to.\r\n   * @param {string} layerGroupDivId The associated layer group div id.\r\n   */\r\n  bindLayer(layer, layerGroupDivId) {\r\n    if (typeof this.#boundLayers[layerGroupDivId] !== 'undefined') {\r\n      this.#unbindLayer(this.#boundLayers[layerGroupDivId]);\r\n    }\r\n    layer.bindInteraction();\r\n    // interaction events\r\n    const names = InteractionEventNames;\r\n    for (let i = 0; i < names.length; ++i) {\r\n      layer.addEventListener(names[i],\r\n        this.#getOnMouch(layer.getId(), names[i]));\r\n    }\r\n    // update class var\r\n    this.#boundLayers[layerGroupDivId] = layer;\r\n  }\r\n\r\n  /**\r\n   * Remove canvas mouse and touch listeners.\r\n   *\r\n   * @param {object} layer The layer to stop listening to.\r\n   */\r\n  #unbindLayer(layer) {\r\n    layer.unbindInteraction();\r\n    // interaction events\r\n    const names = InteractionEventNames;\r\n    for (let i = 0; i < names.length; ++i) {\r\n      layer.removeEventListener(names[i],\r\n        this.#getOnMouch(layer.getId(), names[i]));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mou(se) and (T)ouch event handler. This function just determines\r\n   * the mouse/touch position relative to the canvas element.\r\n   * It then passes it to the current tool.\r\n   *\r\n   * @param {string} layerId The layer id.\r\n   * @param {string} eventType The event type.\r\n   * @returns {object} A callback for the provided layer and event.\r\n   */\r\n  #getOnMouch(layerId, eventType) {\r\n    // augment event with converted offsets\r\n    const augmentEventOffsets = function (event) {\r\n      // event offset(s)\r\n      const offsets = getEventOffset(event);\r\n      // should have at least one offset\r\n      event._x = offsets[0].x;\r\n      event._y = offsets[0].y;\r\n      // possible second\r\n      if (offsets.length === 2) {\r\n        event._x1 = offsets[1].x;\r\n        event._y1 = offsets[1].y;\r\n      }\r\n    };\r\n\r\n    const applySelectedTool = (event) => {\r\n      // make sure we have a tool\r\n      if (this.#selectedTool) {\r\n        const func = this.#selectedTool[event.type];\r\n        if (func) {\r\n          func(event);\r\n        }\r\n      }\r\n    };\r\n\r\n    if (typeof this.#callbackStore[layerId] === 'undefined') {\r\n      this.#callbackStore[layerId] = [];\r\n    }\r\n\r\n    if (typeof this.#callbackStore[layerId][eventType] === 'undefined') {\r\n      let callback = null;\r\n      if (eventType === 'keydown') {\r\n        callback = function (event) {\r\n          applySelectedTool(event);\r\n        };\r\n      } else if (eventType === 'touchend') {\r\n        callback = function (event) {\r\n          applySelectedTool(event);\r\n        };\r\n      } else {\r\n        // mouse or touch events\r\n        callback = function (event) {\r\n          augmentEventOffsets(event);\r\n          applySelectedTool(event);\r\n        };\r\n      }\r\n      // store callback\r\n      this.#callbackStore[layerId][eventType] = callback;\r\n    }\r\n\r\n    return this.#callbackStore[layerId][eventType];\r\n  }\r\n\r\n} // class ToolboxController\r\n","/**\r\n * Multiple progresses handler.\r\n * Stores a multi dimensional list of progresses to allow to\r\n * calculate a global progress.\r\n *\r\n */\r\nexport class MultiProgressHandler {\r\n\r\n  /**\r\n   * List of progresses.\r\n   * First dimension is a list of item for which the progress is recorded,\r\n   *   for example file names.\r\n   * Second dimension is a list of possible progresses, for example\r\n   *   the progress of the download and the progress of the decoding.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #progresses = [];\r\n\r\n  /**\r\n   * Number of dimensions.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #numberOfDimensions = 2;\r\n\r\n  /**\r\n   * Progress callback.\r\n   *\r\n   * @type {Function}\r\n   */\r\n  #callback;\r\n\r\n  /**\r\n   * @param {Function} callback The function to pass the global progress to.\r\n   */\r\n  constructor(callback) {\r\n    this.#callback = callback;\r\n  }\r\n\r\n  /**\r\n   * Set the number of dimensions.\r\n   *\r\n   * @param {number} num The number.\r\n   */\r\n  setNumberOfDimensions(num) {\r\n    this.#numberOfDimensions = num;\r\n  }\r\n\r\n  /**\r\n   * Set the number of data to load.\r\n   *\r\n   * @param {number} n The number of data to load.\r\n   */\r\n  setNToLoad(n) {\r\n    for (let i = 0; i < n; ++i) {\r\n      this.#progresses[i] = [];\r\n      for (let j = 0; j < this.#numberOfDimensions; ++j) {\r\n        this.#progresses[i][j] = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a load progress.\r\n   * Call the member callback with a global event.\r\n   *\r\n   * @param {object} event The progress event.\r\n   */\r\n  onprogress = (event) => {\r\n    // check event\r\n    if (!event.lengthComputable) {\r\n      return;\r\n    }\r\n    if (typeof event.subindex === 'undefined') {\r\n      return;\r\n    }\r\n    if (typeof event.index === 'undefined') {\r\n      return;\r\n    }\r\n    // calculate percent\r\n    const percent = (event.loaded * 100) / event.total;\r\n    // set percent for index\r\n    this.#progresses[event.index][event.subindex] = percent;\r\n\r\n    // item progress\r\n    let item = null;\r\n    if (typeof event.item !== 'undefined') {\r\n      item = event.item;\r\n    } else {\r\n      item = {\r\n        loaded: this.#getItemProgress(event.index),\r\n        total: 100,\r\n        source: event.source\r\n      };\r\n    }\r\n\r\n    // call callback with a global event\r\n    this.#callback({\r\n      lengthComputable: true,\r\n      loaded: this.#getGlobalPercent(),\r\n      total: 100,\r\n      item: item\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get the item load percent.\r\n   *\r\n   * @param {number} index The index of the item.\r\n   * @returns {number} The load percentage.\r\n   */\r\n  #getItemProgress(index) {\r\n    let sum = 0;\r\n    for (let j = 0; j < this.#numberOfDimensions; ++j) {\r\n      sum += this.#progresses[index][j];\r\n    }\r\n    return sum / this.#numberOfDimensions;\r\n  }\r\n\r\n  /**\r\n   * Get the global load percent including the provided one.\r\n   *\r\n   * @returns {number} The accumulated percentage.\r\n   */\r\n  #getGlobalPercent() {\r\n    let sum = 0;\r\n    const lenprog = this.#progresses.length;\r\n    for (let i = 0; i < lenprog; ++i) {\r\n      sum += this.#getItemProgress(i);\r\n    }\r\n    return Math.round(sum / lenprog);\r\n  }\r\n\r\n\r\n  /**\r\n   * @callback eventFn\r\n   * @param {object} event The event.\r\n   */\r\n\r\n  /**\r\n   * Create a mono progress event handler.\r\n   *\r\n   * @param {number} index The index of the data.\r\n   * @param {number} subindex The sub-index of the data.\r\n   * @returns {eventFn} A progress handler function.\r\n   */\r\n  getMonoProgressHandler(index, subindex) {\r\n    return (event) => {\r\n      event.index = index;\r\n      event.subindex = subindex;\r\n      this.onprogress(event);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create a mono progress event handler with an undefined index.\r\n   * Warning: The caller handles the progress index.\r\n   *\r\n   * @param {number} subindex The sub-index of the data.\r\n   * @returns {eventFn} A progress handler function.\r\n   */\r\n  getUndefinedMonoProgressHandler(subindex) {\r\n    return (event) => {\r\n      event.subindex = subindex;\r\n      this.onprogress(event);\r\n    };\r\n  }\r\n}\r\n","import {endsWith, getRootPath} from '../utils/string';\r\nimport {MultiProgressHandler} from '../utils/progress';\r\nimport {getFileListFromDicomDir} from '../dicom/dicomElementsWrapper';\r\nimport {loaderList} from './loaderList';\r\n\r\n// url content types\r\nexport const urlContentTypes = {\r\n  Text: 0,\r\n  ArrayBuffer: 1\r\n};\r\n\r\n/**\r\n * Urls loader.\r\n */\r\nexport class UrlsLoader {\r\n\r\n  /**\r\n   * Input data.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #inputData = null;\r\n\r\n  /**\r\n   * Array of launched requests.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #requests = [];\r\n\r\n  /**\r\n   * Data loader.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #runningLoader = null;\r\n\r\n  /**\r\n   * Number of loaded data.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #nLoad = 0;\r\n\r\n  /**\r\n   * Number of load end events.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #nLoadend = 0;\r\n\r\n  /**\r\n   * Flag to know if the load is aborting.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #aborting;\r\n\r\n  /**\r\n   * The default character set (optional).\r\n   *\r\n   * @type {string}\r\n   */\r\n  #defaultCharacterSet;\r\n\r\n  /**\r\n   * Get the default character set.\r\n   *\r\n   * @returns {string} The default character set.\r\n   */\r\n  getDefaultCharacterSet() {\r\n    return this.#defaultCharacterSet;\r\n  }\r\n\r\n  /**\r\n   * Set the default character set.\r\n   *\r\n   * @param {string} characterSet The character set.\r\n   */\r\n  setDefaultCharacterSet(characterSet) {\r\n    this.#defaultCharacterSet = characterSet;\r\n  }\r\n\r\n  /**\r\n   * Store the current input.\r\n   *\r\n   * @param {object} data The input data.\r\n   */\r\n  #storeInputData(data) {\r\n    this.#inputData = data;\r\n    // reset counters\r\n    this.#nLoad = 0;\r\n    this.#nLoadend = 0;\r\n    // reset flag\r\n    this.#aborting = false;\r\n    // clear storage\r\n    this.#clearStoredRequests();\r\n    this.#clearStoredLoader();\r\n  }\r\n\r\n  /**\r\n   * Store a launched request.\r\n   *\r\n   * @param {object} request The launched request.\r\n   */\r\n  #storeRequest(request) {\r\n    this.#requests.push(request);\r\n  }\r\n\r\n  /**\r\n   * Clear the stored requests.\r\n   *\r\n   */\r\n  #clearStoredRequests() {\r\n    this.#requests = [];\r\n  }\r\n\r\n  /**\r\n   * Store the launched loader.\r\n   *\r\n   * @param {object} loader The launched loader.\r\n   */\r\n  #storeLoader(loader) {\r\n    this.#runningLoader = loader;\r\n  }\r\n\r\n  /**\r\n   * Clear the stored loader.\r\n   *\r\n   */\r\n  #clearStoredLoader() {\r\n    this.#runningLoader = null;\r\n  }\r\n\r\n  /**\r\n   * Increment the number of loaded data\r\n   *   and call onload if loaded all data.\r\n   *\r\n   * @param {object} _event The load data event.\r\n   */\r\n  #addLoad = (_event) => {\r\n    this.#nLoad++;\r\n    // call onload when all is loaded\r\n    // (not using the input event since it is not the\r\n    //   general load)\r\n    if (this.#nLoad === this.#inputData.length) {\r\n      this.onload({\r\n        source: this.#inputData\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Increment the counter of load end events\r\n   *   and run callbacks when all done, erroneus or not.\r\n   *\r\n   * @param {object} _event The load end event.\r\n   */\r\n  #addLoadend = (_event) => {\r\n    this.#nLoadend++;\r\n    // call onloadend when all is run\r\n    // (not using the input event since it is not the\r\n    //   general load end)\r\n    // x2 to count for request + load\r\n    if (this.#nLoadend === 2 * this.#inputData.length) {\r\n      this.onloadend({\r\n        source: this.#inputData\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @callback eventFn\r\n   * @param {object} event The event.\r\n   */\r\n\r\n  /**\r\n   * Augment a callback event with a srouce.\r\n   *\r\n   * @param {object} callback The callback to augment its event.\r\n   * @param {object} source The source to add to the event.\r\n   * @returns {eventFn} The augmented callback.\r\n   */\r\n  #augmentCallbackEvent(callback, source) {\r\n    return (event) => {\r\n      event.source = source;\r\n      callback(event);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Load a list of URLs or a DICOMDIR.\r\n   *\r\n   * @param {Array} data The list of urls to load.\r\n   * @param {object} [options] Load options.\r\n   */\r\n  load(data, options) {\r\n    // send start event\r\n    this.onloadstart({\r\n      source: data\r\n    });\r\n\r\n    // check if DICOMDIR case\r\n    if (data.length === 1 &&\r\n      (endsWith(data[0], 'DICOMDIR') ||\r\n      endsWith(data[0], '.dcmdir'))) {\r\n      this.#loadDicomDir(data[0], options);\r\n    } else {\r\n      this.#loadUrls(data, options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a load handler for a data element.\r\n   *\r\n   * @param {object} loader The associated loader.\r\n   * @param {object} dataElement The data element.\r\n   * @param {number} i The index of the element.\r\n   * @returns {eventFn} A load handler.\r\n   */\r\n  #getLoadHandler(loader, dataElement, i) {\r\n    return (event) => {\r\n      // check response status\r\n      // https://developer.mozilla.org/en-US/docs/Web/HTTP/Response_codes\r\n      // status 200: \"OK\"; status 0: \"debug\"\r\n      const status = event.target.status;\r\n      if (status !== 200 && status !== 0) {\r\n        this.onerror({\r\n          source: dataElement,\r\n          error: 'GET ' + event.target.responseURL +\r\n            ' ' + event.target.status +\r\n            ' (' + event.target.statusText + ')',\r\n          target: event.target\r\n        });\r\n        this.#addLoadend();\r\n      } else {\r\n        loader.load(event.target.response, dataElement, i);\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Load a list of urls.\r\n   *\r\n   * @param {Array} data The list of urls to load.\r\n   * @param {object} [options] The options object, can contain:\r\n   *  - requestHeaders: an array of {name, value} to use as request headers\r\n   *  - withCredentials: boolean xhr.withCredentials flag to pass\r\n   *    to the request\r\n   *  - batchSize: the size of the request url batch\r\n   */\r\n  #loadUrls(data, options) {\r\n    // check input\r\n    if (typeof data === 'undefined' || data.length === 0) {\r\n      return;\r\n    }\r\n    this.#storeInputData(data);\r\n\r\n    // create prgress handler\r\n    const mproghandler = new MultiProgressHandler(this.onprogress);\r\n    mproghandler.setNToLoad(data.length);\r\n\r\n    // create loaders\r\n    const loaders = [];\r\n    for (let m = 0; m < loaderList.length; ++m) {\r\n      loaders.push(new loaderList[m]());\r\n    }\r\n\r\n    // find an appropriate loader\r\n    let dataElement = data[0];\r\n    let loader = null;\r\n    let foundLoader = false;\r\n    for (let l = 0; l < loaders.length; ++l) {\r\n      loader = loaders[l];\r\n      if (loader.canLoadUrl(dataElement, options)) {\r\n        foundLoader = true;\r\n        // load options\r\n        loader.setOptions({\r\n          numberOfFiles: data.length,\r\n          defaultCharacterSet: this.getDefaultCharacterSet()\r\n        });\r\n        // set loader callbacks\r\n        // loader.onloadstart: nothing to do\r\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\r\n        loader.onloaditem = this.onloaditem;\r\n        loader.onload = this.#addLoad;\r\n        loader.onloadend = this.#addLoadend;\r\n        loader.onerror = this.onerror;\r\n        loader.onabort = this.onabort;\r\n\r\n        // store loader\r\n        this.#storeLoader(loader);\r\n        // exit\r\n        break;\r\n      }\r\n    }\r\n    if (!foundLoader) {\r\n      throw new Error('No loader found for url: ' + dataElement);\r\n    }\r\n\r\n    // store last run request index\r\n    let lastRunRequestIndex = 0;\r\n    const requestOnLoadEnd = () => {\r\n      this.#addLoadend();\r\n      // launch next in queue\r\n      if (lastRunRequestIndex < this.#requests.length - 1 && !this.#aborting) {\r\n        ++lastRunRequestIndex;\r\n        this.#requests[lastRunRequestIndex].send(null);\r\n      }\r\n    };\r\n\r\n    // loop on I/O elements\r\n    for (let i = 0; i < data.length; ++i) {\r\n      dataElement = data[i];\r\n\r\n      // check loader\r\n      if (!loader.canLoadUrl(dataElement, options)) {\r\n        throw new Error('Input url of different type: ' + dataElement);\r\n      }\r\n      /**\r\n       * The http request.\r\n       *\r\n       * @external XMLHttpRequest\r\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\r\n       */\r\n      const request = new XMLHttpRequest();\r\n      request.open('GET', dataElement, true);\r\n\r\n      // request options\r\n      if (typeof options !== 'undefined') {\r\n        // optional request headers\r\n        if (typeof options.requestHeaders !== 'undefined') {\r\n          const requestHeaders = options.requestHeaders;\r\n          for (let j = 0; j < requestHeaders.length; ++j) {\r\n            if (typeof requestHeaders[j].name !== 'undefined' &&\r\n              typeof requestHeaders[j].value !== 'undefined') {\r\n              request.setRequestHeader(\r\n                requestHeaders[j].name, requestHeaders[j].value);\r\n            }\r\n          }\r\n        }\r\n        // optional withCredentials\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\r\n        if (typeof options.withCredentials !== 'undefined') {\r\n          request.withCredentials = options.withCredentials;\r\n        }\r\n      }\r\n\r\n      // set request callbacks\r\n      // request.onloadstart: nothing to do\r\n      request.onprogress = this.#augmentCallbackEvent(\r\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\r\n      request.onload = this.#getLoadHandler(loader, dataElement, i);\r\n      request.onloadend = requestOnLoadEnd;\r\n      request.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\r\n      request.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\r\n      // response type (default is 'text')\r\n      if (loader.loadUrlAs() === urlContentTypes.ArrayBuffer) {\r\n        request.responseType = 'arraybuffer';\r\n      }\r\n\r\n      // store request\r\n      this.#storeRequest(request);\r\n    }\r\n\r\n    // launch requests in batch\r\n    let batchSize = this.#requests.length;\r\n    if (typeof options !== 'undefined') {\r\n      // optional request batch size\r\n      if (typeof options.batchSize !== 'undefined' && batchSize !== 0) {\r\n        batchSize = Math.min(options.batchSize, this.#requests.length);\r\n      }\r\n    }\r\n    for (let r = 0; r < batchSize; ++r) {\r\n      if (!this.#aborting) {\r\n        lastRunRequestIndex = r;\r\n        this.#requests[lastRunRequestIndex].send(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load a DICOMDIR.\r\n   *\r\n   * @param {string} dicomDirUrl The DICOMDIR url.\r\n   * @param {object} [options] Load options.\r\n   */\r\n  #loadDicomDir(dicomDirUrl, options) {\r\n    // read DICOMDIR\r\n    const request = new XMLHttpRequest();\r\n    request.open('GET', dicomDirUrl, true);\r\n    request.responseType = 'arraybuffer';\r\n    // request.onloadstart: nothing to do\r\n    /**\r\n     * @param {object} event The load event.\r\n     */\r\n    request.onload = (event) => {\r\n      // check status\r\n      const status = event.target.status;\r\n      if (status !== 200 && status !== 0) {\r\n        this.onerror({\r\n          source: dicomDirUrl,\r\n          error: 'GET ' + event.target.responseURL +\r\n            ' ' + event.target.status +\r\n            ' (' + event.target.statusText + ')',\r\n          target: event.target\r\n        });\r\n        this.onloadend({});\r\n      } else {\r\n        // get the file list\r\n        const list = getFileListFromDicomDir(event.target.response);\r\n        // use the first list\r\n        const urls = list[0][0];\r\n        // append root url\r\n        const rootUrl = getRootPath(dicomDirUrl);\r\n        const fullUrls = [];\r\n        for (let i = 0; i < urls.length; ++i) {\r\n          fullUrls.push(rootUrl + '/' + urls[i]);\r\n        }\r\n        // load urls\r\n        this.#loadUrls(fullUrls, options);\r\n      }\r\n    };\r\n    request.onerror = (event) => {\r\n      this.#augmentCallbackEvent(this.onerror, dicomDirUrl)(event);\r\n      this.onloadend({});\r\n    };\r\n    request.onabort = (event) => {\r\n      this.#augmentCallbackEvent(this.onabort, dicomDirUrl)(event);\r\n      this.onloadend({});\r\n    };\r\n    // request.onloadend: nothing to do\r\n    // send request\r\n    request.send(null);\r\n  }\r\n\r\n  /**\r\n   * Abort a load.\r\n   */\r\n  abort() {\r\n    this.#aborting = true;\r\n    // abort non finished requests\r\n    for (let i = 0; i < this.#requests.length; ++i) {\r\n      // 0: UNSENT, 1: OPENED, 2: HEADERS_RECEIVED (send()), 3: LOADING, 4: DONE\r\n      if (this.#requests[i].readyState !== 4) {\r\n        this.#requests[i].abort();\r\n      }\r\n    }\r\n    // abort loader\r\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\r\n      this.#runningLoader.abort();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a load progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event fired\r\n   *   when a file item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle a load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class UrlsLoader\r\n","/**\r\n * Thread Pool.\r\n * Highly inspired from {@link http://www.smartjava.org/content/html5-easily-parallelize-jobs-using-web-workers-and-threadpool}.\r\n */\r\nexport class ThreadPool {\r\n\r\n  /**\r\n   * @param {number} poolSize The size of the pool.\r\n   */\r\n  constructor(poolSize) {\r\n    this.poolSize = poolSize;\r\n    // task queue\r\n    this.taskQueue = [];\r\n    // lsit of available threads\r\n    this.freeThreads = [];\r\n    // create 'poolSize' number of worker threads\r\n    for (let i = 0; i < poolSize; ++i) {\r\n      this.freeThreads.push(new WorkerThread(this));\r\n    }\r\n    // list of running threads (unsed in abort)\r\n    this.runningThreads = [];\r\n  }\r\n\r\n  /**\r\n   * Add a worker task to the queue.\r\n   * Will be run when a thread is made available.\r\n   *\r\n   * @param {object} workerTask The task to add to the queue.\r\n   */\r\n  addWorkerTask(workerTask) {\r\n    // send work start if first task\r\n    if (this.freeThreads.length === this.poolSize) {\r\n      this.onworkstart({type: 'work-start'});\r\n    }\r\n    // launch task or queue\r\n    if (this.freeThreads.length > 0) {\r\n      // get the first free worker thread\r\n      const workerThread = this.freeThreads.shift();\r\n      // add the thread to the runnning list\r\n      this.runningThreads.push(workerThread);\r\n      // run the input task\r\n      workerThread.run(workerTask);\r\n    } else {\r\n      // no free thread, add task to queue\r\n      this.taskQueue.push(workerTask);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abort all threads.\r\n   */\r\n  abort() {\r\n    // stop all threads\r\n    this.#stop();\r\n    // callback\r\n    this.onabort({type: 'work-abort'});\r\n    this.onworkend({type: 'work-end'});\r\n  }\r\n\r\n  /**\r\n   * Handle a task end.\r\n   *\r\n   * @param {object} workerThread The thread to free.\r\n   */\r\n  onTaskEnd(workerThread) {\r\n    // launch next task in queue or finish\r\n    if (this.taskQueue.length > 0) {\r\n      // get waiting task\r\n      const workerTask = this.taskQueue.shift();\r\n      // use input thread to run the waiting task\r\n      workerThread.run(workerTask);\r\n    } else {\r\n      // stop the worker\r\n      workerThread.stop();\r\n      // no task to run, add to free list\r\n      this.freeThreads.push(workerThread);\r\n      // remove from running list\r\n      for (let i = 0; i < this.runningThreads.length; ++i) {\r\n        if (this.runningThreads[i].getId() === workerThread.getId()) {\r\n          this.runningThreads.splice(i, 1);\r\n        }\r\n      }\r\n      // the work is done when the queue is back to its initial size\r\n      if (this.freeThreads.length === this.poolSize) {\r\n        this.onwork({type: 'work'});\r\n        this.onworkend({type: 'work-end'});\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle an error message from a worker.\r\n   *\r\n   * @param {object} event The error event.\r\n   */\r\n  handleWorkerError = (event) => {\r\n    // stop all threads\r\n    this.#stop();\r\n    // callback\r\n    this.onerror({error: event});\r\n    this.onworkend({type: 'work-end'});\r\n  };\r\n\r\n  // private ----------------------------------------------------------------\r\n\r\n  /**\r\n   * Stop the pool: stop all running threads.\r\n   *\r\n   */\r\n  #stop() {\r\n    // clear tasks\r\n    this.taskQueue = [];\r\n    // cancel running workers\r\n    for (let i = 0; i < this.runningThreads.length; ++i) {\r\n      this.runningThreads[i].stop();\r\n    }\r\n    this.runningThreads = [];\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle a work start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The work start event.\r\n   */\r\n  onworkstart(_event) {}\r\n\r\n  /**\r\n   * Handle a work item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The work item event fired\r\n   *   when a work item ended successfully.\r\n   */\r\n  onworkitem(_event) {}\r\n\r\n  /**\r\n   * Handle a work event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The work event fired\r\n   *   when a work ended successfully.\r\n   */\r\n  onwork(_event) {}\r\n\r\n  /**\r\n   * Handle a work end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The work end event fired\r\n   *  when a work has completed, successfully or not.\r\n   */\r\n  onworkend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // ThreadPool\r\n\r\n/**\r\n * Worker background task.\r\n *\r\n * @external Worker\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Worker\r\n */\r\n\r\n/**\r\n * Worker thread.\r\n */\r\nclass WorkerThread {\r\n\r\n  /**\r\n   * @param {object} parentPool The parent pool.\r\n   */\r\n  constructor(parentPool) {\r\n    this.parentPool = parentPool;\r\n    // thread ID\r\n    this.id = Math.random().toString(36).substring(2, 15);\r\n    // running task\r\n    this.runningTask = null;\r\n    // worker used to run task\r\n    this.worker;\r\n  }\r\n\r\n  /**\r\n   * Get the thread ID.\r\n   *\r\n   * @returns {string} The thread ID (alphanumeric).\r\n   */\r\n  getId() {\r\n    return this.id;\r\n  }\r\n\r\n  /**\r\n   * Run a worker task\r\n   *\r\n   * @param {object} workerTask The task to run.\r\n   */\r\n  run(workerTask) {\r\n    // store task\r\n    this.runningTask = workerTask;\r\n    // create a new web worker if not done yet\r\n    if (typeof this.worker === 'undefined') {\r\n      this.worker = new Worker(this.runningTask.script);\r\n      // set callbacks\r\n      this.worker.onmessage = this.onmessage;\r\n      this.worker.onerror = this.onerror;\r\n    }\r\n    // launch the worker\r\n    this.worker.postMessage(this.runningTask.startMessage);\r\n  }\r\n\r\n  /**\r\n   * Finish a task and tell the parent.\r\n   */\r\n  stop() {\r\n    // stop the worker\r\n    if (typeof this.worker !== 'undefined') {\r\n      this.worker.terminate();\r\n      // force create at next run\r\n      this.worker = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Message event handler.\r\n   * For now assume we only get a single callback from a worker\r\n   * which also indicates the end of this worker.\r\n   *\r\n   * @param {object} event The message event.\r\n   */\r\n  onmessage = (event) => {\r\n    // augment event\r\n    event.itemNumber = this.runningTask.info.itemNumber;\r\n    event.numberOfItems = this.runningTask.info.numberOfItems;\r\n    event.dataIndex = this.runningTask.info.dataIndex;\r\n    // send event\r\n    this.parentPool.onworkitem(event);\r\n    // tell the parent pool the task is done\r\n    this.parentPool.onTaskEnd(this);\r\n  };\r\n\r\n  /**\r\n   * Error event handler.\r\n   *\r\n   * @param {object} event The error event.\r\n   */\r\n  onerror = (event) => {\r\n    // augment event\r\n    event.itemNumber = this.runningTask.info.itemNumber;\r\n    event.numberOfItems = this.runningTask.info.numberOfItems;\r\n    event.dataIndex = this.runningTask.info.dataIndex;\r\n    // pass to parent\r\n    this.parentPool.handleWorkerError(event);\r\n    // stop the worker and free the thread\r\n    this.stop();\r\n  };\r\n} // class WorkerThread\r\n\r\n/**\r\n * Worker task.\r\n */\r\nexport class WorkerTask {\r\n  /**\r\n   * @param {string} script The worker script.\r\n   * @param {object} message The data to pass to the worker.\r\n   * @param {object} info Information object about the input data.\r\n   */\r\n  constructor(script, message, info) {\r\n    // worker script\r\n    this.script = script;\r\n    // worker start message\r\n    this.startMessage = message;\r\n    // information about the work data\r\n    this.info = info;\r\n  }\r\n}\r\n","import {ThreadPool, WorkerTask} from '../utils/thread';\r\n\r\n/**\r\n * The JPEG baseline decoder.\r\n *\r\n * @external JpegImage\r\n * @see https://github.com/mozilla/pdf.js/blob/master/src/core/jpg.js\r\n */\r\n/* global JpegImage */\r\n// @ts-ignore\r\nconst hasJpegBaselineDecoder = (typeof JpegImage !== 'undefined');\r\n\r\n/**\r\n * The JPEG decoder namespace.\r\n *\r\n * @external jpeg\r\n * @see https://github.com/rii-mango/JPEGLosslessDecoderJS\r\n */\r\n/* global jpeg */\r\nconst hasJpegLosslessDecoder =\r\n  // @ts-ignore\r\n  (typeof jpeg !== 'undefined') && (typeof jpeg.lossless !== 'undefined');\r\n\r\n/**\r\n * The JPEG 2000 decoder.\r\n *\r\n * @external JpxImage\r\n * @see https://github.com/jpambrun/jpx-medical/blob/master/jpx.js\r\n */\r\n/* global JpxImage */\r\n// @ts-ignore\r\nconst hasJpeg2000Decoder = (typeof JpxImage !== 'undefined');\r\n\r\n/* global dwvdecoder */\r\n\r\n/**\r\n * Decoder scripts to be passed to web workers for image decoding.\r\n */\r\nexport const decoderScripts = {\r\n  jpeg2000: '',\r\n  'jpeg-lossless': '',\r\n  'jpeg-baseline': '',\r\n  rle: ''\r\n};\r\n\r\n/**\r\n * Asynchronous pixel buffer decoder.\r\n */\r\nclass AsynchPixelBufferDecoder {\r\n\r\n  /**\r\n   * The associated worker script.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #script;\r\n\r\n  /**\r\n   * Associated thread pool.\r\n   *\r\n   * @type {ThreadPool}\r\n   */\r\n  #pool = new ThreadPool(10);\r\n\r\n  /**\r\n   * Flag to know if callbacks are set.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #areCallbacksSet = false;\r\n\r\n  /**\r\n   * @param {string} script The path to the decoder script to be used\r\n   *   by the web worker.\r\n   * @param {number} _numberOfData The anticipated number of data to decode.\r\n   */\r\n  constructor(script, _numberOfData) {\r\n    this.#script = script;\r\n  }\r\n\r\n  /**\r\n   * Decode a pixel buffer.\r\n   *\r\n   * @param {Array} pixelBuffer The pixel buffer.\r\n   * @param {object} pixelMeta The input meta data.\r\n   * @param {object} info Information object about the input data.\r\n   */\r\n  decode(pixelBuffer, pixelMeta, info) {\r\n    if (!this.#areCallbacksSet) {\r\n      this.#areCallbacksSet = true;\r\n      // set event handlers\r\n      this.#pool.onworkstart = this.ondecodestart;\r\n      this.#pool.onworkitem = this.ondecodeditem;\r\n      this.#pool.onwork = this.ondecoded;\r\n      this.#pool.onworkend = this.ondecodeend;\r\n      this.#pool.onerror = this.onerror;\r\n      this.#pool.onabort = this.onabort;\r\n    }\r\n    // create worker task\r\n    const workerTask = new WorkerTask(\r\n      this.#script,\r\n      {\r\n        buffer: pixelBuffer,\r\n        meta: pixelMeta\r\n      },\r\n      info\r\n    );\r\n    // add it the queue and run it\r\n    this.#pool.addWorkerTask(workerTask);\r\n  }\r\n\r\n  /**\r\n   * Abort decoding.\r\n   */\r\n  abort() {\r\n    // abort the thread pool, will trigger pool.onabort\r\n    this.#pool.abort();\r\n  }\r\n\r\n  /**\r\n   * Handle a decode start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode start event.\r\n   */\r\n  ondecodestart(_event) {}\r\n\r\n  /**\r\n   * Handle a decode item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode item event fired\r\n   *   when a decode item ended successfully.\r\n   */\r\n  ondecodeditem(_event) {}\r\n\r\n  /**\r\n   * Handle a decode event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode event fired\r\n   *   when a file has been decoded successfully.\r\n   */\r\n  ondecoded(_event) {}\r\n\r\n  /**\r\n   * Handle a decode end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode end event fired\r\n   *  when a file decoding has completed, successfully or not.\r\n   */\r\n  ondecodeend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class AsynchPixelBufferDecoder\r\n\r\n/**\r\n * Synchronous pixel buffer decoder.\r\n */\r\nclass SynchPixelBufferDecoder {\r\n\r\n  /**\r\n   * Name of the compression algorithm.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #algoName;\r\n\r\n  /**\r\n   * Number of data.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #numberOfData;\r\n\r\n  /**\r\n   * @param {string} algoName The decompression algorithm name.\r\n   * @param {number} numberOfData The anticipated number of data to decode.\r\n   */\r\n  constructor(algoName, numberOfData) {\r\n    this.#algoName = algoName;\r\n    this.#numberOfData = numberOfData;\r\n  }\r\n\r\n  // decode count\r\n  #decodeCount = 0;\r\n\r\n  /**\r\n   * Decode a pixel buffer.\r\n   *\r\n   * @param {Array} pixelBuffer The pixel buffer.\r\n   * @param {object} pixelMeta The input meta data.\r\n   * @param {object} info Information object about the input data.\r\n   * @external jpeg\r\n   * @external JpegImage\r\n   * @external JpxImage\r\n   */\r\n  decode(pixelBuffer, pixelMeta, info) {\r\n    ++this.#decodeCount;\r\n\r\n    let decoder = null;\r\n    let decodedBuffer = null;\r\n    if (this.#algoName === 'jpeg-lossless') {\r\n      if (!hasJpegLosslessDecoder) {\r\n        throw new Error('No JPEG Lossless decoder provided');\r\n      }\r\n      // bytes per element\r\n      const bpe = pixelMeta.bitsAllocated / 8;\r\n      const buf = new Uint8Array(pixelBuffer);\r\n      // @ts-ignore\r\n      decoder = new jpeg.lossless.Decoder();\r\n      const decoded = decoder.decode(buf.buffer, 0, buf.buffer.byteLength, bpe);\r\n      if (pixelMeta.bitsAllocated === 8) {\r\n        if (pixelMeta.isSigned) {\r\n          decodedBuffer = new Int8Array(decoded.buffer);\r\n        } else {\r\n          decodedBuffer = new Uint8Array(decoded.buffer);\r\n        }\r\n      } else if (pixelMeta.bitsAllocated === 16) {\r\n        if (pixelMeta.isSigned) {\r\n          decodedBuffer = new Int16Array(decoded.buffer);\r\n        } else {\r\n          decodedBuffer = new Uint16Array(decoded.buffer);\r\n        }\r\n      }\r\n    } else if (this.#algoName === 'jpeg-baseline') {\r\n      if (!hasJpegBaselineDecoder) {\r\n        throw new Error('No JPEG Baseline decoder provided');\r\n      }\r\n      // @ts-ignore\r\n      decoder = new JpegImage();\r\n      decoder.parse(pixelBuffer);\r\n      decodedBuffer = decoder.getData(decoder.width, decoder.height);\r\n    } else if (this.#algoName === 'jpeg2000') {\r\n      if (!hasJpeg2000Decoder) {\r\n        throw new Error('No JPEG 2000 decoder provided');\r\n      }\r\n      // decompress pixel buffer into Int16 image\r\n      // @ts-ignore\r\n      decoder = new JpxImage();\r\n      decoder.parse(pixelBuffer);\r\n      // set the pixel buffer\r\n      decodedBuffer = decoder.tiles[0].items;\r\n    } else if (this.#algoName === 'rle') {\r\n      // decode DICOM buffer\r\n      // @ts-ignore\r\n      decoder = new dwvdecoder.RleDecoder();\r\n      // set the pixel buffer\r\n      decodedBuffer = decoder.decode(\r\n        pixelBuffer,\r\n        pixelMeta.bitsAllocated,\r\n        pixelMeta.isSigned,\r\n        pixelMeta.sliceSize,\r\n        pixelMeta.samplesPerPixel,\r\n        pixelMeta.planarConfiguration);\r\n    }\r\n    // send decode events\r\n    this.ondecodeditem({\r\n      data: [decodedBuffer],\r\n      dataIndex: info.dataIndex,\r\n      numberOfItems: info.numberOfItems,\r\n      itemNumber: info.itemNumber\r\n    });\r\n    // decode end?\r\n    if (this.#decodeCount === this.#numberOfData) {\r\n      this.ondecoded({});\r\n      this.ondecodeend({});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abort decoding.\r\n   */\r\n  abort() {\r\n    // nothing to do in the synchronous case.\r\n    // callback\r\n    this.onabort({});\r\n    this.ondecodeend({});\r\n  }\r\n\r\n  /**\r\n   * Handle a decode start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode start event.\r\n   */\r\n  ondecodestart(_event) {}\r\n\r\n  /**\r\n   * Handle a decode item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode item event fired\r\n   *   when a decode item ended successfully.\r\n   */\r\n  ondecodeditem(_event) {}\r\n\r\n  /**\r\n   * Handle a decode event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode event fired\r\n   *   when a file has been decoded successfully.\r\n   */\r\n  ondecoded(_event) {}\r\n\r\n  /**\r\n   * Handle a decode end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode end event fired\r\n   *  when a file decoding has completed, successfully or not.\r\n   */\r\n  ondecodeend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class SynchPixelBufferDecoder\r\n\r\n/**\r\n * Decode a pixel buffer.\r\n *\r\n * If the 'decoderScripts' variable does not contain the desired,\r\n * algorythm the decoder will switch to the synchronous mode.\r\n */\r\nexport class PixelBufferDecoder {\r\n\r\n  /**\r\n   * Flag to know if callbacks are set.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #areCallbacksSet = false;\r\n\r\n  /**\r\n   * Pixel decoder.\r\n   * Defined only once.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #pixelDecoder = null;\r\n\r\n  /**\r\n   * @param {string} algoName The decompression algorithm name.\r\n   * @param {number} numberOfData The anticipated number of data to decode.\r\n   */\r\n  constructor(algoName, numberOfData) {\r\n    // initialise the asynch decoder (if possible)\r\n    if (typeof decoderScripts !== 'undefined' &&\r\n      typeof decoderScripts[algoName] !== 'undefined') {\r\n      this.#pixelDecoder = new AsynchPixelBufferDecoder(\r\n        decoderScripts[algoName], numberOfData);\r\n    } else {\r\n      this.#pixelDecoder = new SynchPixelBufferDecoder(\r\n        algoName, numberOfData);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get data from an input buffer using a DICOM parser.\r\n   *\r\n   * @param {Array} pixelBuffer The input data buffer.\r\n   * @param {object} pixelMeta The input meta data.\r\n   * @param {object} info Information object about the input data.\r\n   */\r\n  decode(pixelBuffer, pixelMeta, info) {\r\n    if (!this.#areCallbacksSet) {\r\n      this.#areCallbacksSet = true;\r\n      // set callbacks\r\n      this.#pixelDecoder.ondecodestart = this.ondecodestart;\r\n      this.#pixelDecoder.ondecodeditem = this.ondecodeditem;\r\n      this.#pixelDecoder.ondecoded = this.ondecoded;\r\n      this.#pixelDecoder.ondecodeend = this.ondecodeend;\r\n      this.#pixelDecoder.onerror = this.onerror;\r\n      this.#pixelDecoder.onabort = this.onabort;\r\n    }\r\n    // decode and call the callback\r\n    this.#pixelDecoder.decode(pixelBuffer, pixelMeta, info);\r\n  }\r\n\r\n  /**\r\n   * Abort decoding.\r\n   */\r\n  abort() {\r\n    // decoder classes should define an abort\r\n    this.#pixelDecoder.abort();\r\n  }\r\n\r\n  /**\r\n   * Handle a decode start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode start event.\r\n   */\r\n  ondecodestart(_event) {}\r\n\r\n  /**\r\n   * Handle a decode item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode item event fired\r\n   *   when a decode item ended successfully.\r\n   */\r\n  ondecodeditem(_event) {}\r\n\r\n  /**\r\n   * Handle a decode event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode event fired\r\n   *   when a file has been decoded successfully.\r\n   */\r\n  ondecoded(_event) {}\r\n\r\n  /**\r\n   * Handle a decode end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The decode end event fired\r\n   *  when a file decoding has completed, successfully or not.\r\n   */\r\n  ondecodeend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class PixelBufferDecoder\r\n","import {logger} from '../utils/logger';\r\nimport {\r\n  DicomParser,\r\n  getSyntaxDecompressionName\r\n} from '../dicom/dicomParser';\r\nimport {ImageFactory} from './imageFactory';\r\nimport {MaskFactory} from './maskFactory';\r\nimport {PixelBufferDecoder} from './decoder';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {DataElement} from '../dicom/dataElement';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Create a View from a DICOM buffer.\r\n */\r\nexport class DicomBufferToView {\r\n\r\n  /**\r\n   * Converter options.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #options;\r\n\r\n  /**\r\n   * Set the converter options.\r\n   *\r\n   * @param {object} opt The input options.\r\n   */\r\n  setOptions(opt) {\r\n    this.#options = opt;\r\n  }\r\n\r\n  /**\r\n   * Pixel buffer decoder.\r\n   * Define only once to allow optional asynchronous mode.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #pixelDecoder = null;\r\n\r\n  // local tmp storage\r\n  #dicomParserStore = [];\r\n  #finalBufferStore = [];\r\n  #decompressedSizes = [];\r\n  #factoryWarnings = [];\r\n\r\n  /**\r\n   * Get the factory associated to input DICOM elements.\r\n   *\r\n   * @param {Object<string, DataElement>} elements The DICOM elements.\r\n   * @returns {ImageFactory|MaskFactory} The associated factory.\r\n   */\r\n  #getFactory(elements) {\r\n    let factory;\r\n    // mask factory for DICOM SEG\r\n    const element = elements['00080060'];\r\n    if (typeof element !== 'undefined') {\r\n      const modality = element.value[0];\r\n      if (modality === 'SEG') {\r\n        factory = new MaskFactory();\r\n      }\r\n    }\r\n    // default image factory\r\n    if (typeof factory === 'undefined') {\r\n      factory = new ImageFactory();\r\n    }\r\n    return factory;\r\n  }\r\n\r\n  /**\r\n   * Generate the image object.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @param {string} origin The data origin.\r\n   */\r\n  #generateImage(index, origin) {\r\n    const dataElements = this.#dicomParserStore[index].getDicomElements();\r\n    const factory = this.#getFactory(dataElements);\r\n    // create the image\r\n    try {\r\n      const image = factory.create(\r\n        dataElements,\r\n        this.#finalBufferStore[index],\r\n        this.#options.numberOfFiles);\r\n      // call onloaditem\r\n      this.onloaditem({\r\n        data: {\r\n          image: image,\r\n          info: dataElements\r\n        },\r\n        source: origin,\r\n        warn: this.#factoryWarnings[index]\r\n      });\r\n    } catch (error) {\r\n      this.onerror({\r\n        error: error,\r\n        source: origin\r\n      });\r\n      this.onloadend({\r\n        source: origin\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a decoded item event.\r\n   *\r\n   * @param {object} event The decoded item event.\r\n   */\r\n  #onDecodedItem(event) {\r\n    // send progress\r\n    this.onprogress({\r\n      lengthComputable: true,\r\n      loaded: event.itemNumber + 1,\r\n      total: event.numberOfItems,\r\n      index: event.dataIndex,\r\n      source: origin\r\n    });\r\n\r\n    const dataIndex = event.dataIndex;\r\n\r\n    // store decoded data\r\n    const decodedData = event.data[0];\r\n    if (event.numberOfItems !== 1) {\r\n      // allocate buffer if not done yet\r\n      if (typeof this.#decompressedSizes[dataIndex] === 'undefined') {\r\n        this.#decompressedSizes[dataIndex] = decodedData.length;\r\n        const fullSize = event.numberOfItems *\r\n          this.#decompressedSizes[dataIndex];\r\n        try {\r\n          this.#finalBufferStore[dataIndex] =\r\n            new decodedData.constructor(fullSize);\r\n        } catch (error) {\r\n          if (error instanceof RangeError) {\r\n            const powerOf2 = Math.floor(Math.log(fullSize) / Math.log(2));\r\n            logger.error('Cannot allocate ' +\r\n              decodedData.constructor.name +\r\n              ' of size: ' +\r\n              fullSize + ' (>2^' + powerOf2 + ') for decompressed data.');\r\n          }\r\n          // abort\r\n          this.#pixelDecoder.abort();\r\n          // send events\r\n          this.onerror({\r\n            error: error,\r\n            source: origin\r\n          });\r\n          this.onloadend({\r\n            source: origin\r\n          });\r\n          // exit\r\n          return;\r\n        }\r\n      }\r\n      // hoping for all items to have the same size...\r\n      if (decodedData.length !== this.#decompressedSizes[dataIndex]) {\r\n        logger.warn('Unsupported varying decompressed data size: ' +\r\n          decodedData.length + ' != ' + this.#decompressedSizes[dataIndex]);\r\n      }\r\n      // set buffer item data\r\n      this.#finalBufferStore[dataIndex].set(\r\n        decodedData, this.#decompressedSizes[dataIndex] * event.itemNumber);\r\n    } else {\r\n      this.#finalBufferStore[dataIndex] = decodedData;\r\n    }\r\n\r\n    // create image for the first item\r\n    if (event.itemNumber === 0) {\r\n      this.#generateImage(dataIndex, origin);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get data from an input buffer using a DICOM parser.\r\n   *\r\n   * @param {ArrayBuffer} buffer The input data buffer.\r\n   * @param {string} origin The data origin.\r\n   * @param {number} dataIndex The data index.\r\n   */\r\n  convert(buffer, origin, dataIndex) {\r\n\r\n    this.onloadstart({\r\n      source: origin,\r\n      dataIndex: dataIndex\r\n    });\r\n\r\n    // DICOM parser\r\n    const dicomParser = new DicomParser();\r\n\r\n    if (typeof this.#options.defaultCharacterSet !== 'undefined') {\r\n      dicomParser.setDefaultCharacterSet(this.#options.defaultCharacterSet);\r\n    }\r\n    // parse the buffer\r\n    let warning;\r\n    try {\r\n      dicomParser.parse(buffer);\r\n      // check elements\r\n      const factory = this.#getFactory(dicomParser.getDicomElements());\r\n      warning = factory.checkElements(dicomParser.getDicomElements());\r\n    } catch (error) {\r\n      this.onerror({\r\n        error: error,\r\n        source: origin\r\n      });\r\n      this.onloadend({\r\n        source: origin\r\n      });\r\n      return;\r\n    }\r\n\r\n\r\n    const pixelBuffer = dicomParser.getDicomElements()['7FE00010'].value;\r\n    // help GC: discard pixel buffer from elements\r\n    dicomParser.getDicomElements()['7FE00010'].value = [];\r\n    const syntax = dicomParser.getDicomElements()['00020010'].value[0];\r\n    const algoName = getSyntaxDecompressionName(syntax);\r\n    const needDecompression = (algoName !== null);\r\n\r\n    // store\r\n    this.#dicomParserStore[dataIndex] = dicomParser;\r\n    this.#finalBufferStore[dataIndex] = pixelBuffer[0];\r\n    this.#factoryWarnings[dataIndex] = warning;\r\n\r\n    if (needDecompression) {\r\n      // gather pixel buffer meta data\r\n      const bitsAllocated =\r\n        dicomParser.getDicomElements()['00280100'].value[0];\r\n      const pixelRepresentation =\r\n        dicomParser.getDicomElements()['00280103'].value[0];\r\n      const pixelMeta = {\r\n        bitsAllocated: bitsAllocated,\r\n        isSigned: (pixelRepresentation === 1)\r\n      };\r\n      const columnsElement = dicomParser.getDicomElements()['00280011'];\r\n      const rowsElement = dicomParser.getDicomElements()['00280010'];\r\n      if (typeof columnsElement !== 'undefined' &&\r\n        typeof rowsElement !== 'undefined') {\r\n        pixelMeta.sliceSize = columnsElement.value[0] * rowsElement.value[0];\r\n      }\r\n      const samplesPerPixelElement =\r\n        dicomParser.getDicomElements()['00280002'];\r\n      if (typeof samplesPerPixelElement !== 'undefined') {\r\n        pixelMeta.samplesPerPixel = samplesPerPixelElement.value[0];\r\n      }\r\n      const planarConfigurationElement =\r\n        dicomParser.getDicomElements()['00280006'];\r\n      if (typeof planarConfigurationElement !== 'undefined') {\r\n        pixelMeta.planarConfiguration = planarConfigurationElement.value[0];\r\n      }\r\n\r\n      // number of items\r\n      const numberOfItems = pixelBuffer.length;\r\n\r\n      // setup the decoder (one decoder per all converts)\r\n      if (this.#pixelDecoder === null) {\r\n        this.#pixelDecoder = new PixelBufferDecoder(\r\n          algoName, numberOfItems);\r\n        // callbacks\r\n        // pixelDecoder.ondecodestart: nothing to do\r\n        this.#pixelDecoder.ondecodeditem = (event) => {\r\n          this.#onDecodedItem(event);\r\n          // send onload and onloadend when all items have been decoded\r\n          if (event.itemNumber + 1 === event.numberOfItems) {\r\n            this.onload(event);\r\n            this.onloadend(event);\r\n          }\r\n        };\r\n        // pixelDecoder.ondecoded: nothing to do\r\n        // pixelDecoder.ondecodeend: nothing to do\r\n        this.#pixelDecoder.onerror = this.onerror;\r\n        this.#pixelDecoder.onabort = this.onabort;\r\n      }\r\n\r\n      // launch decode\r\n      for (let i = 0; i < numberOfItems; ++i) {\r\n        this.#pixelDecoder.decode(pixelBuffer[i], pixelMeta,\r\n          {\r\n            itemNumber: i,\r\n            numberOfItems: numberOfItems,\r\n            dataIndex: dataIndex\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      // no decompression\r\n      // send progress\r\n      this.onprogress({\r\n        lengthComputable: true,\r\n        loaded: 100,\r\n        total: 100,\r\n        index: dataIndex,\r\n        source: origin\r\n      });\r\n      // generate image\r\n      this.#generateImage(dataIndex, origin);\r\n      // send load events\r\n      this.onload({\r\n        source: origin\r\n      });\r\n      this.onloadend({\r\n        source: origin\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abort a conversion.\r\n   */\r\n  abort() {\r\n    // abort decoding, will trigger pixelDecoder.onabort\r\n    if (this.#pixelDecoder) {\r\n      this.#pixelDecoder.abort();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n  /**\r\n   * Handle a load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class DicomBufferToView\r\n","import {MultiProgressHandler} from '../utils/progress';\r\nimport {loaderList} from './loaderList';\r\n\r\n/**\r\n * Memory loader.\r\n */\r\nexport class MemoryLoader {\r\n\r\n  /**\r\n   * Input data.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #inputData = null;\r\n\r\n  /**\r\n   * Data loader.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #runningLoader = null;\r\n\r\n  /**\r\n   * Number of loaded data.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #nLoad = 0;\r\n\r\n  /**\r\n   * Number of load end events.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #nLoadend = 0;\r\n\r\n  /**\r\n   * The default character set (optional).\r\n   *\r\n   * @type {string}\r\n   */\r\n  #defaultCharacterSet;\r\n\r\n  /**\r\n   * Get the default character set.\r\n   *\r\n   * @returns {string} The default character set.\r\n   */\r\n  getDefaultCharacterSet() {\r\n    return this.#defaultCharacterSet;\r\n  }\r\n\r\n  /**\r\n   * Set the default character set.\r\n   *\r\n   * @param {string} characterSet The character set.\r\n   */\r\n  setDefaultCharacterSet(characterSet) {\r\n    this.#defaultCharacterSet = characterSet;\r\n  }\r\n\r\n  /**\r\n   * Store the current input.\r\n   *\r\n   * @param {object} data The input data.\r\n   */\r\n  #storeInputData(data) {\r\n    this.#inputData = data;\r\n    // reset counters\r\n    this.#nLoad = 0;\r\n    this.#nLoadend = 0;\r\n    // clear storage\r\n    this.#clearStoredLoader();\r\n  }\r\n\r\n  /**\r\n   * Store the launched loader.\r\n   *\r\n   * @param {object} loader The launched loader.\r\n   */\r\n  #storeLoader(loader) {\r\n    this.#runningLoader = loader;\r\n  }\r\n\r\n  /**\r\n   * Clear the stored loader.\r\n   *\r\n   */\r\n  #clearStoredLoader() {\r\n    this.#runningLoader = null;\r\n  }\r\n\r\n  /**\r\n   * Increment the number of loaded data\r\n   *   and call onload if loaded all data.\r\n   *\r\n   * @param {object} _event The load data event.\r\n   */\r\n  #addLoad = (_event) => {\r\n    this.#nLoad++;\r\n    // call onload when all is loaded\r\n    // (not using the input event since it is not the\r\n    //   general load)\r\n    if (this.#nLoad === this.#inputData.length) {\r\n      this.onload({\r\n        source: this.#inputData\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Increment the counter of load end events\r\n   *   and run callbacks when all done, erroneus or not.\r\n   *\r\n   * @param {object} _event The load end event.\r\n   */\r\n  #addLoadend = (_event) => {\r\n    this.#nLoadend++;\r\n    // call onloadend when all is run\r\n    // (not using the input event since it is not the\r\n    //   general load end)\r\n    if (this.#nLoadend === this.#inputData.length) {\r\n      this.onloadend({\r\n        source: this.#inputData\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Load a list of buffers.\r\n   *\r\n   * @param {Array} data The list of buffers to load.\r\n   */\r\n  load(data) {\r\n    // check input\r\n    if (typeof data === 'undefined' || data.length === 0) {\r\n      return;\r\n    }\r\n    this.#storeInputData(data);\r\n\r\n    // send start event\r\n    this.onloadstart({\r\n      source: data\r\n    });\r\n\r\n    // create prgress handler\r\n    const mproghandler = new MultiProgressHandler(this.onprogress);\r\n    mproghandler.setNToLoad(data.length);\r\n    mproghandler.setNumberOfDimensions(1);\r\n\r\n    // create loaders\r\n    const loaders = [];\r\n    for (let m = 0; m < loaderList.length; ++m) {\r\n      loaders.push(new loaderList[m]());\r\n    }\r\n\r\n    // find an appropriate loader\r\n    let dataElement = data[0];\r\n    let loader = null;\r\n    let foundLoader = false;\r\n    for (let l = 0; l < loaders.length; ++l) {\r\n      loader = loaders[l];\r\n      if (loader.canLoadMemory(dataElement)) {\r\n        foundLoader = true;\r\n        // load options\r\n        loader.setOptions({\r\n          numberOfFiles: data.length,\r\n          defaultCharacterSet: this.getDefaultCharacterSet()\r\n        });\r\n        // set loader callbacks\r\n        // loader.onloadstart: nothing to do\r\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(0);\r\n        loader.onloaditem = this.onloaditem;\r\n        loader.onload = this.#addLoad;\r\n        loader.onloadend = this.#addLoadend;\r\n        loader.onerror = this.onerror;\r\n        loader.onabort = this.onabort;\r\n\r\n        // store loader\r\n        this.#storeLoader(loader);\r\n        // exit\r\n        break;\r\n      }\r\n    }\r\n    if (!foundLoader) {\r\n      throw new Error('No loader found for data: ' + dataElement.filename);\r\n    }\r\n\r\n    // loop on I/O elements\r\n    for (let i = 0; i < data.length; ++i) {\r\n      dataElement = data[i];\r\n      // check loader\r\n      if (!loader.canLoadMemory(dataElement)) {\r\n        throw new Error('Input data of different type: ' +\r\n          dataElement.filename);\r\n      }\r\n      // read\r\n      loader.load(dataElement.data, dataElement.filename, i);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abort a load.\r\n   */\r\n  abort() {\r\n    // abort loader\r\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\r\n      this.#runningLoader.abort();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a load progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event fired\r\n   *   when a file item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle a load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class MemoryLoader\r\n","import {Size} from '../image/size';\r\nimport {Spacing} from '../image/spacing';\r\nimport {Geometry} from '../image/geometry';\r\nimport {Image} from '../image/image';\r\nimport {Point3D} from '../math/point';\r\n\r\n/**\r\n * Create a simple array buffer from an ImageData buffer.\r\n *\r\n * @param {object} imageData The ImageData taken from a context.\r\n * @returns {Uint8Array} The image buffer.\r\n */\r\nfunction imageDataToBuffer(imageData) {\r\n  // remove alpha\r\n  // TODO support passing the full image data\r\n  const dataLen = imageData.data.length;\r\n  const buffer = new Uint8Array((dataLen / 4) * 3);\r\n  let j = 0;\r\n  for (let i = 0; i < dataLen; i += 4) {\r\n    buffer[j] = imageData.data[i];\r\n    buffer[j + 1] = imageData.data[i + 1];\r\n    buffer[j + 2] = imageData.data[i + 2];\r\n    j += 3;\r\n  }\r\n  return buffer;\r\n}\r\n\r\n/**\r\n * Get an image from an input context imageData.\r\n *\r\n * @param {number} width The width of the coresponding image.\r\n * @param {number} height The height of the coresponding image.\r\n * @param {number} sliceIndex The slice index of the imageData.\r\n * @param {object} imageBuffer The image buffer.\r\n * @param {number} numberOfFrames The final number of frames.\r\n * @param {string} imageUid The image UID.\r\n * @returns {object} The corresponding view.\r\n */\r\nfunction getDefaultImage(\r\n  width, height, sliceIndex,\r\n  imageBuffer, numberOfFrames,\r\n  imageUid) {\r\n  // image size\r\n  const imageSize = new Size([width, height, 1]);\r\n  // default spacing\r\n  // TODO: misleading...\r\n  const imageSpacing = new Spacing([1, 1, 1]);\r\n  // default origin\r\n  const origin = new Point3D(0, 0, sliceIndex);\r\n  // create image\r\n  const geometry = new Geometry(origin, imageSize, imageSpacing);\r\n  const image = new Image(geometry, imageBuffer, [imageUid]);\r\n  image.setPhotometricInterpretation('RGB');\r\n  // meta information\r\n  const meta = {};\r\n  meta.BitsStored = 8;\r\n  if (typeof numberOfFrames !== 'undefined') {\r\n    meta.numberOfFiles = numberOfFrames;\r\n  }\r\n  image.setMeta(meta);\r\n  // return\r\n  return image;\r\n}\r\n\r\n/**\r\n * Get data from an input image using a canvas.\r\n *\r\n * @param {HTMLImageElement} domImage The DOM Image,\r\n *   an HTMLImageElement with extra info.\r\n * @param {string|File} origin The data origin.\r\n * @param {number} index The data index.\r\n * @returns {object} A load data event.\r\n */\r\nexport function getViewFromDOMImage(domImage, origin, index) {\r\n  // image size\r\n  const width = domImage.width;\r\n  const height = domImage.height;\r\n\r\n  // draw the image in the canvas in order to get its data\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  const ctx = canvas.getContext('2d');\r\n  ctx.drawImage(domImage, 0, 0);\r\n  // get the image data\r\n  const imageData = ctx.getImageData(0, 0, width, height);\r\n\r\n  // image properties\r\n  const info = {};\r\n  if (typeof origin === 'string') {\r\n    info['origin'] = {value: origin};\r\n  } else {\r\n    info['fileName'] = {value: origin.name};\r\n    info['fileType'] = {value: origin.type};\r\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\r\n  }\r\n  info['imageWidth'] = {value: width};\r\n  info['imageHeight'] = {value: height};\r\n\r\n  const sliceIndex = index ? index : 0;\r\n  info['imageUid'] = {value: sliceIndex};\r\n\r\n  // create view\r\n  const imageBuffer = imageDataToBuffer(imageData);\r\n  const image = getDefaultImage(\r\n    width, height, sliceIndex, imageBuffer, 1, sliceIndex.toString());\r\n\r\n  // return\r\n  return {\r\n    data: {\r\n      image: image,\r\n      info: info\r\n    },\r\n    source: origin\r\n  };\r\n}\r\n\r\n/**\r\n * Get data from an input image using a canvas.\r\n *\r\n * @param {object} video The DOM Video, an HTMLVideoElement with extra info.\r\n * @param {Function} onloaditem On load callback.\r\n * @param {object} onload The function to call once the data is loaded.\r\n * @param {object} onprogress The function to call to report progress.\r\n * @param {object} onloadend The function to call to report load end.\r\n * @param {string|File} origin The data origin.\r\n * @param {number} dataIndex The data index.\r\n */\r\nexport function getViewFromDOMVideo(\r\n  video, onloaditem, onload, onprogress, onloadend,\r\n  origin, dataIndex) {\r\n  // video size\r\n  const width = video.videoWidth;\r\n  const height = video.videoHeight;\r\n\r\n  // default frame rate...\r\n  const frameRate = 30;\r\n  // number of frames\r\n  const numberOfFrames = Math.ceil(video.duration * frameRate);\r\n\r\n  // video properties\r\n  const info = {};\r\n  if (typeof origin === 'string') {\r\n    info['origin'] = {value: origin};\r\n  } else {\r\n    info['fileName'] = {value: origin.name};\r\n    info['fileType'] = {value: origin.type};\r\n    info['fileLastModifiedDate'] = {value: origin.lastModified};\r\n  }\r\n  info['imageWidth'] = {value: width};\r\n  info['imageHeight'] = {value: height};\r\n  info['numberOfFrames'] = {value: numberOfFrames};\r\n  info['imageUid'] = {value: 0};\r\n\r\n  // draw the image in the canvas in order to get its data\r\n  const canvas = document.createElement('canvas');\r\n  canvas.width = width;\r\n  canvas.height = height;\r\n  const ctx = canvas.getContext('2d');\r\n\r\n  // using seeked to loop through all video frames\r\n  video.addEventListener('seeked', onseeked, false);\r\n\r\n  // current frame index\r\n  let frameIndex = 0;\r\n  // video image\r\n  let image = null;\r\n\r\n  /**\r\n   * Draw the context and store it as a frame\r\n   */\r\n  function storeFrame() {\r\n    // send progress\r\n    onprogress({\r\n      lengthComputable: true,\r\n      loaded: frameIndex,\r\n      total: numberOfFrames,\r\n      index: dataIndex,\r\n      source: origin\r\n    });\r\n    // draw image\r\n    ctx.drawImage(video, 0, 0);\r\n    // context to image buffer\r\n    const imgBuffer = imageDataToBuffer(\r\n      ctx.getImageData(0, 0, width, height));\r\n    if (frameIndex === 0) {\r\n      // create view\r\n      image = getDefaultImage(\r\n        width, height, 1, imgBuffer, numberOfFrames, dataIndex.toString());\r\n      // call callback\r\n      onloaditem({\r\n        data: {\r\n          image: image,\r\n          info: info\r\n        },\r\n        source: origin\r\n      });\r\n    } else {\r\n      image.appendFrameBuffer(imgBuffer, frameIndex);\r\n    }\r\n    // increment index\r\n    ++frameIndex;\r\n  }\r\n\r\n  let nextTime = 0;\r\n\r\n  /**\r\n   * Handle seeked event\r\n   *\r\n   * @param {object} event The seeked event.\r\n   */\r\n  function onseeked(event) {\r\n    // store\r\n    storeFrame();\r\n    // set the next time\r\n    // (not using currentTime, it seems to get offseted)\r\n    nextTime += 1 / frameRate;\r\n    if (nextTime <= event.target.duration) {\r\n      this.currentTime = nextTime;\r\n    } else {\r\n      onload({\r\n        source: origin\r\n      });\r\n      onloadend({\r\n        source: origin\r\n      });\r\n      // stop listening\r\n      video.removeEventListener('seeked', onseeked);\r\n    }\r\n  }\r\n\r\n  // trigger the first seek\r\n  video.currentTime = nextTime;\r\n}\r\n","import {DicomDataLoader} from './dicomDataLoader';\r\nimport {JSONTextLoader} from './jsonTextLoader';\r\nimport {MultipartLoader} from './multipartLoader';\r\nimport {RawImageLoader} from './rawImageLoader';\r\nimport {RawVideoLoader} from './rawVideoLoader';\r\nimport {ZipLoader} from './zipLoader';\r\n\r\nexport const loaderList = [\r\n  DicomDataLoader,\r\n  JSONTextLoader,\r\n  MultipartLoader,\r\n  RawImageLoader,\r\n  RawVideoLoader,\r\n  ZipLoader\r\n];\r\n","import {startsWith, getFileExtension} from '../utils/string';\r\nimport {getUrlFromUri} from '../utils/uri';\r\nimport {fileContentTypes} from './filesLoader';\r\nimport {urlContentTypes} from './urlsLoader';\r\nimport {DicomBufferToView} from '../image/dicomBufferToView';\r\n\r\n/**\r\n * DICOM data loader.\r\n */\r\nexport class DicomDataLoader {\r\n\r\n  /**\r\n   * Loader options.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #options = {};\r\n\r\n  /**\r\n   * Loading flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isLoading = false;\r\n\r\n  /**\r\n   * Set the loader options.\r\n   *\r\n   * @param {object} opt The input options.\r\n   */\r\n  setOptions(opt) {\r\n    this.#options = opt;\r\n  }\r\n\r\n  /**\r\n   * Is the load ongoing?\r\n   *\r\n   * @returns {boolean} True if loading.\r\n   */\r\n  isLoading() {\r\n    return this.#isLoading;\r\n  }\r\n\r\n  /**\r\n   * DICOM buffer to View (asynchronous)\r\n   *\r\n   */\r\n  #db2v = new DicomBufferToView();\r\n\r\n  /**\r\n   * Load data.\r\n   *\r\n   * @param {object} buffer The DICOM buffer.\r\n   * @param {string} origin The data origin.\r\n   * @param {number} index The data index.\r\n   */\r\n  load(buffer, origin, index) {\r\n    // setup db2v ony once\r\n    if (!this.#isLoading) {\r\n      // pass options\r\n      this.#db2v.setOptions(this.#options);\r\n      // connect handlers\r\n      this.#db2v.onloadstart = this.onloadstart;\r\n      this.#db2v.onprogress = this.onprogress;\r\n      this.#db2v.onloaditem = this.onloaditem;\r\n      this.#db2v.onload = this.onload;\r\n      this.#db2v.onloadend = (event) => {\r\n        // reset loading flag\r\n        this.#isLoading = false;\r\n        // call listeners\r\n        this.onloadend(event);\r\n      };\r\n      this.#db2v.onerror = (event) => {\r\n        event.source = origin;\r\n        this.onerror(event);\r\n      };\r\n      this.#db2v.onabort = this.onabort;\r\n    }\r\n\r\n    // set loading flag\r\n    this.#isLoading = true;\r\n    // convert\r\n    this.#db2v.convert(buffer, origin, index);\r\n  }\r\n\r\n  /**\r\n   * Abort load.\r\n   */\r\n  abort() {\r\n    // reset loading flag\r\n    this.#isLoading = false;\r\n    // abort conversion, will trigger db2v.onabort\r\n    this.#db2v.abort();\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided file.\r\n   *\r\n   * @param {object} file The file to check.\r\n   * @returns {boolean} True if the file can be loaded.\r\n   */\r\n  canLoadFile(file) {\r\n    const ext = getFileExtension(file.name);\r\n    const hasNoExt = (ext === null);\r\n    const hasDcmExt = (ext === 'dcm');\r\n    return hasNoExt || hasDcmExt;\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided url.\r\n   * True if:\r\n   *  - the url has a 'contentType' and it is 'application/dicom'\r\n   *    (as in wado urls)\r\n   *  - the url has no 'contentType' and no extension or the extension is 'dcm'\r\n   *\r\n   * @param {string} url The url to check.\r\n   * @param {object} [options] Optional url request options.\r\n   * @returns {boolean} True if the url can be loaded.\r\n   */\r\n  canLoadUrl(url, options) {\r\n    // if there are options.requestHeaders, just base check on them\r\n    if (typeof options !== 'undefined' &&\r\n      typeof options.requestHeaders !== 'undefined') {\r\n      // starts with 'application/dicom'\r\n      const isDicom = function (element) {\r\n        return element.name === 'Accept' &&\r\n          startsWith(element.value, 'application/dicom') &&\r\n          element.value[18] !== '+';\r\n      };\r\n      return typeof options.requestHeaders.find(isDicom) !== 'undefined';\r\n    }\r\n\r\n    const urlObjext = getUrlFromUri(url);\r\n    // extension\r\n    const ext = getFileExtension(urlObjext.pathname);\r\n    const hasNoExt = (ext === null);\r\n    const hasDcmExt = (ext === 'dcm');\r\n    // content type (for wado url)\r\n    const contentType = urlObjext.searchParams.get('contentType');\r\n    const hasContentType = contentType !== null &&\r\n      typeof contentType !== 'undefined';\r\n    const hasDicomContentType = (contentType === 'application/dicom');\r\n\r\n    return hasContentType ? hasDicomContentType : (hasNoExt || hasDcmExt);\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided memory object.\r\n   *\r\n   * @param {object} mem The memory object.\r\n   * @returns {boolean} True if the object can be loaded.\r\n   */\r\n  canLoadMemory(mem) {\r\n    if (typeof mem['Content-Type'] !== 'undefined' &&\r\n      mem['Content-Type'] === 'application/dicom') {\r\n      return true;\r\n    }\r\n    if (typeof mem.filename !== 'undefined') {\r\n      return this.canLoadFile({name: mem.filename});\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the file content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'fileContentTypes'.\r\n   */\r\n  loadFileAs() {\r\n    return fileContentTypes.ArrayBuffer;\r\n  }\r\n\r\n  /**\r\n   * Get the url content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'urlContentTypes'.\r\n   */\r\n  loadUrlAs() {\r\n    return urlContentTypes.ArrayBuffer;\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event fired\r\n   *   when a file item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle an load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class DicomDataLoader\r\n","import {startsWith, getFileExtension} from '../utils/string';\r\nimport {getUrlFromUri} from '../utils/uri';\r\nimport {fileContentTypes} from './filesLoader';\r\nimport {urlContentTypes} from './urlsLoader';\r\n\r\n/**\r\n * JSON text loader.\r\n */\r\nexport class JSONTextLoader {\r\n\r\n  /**\r\n   * Loading flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isLoading = false;\r\n\r\n  /**\r\n   * Set the loader options.\r\n   *\r\n   * @param {object} _opt The input options.\r\n   */\r\n  setOptions(_opt) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Is the load ongoing?\r\n   *\r\n   * @returns {boolean} True if loading.\r\n   */\r\n  isLoading() {\r\n    return this.#isLoading;\r\n  }\r\n\r\n  /**\r\n   * Load data.\r\n   *\r\n   * @param {object} text The input text.\r\n   * @param {string} origin The data origin.\r\n   * @param {number} index The data index.\r\n   */\r\n  load(text, origin, index) {\r\n    // set loading flag\r\n    this.#isLoading = true;\r\n    this.onloadstart({\r\n      source: origin\r\n    });\r\n\r\n    try {\r\n      this.onprogress({\r\n        lengthComputable: true,\r\n        loaded: 100,\r\n        total: 100,\r\n        index: index,\r\n        source: origin\r\n      });\r\n      const data = {\r\n        data: text,\r\n        source: origin\r\n      };\r\n      // only expecting one item\r\n      this.onloaditem(data);\r\n      this.onload(data);\r\n    } catch (error) {\r\n      this.onerror({\r\n        error: error,\r\n        source: origin\r\n      });\r\n    } finally {\r\n      // reset loading flag\r\n      this.#isLoading = false;\r\n      this.onloadend({\r\n        source: origin\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abort load: pass to listeners.\r\n   */\r\n  abort() {\r\n    // reset loading flag\r\n    this.#isLoading = false;\r\n    // call listeners\r\n    this.onabort({});\r\n    this.onloadend({});\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided file.\r\n   *\r\n   * @param {object} file The file to check.\r\n   * @returns {boolean} True if the file can be loaded.\r\n   */\r\n  canLoadFile(file) {\r\n    const ext = getFileExtension(file.name);\r\n    return (ext === 'json');\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided url.\r\n   *\r\n   * @param {string} url The url to check.\r\n   * @param {object} [options] Optional url request options.\r\n   * @returns {boolean} True if the url can be loaded.\r\n   */\r\n  canLoadUrl(url, options) {\r\n    // if there are options.requestHeader, just base check on them\r\n    if (typeof options !== 'undefined' &&\r\n      typeof options.requestHeaders !== 'undefined') {\r\n      // starts with 'application/json' or 'application/dicom+json\r\n      const isJson = function (element) {\r\n        return element.name === 'Accept' &&\r\n          startsWith(element.value, 'application/json') &&\r\n          startsWith(element.value, 'application/dicom+json');\r\n      };\r\n      return typeof options.requestHeaders.find(isJson) !== 'undefined';\r\n    }\r\n\r\n    const urlObjext = getUrlFromUri(url);\r\n    const ext = getFileExtension(urlObjext.pathname);\r\n    return (ext === 'json');\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided memory object.\r\n   *\r\n   * @param {object} mem The memory object.\r\n   * @returns {boolean} True if the object can be loaded.\r\n   */\r\n  canLoadMemory(mem) {\r\n    if (typeof mem['Content-Type'] !== 'undefined') {\r\n      if (mem['Content-Type'].includes('json')) {\r\n        return true;\r\n      }\r\n    }\r\n    if (typeof mem.filename !== 'undefined') {\r\n      return this.canLoadFile({name: mem.filename});\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the file content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'fileContentTypes'.\r\n   */\r\n  loadFileAs() {\r\n    return fileContentTypes.Text;\r\n  }\r\n\r\n  /**\r\n   * Get the url content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'urlContentTypes'.\r\n   */\r\n  loadUrlAs() {\r\n    return urlContentTypes.Text;\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event fired\r\n   *   when a file item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle an load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class JSONTextLoader\r\n","import {startsWith} from '../utils/string';\r\nimport {parseMultipart} from '../utils/array';\r\nimport {MemoryLoader} from './memoryLoader';\r\nimport {fileContentTypes} from './filesLoader';\r\nimport {urlContentTypes} from './urlsLoader';\r\n\r\n/**\r\n * Multipart data loader.\r\n */\r\nexport class MultipartLoader {\r\n\r\n  /**\r\n   * Loading flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isLoading = false;\r\n\r\n  /**\r\n   * Set the loader options.\r\n   *\r\n   * @param {object} _opt The input options.\r\n   */\r\n  setOptions(_opt) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Is the load ongoing?\r\n   *\r\n   * @returns {boolean} True if loading.\r\n   */\r\n  isLoading() {\r\n    return this.#isLoading;\r\n  }\r\n\r\n  /**\r\n   * Load data.\r\n   *\r\n   * @param {object} buffer The DICOM buffer.\r\n   * @param {string} origin The data origin.\r\n   * @param {number} index The data index.\r\n   */\r\n  load(buffer, origin, index) {\r\n    // send start event\r\n    this.onloadstart({\r\n      source: origin\r\n    });\r\n    // set loading flag\r\n    this.#isLoading = true;\r\n\r\n    const memoryIO = new MemoryLoader();\r\n    // memoryIO.onloadstart: nothing to do\r\n    memoryIO.onprogress = (progress) => {\r\n      // add 50% to take into account the un-Multipartping\r\n      progress.loaded = 50 + progress.loaded / 2;\r\n      // set data index\r\n      progress.index = index;\r\n      this.onprogress(progress);\r\n    };\r\n    memoryIO.onloaditem = this.onloaditem;\r\n    memoryIO.onload = this.onload;\r\n    memoryIO.onloadend = (event) => {\r\n      // reset loading flag\r\n      this.#isLoading = false;\r\n      // call listeners\r\n      this.onloadend(event);\r\n    };\r\n    memoryIO.onerror = this.onerror;\r\n    memoryIO.onabort = this.onabort;\r\n    // launch\r\n    memoryIO.load(parseMultipart(buffer));\r\n  }\r\n\r\n  /**\r\n   * Abort load: pass to listeners.\r\n   */\r\n  abort() {\r\n    // reset loading flag\r\n    this.#isLoading = false;\r\n    // call listeners\r\n    this.onabort({});\r\n    this.onloadend({});\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided file.\r\n   *\r\n   * @param {object} _file The file to check.\r\n   * @returns {boolean} True if the file can be loaded.\r\n   */\r\n  canLoadFile(_file) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided url.\r\n   *\r\n   * @param {string} url The url to check.\r\n   * @param {object} [options] The url request options.\r\n   * @returns {boolean} True if the url can be loaded.\r\n   */\r\n  canLoadUrl(url, options) {\r\n    // if there are options.requestHeaders, just base check on them\r\n    if (typeof options !== 'undefined' &&\r\n      typeof options.requestHeaders !== 'undefined') {\r\n      const isMultipart = function (element) {\r\n        return element.name === 'Accept' &&\r\n          startsWith(element.value, 'multipart/related');\r\n      };\r\n      return typeof options.requestHeaders.find(isMultipart) !== 'undefined';\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided memory object.\r\n   *\r\n   * @param {object} _mem The memory object.\r\n   * @returns {boolean} True if the url can be loaded.\r\n   */\r\n  canLoadMemory(_mem) {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the file content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'fileContentTypes'.\r\n   */\r\n  loadFileAs() {\r\n    return fileContentTypes.ArrayBuffer;\r\n  }\r\n\r\n  /**\r\n   * Get the url content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'urlContentTypes'.\r\n   */\r\n  loadUrlAs() {\r\n    return urlContentTypes.ArrayBuffer;\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a load progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event fired\r\n   *   when a file item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle an load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class MultipartLoader\r\n","import {startsWith, getFileExtension} from '../utils/string';\r\nimport {getUrlFromUri} from '../utils/uri';\r\nimport {getViewFromDOMImage} from '../image/domReader';\r\nimport {fileContentTypes} from './filesLoader';\r\nimport {urlContentTypes} from './urlsLoader';\r\n\r\n/**\r\n * Raw image loader.\r\n */\r\nexport class RawImageLoader {\r\n\r\n  /**\r\n   * if abort is triggered, all image.onload callbacks have to be cancelled\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #aborted = false;\r\n\r\n  /**\r\n   * Set the loader options.\r\n   *\r\n   * @param {object} _opt The input options.\r\n   */\r\n  setOptions(_opt) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Is the load ongoing? TODO...\r\n   *\r\n   * @returns {boolean} True if loading.\r\n   */\r\n  isLoading() {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Create a Data URI from an HTTP request response.\r\n   *\r\n   * @param {ArrayBuffer} response The HTTP request response.\r\n   * @param {string} dataType The data type.\r\n   * @returns {string} The data URI.\r\n   */\r\n  #createDataUri(response, dataType) {\r\n    // image type\r\n    let imageType = dataType;\r\n    if (!imageType || imageType === 'jpg') {\r\n      imageType = 'jpeg';\r\n    }\r\n    // create uri\r\n    const file = new Blob([response], {type: 'image/' + imageType});\r\n    return window.URL.createObjectURL(file);\r\n  }\r\n\r\n  /**\r\n   * Load data.\r\n   *\r\n   * @param {ArrayBuffer|string} buffer The read data.\r\n   * @param {string|File} origin The data origin.\r\n   * @param {number} index The data index.\r\n   */\r\n  load(buffer, origin, index) {\r\n    this.#aborted = false;\r\n    // create a DOM image\r\n    const image = new Image();\r\n    // triggered by ctx.drawImage\r\n    image.onload = (/*event*/) => {\r\n      try {\r\n        if (!this.#aborted) {\r\n          this.onprogress({\r\n            lengthComputable: true,\r\n            loaded: 100,\r\n            total: 100,\r\n            index: index,\r\n            source: origin\r\n          });\r\n          const data = getViewFromDOMImage(image, origin, index);\r\n          // only expecting one item\r\n          this.onloaditem(data);\r\n          this.onload(data);\r\n        }\r\n      } catch (error) {\r\n        this.onerror({\r\n          error: error,\r\n          source: origin\r\n        });\r\n      } finally {\r\n        this.onloadend({\r\n          source: origin\r\n        });\r\n      }\r\n    };\r\n    // storing values to pass them on\r\n    if (typeof buffer === 'string') {\r\n      // file case\r\n      image.src = buffer;\r\n    } else if (typeof origin === 'string') {\r\n      // url case\r\n      const ext = origin.split('.').pop().toLowerCase();\r\n      image.src = this.#createDataUri(buffer, ext);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abort load.\r\n   */\r\n  abort() {\r\n    this.#aborted = true;\r\n    this.onabort({});\r\n    this.onloadend({});\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided file.\r\n   *\r\n   * @param {object} file The file to check.\r\n   * @returns {boolean} True if the file can be loaded.\r\n   */\r\n  canLoadFile(file) {\r\n    return (typeof file.type !== 'undefined' &&\r\n      file.type.match('image.*'));\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided url.\r\n   *\r\n   * @param {string} url The url to check.\r\n   * @param {object} [options] Optional url request options.\r\n   * @returns {boolean} True if the url can be loaded.\r\n   */\r\n  canLoadUrl(url, options) {\r\n    // if there are options.requestHeaders, just base check on them\r\n    if (typeof options !== 'undefined' &&\r\n      typeof options.requestHeaders !== 'undefined') {\r\n      // starts with 'image/'\r\n      const isImage = function (element) {\r\n        return element.name === 'Accept' &&\r\n          startsWith(element.value, 'image/');\r\n      };\r\n      return typeof options.requestHeaders.find(isImage) !== 'undefined';\r\n    }\r\n\r\n    const urlObjext = getUrlFromUri(url);\r\n    // extension\r\n    const ext = getFileExtension(urlObjext.pathname);\r\n    const hasImageExt = (ext === 'jpeg') || (ext === 'jpg') ||\r\n      (ext === 'png') || (ext === 'gif');\r\n    // content type (for wado url)\r\n    const contentType = urlObjext.searchParams.get('contentType');\r\n    const hasContentType = contentType !== null &&\r\n      typeof contentType !== 'undefined';\r\n    const hasImageContentType = (contentType === 'image/jpeg') ||\r\n      (contentType === 'image/png') ||\r\n      (contentType === 'image/gif');\r\n\r\n    return hasContentType ? hasImageContentType : hasImageExt;\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided memory object.\r\n   *\r\n   * @param {object} mem The memory object.\r\n   * @returns {boolean} True if the object can be loaded.\r\n   */\r\n  canLoadMemory(mem) {\r\n    if (typeof mem.filename !== 'undefined') {\r\n      return this.canLoadFile({name: mem.filename});\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the file content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'fileContentTypes'.\r\n   */\r\n  loadFileAs() {\r\n    return fileContentTypes.DataURL;\r\n  }\r\n\r\n  /**\r\n   * Get the url content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'urlContentTypes'.\r\n   */\r\n  loadUrlAs() {\r\n    return urlContentTypes.ArrayBuffer;\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event fired\r\n   *   when a file item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle an load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class RawImageLoader","import {startsWith, getFileExtension} from '../utils/string';\r\nimport {getUrlFromUri} from '../utils/uri';\r\nimport {getViewFromDOMVideo} from '../image/domReader';\r\nimport {fileContentTypes} from './filesLoader';\r\nimport {urlContentTypes} from './urlsLoader';\r\n\r\n/**\r\n * Raw video loader.\r\n * url example (cors enabled):\r\n *   https://raw.githubusercontent.com/clappr/clappr/master/test/fixtures/SampleVideo_360x240_1mb.mp4\r\n */\r\nexport class RawVideoLoader {\r\n\r\n  /**\r\n   * Set the loader options.\r\n   *\r\n   * @param {object} _opt The input options.\r\n   */\r\n  setOptions(_opt) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Is the load ongoing? TODO...\r\n   *\r\n   * @returns {boolean} True if loading.\r\n   */\r\n  isLoading() {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Create a Data URI from an HTTP request response.\r\n   *\r\n   * @param {object} response The HTTP request response.\r\n   * @param {string} dataType The data type.\r\n   * @returns {string} The data URI.\r\n   */\r\n  #createDataUri(response, dataType) {\r\n    // image data as string\r\n    const bytes = new Uint8Array(response);\r\n    let videoDataStr = '';\r\n    for (let i = 0; i < bytes.byteLength; ++i) {\r\n      videoDataStr += String.fromCharCode(bytes[i]);\r\n    }\r\n    // create uri\r\n    const uri = 'data:video/' + dataType +\r\n      ';base64,' + window.btoa(videoDataStr);\r\n    return uri;\r\n  }\r\n\r\n  /**\r\n   * Internal Data URI load.\r\n   *\r\n   * @param {object} buffer The read data.\r\n   * @param {string} origin The data origin.\r\n   * @param {number} index The data index.\r\n   */\r\n  load(buffer, origin, index) {\r\n    // create a DOM video\r\n    const video = document.createElement('video');\r\n    if (typeof origin === 'string') {\r\n      // url case\r\n      const ext = origin.split('.').pop().toLowerCase();\r\n      video.src = this.#createDataUri(buffer, ext);\r\n    } else {\r\n      video.src = buffer;\r\n    }\r\n    // onload handler\r\n    video.onloadedmetadata = (event) => {\r\n      try {\r\n        getViewFromDOMVideo(event.target,\r\n          this.onloaditem, this.onload,\r\n          this.onprogress, this.onloadend,\r\n          origin, index);\r\n      } catch (error) {\r\n        this.onerror({\r\n          error: error,\r\n          source: origin\r\n        });\r\n        this.onloadend({\r\n          source: origin\r\n        });\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Abort load.\r\n   */\r\n  abort() {\r\n    this.onabort({});\r\n    this.onloadend({});\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided file.\r\n   *\r\n   * @param {object} file The file to check.\r\n   * @returns {boolean} True if the file can be loaded.\r\n   */\r\n  canLoadFile(file) {\r\n    return (typeof file.type !== 'undefined' &&\r\n      file.type.match('video.*'));\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided url.\r\n   *\r\n   * @param {string} url The url to check.\r\n   * @param {object} [options] Optional url request options.\r\n   * @returns {boolean} True if the url can be loaded.\r\n   */\r\n  canLoadUrl(url, options) {\r\n    // if there are options.requestHeaders, just base check on them\r\n    if (typeof options !== 'undefined' &&\r\n      typeof options.requestHeaders !== 'undefined') {\r\n      // starts with 'video/'\r\n      const isVideo = function (element) {\r\n        return element.name === 'Accept' &&\r\n          startsWith(element.value, 'video/');\r\n      };\r\n      return typeof options.requestHeaders.find(isVideo) !== 'undefined';\r\n    }\r\n\r\n    const urlObjext = getUrlFromUri(url);\r\n    const ext = getFileExtension(urlObjext.pathname);\r\n    return (ext === 'mp4') ||\r\n      (ext === 'ogg') ||\r\n      (ext === 'webm');\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided memory object.\r\n   *\r\n   * @param {object} mem The memory object.\r\n   * @returns {boolean} True if the object can be loaded.\r\n   */\r\n  canLoadMemory(mem) {\r\n    if (typeof mem.filename !== 'undefined') {\r\n      return this.canLoadFile({name: mem.filename});\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the file content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'fileContentTypes'.\r\n   */\r\n  loadFileAs() {\r\n    return fileContentTypes.DataURL;\r\n  }\r\n\r\n  /**\r\n   * Get the url content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'urlContentTypes'.\r\n   */\r\n  loadUrlAs() {\r\n    return urlContentTypes.ArrayBuffer;\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event fired\r\n   * when a file item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   * when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle an load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class RawVideoLoader\r\n","import {startsWith, getFileExtension} from '../utils/string';\r\nimport {getUrlFromUri} from '../utils/uri';\r\nimport {fileContentTypes} from './filesLoader';\r\nimport {urlContentTypes} from './urlsLoader';\r\nimport {MemoryLoader} from './memoryLoader';\r\n\r\n/**\r\n * The zip library.\r\n *\r\n * @external JSZip\r\n * @see https://github.com/Stuk/jszip\r\n */\r\nimport JSZip from 'jszip';\r\n\r\n/**\r\n * ZIP data loader.\r\n */\r\nexport class ZipLoader {\r\n\r\n  /**\r\n   * Loading flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isLoading = false;\r\n\r\n  /**\r\n   * Set the loader options.\r\n   *\r\n   * @param {object} _opt The input options.\r\n   */\r\n  setOptions(_opt) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Is the load ongoing?\r\n   *\r\n   * @returns {boolean} True if loading.\r\n   */\r\n  isLoading() {\r\n    return this.#isLoading;\r\n  }\r\n\r\n  #filename = '';\r\n  #files = [];\r\n  #zobjs = null;\r\n\r\n  /**\r\n   * JSZip.async callback\r\n   *\r\n   * @param {ArrayBuffer} content unzipped file image\r\n   * @param {object} origin The origin of the file.\r\n   * @param {number} index The data index.\r\n   */\r\n  #zipAsyncCallback(content, origin, index) {\r\n    this.#files.push({filename: this.#filename, data: content});\r\n\r\n    // sent un-ziped progress with the data index\r\n    // (max 50% to take into account the memory loading)\r\n    const unzipPercent = this.#files.length * 100 / this.#zobjs.length;\r\n    this.onprogress({\r\n      lengthComputable: true,\r\n      loaded: (unzipPercent / 2),\r\n      total: 100,\r\n      index: index,\r\n      item: {\r\n        loaded: unzipPercent,\r\n        total: 100,\r\n        source: origin\r\n      }\r\n    });\r\n\r\n    // recursively call until we have all the files\r\n    if (this.#files.length < this.#zobjs.length) {\r\n      const num = this.#files.length;\r\n      this.#filename = this.#zobjs[num].name;\r\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\r\n        this.#zipAsyncCallback(content, origin, index);\r\n      });\r\n    } else {\r\n      const memoryIO = new MemoryLoader();\r\n      // memoryIO.onloadstart: nothing to do\r\n      memoryIO.onprogress = (progress) => {\r\n        // add 50% to take into account the un-zipping\r\n        progress.loaded = 50 + progress.loaded / 2;\r\n        // set data index\r\n        progress.index = index;\r\n        this.onprogress(progress);\r\n      };\r\n      memoryIO.onloaditem = this.onloaditem;\r\n      memoryIO.onload = this.onload;\r\n      memoryIO.onloadend = (event) => {\r\n        // reset loading flag\r\n        this.#isLoading = false;\r\n        // call listeners\r\n        this.onloadend(event);\r\n      };\r\n      memoryIO.onerror = this.onerror;\r\n      memoryIO.onabort = this.onabort;\r\n      // launch\r\n      memoryIO.load(this.#files);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load data.\r\n   *\r\n   * @param {object} buffer The DICOM buffer.\r\n   * @param {string} origin The data origin.\r\n   * @param {number} index The data index.\r\n   */\r\n  load(buffer, origin, index) {\r\n    // send start event\r\n    this.onloadstart({\r\n      source: origin\r\n    });\r\n    // set loading flag\r\n    this.#isLoading = true;\r\n\r\n    JSZip.loadAsync(buffer).then((zip) => {\r\n      this.#files = [];\r\n      this.#zobjs = zip.file(/.*\\.dcm/);\r\n      // recursively load zip files into the files array\r\n      const num = this.#files.length;\r\n      this.#filename = this.#zobjs[num].name;\r\n      this.#zobjs[num].async('arrayBuffer').then((content) => {\r\n        this.#zipAsyncCallback(content, origin, index);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Abort load: pass to listeners.\r\n   */\r\n  abort() {\r\n    // reset loading flag\r\n    this.#isLoading = false;\r\n    // call listeners\r\n    this.onabort({});\r\n    this.onloadend({});\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided file.\r\n   *\r\n   * @param {object} file The file to check.\r\n   * @returns {boolean} True if the file can be loaded.\r\n   */\r\n  canLoadFile(file) {\r\n    const ext = getFileExtension(file.name);\r\n    return (ext === 'zip');\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided url.\r\n   *\r\n   * @param {string} url The url to check.\r\n   * @param {object} [options] Optional url request options.\r\n   * @returns {boolean} True if the url can be loaded.\r\n   */\r\n  canLoadUrl(url, options) {\r\n    // if there are options.requestHeaders, just base check on them\r\n    if (typeof options !== 'undefined' &&\r\n      typeof options.requestHeaders !== 'undefined') {\r\n      // starts with 'application/zip'\r\n      const isZip = function (element) {\r\n        return element.name === 'Accept' &&\r\n          startsWith(element.value, 'application/zip');\r\n      };\r\n      return typeof options.requestHeaders.find(isZip) !== 'undefined';\r\n    }\r\n\r\n    const urlObjext = getUrlFromUri(url);\r\n    const ext = getFileExtension(urlObjext.pathname);\r\n    return (ext === 'zip');\r\n  }\r\n\r\n  /**\r\n   * Check if the loader can load the provided memory object.\r\n   *\r\n   * @param {object} mem The memory object.\r\n   * @returns {boolean} True if the object can be loaded.\r\n   */\r\n  canLoadMemory(mem) {\r\n    if (typeof mem['Content-Type'] !== 'undefined') {\r\n      if (mem['Content-Type'].includes('zip')) {\r\n        return true;\r\n      }\r\n    }\r\n    if (typeof mem.filename !== 'undefined') {\r\n      return this.canLoadFile({name: mem.filename});\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Get the file content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'fileContentTypes'.\r\n   */\r\n  loadFileAs() {\r\n    return fileContentTypes.ArrayBuffer;\r\n  }\r\n\r\n  /**\r\n   * Get the url content type needed by the loader.\r\n   *\r\n   * @returns {number} One of the 'urlContentTypes'.\r\n   */\r\n  loadUrlAs() {\r\n    return urlContentTypes.ArrayBuffer;\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a load progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event fired\r\n   *   when a file item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle an load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class DicomDataLoader\r\n","import {MultiProgressHandler} from '../utils/progress';\r\nimport {loaderList} from './loaderList';\r\n\r\n// file content types\r\nexport const fileContentTypes = {\r\n  Text: 0,\r\n  ArrayBuffer: 1,\r\n  DataURL: 2\r\n};\r\n\r\n/**\r\n * Files loader.\r\n */\r\nexport class FilesLoader {\r\n\r\n  /**\r\n   * Input data.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #inputData = null;\r\n\r\n  /**\r\n   * Array of launched file readers.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #readers = [];\r\n\r\n  /**\r\n   * Data loader.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #runningLoader = null;\r\n\r\n  /**\r\n   * Number of loaded data.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #nLoad = 0;\r\n\r\n  /**\r\n   * Number of load end events.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #nLoadend = 0;\r\n\r\n  /**\r\n   * The default character set (optional).\r\n   *\r\n   * @type {string}\r\n   */\r\n  #defaultCharacterSet;\r\n\r\n  /**\r\n   * Get the default character set.\r\n   *\r\n   * @returns {string} The default character set.\r\n   */\r\n  getDefaultCharacterSet() {\r\n    return this.#defaultCharacterSet;\r\n  }\r\n\r\n  /**\r\n   * Set the default character set.\r\n   *\r\n   * @param {string} characterSet The character set.\r\n   */\r\n  setDefaultCharacterSet(characterSet) {\r\n    this.#defaultCharacterSet = characterSet;\r\n  }\r\n\r\n  /**\r\n   * Store the current input.\r\n   *\r\n   * @param {object} data The input data.\r\n   */\r\n  #storeInputData(data) {\r\n    this.#inputData = data;\r\n    // reset counters\r\n    this.#nLoad = 0;\r\n    this.#nLoadend = 0;\r\n    // clear storage\r\n    this.#clearStoredReaders();\r\n    this.#clearStoredLoader();\r\n  }\r\n\r\n  /**\r\n   * Store a launched reader.\r\n   *\r\n   * @param {object} reader The launched reader.\r\n   */\r\n  #storeReader(reader) {\r\n    this.#readers.push(reader);\r\n  }\r\n\r\n  /**\r\n   * Clear the stored readers.\r\n   *\r\n   */\r\n  #clearStoredReaders() {\r\n    this.#readers = [];\r\n  }\r\n\r\n  /**\r\n   * Store the launched loader.\r\n   *\r\n   * @param {object} loader The launched loader.\r\n   */\r\n  #storeLoader(loader) {\r\n    this.#runningLoader = loader;\r\n  }\r\n\r\n  /**\r\n   * Clear the stored loader.\r\n   *\r\n   */\r\n  #clearStoredLoader() {\r\n    this.#runningLoader = null;\r\n  }\r\n\r\n  /**\r\n   * Increment the number of loaded data\r\n   *   and call onload if loaded all data.\r\n   *\r\n   * @param {object} _event The load data event.\r\n   */\r\n  #addLoad = (_event) => {\r\n    this.#nLoad++;\r\n    // call onload when all is loaded\r\n    // (not using the input event since it is not the\r\n    //   general load)\r\n    if (this.#nLoad === this.#inputData.length) {\r\n      this.onload({\r\n        source: this.#inputData\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Increment the counter of load end events\r\n   *   and run callbacks when all done, erroneus or not.\r\n   *\r\n   * @param {object} _event The load end event.\r\n   */\r\n  #addLoadend = (_event) => {\r\n    this.#nLoadend++;\r\n    // call onloadend when all is run\r\n    // (not using the input event since it is not the\r\n    //   general load end)\r\n    // x2 to count for reader + load\r\n    if (this.#nLoadend === 2 * this.#inputData.length) {\r\n      this.onloadend({\r\n        source: this.#inputData\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @callback eventFn\r\n   * @param {object} event The event.\r\n   */\r\n\r\n  /**\r\n   * Augment a callback event with a srouce.\r\n   *\r\n   * @param {object} callback The callback to augment its event.\r\n   * @param {object} source The source to add to the event.\r\n   * @returns {eventFn} The augmented callback.\r\n   */\r\n  #augmentCallbackEvent(callback, source) {\r\n    return (event) => {\r\n      event.source = source;\r\n      callback(event);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Get a load handler for a data element.\r\n   *\r\n   * @param {object} loader The associated loader.\r\n   * @param {object} dataElement The data element.\r\n   * @param {number} i The index of the element.\r\n   * @returns {eventFn} A load handler.\r\n   */\r\n  #getLoadHandler(loader, dataElement, i) {\r\n    return (event) => {\r\n      loader.load(event.target.result, dataElement, i);\r\n    };\r\n  }\r\n\r\n\r\n  /**\r\n   * Load a list of files.\r\n   *\r\n   * @param {Array} data The list of files to load.\r\n   */\r\n  load(data) {\r\n    // check input\r\n    if (typeof data === 'undefined' || data.length === 0) {\r\n      return;\r\n    }\r\n    this.#storeInputData(data);\r\n\r\n    // send start event\r\n    this.onloadstart({\r\n      source: data\r\n    });\r\n\r\n    // create prgress handler\r\n    const mproghandler = new MultiProgressHandler(this.onprogress);\r\n    mproghandler.setNToLoad(data.length);\r\n\r\n    // create loaders\r\n    const loaders = [];\r\n    for (let m = 0; m < loaderList.length; ++m) {\r\n      loaders.push(new loaderList[m]());\r\n    }\r\n\r\n    // find an appropriate loader\r\n    let dataElement = data[0];\r\n    let loader = null;\r\n    let foundLoader = false;\r\n    for (let l = 0; l < loaders.length; ++l) {\r\n      loader = loaders[l];\r\n      if (loader.canLoadFile(dataElement)) {\r\n        foundLoader = true;\r\n        // load options\r\n        loader.setOptions({\r\n          numberOfFiles: data.length,\r\n          defaultCharacterSet: this.getDefaultCharacterSet()\r\n        });\r\n        // set loader callbacks\r\n        // loader.onloadstart: nothing to do\r\n        loader.onprogress = mproghandler.getUndefinedMonoProgressHandler(1);\r\n        loader.onloaditem = this.onloaditem;\r\n        loader.onload = this.#addLoad;\r\n        loader.onloadend = this.#addLoadend;\r\n        loader.onerror = this.onerror;\r\n        loader.onabort = this.onabort;\r\n\r\n        // store loader\r\n        this.#storeLoader(loader);\r\n        // exit\r\n        break;\r\n      }\r\n    }\r\n    if (!foundLoader) {\r\n      throw new Error('No loader found for file: ' + dataElement.name);\r\n    }\r\n\r\n    // loop on I/O elements\r\n    for (let i = 0; i < data.length; ++i) {\r\n      dataElement = data[i];\r\n\r\n      // check loader\r\n      if (!loader.canLoadFile(dataElement)) {\r\n        throw new Error('Input file of different type: ' + dataElement);\r\n      }\r\n\r\n      /**\r\n       * The file reader.\r\n       *\r\n       * @external FileReader\r\n       * @see https://developer.mozilla.org/en-US/docs/Web/API/FileReader\r\n       */\r\n      const reader = new FileReader();\r\n      // store reader\r\n      this.#storeReader(reader);\r\n\r\n      // set reader callbacks\r\n      // reader.onloadstart: nothing to do\r\n      reader.onprogress = this.#augmentCallbackEvent(\r\n        mproghandler.getMonoProgressHandler(i, 0), dataElement);\r\n      reader.onload = this.#getLoadHandler(loader, dataElement, i);\r\n      reader.onloadend = this.#addLoadend;\r\n      reader.onerror = this.#augmentCallbackEvent(this.onerror, dataElement);\r\n      reader.onabort = this.#augmentCallbackEvent(this.onabort, dataElement);\r\n      // read\r\n      if (loader.loadFileAs() === fileContentTypes.Text) {\r\n        reader.readAsText(dataElement);\r\n      } else if (loader.loadFileAs() === fileContentTypes.DataURL) {\r\n        reader.readAsDataURL(dataElement);\r\n      } else if (loader.loadFileAs() === fileContentTypes.ArrayBuffer) {\r\n        reader.readAsArrayBuffer(dataElement);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Abort a load.\r\n   */\r\n  abort() {\r\n    // abort readers\r\n    for (let i = 0; i < this.#readers.length; ++i) {\r\n      // 0: EMPTY, 1: LOADING, 2: DONE\r\n      if (this.#readers[i].readyState === 1) {\r\n        this.#readers[i].abort();\r\n      }\r\n    }\r\n    // abort loader\r\n    if (this.#runningLoader && this.#runningLoader.isLoading()) {\r\n      this.#runningLoader.abort();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a load progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load item event fired\r\n   *   when a file item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle a load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class FilesLoader\r\n","import {FilesLoader} from '../io/filesLoader';\r\nimport {MemoryLoader} from '../io/memoryLoader';\r\nimport {UrlsLoader} from '../io/urlsLoader';\r\n\r\n/**\r\n * Load controller.\r\n */\r\nexport class LoadController {\r\n\r\n  /**\r\n   * The default character set.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #defaultCharacterSet;\r\n\r\n  /**\r\n   * List of current loaders.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #currentLoaders = {};\r\n\r\n  /**\r\n   * load counter.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #counter = -1;\r\n\r\n  /**\r\n   * @param {string} defaultCharacterSet The default character set.\r\n   */\r\n  constructor(defaultCharacterSet) {\r\n    this.#defaultCharacterSet = defaultCharacterSet;\r\n  }\r\n\r\n  /**\r\n   * Get the next load id.\r\n   *\r\n   * @returns {number} The next id.\r\n   */\r\n  #getNextLoadId() {\r\n    ++this.#counter;\r\n    return this.#counter;\r\n  }\r\n\r\n  /**\r\n   * Load a list of files. Can be image files or a state file.\r\n   *\r\n   * @param {File[]} files The list of files to load.\r\n   */\r\n  loadFiles(files) {\r\n    // has been checked for emptiness.\r\n    const ext = files[0].name.split('.').pop().toLowerCase();\r\n    if (ext === 'json') {\r\n      this.#loadStateFile(files[0]);\r\n    } else {\r\n      this.#loadImageFiles(files);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load a list of URLs. Can be image files or a state file.\r\n   *\r\n   * @param {string[]} urls The list of urls to load.\r\n   * @param {object} [options] The load options:\r\n   * - requestHeaders: an array of {name, value} to use as request headers.\r\n   * - withCredentials: credentials flag to pass to the request.\r\n   */\r\n  loadURLs(urls, options) {\r\n    // has been checked for emptiness.\r\n    const ext = urls[0].split('.').pop().toLowerCase();\r\n    if (ext === 'json') {\r\n      this.#loadStateUrl(urls[0], options);\r\n    } else {\r\n      this.#loadImageUrls(urls, options);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load a list of ArrayBuffers.\r\n   *\r\n   * @param {Array} data The list of ArrayBuffers to load\r\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\r\n   */\r\n  loadImageObject(data) {\r\n    // create IO\r\n    const memoryIO = new MemoryLoader();\r\n    // load data\r\n    this.#loadData(data, memoryIO, 'image');\r\n  }\r\n\r\n  /**\r\n   * Abort the current loaders.\r\n   */\r\n  abort() {\r\n    const keys = Object.keys(this.#currentLoaders);\r\n    for (let i = 0; i < keys.length; ++i) {\r\n      this.#currentLoaders[i].loader.abort();\r\n      delete this.#currentLoaders[i];\r\n    }\r\n  }\r\n\r\n  // private ----------------------------------------------------------------\r\n\r\n  /**\r\n   * Load a list of image files.\r\n   *\r\n   * @param {File[]} files The list of image files to load.\r\n   */\r\n  #loadImageFiles(files) {\r\n    // create IO\r\n    const fileIO = new FilesLoader();\r\n    fileIO.setDefaultCharacterSet(this.#defaultCharacterSet);\r\n    // load data\r\n    this.#loadData(files, fileIO, 'image');\r\n  }\r\n\r\n  /**\r\n   * Load a list of image URLs.\r\n   *\r\n   * @param {string[]} urls The list of urls to load.\r\n   * @param {object} [options] The load options:\r\n   * - requestHeaders: an array of {name, value} to use as request headers.\r\n   * - withCredentials: credentials flag to pass to the request.\r\n   */\r\n  #loadImageUrls(urls, options) {\r\n    // create IO\r\n    const urlIO = new UrlsLoader();\r\n    urlIO.setDefaultCharacterSet(this.#defaultCharacterSet);\r\n    // load data\r\n    this.#loadData(urls, urlIO, 'image', options);\r\n  }\r\n\r\n  /**\r\n   * Load a State file.\r\n   *\r\n   * @param {File} file The state file to load.\r\n   */\r\n  #loadStateFile(file) {\r\n    // create IO\r\n    const fileIO = new FilesLoader();\r\n    // load data\r\n    this.#loadData([file], fileIO, 'state');\r\n  }\r\n\r\n  /**\r\n   * Load a State url.\r\n   *\r\n   * @param {string} url The state url to load.\r\n   * @param {object} [options] The load options:\r\n   * - requestHeaders: an array of {name, value} to use as request headers.\r\n   * - withCredentials: credentials flag to pass to the request.\r\n   */\r\n  #loadStateUrl(url, options) {\r\n    // create IO\r\n    const urlIO = new UrlsLoader();\r\n    // load data\r\n    this.#loadData([url], urlIO, 'state', options);\r\n  }\r\n\r\n  /**\r\n   * Load a list of data.\r\n   *\r\n   * @param {string[]|File[]|Array} data Array of data to load.\r\n   * @param {object} loader The data loader.\r\n   * @param {string} loadType The data load type: 'image' or 'state'.\r\n   * @param {object} [options] Options passed to the final loader.\r\n   */\r\n  #loadData(data, loader, loadType, options) {\r\n    const eventInfo = {\r\n      loadtype: loadType,\r\n    };\r\n\r\n    // load id\r\n    const loadId = this.#getNextLoadId();\r\n    eventInfo.loadid = loadId;\r\n\r\n    // set callbacks\r\n    loader.onloadstart = (event) => {\r\n      // store loader to allow abort\r\n      this.#currentLoaders[loadId] = {\r\n        loader: loader,\r\n        isFirstItem: true\r\n      };\r\n      // callback\r\n      this.#augmentCallbackEvent(this.onloadstart, eventInfo)(event);\r\n    };\r\n    loader.onprogress = this.#augmentCallbackEvent(this.onprogress, eventInfo);\r\n    loader.onloaditem = (event) => {\r\n      const eventInfoItem = {\r\n        loadtype: loadType,\r\n        loadid: loadId\r\n      };\r\n      if (typeof this.#currentLoaders[loadId] !== 'undefined') {\r\n        eventInfoItem.isfirstitem = this.#currentLoaders[loadId].isFirstItem;\r\n      }\r\n      // callback\r\n      this.#augmentCallbackEvent(this.onloaditem, eventInfoItem)(event);\r\n      // update loader\r\n      if (typeof this.#currentLoaders[loadId] !== 'undefined' &&\r\n        this.#currentLoaders[loadId].isFirstItem) {\r\n        this.#currentLoaders[loadId].isFirstItem = false;\r\n      }\r\n    };\r\n    loader.onload = this.#augmentCallbackEvent(this.onload, eventInfo);\r\n    loader.onloadend = (event) => {\r\n      // reset current loader\r\n      delete this.#currentLoaders[loadId];\r\n      // callback\r\n      this.#augmentCallbackEvent(this.onloadend, eventInfo)(event);\r\n    };\r\n    loader.onerror = this.#augmentCallbackEvent(this.onerror, eventInfo);\r\n    loader.onabort = this.#augmentCallbackEvent(this.onabort, eventInfo);\r\n    // launch load\r\n    try {\r\n      loader.load(data, options);\r\n    } catch (error) {\r\n      this.onerror({\r\n        error: error,\r\n        loadid: loadId\r\n      });\r\n      this.onloadend({\r\n        loadid: loadId\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Augment a callback event: adds loadtype to the event\r\n   *  passed to a callback.\r\n   *\r\n   * @param {object} callback The callback to update.\r\n   * @param {object} info Info object to append to the event.\r\n   * @returns {object} A function representing the modified callback.\r\n   */\r\n  #augmentCallbackEvent(callback, info) {\r\n    return function (event) {\r\n      const keys = Object.keys(info);\r\n      for (let i = 0; i < keys.length; ++i) {\r\n        const key = keys[i];\r\n        event[key] = info[key];\r\n      }\r\n      callback(event);\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Handle a load start event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load start event.\r\n   */\r\n  onloadstart(_event) {}\r\n\r\n  /**\r\n   * Handle a load progress event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The progress event.\r\n   */\r\n  onprogress(_event) {}\r\n\r\n  /**\r\n   * Handle a load event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when a file has been loaded successfully.\r\n   */\r\n  onload(_event) {}\r\n\r\n  /**\r\n   * Handle a load item event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load event fired\r\n   *   when an item has been loaded successfully.\r\n   */\r\n  onloaditem(_event) {}\r\n\r\n  /**\r\n   * Handle a load end event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The load end event fired\r\n   *  when a file load has completed, successfully or not.\r\n   */\r\n  onloadend(_event) {}\r\n\r\n  /**\r\n   * Handle an error event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The error event.\r\n   */\r\n  onerror(_event) {}\r\n\r\n  /**\r\n   * Handle an abort event.\r\n   * Default does nothing.\r\n   *\r\n   * @param {object} _event The abort event.\r\n   */\r\n  onabort(_event) {}\r\n\r\n} // class LoadController\r\n","import {ListenerHandler} from '../utils/listen';\r\nimport {mergeObjects} from '../utils/operator';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Image} from '../image/image';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/*\r\n * Data (list of {image, meta}) controller.\r\n */\r\nexport class DataController {\r\n\r\n  /**\r\n   * List of {image, meta}.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #data = {};\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {ListenerHandler}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Get the length of the data storage.\r\n   *\r\n   * @returns {number} The length.\r\n   */\r\n  length() {\r\n    return Object.keys(this.#data).length;\r\n  }\r\n\r\n  /**\r\n   * Reset the class: empty the data storage.\r\n   */\r\n  reset() {\r\n    this.#data = [];\r\n  }\r\n\r\n  /**\r\n   * Get a data at a given index.\r\n   *\r\n   * @param {number} index The index of the data.\r\n   * @returns {object} The data.\r\n   */\r\n  get(index) {\r\n    return this.#data[index];\r\n  }\r\n\r\n  /**\r\n   * Set the image at a given index.\r\n   *\r\n   * @param {number} index The index of the data.\r\n   * @param {Image} image The image to set.\r\n   */\r\n  setImage(index, image) {\r\n    this.#data[index].image = image;\r\n    // fire image set\r\n    this.#fireEvent({\r\n      type: 'imageset',\r\n      value: [image],\r\n      dataid: index\r\n    });\r\n    // listen to image change\r\n    image.addEventListener('imagechange', this.#getFireEvent(index));\r\n  }\r\n\r\n  /**\r\n   * Add a new data.\r\n   *\r\n   * @param {number} index The index of the data.\r\n   * @param {Image} image The image.\r\n   * @param {object} meta The image meta.\r\n   */\r\n  addNew(index, image, meta) {\r\n    if (typeof this.#data[index] !== 'undefined') {\r\n      throw new Error('Index already used in storage: ' + index);\r\n    }\r\n    // store the new image\r\n    this.#data[index] = {\r\n      image: image,\r\n      meta: meta\r\n    };\r\n    // listen to image change\r\n    image.addEventListener('imagechange', this.#getFireEvent(index));\r\n  }\r\n\r\n  /**\r\n   * Update the current data.\r\n   *\r\n   * @param {number} index The index of the data.\r\n   * @param {Image} image The image.\r\n   * @param {object} meta The image meta.\r\n   */\r\n  update(index, image, meta) {\r\n    const dataToUpdate = this.#data[index];\r\n\r\n    // add slice to current image\r\n    dataToUpdate.image.appendSlice(image);\r\n\r\n    // update meta data\r\n    // TODO add time support\r\n    let idKey = '';\r\n    if (typeof meta['00020010'] !== 'undefined') {\r\n      // dicom case, use 'InstanceNumber'\r\n      idKey = '00200013';\r\n    } else {\r\n      idKey = 'imageUid';\r\n    }\r\n    dataToUpdate.meta = mergeObjects(\r\n      dataToUpdate.meta,\r\n      meta,\r\n      idKey,\r\n      'value');\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Get a fireEvent function that adds the input index\r\n   * to the event value.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @returns {Function} A fireEvent function.\r\n   */\r\n  #getFireEvent(index) {\r\n    return (event) => {\r\n      event.dataid = index;\r\n      this.#fireEvent(event);\r\n    };\r\n  }\r\n\r\n} // ImageController class\r\n","import {arrayEquals} from './array';\r\n\r\n/**\r\n * Merge two similar objects.\r\n * Objects need to be in the form of:\r\n * <code>\r\n * {\r\n *   idKey: {valueKey: [0]},\r\n *   key0: {valueKey: [\"abc\"]},\r\n *   key1: {valueKey: [33]}\r\n * }\r\n * </code>\r\n * Merged objects will be in the form of:\r\n * <code>\r\n * {\r\n *   idKey: {valueKey: [0,1,2], merged: true},\r\n *   key0: {valueKey: {\r\n *     0: [\"abc\"],\r\n *     1: [\"def\"],\r\n *     2: [\"ghi\"]\r\n *   }},\r\n *   key1: {valueKey: {\r\n *     0: [33],\r\n *     1: [44],\r\n *     2: [55]\r\n *   }}\r\n * }\r\n * </code>\r\n *\r\n * @param {object} obj1 The first object, can be the result of a previous merge.\r\n * @param {object} obj2 The second object.\r\n * @param {string} idKey The key to use as index for duplicate values.\r\n * @param {string} valueKey The key to use to access object values.\r\n * @returns {object} The merged object.\r\n */\r\nexport function mergeObjects(obj1, obj2, idKey, valueKey) {\r\n  const res = {};\r\n  // check id key\r\n  if (!idKey) {\r\n    throw new Error('Cannot merge object with an undefined id key: ' + idKey);\r\n  } else {\r\n    if (!Object.prototype.hasOwnProperty.call(obj1, idKey)) {\r\n      throw new Error('Id key not found in first object while merging: ' +\r\n        idKey + ', obj: ' + obj1);\r\n    }\r\n    if (!Object.prototype.hasOwnProperty.call(obj2, idKey)) {\r\n      throw new Error('Id key not found in second object while merging: ' +\r\n        idKey + ', obj: ' + obj2);\r\n    }\r\n  }\r\n  // check value key\r\n  if (!valueKey) {\r\n    throw new Error('Cannot merge object with an undefined value key: ' +\r\n      valueKey);\r\n  }\r\n\r\n  // check if merged object\r\n  let mergedObj1 = false;\r\n  if (Object.prototype.hasOwnProperty.call(obj1[idKey], 'merged') &&\r\n    obj1[idKey].merged) {\r\n    mergedObj1 = true;\r\n  }\r\n  // handle the id part\r\n  if (!Object.prototype.hasOwnProperty.call(obj1[idKey], valueKey)) {\r\n    throw new Error('Id value not found in first object while merging: ' +\r\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj1);\r\n  }\r\n  if (!Object.prototype.hasOwnProperty.call(obj2[idKey], valueKey)) {\r\n    throw new Error('Id value not found in second object while merging: ' +\r\n      idKey + ', valueKey: ' + valueKey + ', ojb: ' + obj2);\r\n  }\r\n  let id1 = obj1[idKey][valueKey];\r\n  const id2 = obj2[idKey][valueKey][0];\r\n  // update id key\r\n  res[idKey] = obj1[idKey];\r\n  if (mergedObj1) {\r\n    // check if array does not include id2\r\n    for (let k = 0; k < id1.length; ++k) {\r\n      if (id1[k] === id2) {\r\n        throw new Error('The first object already contains id2: ' +\r\n          id2 + ', id1: ' + id1);\r\n      }\r\n    }\r\n    res[idKey][valueKey].push(id2);\r\n  } else {\r\n    id1 = id1[0];\r\n    if (id1 === id2) {\r\n      throw new Error('Cannot merge object with same ids: ' +\r\n        id1 + ', id2: ' + id2);\r\n    }\r\n    // update merge object\r\n    res[idKey][valueKey].push(id2);\r\n    res[idKey].merged = true;\r\n  }\r\n\r\n  // get keys\r\n  const keys1 = Object.keys(obj1);\r\n  // keys2 without duplicates of keys1\r\n  const keys2 = Object.keys(obj2).filter(function (item) {\r\n    return keys1.indexOf(item) < 0;\r\n  });\r\n  const keys = keys1.concat(keys2);\r\n\r\n  // loop through keys\r\n  for (let i = 0; i < keys.length; ++i) {\r\n    const key = keys[i];\r\n    if (key !== idKey) {\r\n      // first\r\n      let value1;\r\n      let subValue1;\r\n      if (Object.prototype.hasOwnProperty.call(obj1, key)) {\r\n        value1 = obj1[key];\r\n        if (Object.prototype.hasOwnProperty.call(value1, valueKey)) {\r\n          subValue1 = value1[valueKey];\r\n        }\r\n      }\r\n      // second\r\n      let value2;\r\n      let subValue2;\r\n      if (Object.prototype.hasOwnProperty.call(obj2, key)) {\r\n        value2 = obj2[key];\r\n        if (Object.prototype.hasOwnProperty.call(value2, valueKey)) {\r\n          subValue2 = value2[valueKey];\r\n        }\r\n      }\r\n      // result value\r\n      let value;\r\n      // use existing to copy properties\r\n      if (typeof value1 !== 'undefined') {\r\n        value = value1;\r\n      } else if (typeof value2 !== 'undefined') {\r\n        value = value2;\r\n      }\r\n      // create merge object if different values\r\n      if (!arrayEquals(subValue1, subValue2)) {\r\n        // add to merged object or create new\r\n        if (mergedObj1) {\r\n          if (Array.isArray(subValue1)) {\r\n            // merged object with repeated value\r\n            // copy it with the index list\r\n            value[valueKey] = {};\r\n            for (let j = 0; j < id1.length; ++j) {\r\n              value[valueKey][id1[j]] = subValue1;\r\n            }\r\n          } else {\r\n            value[valueKey] = subValue1;\r\n          }\r\n          // add obj2 value\r\n          value[valueKey][id2] = subValue2;\r\n        } else {\r\n          // create merge object\r\n          const newValue = {};\r\n          newValue[id1] = subValue1;\r\n          newValue[id2] = subValue2;\r\n          value[valueKey] = newValue;\r\n        }\r\n      }\r\n      // store value in result object\r\n      res[key] = value;\r\n    }\r\n  }\r\n  return res;\r\n}\r\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Scroll wheel class: provides a wheel event handler\r\n *   that scroll the corresponding data.\r\n */\r\nexport class ScrollWheel {\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * Accumulated wheel event deltaY.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #wheelDeltaY = 0;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Handle mouse wheel event.\r\n   *\r\n   * @param {object} event The mouse wheel event.\r\n   */\r\n  wheel(event) {\r\n    // deltaMode (deltaY values on my machine...):\r\n    // - 0 (DOM_DELTA_PIXEL): chrome, deltaY mouse scroll = 53\r\n    // - 1 (DOM_DELTA_LINE): firefox, deltaY mouse scroll = 6\r\n    // - 2 (DOM_DELTA_PAGE): ??\r\n    // TODO: check scroll event\r\n    let scrollMin = 52;\r\n    if (event.deltaMode === 1) {\r\n      scrollMin = 5.99;\r\n    }\r\n    this.#wheelDeltaY += event.deltaY;\r\n    if (Math.abs(this.#wheelDeltaY) < scrollMin) {\r\n      return;\r\n    } else {\r\n      this.#wheelDeltaY = 0;\r\n    }\r\n\r\n    // prevent default page scroll\r\n    event.preventDefault();\r\n\r\n    const up = event.deltaY < 0 ? true : false;\r\n\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewController =\r\n      layerGroup.getActiveViewLayer().getViewController();\r\n    const imageSize = viewController.getImageSize();\r\n    if (imageSize.canScroll3D()) {\r\n      if (up) {\r\n        viewController.incrementScrollIndex();\r\n      } else {\r\n        viewController.decrementScrollIndex();\r\n      }\r\n    } else if (imageSize.moreThanOne(3)) {\r\n      if (up) {\r\n        viewController.incrementIndex(3);\r\n      } else {\r\n        viewController.decrementIndex(3);\r\n      }\r\n    }\r\n  }\r\n\r\n} // ScrollWheel class\r\n","/**\r\n * Namespace for translation function.\r\n * (in a namespace to allow for override from client)\r\n */\r\nexport const i18n = {\r\n\r\n  /**\r\n   * Get the translated text.\r\n   *\r\n   * @param {string} key The key to the text entry.\r\n   * @returns {string|undefined} The translated text.\r\n   */\r\n  t(key) {\r\n    // defaut expects something like 'unit.cm2'\r\n    const unit = {\r\n      mm: 'mm',\r\n      cm2: 'cm²',\r\n      degree: '°'\r\n    };\r\n    const props = key.split('.');\r\n    if (props.length !== 2) {\r\n      throw new Error('Unexpected translation key length.');\r\n    }\r\n    if (props[0] !== 'unit') {\r\n      throw new Error('Unexpected translation key prefix.');\r\n    }\r\n    return unit[props[1]];\r\n  }\r\n\r\n};\r\n","import {Point2D} from './point';\r\nimport {i18n} from '../utils/i18n';\r\n\r\n/**\r\n * Line shape.\r\n */\r\nexport class Line {\r\n\r\n  /**\r\n   * Line begin point.\r\n   *\r\n   * @type {Point2D}\r\n   */\r\n  #begin;\r\n\r\n  /**\r\n   * Line end point.\r\n   *\r\n   * @type {Point2D}\r\n   */\r\n  #end;\r\n\r\n  /**\r\n   * @param {Point2D} begin A Point2D representing the beginning\r\n   *   of the line.\r\n   * @param {Point2D} end A Point2D representing the end of the line.\r\n   */\r\n  constructor(begin, end) {\r\n    this.#begin = begin;\r\n    this.#end = end;\r\n  }\r\n\r\n  /**\r\n   * Get the begin point of the line.\r\n   *\r\n   * @returns {Point2D} The beginning point of the line.\r\n   */\r\n  getBegin() {\r\n    return this.#begin;\r\n  }\r\n\r\n  /**\r\n   * Get the end point of the line.\r\n   *\r\n   * @returns {Point2D} The ending point of the line.\r\n   */\r\n  getEnd() {\r\n    return this.#end;\r\n  }\r\n\r\n  /**\r\n   * Check for equality.\r\n   *\r\n   * @param {Line} rhs The object to compare to.\r\n   * @returns {boolean} True if both objects are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      this.getBegin().equals(rhs.getBegin()) &&\r\n      this.getEnd().equals(rhs.getEnd());\r\n  }\r\n\r\n  /**\r\n   * Get the line delta in the X direction.\r\n   *\r\n   * @returns {number} The delta in the X direction.\r\n   */\r\n  getDeltaX() {\r\n    return this.getEnd().getX() - this.getBegin().getX();\r\n  }\r\n\r\n  /**\r\n   * Get the line delta in the Y direction.\r\n   *\r\n   * @returns {number} The delta in the Y direction.\r\n   */\r\n  getDeltaY() {\r\n    return this.getEnd().getY() - this.getBegin().getY();\r\n  }\r\n\r\n  /**\r\n   * Get the length of the line.\r\n   *\r\n   * @returns {number} The length of the line.\r\n   */\r\n  getLength() {\r\n    return Math.sqrt(\r\n      this.getDeltaX() * this.getDeltaX() +\r\n      this.getDeltaY() * this.getDeltaY()\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the length of the line according to a  spacing.\r\n   *\r\n   * @param {number} spacingX The X spacing.\r\n   * @param {number} spacingY The Y spacing.\r\n   * @returns {number} The length of the line with spacing\r\n   *  or null for null spacings.\r\n   */\r\n  getWorldLength(spacingX, spacingY) {\r\n    let wlen = null;\r\n    if (spacingX !== null && spacingY !== null) {\r\n      const dxs = this.getDeltaX() * spacingX;\r\n      const dys = this.getDeltaY() * spacingY;\r\n      wlen = Math.sqrt(dxs * dxs + dys * dys);\r\n    }\r\n    return wlen;\r\n  }\r\n\r\n  /**\r\n   * Get the mid point of the line.\r\n   *\r\n   * @returns {Point2D} The mid point of the line.\r\n   */\r\n  getMidpoint() {\r\n    return new Point2D(\r\n      (this.getBegin().getX() + this.getEnd().getX()) / 2,\r\n      (this.getBegin().getY() + this.getEnd().getY()) / 2\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the slope of the line.\r\n   *\r\n   * @returns {number} The slope of the line.\r\n   */\r\n  getSlope() {\r\n    return this.getDeltaY() / this.getDeltaX();\r\n  }\r\n\r\n  /**\r\n   * Get the intercept of the line.\r\n   *\r\n   * @returns {number} The slope of the line.\r\n   */\r\n  getIntercept() {\r\n    return (\r\n      this.getEnd().getX() * this.getBegin().getY() -\r\n      this.getBegin().getX() * this.getEnd().getY()\r\n    ) / this.getDeltaX();\r\n  }\r\n\r\n  /**\r\n   * Get the inclination of the line.\r\n   *\r\n   * @returns {number} The inclination of the line.\r\n   */\r\n  getInclination() {\r\n    // tan(theta) = slope\r\n    const angle =\r\n      Math.atan2(this.getDeltaY(), this.getDeltaX()) * 180 / Math.PI;\r\n    // shift?\r\n    return 180 - angle;\r\n  }\r\n\r\n  /**\r\n   * Quantify a line according to view information.\r\n   *\r\n   * @param {object} viewController The associated view controller.\r\n   * @returns {object} A quantification object.\r\n   */\r\n  quantify(viewController) {\r\n    const quant = {};\r\n    // length\r\n    const spacing = viewController.get2DSpacing();\r\n    const length = this.getWorldLength(spacing[0], spacing[1]);\r\n    if (length !== null) {\r\n      quant.length = {value: length, unit: i18n.t('unit.mm')};\r\n    }\r\n    // return\r\n    return quant;\r\n  }\r\n\r\n} // Line class\r\n\r\n/**\r\n * Get the angle between two lines in degree.\r\n *\r\n * @param {Line} line0 The first line.\r\n * @param {Line} line1 The second line.\r\n * @returns {number} The angle.\r\n */\r\nexport function getAngle(line0, line1) {\r\n  const dx0 = line0.getDeltaX();\r\n  const dy0 = line0.getDeltaY();\r\n  const dx1 = line1.getDeltaX();\r\n  const dy1 = line1.getDeltaY();\r\n  // dot = ||a||*||b||*cos(theta)\r\n  const dot = dx0 * dx1 + dy0 * dy1;\r\n  // cross = ||a||*||b||*sin(theta)\r\n  const det = dx0 * dy1 - dy0 * dx1;\r\n  // tan = sin / cos\r\n  const angle = Math.atan2(det, dot) * 180 / Math.PI;\r\n  // complementary angle\r\n  // shift?\r\n  return 360 - (180 - angle);\r\n}\r\n\r\n/**\r\n * Get a perpendicular line to an input one.\r\n *\r\n * @param {Line} line The line to be perpendicular to.\r\n * @param {Point2D} point The middle point of the perpendicular line.\r\n * @param {number} length The length of the perpendicular line.\r\n * @returns {object} A perpendicular line.\r\n */\r\nexport function getPerpendicularLine(line, point, length) {\r\n  // begin point\r\n  let beginX = 0;\r\n  let beginY = 0;\r\n  // end point\r\n  let endX = 0;\r\n  let endY = 0;\r\n\r\n  // check slope:\r\n  // 0 -> horizontal\r\n  // Infinite -> vertical (a/Infinite = 0)\r\n  if (line.getSlope() !== 0) {\r\n    // a0 * a1 = -1\r\n    const slope = -1 / line.getSlope();\r\n    // y0 = a1*x0 + b1 -> b1 = y0 - a1*x0\r\n    const intercept = point.getY() - slope * point.getX();\r\n\r\n    // 1. (x - x0)^2 + (y - y0)^2 = d^2\r\n    // 2. a = (y - y0) / (x - x0) -> y = a*(x - x0) + y0\r\n    // ->  (x - x0)^2 + m^2 * (x - x0)^2 = d^2\r\n    // -> x = x0 +- d / sqrt(1+m^2)\r\n\r\n    // length is the distance between begin and end,\r\n    // point is half way between both -> d = length / 2\r\n    const dx = length / (2 * Math.sqrt(1 + slope * slope));\r\n\r\n    // begin point\r\n    beginX = point.getX() - dx;\r\n    beginY = slope * beginX + intercept;\r\n    // end point\r\n    endX = point.getX() + dx;\r\n    endY = slope * endX + intercept;\r\n  } else {\r\n    // horizontal input line -> perpendicular is vertical!\r\n    // begin point\r\n    beginX = point.getX();\r\n    beginY = point.getY() - length / 2;\r\n    // end point\r\n    endX = point.getX();\r\n    endY = point.getY() + length / 2;\r\n  }\r\n  // perpendicalar line\r\n  return new Line(\r\n    new Point2D(beginX, beginY),\r\n    new Point2D(endX, endY));\r\n}\r\n","/**\r\n * Get the minimum, maximum, mean and standard deviation\r\n * of an array of values.\r\n * Note: could use {@link https://github.com/tmcw/simple-statistics}.\r\n *\r\n * @param {Array} array The array of values to extract stats from.\r\n * @param {Array} flags A list of stat values to calculate.\r\n * @returns {object} A stats object.\r\n */\r\nexport function getStats(array, flags) {\r\n  if (includesFullStatsFlags(flags)) {\r\n    return getFullStats(array);\r\n  } else {\r\n    return getSimpleStats(array);\r\n  }\r\n}\r\n\r\n/**\r\n * Does the input flag list contain a full stat element?\r\n *\r\n * @param {Array} flags A list of stat values to calculate.\r\n * @returns {boolean} True if one of the flags is a full stat flag.\r\n */\r\nfunction includesFullStatsFlags(flags) {\r\n  return typeof flags !== 'undefined' &&\r\n    flags !== null &&\r\n    (flags.includes('median') ||\r\n    flags.includes('p25') ||\r\n    flags.includes('p75'));\r\n}\r\n\r\n/**\r\n * Get simple stats: minimum, maximum, mean and standard deviation\r\n * of an array of values.\r\n *\r\n * @param {Array} array The array of values to extract stats from.\r\n * @returns {object} A simple stats object.\r\n */\r\nfunction getSimpleStats(array) {\r\n  let min = array[0];\r\n  let max = min;\r\n  let sum = 0;\r\n  let sumSqr = 0;\r\n  let val = 0;\r\n  const length = array.length;\r\n  for (let i = 0; i < length; ++i) {\r\n    val = array[i];\r\n    if (val < min) {\r\n      min = val;\r\n    } else if (val > max) {\r\n      max = val;\r\n    }\r\n    sum += val;\r\n    sumSqr += val * val;\r\n  }\r\n\r\n  const mean = sum / length;\r\n  // see http://en.wikipedia.org/wiki/Algorithms_for_calculating_variance\r\n  const variance = sumSqr / length - mean * mean;\r\n  const stdDev = Math.sqrt(variance);\r\n\r\n  return {\r\n    min: min,\r\n    max: max,\r\n    mean: mean,\r\n    stdDev: stdDev\r\n  };\r\n}\r\n\r\n/**\r\n * Get full stats: minimum, maximum, mean, standard deviation, median, 25%\r\n * and 75% percentile of an array of values.\r\n *\r\n * @param {Array} array The array of values to extract stats from.\r\n * @returns {object} A full stats object.\r\n */\r\nfunction getFullStats(array) {\r\n  // get simple stats\r\n  const stats = getSimpleStats(array);\r\n\r\n  // sort array... can get slow...\r\n  array.sort(function (a, b) {\r\n    return a - b;\r\n  });\r\n\r\n  stats.median = getPercentile(array, 0.5);\r\n  stats.p25 = getPercentile(array, 0.25);\r\n  stats.p75 = getPercentile(array, 0.75);\r\n\r\n  return stats;\r\n}\r\n\r\n/**\r\n * Get an arrays' percentile. Uses linear interpolation for percentiles\r\n * that lie between data points.\r\n * see https://en.wikipedia.org/wiki/Percentile (second variant interpolation)\r\n *\r\n * @param {Array} array The sorted array of values.\r\n * @param {number} ratio The percentile ratio [0-1].\r\n * @returns {number} The percentile,\r\n */\r\nfunction getPercentile(array, ratio) {\r\n  // check input\r\n  if (array.length === 0) {\r\n    throw new Error('Empty array provided for percentile calculation.');\r\n  }\r\n  if (ratio < 0 || ratio > 1) {\r\n    throw new Error(\r\n      'Invalid ratio provided for percentile calculation: ' + ratio);\r\n  }\r\n  // return min for ratio=0 amd max for ratio=1\r\n  if (ratio === 0) {\r\n    return array[0];\r\n  } else if (ratio === 1) {\r\n    return array[array.length - 1];\r\n  }\r\n  // general case: interpolate between indices if needed\r\n  const i = (array.length - 1) * ratio;\r\n  const i0 = Math.floor(i);\r\n  const v0 = array[i0];\r\n  const v1 = array[i0 + 1];\r\n  return v0 + (v1 - v0) * (i - i0);\r\n}\r\n\r\n/**\r\n * Unique ID generator.\r\n * See {@link http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript}\r\n * and this {@link http://stackoverflow.com/a/13403498 answer}.\r\n *\r\n * @returns {string} A unique ID.\r\n */\r\nexport function guid() {\r\n  return Math.random().toString(36).substring(2, 15);\r\n}\r\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\r\nimport {logger} from '../utils/logger';\r\nimport {getShapeDisplayName, ChangeGroupCommand} from './drawCommands';\r\nimport {validateAnchorPosition} from './draw';\r\n// external\r\nimport Konva from 'konva';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Get the default anchor shape.\r\n *\r\n * @param {number} x The X position.\r\n * @param {number} y The Y position.\r\n * @param {string} id The shape id.\r\n * @param {object} style The application style.\r\n * @returns {object} The default anchor shape.\r\n */\r\nexport function getDefaultAnchor(x, y, id, style) {\r\n  const radius = style.applyZoomScale(3);\r\n  const absRadius = {\r\n    x: Math.abs(radius.x),\r\n    y: Math.abs(radius.y)\r\n  };\r\n  return new Konva.Ellipse({\r\n    x: x,\r\n    y: y,\r\n    stroke: '#999',\r\n    fill: 'rgba(100,100,100,0.7',\r\n    strokeWidth: style.getStrokeWidth(),\r\n    strokeScaleEnabled: false,\r\n    radius: absRadius,\r\n    radiusX: absRadius.x,\r\n    radiusY: absRadius.y,\r\n    name: 'anchor',\r\n    id: id.toString(),\r\n    dragOnTop: false,\r\n    draggable: true,\r\n    visible: false\r\n  });\r\n}\r\n\r\n/**\r\n * Shape editor.\r\n */\r\nexport class ShapeEditor {\r\n\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Shape factory list\r\n   *\r\n   * @type {object}\r\n   */\r\n  #shapeFactoryList = null;\r\n\r\n  /**\r\n   * Current shape factory.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #currentFactory = null;\r\n\r\n  /**\r\n   * Edited shape.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #shape = null;\r\n\r\n  /**\r\n   * Edited view controller. Used for quantification update.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #viewController = null;\r\n\r\n  /**\r\n   * Active flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isActive = false;\r\n\r\n  /**\r\n   * @callback eventFn\r\n   * @param {object} event The event.\r\n   */\r\n\r\n  /**\r\n   * Draw event callback.\r\n   *\r\n   * @type {eventFn}\r\n   */\r\n  #drawEventCallback = null;\r\n\r\n  /**\r\n   * Set the tool options.\r\n   *\r\n   * @param {Array} list The list of shape classes.\r\n   */\r\n  setFactoryList(list) {\r\n    this.#shapeFactoryList = list;\r\n  }\r\n\r\n  /**\r\n   * Set the shape to edit.\r\n   *\r\n   * @param {object} inshape The shape to edit.\r\n   */\r\n  setShape(inshape) {\r\n    this.#shape = inshape;\r\n    if (this.#shape) {\r\n      // remove old anchors\r\n      this.#removeAnchors();\r\n      // find a factory for the input shape\r\n      const group = this.#shape.getParent();\r\n      const keys = Object.keys(this.#shapeFactoryList);\r\n      this.#currentFactory = null;\r\n      for (let i = 0; i < keys.length; ++i) {\r\n        const factory = new this.#shapeFactoryList[keys[i]];\r\n        if (factory.isFactoryGroup(group)) {\r\n          this.#currentFactory = factory;\r\n          // stop at first find\r\n          break;\r\n        }\r\n      }\r\n      if (this.#currentFactory === null) {\r\n        throw new Error('Could not find a factory to update shape.');\r\n      }\r\n      // add new anchors\r\n      this.#addAnchors();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the associated image.\r\n   *\r\n   * @param {object} vc The associated view controller.\r\n   */\r\n  setViewController(vc) {\r\n    this.#viewController = vc;\r\n  }\r\n\r\n  /**\r\n   * Get the edited shape.\r\n   *\r\n   * @returns {object} The edited shape.\r\n   */\r\n  getShape() {\r\n    return this.#shape;\r\n  }\r\n\r\n  /**\r\n   * Get the active flag.\r\n   *\r\n   * @returns {boolean} The active flag.\r\n   */\r\n  isActive() {\r\n    return this.#isActive;\r\n  }\r\n\r\n  /**\r\n   * Set the draw event callback.\r\n   *\r\n   * @param {object} callback The callback.\r\n   */\r\n  setDrawEventCallback(callback) {\r\n    this.#drawEventCallback = callback;\r\n  }\r\n\r\n  /**\r\n   * Enable the editor. Redraws the layer.\r\n   */\r\n  enable() {\r\n    this.#isActive = true;\r\n    if (this.#shape) {\r\n      this.#setAnchorsVisible(true);\r\n      if (this.#shape.getLayer()) {\r\n        this.#shape.getLayer().draw();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Disable the editor. Redraws the layer.\r\n   */\r\n  disable() {\r\n    this.#isActive = false;\r\n    if (this.#shape) {\r\n      this.#setAnchorsVisible(false);\r\n      if (this.#shape.getLayer()) {\r\n        this.#shape.getLayer().draw();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the anchors.\r\n   */\r\n  resetAnchors() {\r\n    // remove previous controls\r\n    this.#removeAnchors();\r\n    // add anchors\r\n    this.#addAnchors();\r\n    // set them visible\r\n    this.#setAnchorsVisible(true);\r\n  }\r\n\r\n  /**\r\n   * Apply a function on all anchors.\r\n   *\r\n   * @param {object} func A f(shape) function.\r\n   */\r\n  #applyFuncToAnchors(func) {\r\n    if (this.#shape && this.#shape.getParent()) {\r\n      const anchors = this.#shape.getParent().find('.anchor');\r\n      anchors.forEach(func);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set anchors visibility.\r\n   *\r\n   * @param {boolean} flag The visible flag.\r\n   */\r\n  #setAnchorsVisible(flag) {\r\n    this.#applyFuncToAnchors(function (anchor) {\r\n      anchor.visible(flag);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set anchors active.\r\n   *\r\n   * @param {boolean} flag The active (on/off) flag.\r\n   */\r\n  setAnchorsActive(flag) {\r\n    let func = null;\r\n    if (flag) {\r\n      func = (anchor) => {\r\n        this.#setAnchorOn(anchor);\r\n      };\r\n    } else {\r\n      func = (anchor) => {\r\n        this.#setAnchorOff(anchor);\r\n      };\r\n    }\r\n    this.#applyFuncToAnchors(func);\r\n  }\r\n\r\n  /**\r\n   * Remove anchors.\r\n   */\r\n  #removeAnchors() {\r\n    this.#applyFuncToAnchors(function (anchor) {\r\n      anchor.remove();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add the shape anchors.\r\n   */\r\n  #addAnchors() {\r\n    // exit if no shape or no layer\r\n    if (!this.#shape || !this.#shape.getLayer()) {\r\n      return;\r\n    }\r\n    // get shape group\r\n    const group = this.#shape.getParent();\r\n\r\n    // activate and add anchors to group\r\n    const anchors =\r\n      this.#currentFactory.getAnchors(this.#shape, this.#app.getStyle());\r\n    for (let i = 0; i < anchors.length; ++i) {\r\n      // set anchor on\r\n      this.#setAnchorOn(anchors[i]);\r\n      // add the anchor to the group\r\n      group.add(anchors[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get a simple clone of the input anchor.\r\n   *\r\n   * @param {object} anchor The anchor to clone.\r\n   * @returns {object} A clone of the input anchor.\r\n   */\r\n  #getClone(anchor) {\r\n    // create closure to properties\r\n    const parent = anchor.getParent();\r\n    const id = anchor.id();\r\n    const x = anchor.x();\r\n    const y = anchor.y();\r\n    // create clone object\r\n    const clone = {};\r\n    clone.getParent = function () {\r\n      return parent;\r\n    };\r\n    clone.id = function () {\r\n      return id;\r\n    };\r\n    clone.x = function () {\r\n      return x;\r\n    };\r\n    clone.y = function () {\r\n      return y;\r\n    };\r\n    return clone;\r\n  }\r\n\r\n  /**\r\n   * Set the anchor on listeners.\r\n   *\r\n   * @param {object} anchor The anchor to set on.\r\n   */\r\n  #setAnchorOn(anchor) {\r\n    let startAnchor = null;\r\n\r\n    // command name based on shape type\r\n    const shapeDisplayName = getShapeDisplayName(this.#shape);\r\n\r\n    // drag start listener\r\n    anchor.on('dragstart.edit', (event) => {\r\n      const anchor = event.target;\r\n      startAnchor = this.#getClone(anchor);\r\n      // prevent bubbling upwards\r\n      event.cancelBubble = true;\r\n    });\r\n    // drag move listener\r\n    anchor.on('dragmove.edit', (event) => {\r\n      const anchor = event.target;\r\n      const layerDetails = getLayerDetailsFromEvent(event.evt);\r\n      const layerGroup =\r\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n      const drawLayer = layerGroup.getActiveDrawLayer();\r\n      // validate the anchor position\r\n      validateAnchorPosition(drawLayer.getBaseSize(), anchor);\r\n      // update shape\r\n      this.#currentFactory.update(\r\n        anchor, this.#app.getStyle(), this.#viewController);\r\n      // redraw\r\n      if (anchor.getLayer()) {\r\n        anchor.getLayer().draw();\r\n      } else {\r\n        logger.warn('No layer to draw the anchor!');\r\n      }\r\n      // prevent bubbling upwards\r\n      event.cancelBubble = true;\r\n    });\r\n    // drag end listener\r\n    anchor.on('dragend.edit', (event) => {\r\n      const anchor = event.target;\r\n      const endAnchor = this.#getClone(anchor);\r\n      // store the change command\r\n      const chgcmd = new ChangeGroupCommand(\r\n        shapeDisplayName,\r\n        this.#currentFactory,\r\n        startAnchor,\r\n        endAnchor,\r\n        anchor.getLayer(),\r\n        this.#viewController,\r\n        this.#app.getStyle()\r\n      );\r\n      chgcmd.onExecute = this.#drawEventCallback;\r\n      chgcmd.onUndo = this.#drawEventCallback;\r\n      chgcmd.execute();\r\n      this.#app.addToUndoStack(chgcmd);\r\n      // reset start anchor\r\n      startAnchor = endAnchor;\r\n      // prevent bubbling upwards\r\n      event.cancelBubble = true;\r\n    });\r\n    // mouse down listener\r\n    anchor.on('mousedown touchstart', (event) => {\r\n      const anchor = event.target;\r\n      anchor.moveToTop();\r\n    });\r\n    // mouse over styling\r\n    anchor.on('mouseover.edit', (event) => {\r\n      const anchor = event.target;\r\n      // style is handled by the group\r\n      anchor.stroke('#ddd');\r\n      if (anchor.getLayer()) {\r\n        anchor.getLayer().draw();\r\n      } else {\r\n        logger.warn('No layer to draw the anchor!');\r\n      }\r\n    });\r\n    // mouse out styling\r\n    anchor.on('mouseout.edit', (event) => {\r\n      const anchor = event.target;\r\n      // style is handled by the group\r\n      anchor.stroke('#999');\r\n      if (anchor.getLayer()) {\r\n        anchor.getLayer().draw();\r\n      } else {\r\n        logger.warn('No layer to draw the anchor!');\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the anchor off listeners.\r\n   *\r\n   * @param {object} anchor The anchor to set off.\r\n   */\r\n  #setAnchorOff(anchor) {\r\n    anchor.off('dragstart.edit');\r\n    anchor.off('dragmove.edit');\r\n    anchor.off('dragend.edit');\r\n    anchor.off('mousedown touchstart');\r\n    anchor.off('mouseover.edit');\r\n    anchor.off('mouseout.edit');\r\n  }\r\n\r\n} // class Editor\r\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\r\nimport {\r\n  getEventOffset,\r\n  customUI\r\n} from '../gui/generic';\r\nimport {Point2D} from '../math/point';\r\nimport {guid} from '../math/stats';\r\nimport {logger} from '../utils/logger';\r\nimport {replaceFlags} from '../utils/string';\r\nimport {\r\n  getShapeDisplayName,\r\n  DrawGroupCommand,\r\n  DeleteGroupCommand,\r\n  MoveGroupCommand\r\n} from './drawCommands';\r\nimport {\r\n  canNodeChangeColour,\r\n  isNodeNameShape\r\n} from '../app/drawController';\r\nimport {ScrollWheel} from './scrollWheel';\r\nimport {ShapeEditor} from './editor';\r\n// external\r\nimport Konva from 'konva';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\nimport {Style} from '../gui/style';\r\nimport {LayerGroup} from '../gui/layerGroup';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Draw Debug flag.\r\n */\r\nexport const DRAW_DEBUG = false;\r\n\r\n/**\r\n * Drawing tool.\r\n *\r\n * This tool is responsible for the draw layer group structure. The layout is:\r\n *\r\n * drawLayer\r\n * |_ positionGroup: name=\"position-group\", id=\"#2-0#_#3-1\"\"\r\n *    |_ shapeGroup: name=\"{shape name}-group\", id=\"#\"\r\n *       |_ shape: name=\"shape\"\r\n *       |_ label: name=\"label\"\r\n *       |_ extra: line tick, protractor arc...\r\n *\r\n * Discussion:\r\n * - posGroup > shapeGroup\r\n *    pro: slice/frame display: 1 loop\r\n *    cons: multi-slice shape splitted in positionGroups\r\n * - shapeGroup > posGroup\r\n *    pros: more logical\r\n *    cons: slice/frame display: 2 loops\r\n */\r\nexport class Draw {\r\n\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * Scroll wheel handler.\r\n   *\r\n   * @type {ScrollWheel}\r\n   */\r\n  #scrollWhell;\r\n\r\n  /**\r\n   * Shape editor.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #shapeEditor;\r\n\r\n  /**\r\n   * Trash draw: a cross.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #trash;\r\n\r\n  /**\r\n   * Drawing style.\r\n   *\r\n   * @type {Style}\r\n   */\r\n  #style;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n    this.#scrollWhell = new ScrollWheel(app);\r\n    this.#shapeEditor = new ShapeEditor(app);\r\n    // associate the event listeners of the editor\r\n    //  with those of the draw tool\r\n    this.#shapeEditor.setDrawEventCallback(this.#fireEvent);\r\n\r\n    this.#style = app.getStyle();\r\n\r\n    // trash cross\r\n    this.#trash = new Konva.Group();\r\n    // first line of the cross\r\n    const trashLine1 = new Konva.Line({\r\n      points: [-10, -10, 10, 10],\r\n      stroke: 'red'\r\n    });\r\n    // second line of the cross\r\n    const trashLine2 = new Konva.Line({\r\n      points: [10, -10, -10, 10],\r\n      stroke: 'red'\r\n    });\r\n    this.#trash.width(20);\r\n    this.#trash.height(20);\r\n    this.#trash.add(trashLine1);\r\n    this.#trash.add(trashLine2);\r\n  }\r\n\r\n  /**\r\n   * Interaction start flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #started = false;\r\n\r\n  /**\r\n   * Shape factory list\r\n   *\r\n   * @type {object}\r\n   */\r\n  #shapeFactoryList = null;\r\n\r\n  /**\r\n   * Current shape factory.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #currentFactory = null;\r\n\r\n  /**\r\n   * Draw command.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #command = null;\r\n\r\n  /**\r\n   * Current shape group.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #tmpShapeGroup = null;\r\n\r\n  /**\r\n   * Shape name.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #shapeName;\r\n\r\n  /**\r\n   * List of points.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #points = [];\r\n\r\n  /**\r\n   * Last selected point.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #lastPoint = null;\r\n\r\n  /**\r\n   * Active shape, ie shape with mouse over.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #activeShapeGroup;\r\n\r\n  /**\r\n   * Original mouse cursor.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #originalCursor;\r\n\r\n  /**\r\n   * Mouse cursor.\r\n   *\r\n   * @type {string}\r\n   */\r\n  #mouseOverCursor = 'pointer';\r\n\r\n  /**\r\n   * Event listeners.\r\n   */\r\n  #listeners = {};\r\n\r\n  /**\r\n   * Handle mouse down event.\r\n   *\r\n   * @param {object} event The mouse down event.\r\n   */\r\n  mousedown = (event) => {\r\n    // exit if a draw was started (handle at mouse move or up)\r\n    if (this.#started) {\r\n      return;\r\n    }\r\n\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const drawLayer = layerGroup.getActiveDrawLayer();\r\n\r\n    // determine if the click happened in an existing shape\r\n    const stage = drawLayer.getKonvaStage();\r\n    const kshape = stage.getIntersection({\r\n      x: event._x,\r\n      y: event._y\r\n    });\r\n\r\n    // update scale\r\n    this.#style.setZoomScale(stage.scale());\r\n\r\n    if (kshape) {\r\n      const group = kshape.getParent();\r\n      const selectedShape = group.find('.shape')[0];\r\n      // reset editor if click on other shape\r\n      // (and avoid anchors mouse down)\r\n      if (selectedShape && selectedShape !== this.#shapeEditor.getShape()) {\r\n        this.#shapeEditor.disable();\r\n        this.#shapeEditor.setShape(selectedShape);\r\n        const viewController =\r\n          layerGroup.getActiveViewLayer().getViewController();\r\n        this.#shapeEditor.setViewController(viewController);\r\n        this.#shapeEditor.enable();\r\n      }\r\n    } else {\r\n      // disable edition\r\n      this.#shapeEditor.disable();\r\n      this.#shapeEditor.setShape(null);\r\n      this.#shapeEditor.setViewController(null);\r\n      // start storing points\r\n      this.#started = true;\r\n      // set factory\r\n      this.#currentFactory = new this.#shapeFactoryList[this.#shapeName]();\r\n      // clear array\r\n      this.#points = [];\r\n      // store point\r\n      const viewLayer = layerGroup.getActiveViewLayer();\r\n      const pos = viewLayer.displayToPlanePos(event._x, event._y);\r\n      this.#lastPoint = new Point2D(pos.x, pos.y);\r\n      this.#points.push(this.#lastPoint);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse move event.\r\n   *\r\n   * @param {object} event The mouse move event.\r\n   */\r\n  mousemove = (event) => {\r\n    // exit if not started draw\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\r\n\r\n    // draw line to current pos\r\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\r\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\r\n      // clear last added point from the list (but not the first one)\r\n      // if it was marked as temporary\r\n      if (this.#points.length !== 1 &&\r\n        typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\r\n        this.#points.pop();\r\n      }\r\n      // current point\r\n      this.#lastPoint = new Point2D(pos.x, pos.y);\r\n      // mark it as temporary\r\n      this.#lastPoint.tmp = true;\r\n      // add it to the list\r\n      this.#points.push(this.#lastPoint);\r\n      // update points\r\n      this.#onNewPoints(this.#points, layerGroup);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse up event.\r\n   *\r\n   * @param {object} event The mouse up event.\r\n   */\r\n  mouseup = (event) => {\r\n    // exit if not started draw\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n    // exit if no points\r\n    if (this.#points.length === 0) {\r\n      logger.warn('Draw mouseup but no points...');\r\n      return;\r\n    }\r\n\r\n    // do we have all the needed points\r\n    if (this.#points.length === this.#currentFactory.getNPoints()) {\r\n      // store points\r\n      const layerDetails = getLayerDetailsFromEvent(event);\r\n      const layerGroup =\r\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n      this.#onFinalPoints(this.#points, layerGroup);\r\n      // reset flag\r\n      this.#started = false;\r\n    } else {\r\n      // remove temporary flag\r\n      if (typeof this.#points[this.#points.length - 1].tmp !== 'undefined') {\r\n        delete this.#points[this.#points.length - 1].tmp;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle double click event: some tools use it to finish interaction.\r\n   *\r\n   * @param {object} event The double click event.\r\n   */\r\n  dblclick = (event) => {\r\n    // only end by double click undefined NPoints\r\n    if (typeof this.#currentFactory.getNPoints() !== 'undefined') {\r\n      return;\r\n    }\r\n    // exit if not started draw\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n    // exit if no points\r\n    if (this.#points.length === 0) {\r\n      logger.warn('Draw dblclick but no points...');\r\n      return;\r\n    }\r\n\r\n    // store points\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    this.#onFinalPoints(this.#points, layerGroup);\r\n    // reset flag\r\n    this.#started = false;\r\n  };\r\n\r\n  /**\r\n   * Handle mouse out event.\r\n   *\r\n   * @param {object} event The mouse out event.\r\n   */\r\n  mouseout = (event) => {\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch start event.\r\n   *\r\n   * @param {object} event The touch start event.\r\n   */\r\n  touchstart = (event) => {\r\n    this.mousedown(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch move event.\r\n   *\r\n   * @param {object} event The touch move event.\r\n   */\r\n  touchmove = (event) => {\r\n    // exit if not started draw\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const pos = viewLayer.displayToPlanePos(event._x, event._y);\r\n\r\n    if (Math.abs(pos.x - this.#lastPoint.getX()) > 0 ||\r\n      Math.abs(pos.y - this.#lastPoint.getY()) > 0) {\r\n      // clear last added point from the list (but not the first one)\r\n      if (this.#points.length !== 1) {\r\n        this.#points.pop();\r\n      }\r\n      // current point\r\n      this.#lastPoint = new Point2D(pos.x, pos.y);\r\n      // add current one to the list\r\n      this.#points.push(this.#lastPoint);\r\n      // allow for anchor points\r\n      if (this.#points.length < this.#currentFactory.getNPoints()) {\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n          this.#points.push(this.#lastPoint);\r\n        }, this.#currentFactory.getTimeout());\r\n      }\r\n      // update points\r\n      this.#onNewPoints(this.#points, layerGroup);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle touch end event.\r\n   *\r\n   * @param {object} event The touch end event.\r\n   */\r\n  touchend = (event) => {\r\n    this.dblclick(event);\r\n  };\r\n\r\n  /**\r\n   * Handle mouse wheel event.\r\n   *\r\n   * @param {object} event The mouse wheel event.\r\n   */\r\n  wheel = (event) => {\r\n    this.#scrollWhell.wheel(event);\r\n  };\r\n\r\n  /**\r\n   * Handle key down event.\r\n   *\r\n   * @param {object} event The key down event.\r\n   */\r\n  keydown = (event) => {\r\n    // call app handler if we are not in the middle of a draw\r\n    if (!this.#started) {\r\n      event.context = 'Draw';\r\n      this.#app.onKeydown(event);\r\n    }\r\n    let konvaLayer;\r\n\r\n    // press delete or backspace key\r\n    if ((event.key === 'Delete' ||\r\n      event.key === 'Backspace') &&\r\n      this.#shapeEditor.isActive()) {\r\n      // get shape\r\n      const shapeGroup = this.#shapeEditor.getShape().getParent();\r\n      konvaLayer = shapeGroup.getLayer();\r\n      const shapeDisplayName = getShapeDisplayName(\r\n        shapeGroup.getChildren(isNodeNameShape)[0]);\r\n      // delete command\r\n      const delcmd = new DeleteGroupCommand(shapeGroup,\r\n        shapeDisplayName, konvaLayer);\r\n      delcmd.onExecute = this.#fireEvent;\r\n      delcmd.onUndo = this.#fireEvent;\r\n      delcmd.execute();\r\n      this.#app.addToUndoStack(delcmd);\r\n    }\r\n\r\n    // escape key: exit shape creation\r\n    if (event.key === 'Escape' && this.#tmpShapeGroup !== null) {\r\n      konvaLayer = this.#tmpShapeGroup.getLayer();\r\n      // reset temporary shape group\r\n      this.#tmpShapeGroup.destroy();\r\n      this.#tmpShapeGroup = null;\r\n      // reset flag and points\r\n      this.#started = false;\r\n      this.#points = [];\r\n      // redraw\r\n      konvaLayer.draw();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update the current draw with new points.\r\n   *\r\n   * @param {Array} tmpPoints The array of new points.\r\n   * @param {LayerGroup} layerGroup The origin layer group.\r\n   */\r\n  #onNewPoints(tmpPoints, layerGroup) {\r\n    const drawLayer = layerGroup.getActiveDrawLayer();\r\n    const konvaLayer = drawLayer.getKonvaLayer();\r\n\r\n    // remove temporary shape draw\r\n    if (this.#tmpShapeGroup) {\r\n      this.#tmpShapeGroup.destroy();\r\n      this.#tmpShapeGroup = null;\r\n    }\r\n\r\n    // create shape group\r\n    const viewController =\r\n      layerGroup.getActiveViewLayer().getViewController();\r\n    this.#tmpShapeGroup = this.#currentFactory.create(\r\n      tmpPoints, this.#style, viewController);\r\n    // do not listen during creation\r\n    const shape = this.#tmpShapeGroup.getChildren(isNodeNameShape)[0];\r\n    shape.listening(false);\r\n    konvaLayer.listening(false);\r\n    // draw shape\r\n    konvaLayer.add(this.#tmpShapeGroup);\r\n    konvaLayer.draw();\r\n  }\r\n\r\n  /**\r\n   * Create the final shape from a point list.\r\n   *\r\n   * @param {Array} finalPoints The array of points.\r\n   * @param {LayerGroup} layerGroup The origin layer group.\r\n   */\r\n  #onFinalPoints(finalPoints, layerGroup) {\r\n    const drawLayer = layerGroup.getActiveDrawLayer();\r\n    const konvaLayer = drawLayer.getKonvaLayer();\r\n\r\n    // reset temporary shape group\r\n    if (this.#tmpShapeGroup) {\r\n      this.#tmpShapeGroup.destroy();\r\n      this.#tmpShapeGroup = null;\r\n    }\r\n\r\n    const viewController =\r\n      layerGroup.getActiveViewLayer().getViewController();\r\n    const drawController =\r\n      layerGroup.getActiveDrawLayer().getDrawController();\r\n\r\n    // create final shape\r\n    const finalShapeGroup = this.#currentFactory.create(\r\n      finalPoints, this.#style, viewController);\r\n    finalShapeGroup.id(guid());\r\n\r\n    // get the position group\r\n    const posGroup = drawController.getCurrentPosGroup();\r\n    // add shape group to position group\r\n    posGroup.add(finalShapeGroup);\r\n\r\n    // re-activate layer\r\n    konvaLayer.listening(true);\r\n    // draw shape command\r\n    this.#command = new DrawGroupCommand(\r\n      finalShapeGroup, this.#shapeName, konvaLayer);\r\n    this.#command.onExecute = this.#fireEvent;\r\n    this.#command.onUndo = this.#fireEvent;\r\n    // execute it\r\n    this.#command.execute();\r\n    // save it in undo stack\r\n    this.#app.addToUndoStack(this.#command);\r\n\r\n    // activate shape listeners\r\n    this.setShapeOn(finalShapeGroup, layerGroup);\r\n  }\r\n\r\n  /**\r\n   * Activate the tool.\r\n   *\r\n   * @param {boolean} flag The flag to activate or not.\r\n   */\r\n  activate(flag) {\r\n    // reset shape display properties\r\n    this.#shapeEditor.disable();\r\n    this.#shapeEditor.setShape(null);\r\n    this.#shapeEditor.setViewController(null);\r\n    // get the current draw layer\r\n    const layerGroup = this.#app.getActiveLayerGroup();\r\n    this.#activateCurrentPositionShapes(flag, layerGroup);\r\n    // listen to app change to update the draw layer\r\n    if (flag) {\r\n      // store cursor\r\n      this.#originalCursor = document.body.style.cursor;\r\n      // TODO: merge with drawController.activateDrawLayer?\r\n      this.#app.addEventListener('positionchange', () => {\r\n        this.#updateDrawLayer(layerGroup);\r\n      });\r\n      // same for colour\r\n      this.setFeatures({lineColour: this.#style.getLineColour()});\r\n    } else {\r\n      // reset shape and cursor\r\n      this.#resetActiveShapeGroup();\r\n      // reset local var\r\n      this.#originalCursor = undefined;\r\n      // remove listeners\r\n      this.#app.removeEventListener('positionchange', () => {\r\n        this.#updateDrawLayer(layerGroup);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the draw layer.\r\n   *\r\n   * @param {LayerGroup} layerGroup The origin layer group.\r\n   */\r\n  #updateDrawLayer(layerGroup) {\r\n    // activate the shape at current position\r\n    this.#activateCurrentPositionShapes(true, layerGroup);\r\n  }\r\n\r\n  /**\r\n   * Activate shapes at current position.\r\n   *\r\n   * @param {boolean} visible Set the draw layer visible or not.\r\n   * @param {LayerGroup} layerGroup The origin layer group.\r\n   */\r\n  #activateCurrentPositionShapes(visible, layerGroup) {\r\n    const drawController =\r\n      layerGroup.getActiveDrawLayer().getDrawController();\r\n\r\n    // get shape groups at the current position\r\n    const shapeGroups =\r\n      drawController.getCurrentPosGroup().getChildren();\r\n\r\n    // set shape display properties\r\n    if (visible) {\r\n      // activate shape listeners\r\n      shapeGroups.forEach((group) => {\r\n        this.setShapeOn(group, layerGroup);\r\n      });\r\n    } else {\r\n      // de-activate shape listeners\r\n      shapeGroups.forEach((group) => {\r\n        this.#setShapeOff(group);\r\n      });\r\n    }\r\n    // draw\r\n    const drawLayer = layerGroup.getActiveDrawLayer();\r\n    const konvaLayer = drawLayer.getKonvaLayer();\r\n    if (shapeGroups.length !== 0) {\r\n      konvaLayer.listening(true);\r\n    }\r\n    konvaLayer.draw();\r\n  }\r\n\r\n  /**\r\n   * Set shape group off properties.\r\n   *\r\n   * @param {object} shapeGroup The shape group to set off.\r\n   */\r\n  #setShapeOff(shapeGroup) {\r\n    // mouse styling\r\n    shapeGroup.off('mouseover');\r\n    shapeGroup.off('mouseout');\r\n    // drag\r\n    shapeGroup.draggable(false);\r\n    shapeGroup.off('dragstart.draw');\r\n    shapeGroup.off('dragmove.draw');\r\n    shapeGroup.off('dragend.draw');\r\n    shapeGroup.off('dblclick');\r\n  }\r\n\r\n  /**\r\n   * Get the real position from an event.\r\n   * TODO: use layer method?\r\n   *\r\n   * @param {object} index The input index as {x,y}.\r\n   * @param {LayerGroup} layerGroup The origin layer group.\r\n   * @returns {object} The real position in the image as {x,y}.\r\n   */\r\n  #getRealPosition(index, layerGroup) {\r\n    const drawLayer = layerGroup.getActiveDrawLayer();\r\n    const stage = drawLayer.getKonvaStage();\r\n    return {\r\n      x: stage.offset().x + index.x / stage.scale().x,\r\n      y: stage.offset().y + index.y / stage.scale().y\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reset the active shape group and mouse cursor to their original state.\r\n   */\r\n  #resetActiveShapeGroup() {\r\n    if (typeof this.#originalCursor !== 'undefined') {\r\n      document.body.style.cursor = this.#originalCursor;\r\n    }\r\n    if (typeof this.#activeShapeGroup !== 'undefined') {\r\n      this.#activeShapeGroup.opacity(1);\r\n      const colour = this.#style.getLineColour();\r\n      this.#activeShapeGroup.getChildren(canNodeChangeColour).forEach(\r\n        function (ashape) {\r\n          ashape.stroke(colour);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set shape group on properties.\r\n   *\r\n   * @param {object} shapeGroup The shape group to set on.\r\n   * @param {LayerGroup} layerGroup The origin layer group.\r\n   */\r\n  setShapeOn(shapeGroup, layerGroup) {\r\n    // adapt shape and cursor when mouse over\r\n    const mouseOnShape = () => {\r\n      document.body.style.cursor = this.#mouseOverCursor;\r\n      shapeGroup.opacity(0.75);\r\n    };\r\n    // mouse over event hanlding\r\n    shapeGroup.on('mouseover', () => {\r\n      // save local vars\r\n      this.#activeShapeGroup = shapeGroup;\r\n      // adapt shape\r\n      mouseOnShape();\r\n    });\r\n    // mouse out event hanlding\r\n    shapeGroup.on('mouseout', () => {\r\n      // reset shape\r\n      this.#resetActiveShapeGroup();\r\n      // reset local vars\r\n      this.#activeShapeGroup = undefined;\r\n    });\r\n\r\n    const drawLayer = layerGroup.getActiveDrawLayer();\r\n    const konvaLayer = drawLayer.getKonvaLayer();\r\n\r\n    // make it draggable\r\n    shapeGroup.draggable(true);\r\n    // cache drag start position\r\n    let dragStartPos = {x: shapeGroup.x(), y: shapeGroup.y()};\r\n\r\n    // command name based on shape type\r\n    const shapeDisplayName = getShapeDisplayName(\r\n      shapeGroup.getChildren(isNodeNameShape)[0]);\r\n\r\n    let colour = null;\r\n\r\n    // drag start event handling\r\n    shapeGroup.on('dragstart.draw', (/*event*/) => {\r\n      // store colour\r\n      colour = shapeGroup.getChildren(isNodeNameShape)[0].stroke();\r\n      // display trash\r\n      const drawLayer = layerGroup.getActiveDrawLayer();\r\n      const stage = drawLayer.getKonvaStage();\r\n      const scale = stage.scale();\r\n      const invscale = {x: 1 / scale.x, y: 1 / scale.y};\r\n      this.#trash.x(stage.offset().x + (stage.width() / (2 * scale.x)));\r\n      this.#trash.y(stage.offset().y + (stage.height() / (15 * scale.y)));\r\n      this.#trash.scale(invscale);\r\n      konvaLayer.add(this.#trash);\r\n      // deactivate anchors to avoid events on null shape\r\n      this.#shapeEditor.setAnchorsActive(false);\r\n      // draw\r\n      konvaLayer.draw();\r\n    });\r\n    // drag move event handling\r\n    shapeGroup.on('dragmove.draw', (event) => {\r\n      const group = event.target;\r\n      const drawLayer = layerGroup.getActiveDrawLayer();\r\n      // validate the group position\r\n      validateGroupPosition(drawLayer.getBaseSize(), group);\r\n      // get appropriate factory\r\n      let factory;\r\n      const keys = Object.keys(this.#shapeFactoryList);\r\n      for (let i = 0; i < keys.length; ++i) {\r\n        factory = new this.#shapeFactoryList[keys[i]];\r\n        if (factory.isFactoryGroup(shapeGroup)) {\r\n          // stop at first find\r\n          break;\r\n        }\r\n      }\r\n      if (typeof factory === 'undefined') {\r\n        throw new Error('Cannot find factory to update quantification.');\r\n      }\r\n      // update quantification if possible\r\n      if (typeof factory.updateQuantification !== 'undefined') {\r\n        const vc = layerGroup.getActiveViewLayer().getViewController();\r\n        factory.updateQuantification(group, vc);\r\n      }\r\n      // highlight trash when on it\r\n      const offset = getEventOffset(event.evt)[0];\r\n      const eventPos = this.#getRealPosition(offset, layerGroup);\r\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\r\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\r\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\r\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\r\n        this.#trash.getChildren().forEach(function (tshape) {\r\n          tshape.stroke('orange');\r\n        });\r\n        // change the group shapes colour\r\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\r\n          function (ashape) {\r\n            ashape.stroke('red');\r\n          });\r\n      } else {\r\n        this.#trash.getChildren().forEach(function (tshape) {\r\n          tshape.stroke('red');\r\n        });\r\n        // reset the group shapes colour\r\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\r\n          function (ashape) {\r\n            if (typeof ashape.stroke !== 'undefined') {\r\n              ashape.stroke(colour);\r\n            }\r\n          });\r\n      }\r\n      // draw\r\n      konvaLayer.draw();\r\n    });\r\n    // drag end event handling\r\n    shapeGroup.on('dragend.draw', (event) => {\r\n      const group = event.target;\r\n      // remove trash\r\n      this.#trash.remove();\r\n      // activate(false) will also trigger a dragend.draw\r\n      if (typeof event === 'undefined' ||\r\n        typeof event.evt === 'undefined') {\r\n        return;\r\n      }\r\n      const pos = {x: group.x(), y: group.y()};\r\n      // delete case\r\n      const offset = getEventOffset(event.evt)[0];\r\n      const eventPos = this.#getRealPosition(offset, layerGroup);\r\n      const trashHalfWidth = this.#trash.width() * this.#trash.scaleX() / 2;\r\n      const trashHalfHeight = this.#trash.height() * this.#trash.scaleY() / 2;\r\n      if (Math.abs(eventPos.x - this.#trash.x()) < trashHalfWidth &&\r\n        Math.abs(eventPos.y - this.#trash.y()) < trashHalfHeight) {\r\n        // compensate for the drag translation\r\n        group.x(dragStartPos.x);\r\n        group.y(dragStartPos.y);\r\n        // disable editor\r\n        this.#shapeEditor.disable();\r\n        this.#shapeEditor.setShape(null);\r\n        this.#shapeEditor.setViewController(null);\r\n        // reset colour\r\n        shapeGroup.getChildren(canNodeChangeColour).forEach(\r\n          function (ashape) {\r\n            ashape.stroke(colour);\r\n          });\r\n        // reset cursor\r\n        document.body.style.cursor = this.#originalCursor;\r\n        // delete command\r\n        const delcmd = new DeleteGroupCommand(group,\r\n          shapeDisplayName, konvaLayer);\r\n        delcmd.onExecute = this.#fireEvent;\r\n        delcmd.onUndo = this.#fireEvent;\r\n        delcmd.execute();\r\n        this.#app.addToUndoStack(delcmd);\r\n      } else {\r\n        // save drag move\r\n        const translation = {\r\n          x: pos.x - dragStartPos.x,\r\n          y: pos.y - dragStartPos.y\r\n        };\r\n        if (translation.x !== 0 || translation.y !== 0) {\r\n          const mvcmd = new MoveGroupCommand(group,\r\n            shapeDisplayName, translation, konvaLayer);\r\n          mvcmd.onExecute = this.#fireEvent;\r\n          mvcmd.onUndo = this.#fireEvent;\r\n          this.#app.addToUndoStack(mvcmd);\r\n\r\n          // the move is handled by Konva, trigger an event manually\r\n          this.#fireEvent({\r\n            type: 'drawmove',\r\n            id: group.id()\r\n          });\r\n        }\r\n        // reset anchors\r\n        this.#shapeEditor.setAnchorsActive(true);\r\n        this.#shapeEditor.resetAnchors();\r\n      }\r\n      // draw\r\n      konvaLayer.draw();\r\n      // reset start position\r\n      dragStartPos = {x: group.x(), y: group.y()};\r\n    });\r\n    // double click handling: update label\r\n    shapeGroup.on('dblclick', (event) => {\r\n      const group = event.currentTarget;\r\n      // get the label object for this shape\r\n      const label = group.findOne('Label');\r\n      // should just be one\r\n      if (typeof label === 'undefined') {\r\n        throw new Error('Could not find the shape label.');\r\n      }\r\n      const ktext = label.getText();\r\n      // id for event\r\n      const groupId = group.id();\r\n\r\n      const onSaveCallback = (meta) => {\r\n        // store meta\r\n        ktext.meta = meta;\r\n        // update text expression\r\n        ktext.setText(replaceFlags(\r\n          ktext.meta.textExpr, ktext.meta.quantification));\r\n        label.setVisible(ktext.meta.textExpr.length !== 0);\r\n\r\n        // trigger event\r\n        this.#fireEvent({\r\n          type: 'drawchange',\r\n          id: groupId\r\n        });\r\n        // draw\r\n        konvaLayer.draw();\r\n      };\r\n\r\n      // call roi dialog\r\n      customUI.openRoiDialog(ktext.meta, onSaveCallback);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the tool configuration options.\r\n   *\r\n   * @param {object} options The list of shape names amd classes.\r\n   */\r\n  setOptions(options) {\r\n    // save the options as the shape factory list\r\n    this.#shapeFactoryList = options;\r\n    // pass them to the editor\r\n    this.#shapeEditor.setFactoryList(options);\r\n  }\r\n\r\n  /**\r\n   * Get the type of tool options: here 'factory' since the shape\r\n   * list contains factories to create each possible shape.\r\n   *\r\n   * @returns {string} The type.\r\n   */\r\n  getOptionsType() {\r\n    return 'factory';\r\n  }\r\n\r\n  /**\r\n   * Set the tool live features: shape colour and shape name.\r\n   *\r\n   * @param {object} features The list of features.\r\n   */\r\n  setFeatures(features) {\r\n    if (typeof features.shapeColour !== 'undefined') {\r\n      this.#style.setLineColour(features.shapeColour);\r\n    }\r\n    if (typeof features.shapeName !== 'undefined') {\r\n      // check if we have it\r\n      if (!this.hasShape(features.shapeName)) {\r\n        throw new Error('Unknown shape: \\'' + features.shapeName + '\\'');\r\n      }\r\n      this.#shapeName = features.shapeName;\r\n    }\r\n    if (typeof features.mouseOverCursor !== 'undefined') {\r\n      this.#mouseOverCursor = features.mouseOverCursor;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialise the tool.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Get the list of event names that this tool can fire.\r\n   *\r\n   * @returns {Array} The list of event names.\r\n   */\r\n  getEventNames() {\r\n    return [\r\n      'drawcreate', 'drawchange', 'drawmove', 'drawdelete', 'drawlabelchange'\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Add an event listener on the app.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} listener The function associated with the provided\r\n   *   event type.\r\n   */\r\n  addEventListener(type, listener) {\r\n    if (typeof this.#listeners[type] === 'undefined') {\r\n      this.#listeners[type] = [];\r\n    }\r\n    this.#listeners[type].push(listener);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from the app.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} listener The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, listener) {\r\n    if (typeof this.#listeners[type] === 'undefined') {\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.#listeners[type].length; ++i) {\r\n      if (this.#listeners[type][i] === listener) {\r\n        this.#listeners[type].splice(i, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Private Methods -----------------------------------------------------------\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    if (typeof this.#listeners[event.type] === 'undefined') {\r\n      return;\r\n    }\r\n    for (let i = 0; i < this.#listeners[event.type].length; ++i) {\r\n      this.#listeners[event.type][i](event);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Check if the shape is in the shape list.\r\n   *\r\n   * @param {string} name The name of the shape.\r\n   * @returns {boolean} True if there is a factory for the shape.\r\n   */\r\n  hasShape(name) {\r\n    return typeof this.#shapeFactoryList[name] !== 'undefined';\r\n  }\r\n\r\n} // Draw class\r\n\r\n/**\r\n * Get the minimum position in a groups' anchors.\r\n *\r\n * @param {object} group The group that contains anchors.\r\n * @returns {object|undefined} The minimum position as {x,y}.\r\n */\r\nfunction getAnchorMin(group) {\r\n  const anchors = group.find('.anchor');\r\n  if (anchors.length === 0) {\r\n    return undefined;\r\n  }\r\n  let minX = anchors[0].x();\r\n  let minY = anchors[0].y();\r\n  for (let i = 0; i < anchors.length; ++i) {\r\n    minX = Math.min(minX, anchors[i].x());\r\n    minY = Math.min(minY, anchors[i].y());\r\n  }\r\n\r\n  return {x: minX, y: minY};\r\n}\r\n\r\n/**\r\n * Bound a node position.\r\n *\r\n * @param {object} node The node to bound the position.\r\n * @param {object} min The minimum position as {x,y}.\r\n * @param {object} max The maximum position as {x,y}.\r\n * @returns {boolean} True if the position was corrected.\r\n */\r\nfunction boundNodePosition(node, min, max) {\r\n  let changed = false;\r\n  if (node.x() < min.x) {\r\n    node.x(min.x);\r\n    changed = true;\r\n  } else if (node.x() > max.x) {\r\n    node.x(max.x);\r\n    changed = true;\r\n  }\r\n  if (node.y() < min.y) {\r\n    node.y(min.y);\r\n    changed = true;\r\n  } else if (node.y() > max.y) {\r\n    node.y(max.y);\r\n    changed = true;\r\n  }\r\n  return changed;\r\n}\r\n\r\n/**\r\n * Validate a group position.\r\n *\r\n * @param {object} stageSize The stage size {x,y}.\r\n * @param {object} group The group to evaluate.\r\n * @returns {boolean} True if the position was corrected.\r\n */\r\nfunction validateGroupPosition(stageSize, group) {\r\n  // if anchors get mixed, width/height can be negative\r\n  const shape = group.getChildren(isNodeNameShape)[0];\r\n  const anchorMin = getAnchorMin(group);\r\n  // handle no anchor: when dragging the label, the editor does\r\n  //   not activate\r\n  if (typeof anchorMin === 'undefined') {\r\n    return null;\r\n  }\r\n\r\n  const min = {\r\n    x: -anchorMin.x,\r\n    y: -anchorMin.y\r\n  };\r\n  const max = {\r\n    x: stageSize.x -\r\n      (anchorMin.x + Math.abs(shape.width())),\r\n    y: stageSize.y -\r\n      (anchorMin.y + Math.abs(shape.height()))\r\n  };\r\n\r\n  return boundNodePosition(group, min, max);\r\n}\r\n\r\n/**\r\n * Validate an anchor position.\r\n *\r\n * @param {object} stageSize The stage size {x,y}.\r\n * @param {object} anchor The anchor to evaluate.\r\n * @returns {boolean} True if the position was corrected.\r\n */\r\nexport function validateAnchorPosition(stageSize, anchor) {\r\n  const group = anchor.getParent();\r\n\r\n  const min = {\r\n    x: -group.x(),\r\n    y: -group.y()\r\n  };\r\n  const max = {\r\n    x: stageSize.x - group.x(),\r\n    y: stageSize.y - group.y()\r\n  };\r\n\r\n  return boundNodePosition(anchor, min, max);\r\n}\r\n","// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Point2D} from '../math/point';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Region Of Interest shape.\r\n * Note: should be a closed path.\r\n */\r\nexport class ROI {\r\n\r\n  /**\r\n   * List of points.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #points = [];\r\n\r\n  /**\r\n   * Get a point of the list at a given index.\r\n   *\r\n   * @param {number} index The index of the point to get\r\n   *   (beware, no size check).\r\n   * @returns {Point2D} The Point2D at the given index.\r\n   */\r\n  getPoint(index) {\r\n    return this.#points[index];\r\n  }\r\n\r\n  /**\r\n   * Get the length of the point list.\r\n   *\r\n   * @returns {number} The length of the point list.\r\n   */\r\n  getLength() {\r\n    return this.#points.length;\r\n  }\r\n\r\n  /**\r\n   * Add a point to the ROI.\r\n   *\r\n   * @param {Point2D} point The Point2D to add.\r\n   */\r\n  addPoint(point) {\r\n    this.#points.push(point);\r\n  }\r\n\r\n  /**\r\n   * Add points to the ROI.\r\n   *\r\n   * @param {Array} rhs The array of POints2D to add.\r\n   */\r\n  addPoints(rhs) {\r\n    this.#points = this.#points.concat(rhs);\r\n  }\r\n\r\n} // ROI class\r\n","import {ROI} from '../math/roi';\r\nimport {getDefaultAnchor} from './editor';\r\n// external\r\nimport Konva from 'konva';\r\n\r\n/**\r\n * Default draw label text.\r\n */\r\nconst defaultRoiLabelText = '';\r\n\r\n/**\r\n * ROI factory.\r\n */\r\nexport class RoiFactory {\r\n  /**\r\n   * Get the name of the shape group.\r\n   *\r\n   * @returns {string} The name.\r\n   */\r\n  getGroupName() {\r\n    return 'roi-group';\r\n  }\r\n\r\n  /**\r\n   * Get the number of points needed to build the shape.\r\n   *\r\n   * @returns {number|undefined} The number of points.\r\n   */\r\n  getNPoints() {\r\n    // undefined to end with double click\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Get the timeout between point storage.\r\n   *\r\n   * @returns {number} The timeout in milliseconds.\r\n   */\r\n  getTimeout() {\r\n    return 100;\r\n  }\r\n\r\n  /**\r\n   * Is the input group a group of this factory?\r\n   *\r\n   * @param {object} group The group to test.\r\n   * @returns {boolean} True if the group is from this fcatory.\r\n   */\r\n  isFactoryGroup(group) {\r\n    return this.getGroupName() === group.name();\r\n  }\r\n\r\n  /**\r\n   * Create a roi shape to be displayed.\r\n   *\r\n   * @param {Array} points The points from which to extract the line.\r\n   * @param {object} style The drawing style.\r\n   * @param {object} _viewController The associated view controller.\r\n   * @returns {object} The Konva group.\r\n   */\r\n  create(points, style, _viewController) {\r\n    // physical shape\r\n    const roi = new ROI();\r\n    // add input points to the ROI\r\n    roi.addPoints(points);\r\n    // points stored the Konvajs way\r\n    const arr = [];\r\n    for (let i = 0; i < roi.getLength(); ++i) {\r\n      arr.push(roi.getPoint(i).getX());\r\n      arr.push(roi.getPoint(i).getY());\r\n    }\r\n    // draw shape\r\n    const kshape = new Konva.Line({\r\n      points: arr,\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape',\r\n      closed: true\r\n    });\r\n\r\n    // text\r\n    const ktext = new Konva.Text({\r\n      fontSize: style.getFontSize(),\r\n      fontFamily: style.getFontFamily(),\r\n      fill: style.getLineColour(),\r\n      name: 'text'\r\n    });\r\n    let textExpr = '';\r\n    // todo: allow overrride?\r\n    // if (typeof roiLabelText !== 'undefined') {\r\n    //   textExpr = roiLabelText;\r\n    // } else {\r\n    textExpr = defaultRoiLabelText;\r\n    // }\r\n    ktext.setText(textExpr);\r\n    // augment text with meta\r\n    // @ts-ignore\r\n    ktext.meta = {\r\n      textExpr: textExpr,\r\n      quantification: {}\r\n    };\r\n\r\n    // label\r\n    const klabel = new Konva.Label({\r\n      x: roi.getPoint(0).getX(),\r\n      y: roi.getPoint(0).getY() + style.scale(10),\r\n      scale: style.applyZoomScale(1),\r\n      visible: textExpr.length !== 0,\r\n      name: 'label'\r\n    });\r\n    klabel.add(ktext);\r\n    klabel.add(new Konva.Tag({\r\n      fill: style.getLineColour(),\r\n      opacity: style.getTagOpacity()\r\n    }));\r\n\r\n    // return group\r\n    const group = new Konva.Group();\r\n    group.name(this.getGroupName());\r\n    group.add(klabel);\r\n    group.add(kshape);\r\n    group.visible(true); // dont inherit\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Get anchors to update a roi shape.\r\n   *\r\n   * @param {object} shape The associated shape.\r\n   * @param {object} style The application style.\r\n   * @returns {Array} A list of anchors.\r\n   */\r\n  getAnchors(shape, style) {\r\n    const points = shape.points();\r\n\r\n    const anchors = [];\r\n    for (let i = 0; i < points.length; i = i + 2) {\r\n      const px = points[i] + shape.x();\r\n      const py = points[i + 1] + shape.y();\r\n      const name = i.toString();\r\n      anchors.push(getDefaultAnchor(\r\n        px, py, name, style\r\n      ));\r\n    }\r\n    return anchors;\r\n  }\r\n\r\n  /**\r\n   * Update a roi shape.\r\n   *\r\n   * @param {object} anchor The active anchor.\r\n   * @param {object} style The app style.\r\n   * @param {object} _viewController The associated view controller.\r\n   */\r\n  update(anchor, style, _viewController) {\r\n    // parent group\r\n    const group = anchor.getParent();\r\n    // associated shape\r\n    const kroi = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n      // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n\r\n    // update self\r\n    const point = group.getChildren(function (node) {\r\n      return node.id() === anchor.id();\r\n    })[0];\r\n    point.x(anchor.x());\r\n    point.y(anchor.y());\r\n    // update the roi point and compensate for possible drag\r\n    // (the anchor id is the index of the point in the list)\r\n    const points = kroi.points();\r\n    points[anchor.id()] = anchor.x() - kroi.x();\r\n    points[anchor.id() + 1] = anchor.y() - kroi.y();\r\n    kroi.points(points);\r\n\r\n    // update text\r\n    const ktext = klabel.getText();\r\n    ktext.setText(ktext.meta.textExpr);\r\n    // update position\r\n    const textPos = {\r\n      x: points[0] + kroi.x(),\r\n      y: points[1] + kroi.y() + style.scale(10)\r\n    };\r\n    klabel.position(textPos);\r\n  }\r\n\r\n} // class RoiFactory\r\n","// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Point2D} from '../math/point';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Path shape.\r\n */\r\nexport class Path {\r\n\r\n  /**\r\n   * @param {Array} [inputPointArray] The list of Point2D that make\r\n   *   the path (optional).\r\n   * @param {Array} [inputControlPointIndexArray] The list of control\r\n   *  point of path, as indexes (optional).\r\n   * Note: first and last point do not need to be equal.\r\n   */\r\n  constructor(inputPointArray, inputControlPointIndexArray) {\r\n    /**\r\n     * List of points.\r\n     *\r\n     * @type {Array}\r\n     */\r\n    this.pointArray = inputPointArray ? inputPointArray.slice() : [];\r\n    /**\r\n     * List of control points.\r\n     *\r\n     * @type {Array}\r\n     */\r\n    this.controlPointIndexArray = inputControlPointIndexArray\r\n      ? inputControlPointIndexArray.slice() : [];\r\n  }\r\n\r\n  /**\r\n   * Get a point of the list.\r\n   *\r\n   * @param {number} index The index of the point\r\n   *   to get (beware, no size check).\r\n   * @returns {Point2D} The Point2D at the given index.\r\n   */\r\n  getPoint(index) {\r\n    return this.pointArray[index];\r\n  }\r\n\r\n  /**\r\n   * Is the given point a control point.\r\n   *\r\n   * @param {Point2D} point The Point2D to check.\r\n   * @returns {boolean} True if a control point.\r\n   */\r\n  isControlPoint(point) {\r\n    const index = this.pointArray.indexOf(point);\r\n    if (index !== -1) {\r\n      return this.controlPointIndexArray.indexOf(index) !== -1;\r\n    } else {\r\n      throw new Error('Error: isControlPoint called with not in list point.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the length of the path.\r\n   *\r\n   * @returns {number} The length of the path.\r\n   */\r\n  getLength() {\r\n    return this.pointArray.length;\r\n  }\r\n\r\n  /**\r\n   * Add a point to the path.\r\n   *\r\n   * @param {Point2D} point The Point2D to add.\r\n   */\r\n  addPoint(point) {\r\n    this.pointArray.push(point);\r\n  }\r\n\r\n  /**\r\n   * Add a control point to the path.\r\n   *\r\n   * @param {Point2D} point The Point2D to make a control point.\r\n   */\r\n  addControlPoint(point) {\r\n    const index = this.pointArray.indexOf(point);\r\n    if (index !== -1) {\r\n      this.controlPointIndexArray.push(index);\r\n    } else {\r\n      throw new Error(\r\n        'Cannot mark a non registered point as control point.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add points to the path.\r\n   *\r\n   * @param {Array} newPointArray The list of Point2D to add.\r\n   */\r\n  addPoints(newPointArray) {\r\n    this.pointArray = this.pointArray.concat(newPointArray);\r\n  }\r\n\r\n  /**\r\n   * Append a Path to this one.\r\n   *\r\n   * @param {Path} other The Path to append.\r\n   */\r\n  appenPath(other) {\r\n    const oldSize = this.pointArray.length;\r\n    this.pointArray = this.pointArray.concat(other.pointArray);\r\n    const indexArray = [];\r\n    for (let i = 0; i < other.controlPointIndexArray.length; ++i) {\r\n      indexArray[i] = other.controlPointIndexArray[i] + oldSize;\r\n    }\r\n    this.controlPointIndexArray =\r\n      this.controlPointIndexArray.concat(indexArray);\r\n  }\r\n\r\n} // Path class\r\n","/**\r\n * Circular Bucket Queue.\r\n *\r\n * Returns input'd points in sorted order. All operations run in roughly O(1)\r\n * time (for input with small cost values), but it has a strict requirement:\r\n *\r\n * If the most recent point had a cost of c, any points added should have a cost\r\n * c' in the range c <= c' <= c + (capacity - 1).\r\n */\r\nexport class BucketQueue {\r\n\r\n  /**\r\n   * @param {number} bits Number of bits.\r\n   * @param {Function} cost_functor The cost functor.\r\n   */\r\n  constructor(bits, cost_functor) {\r\n    this.bucketCount = 1 << bits; // # of buckets = 2^bits\r\n    this.mask = this.bucketCount - 1; // 2^bits - 1 = index mask\r\n    this.size = 0;\r\n\r\n    this.loc = 0; // Current index in bucket list\r\n    // Cost defaults to item value\r\n    this.cost = (typeof (cost_functor) !== 'undefined')\r\n      ? cost_functor : function (item) {\r\n        return item;\r\n      };\r\n    this.buckets = this.buildArray(this.bucketCount);\r\n  }\r\n\r\n  push(item) {\r\n    // Prepend item to the list in the appropriate bucket\r\n    const bucket = this.getBucket(item);\r\n    item.next = this.buckets[bucket];\r\n    this.buckets[bucket] = item;\r\n\r\n    this.size++;\r\n  }\r\n\r\n  pop() {\r\n    if (this.size === 0) {\r\n      throw new Error('Cannot pop, bucketQueue is empty.');\r\n    }\r\n\r\n    // Find first empty bucket\r\n    while (this.buckets[this.loc] === null) {\r\n      this.loc = (this.loc + 1) % this.bucketCount;\r\n    }\r\n\r\n    // All items in bucket have same cost, return the first one\r\n    const ret = this.buckets[this.loc];\r\n    this.buckets[this.loc] = ret.next;\r\n    ret.next = null;\r\n\r\n    this.size--;\r\n    return ret;\r\n  }\r\n\r\n  // TODO: needs at least two items...\r\n  remove(item) {\r\n    // Tries to remove item from queue. Returns true on success, false otherwise\r\n    if (!item) {\r\n      return false;\r\n    }\r\n\r\n    // To find node, go to bucket and search through unsorted list.\r\n    const bucket = this.getBucket(item);\r\n    let node = this.buckets[bucket];\r\n\r\n    while (node !== null &&\r\n      !(node.next !== null &&\r\n      item.x === node.next.x &&\r\n      item.y === node.next.y)) {\r\n      node = node.next;\r\n    }\r\n\r\n    if (node === null) {\r\n      // Item not in list, ergo item not in queue\r\n      return false;\r\n    } else {\r\n      // Found item, do standard list node deletion\r\n      node.next = node.next.next;\r\n\r\n      this.size--;\r\n      return true;\r\n    }\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.size === 0;\r\n  }\r\n\r\n  getBucket(item) {\r\n    // Bucket index is the masked cost\r\n    return this.cost(item) & this.mask;\r\n  }\r\n\r\n  buildArray(newSize) {\r\n    // Create array and initialze pointers to null\r\n    const buckets = new Array(newSize);\r\n\r\n    for (let i = 0; i < buckets.length; i++) {\r\n      buckets[i] = null;\r\n    }\r\n\r\n    return buckets;\r\n  }\r\n\r\n} // class BucketQueue\r\n","import {BucketQueue} from './bucketQueue';\r\n\r\n// Pre-created to reduce allocation in inner loops\r\nconst __twothirdpi = (2 / (3 * Math.PI));\r\n\r\n/**\r\n * @param {Array} data The input data.\r\n * @param {number} width The width of the output.\r\n * @param {number} height The height of the output.\r\n * @returns {object} A greyscale object\r\n */\r\nfunction computeGreyscale(data, width, height) {\r\n  // Returns 2D augmented array containing greyscale data\r\n  // Greyscale values found by averaging colour channels\r\n  // Input should be in a flat RGBA array, with values between 0 and 255\r\n  const greyscale = {\r\n    data: []\r\n  };\r\n\r\n  // Compute actual values\r\n  for (let y = 0; y < height; y++) {\r\n    greyscale.data[y] = [];\r\n\r\n    for (let x = 0; x < width; x++) {\r\n      const p = (y * width + x) * 4;\r\n      greyscale.data[y][x] = (data[p] + data[p + 1] + data[p + 2]) / (3 * 255);\r\n    }\r\n  }\r\n\r\n  // Augment with convenience functions\r\n  greyscale.dx = function (x, y) {\r\n    if (x + 1 === this.data[y].length) {\r\n      // If we're at the end, back up one\r\n      x--;\r\n    }\r\n    return this.data[y][x + 1] - this.data[y][x];\r\n  };\r\n\r\n  greyscale.dy = function (x, y) {\r\n    if (y + 1 === this.data.length) {\r\n      // If we're at the end, back up one\r\n      y--;\r\n    }\r\n    return this.data[y][x] - this.data[y + 1][x];\r\n  };\r\n\r\n  greyscale.gradMagnitude = function (x, y) {\r\n    const dx = this.dx(x, y);\r\n    const dy = this.dy(x, y);\r\n    return Math.sqrt(dx * dx + dy * dy);\r\n  };\r\n\r\n  greyscale.laplace = function (x, y) {\r\n    // Laplacian of Gaussian\r\n    let lap = -16 * this.data[y][x];\r\n    lap += this.data[y - 2][x];\r\n    lap += this.data[y - 1][x - 1] +\r\n      2 * this.data[y - 1][x] +\r\n      this.data[y - 1][x + 1];\r\n    lap += this.data[y][x - 2] +\r\n      2 * this.data[y][x - 1] +\r\n      2 * this.data[y][x + 1] +\r\n      this.data[y][x + 2];\r\n    lap += this.data[y + 1][x - 1] +\r\n      2 * this.data[y + 1][x] +\r\n      this.data[y + 1][x + 1];\r\n    lap += this.data[y + 2][x];\r\n\r\n    return lap;\r\n  };\r\n\r\n  return greyscale;\r\n}\r\n\r\n/**\r\n * @param {object} greyscale The input greyscale-\r\n * @returns {object} A gradient object\r\n */\r\nfunction computeGradient(greyscale) {\r\n  // Returns a 2D array of gradient magnitude values for greyscale. The values\r\n  // are scaled between 0 and 1, and then flipped, so that it works as a cost\r\n  // function.\r\n  const gradient = [];\r\n\r\n  let max = 0; // Maximum gradient found, for scaling purposes\r\n\r\n  let x = 0;\r\n  let y = 0;\r\n\r\n  for (y = 0; y < greyscale.data.length - 1; y++) {\r\n    gradient[y] = [];\r\n\r\n    for (x = 0; x < greyscale.data[y].length - 1; x++) {\r\n      gradient[y][x] = greyscale.gradMagnitude(x, y);\r\n      max = Math.max(gradient[y][x], max);\r\n    }\r\n\r\n    gradient[y][greyscale.data[y].length - 1] =\r\n      gradient[y][greyscale.data.length - 2];\r\n  }\r\n\r\n  gradient[greyscale.data.length - 1] = [];\r\n  for (let i = 0; i < gradient[0].length; i++) {\r\n    gradient[greyscale.data.length - 1][i] =\r\n      gradient[greyscale.data.length - 2][i];\r\n  }\r\n\r\n  // Flip and scale.\r\n  for (y = 0; y < gradient.length; y++) {\r\n    for (x = 0; x < gradient[y].length; x++) {\r\n      // @ts-ignore\r\n      gradient[y][x] = 1 - (gradient[y][x] / max);\r\n    }\r\n  }\r\n\r\n  return gradient;\r\n}\r\n\r\n/**\r\n * @param {object} greyscale The input greyscale.\r\n * @returns {object} A laplace object.\r\n */\r\nfunction computeLaplace(greyscale) {\r\n  // Returns a 2D array of Laplacian of Gaussian values\r\n  const laplace = [];\r\n\r\n  // Make the edges low cost here.\r\n\r\n  laplace[0] = [];\r\n  laplace[1] = [];\r\n  for (let i = 1; i < greyscale.data.length; i++) {\r\n    // Pad top, since we can't compute Laplacian\r\n    laplace[0][i] = 1;\r\n    laplace[1][i] = 1;\r\n  }\r\n\r\n  for (let y = 2; y < greyscale.data.length - 2; y++) {\r\n    laplace[y] = [];\r\n    // Pad left, ditto\r\n    laplace[y][0] = 1;\r\n    laplace[y][1] = 1;\r\n\r\n    for (let x = 2; x < greyscale.data[y].length - 2; x++) {\r\n      // Threshold needed to get rid of clutter.\r\n      laplace[y][x] = (greyscale.laplace(x, y) > 0.33) ? 0 : 1;\r\n    }\r\n\r\n    // Pad right, ditto\r\n    laplace[y][greyscale.data[y].length - 2] = 1;\r\n    laplace[y][greyscale.data[y].length - 1] = 1;\r\n  }\r\n\r\n  laplace[greyscale.data.length - 2] = [];\r\n  laplace[greyscale.data.length - 1] = [];\r\n  for (let j = 1; j < greyscale.data.length; j++) {\r\n    // Pad bottom, ditto\r\n    laplace[greyscale.data.length - 2][j] = 1;\r\n    laplace[greyscale.data.length - 1][j] = 1;\r\n  }\r\n\r\n  return laplace;\r\n}\r\n\r\n/**\r\n * Compute the X gradient.\r\n *\r\n * @param {object} greyscale The values.\r\n * @returns {Array} The gradient.\r\n */\r\nfunction computeGradX(greyscale) {\r\n  // Returns 2D array of x-gradient values for greyscale\r\n  const gradX = [];\r\n\r\n  for (let y = 0; y < greyscale.data.length; y++) {\r\n    gradX[y] = [];\r\n\r\n    for (let x = 0; x < greyscale.data[y].length - 1; x++) {\r\n      gradX[y][x] = greyscale.dx(x, y);\r\n    }\r\n\r\n    gradX[y][greyscale.data[y].length - 1] =\r\n      gradX[y][greyscale.data[y].length - 2];\r\n  }\r\n\r\n  return gradX;\r\n}\r\n\r\n/**\r\n * Compute the Y gradient.\r\n *\r\n * @param {object} greyscale The values.\r\n * @returns {Array} The gradient.\r\n */\r\nfunction computeGradY(greyscale) {\r\n  // Returns 2D array of y-gradient values for greyscale\r\n  const gradY = [];\r\n\r\n  for (let y = 0; y < greyscale.data.length - 1; y++) {\r\n    gradY[y] = [];\r\n\r\n    for (let x = 0; x < greyscale.data[y].length; x++) {\r\n      gradY[y][x] = greyscale.dy(x, y);\r\n    }\r\n  }\r\n\r\n  gradY[greyscale.data.length - 1] = [];\r\n  for (let i = 0; i < greyscale.data[0].length; i++) {\r\n    gradY[greyscale.data.length - 1][i] = gradY[greyscale.data.length - 2][i];\r\n  }\r\n\r\n  return gradY;\r\n}\r\n\r\n/**\r\n * Compute the gradient unit vector.\r\n *\r\n * @param {Array} gradX The X gradient.\r\n * @param {Array} gradY The Y gradient.\r\n * @param {number} px The point X.\r\n * @param {number} py The point Y.\r\n * @param {object} out The result.\r\n */\r\nfunction gradUnitVector(gradX, gradY, px, py, out) {\r\n  // Returns the gradient vector at (px,py), scaled to a magnitude of 1\r\n  const ox = gradX[py][px];\r\n  const oy = gradY[py][px];\r\n\r\n  let gvm = Math.sqrt(ox * ox + oy * oy);\r\n  gvm = Math.max(gvm, 1e-100); // To avoid possible divide-by-0 errors\r\n\r\n  out.x = ox / gvm;\r\n  out.y = oy / gvm;\r\n}\r\n\r\n/**\r\n * Compute the gradient direction.\r\n *\r\n * @param {Array} gradX The X gradient.\r\n * @param {Array} gradY The Y gradient.\r\n * @param {number} px The point X.\r\n * @param {number} py The point Y.\r\n * @param {number} qx The q X.\r\n * @param {number} qy The q Y.\r\n * @returns {number} The direction.\r\n */\r\nfunction gradDirection(gradX, gradY, px, py, qx, qy) {\r\n  const __dgpuv = {x: -1, y: -1};\r\n  const __gdquv = {x: -1, y: -1};\r\n  // Compute the gradiant direction, in radians, between to points\r\n  gradUnitVector(gradX, gradY, px, py, __dgpuv);\r\n  gradUnitVector(gradX, gradY, qx, qy, __gdquv);\r\n\r\n  let dp = __dgpuv.y * (qx - px) - __dgpuv.x * (qy - py);\r\n  let dq = __gdquv.y * (qx - px) - __gdquv.x * (qy - py);\r\n\r\n  // Make sure dp is positive, to keep things consistant\r\n  if (dp < 0) {\r\n    dp = -dp;\r\n    dq = -dq;\r\n  }\r\n\r\n  if (px !== qx && py !== qy) {\r\n    // We're going diagonally between pixels\r\n    dp *= Math.SQRT1_2;\r\n    dq *= Math.SQRT1_2;\r\n  }\r\n\r\n  return __twothirdpi * (Math.acos(dp) + Math.acos(dq));\r\n}\r\n\r\n/**\r\n * Compute the sides.\r\n *\r\n * @param {number} dist The distance.\r\n * @param {Array} gradX The X gradient.\r\n * @param {Array} gradY The Y gradient.\r\n * @param {object} greyscale The value.\r\n * @returns {object} The sides.\r\n */\r\nfunction computeSides(dist, gradX, gradY, greyscale) {\r\n  // Returns 2 2D arrays, containing inside and outside greyscale values.\r\n  // These greyscale values are the intensity just a little bit along the\r\n  // gradient vector, in either direction, from the supplied point. These\r\n  // values are used when using active-learning Intelligent Scissors\r\n\r\n  const sides = {};\r\n  sides.inside = [];\r\n  sides.outside = [];\r\n\r\n  const guv = {x: -1, y: -1}; // Current gradient unit vector\r\n\r\n  for (let y = 0; y < gradX.length; y++) {\r\n    sides.inside[y] = [];\r\n    sides.outside[y] = [];\r\n\r\n    for (let x = 0; x < gradX[y].length; x++) {\r\n      gradUnitVector(gradX, gradY, x, y, guv);\r\n\r\n      //(x, y) rotated 90 = (y, -x)\r\n\r\n      let ix = Math.round(x + dist * guv.y);\r\n      let iy = Math.round(y - dist * guv.x);\r\n      let ox = Math.round(x - dist * guv.y);\r\n      let oy = Math.round(y + dist * guv.x);\r\n\r\n      ix = Math.max(Math.min(ix, gradX[y].length - 1), 0);\r\n      ox = Math.max(Math.min(ox, gradX[y].length - 1), 0);\r\n      iy = Math.max(Math.min(iy, gradX.length - 1), 0);\r\n      oy = Math.max(Math.min(oy, gradX.length - 1), 0);\r\n\r\n      sides.inside[y][x] = greyscale.data[iy][ix];\r\n      sides.outside[y][x] = greyscale.data[oy][ox];\r\n    }\r\n  }\r\n\r\n  return sides;\r\n}\r\n\r\n/**\r\n * Gaussian blur an input buffer.\r\n *\r\n * @param {Array} buffer The input buffer.\r\n * @param {Array} out The result.\r\n */\r\nfunction gaussianBlur(buffer, out) {\r\n  // Smooth values over to fill in gaps in the mapping\r\n  out[0] = 0.4 * buffer[0] + 0.5 * buffer[1] + 0.1 * buffer[1];\r\n  out[1] = 0.25 * buffer[0] + 0.4 * buffer[1] + 0.25 * buffer[2] +\r\n    0.1 * buffer[3];\r\n\r\n  for (let i = 2; i < buffer.length - 2; i++) {\r\n    out[i] = 0.05 * buffer[i - 2] + 0.25 * buffer[i - 1] +\r\n      0.4 * buffer[i] + 0.25 * buffer[i + 1] + 0.05 * buffer[i + 2];\r\n  }\r\n\r\n  const len = buffer.length;\r\n  out[len - 2] = 0.25 * buffer[len - 1] + 0.4 * buffer[len - 2] +\r\n    0.25 * buffer[len - 3] + 0.1 * buffer[len - 4];\r\n  out[len - 1] = 0.4 * buffer[len - 1] + 0.5 * buffer[len - 2] +\r\n    0.1 * buffer[len - 3];\r\n}\r\n\r\n/**\r\n * Scissors\r\n *\r\n * Ref: Eric N. Mortensen, William A. Barrett, Interactive Segmentation with\r\n *   Intelligent Scissors, Graphical Models and Image Processing, Volume 60,\r\n *   Issue 5, September 1998, Pages 349-384, ISSN 1077-3169,\r\n *   DOI: 10.1006/gmip.1998.0480.\r\n *\r\n * {@link http://www.sciencedirect.com/science/article/B6WG4-45JB8WN-9/2/6fe59d8089fd1892c2bfb82283065579}\r\n *\r\n * Highly inspired from {@link http://code.google.com/p/livewire-javascript/}\r\n */\r\nexport class Scissors {\r\n\r\n  constructor() {\r\n    this.width = -1;\r\n    this.height = -1;\r\n\r\n    this.curPoint = null; // Corrent point we're searching on.\r\n    this.searchGranBits = 8; // Bits of resolution for BucketQueue.\r\n    this.searchGran = 1 << this.searchGranBits; //bits.\r\n    this.pointsPerPost = 500;\r\n\r\n    // Precomputed image data. All in ranges 0 >= x >= 1 and\r\n    //   all inverted (1 - x).\r\n    this.greyscale = null; // Greyscale of image\r\n    this.laplace = null; // Laplace zero-crossings (either 0 or 1).\r\n    this.gradient = null; // Gradient magnitudes.\r\n    this.gradX = null; // X-differences.\r\n    this.gradY = null; // Y-differences.\r\n\r\n    // Matrix mapping point => parent along shortest-path to root.\r\n    this.parents = null;\r\n\r\n    this.working = false; // Currently computing shortest paths?\r\n\r\n    // Begin Training:\r\n    this.trained = false;\r\n    this.trainingPoints = null;\r\n\r\n    this.edgeWidth = 2;\r\n    this.trainingLength = 32;\r\n\r\n    this.edgeGran = 256;\r\n    this.edgeTraining = null;\r\n\r\n    this.gradPointsNeeded = 32;\r\n    this.gradGran = 1024;\r\n    this.gradTraining = null;\r\n\r\n    this.insideGran = 256;\r\n    this.insideTraining = null;\r\n\r\n    this.outsideGran = 256;\r\n    this.outsideTraining = null;\r\n  }\r\n  // End Training\r\n\r\n\r\n  // Begin training methods //\r\n  getTrainingIdx(granularity, value) {\r\n    return Math.round((granularity - 1) * value);\r\n  }\r\n\r\n  getTrainedEdge(edge) {\r\n    return this.edgeTraining[this.getTrainingIdx(this.edgeGran, edge)];\r\n  }\r\n\r\n  getTrainedGrad(grad) {\r\n    return this.gradTraining[this.getTrainingIdx(this.gradGran, grad)];\r\n  }\r\n\r\n  getTrainedInside(inside) {\r\n    return this.insideTraining[this.getTrainingIdx(this.insideGran, inside)];\r\n  }\r\n\r\n  getTrainedOutside(outside) {\r\n    return this.outsideTraining[this.getTrainingIdx(this.outsideGran, outside)];\r\n  }\r\n  // End training methods //\r\n\r\n  setWorking(working) {\r\n    // Sets working flag\r\n    this.working = working;\r\n  }\r\n\r\n  setDimensions(width, height) {\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n\r\n  setData(data) {\r\n    if (this.width === -1 || this.height === -1) {\r\n      // The width and height should have already been set\r\n      throw new Error('Dimensions have not been set.');\r\n    }\r\n\r\n    this.greyscale = computeGreyscale(data, this.width, this.height);\r\n    this.laplace = computeLaplace(this.greyscale);\r\n    this.gradient = computeGradient(this.greyscale);\r\n    this.gradX = computeGradX(this.greyscale);\r\n    this.gradY = computeGradY(this.greyscale);\r\n\r\n    const sides = computeSides(\r\n      this.edgeWidth, this.gradX, this.gradY, this.greyscale);\r\n    this.inside = sides.inside;\r\n    this.outside = sides.outside;\r\n    this.edgeTraining = [];\r\n    this.gradTraining = [];\r\n    this.insideTraining = [];\r\n    this.outsideTraining = [];\r\n  }\r\n\r\n  findTrainingPoints(p) {\r\n    // Grab the last handful of points for training\r\n    const points = [];\r\n\r\n    if (this.parents !== null) {\r\n      for (let i = 0; i < this.trainingLength && p; i++) {\r\n        points.push(p);\r\n        p = this.parents[p.y][p.x];\r\n      }\r\n    }\r\n\r\n    return points;\r\n  }\r\n\r\n  resetTraining() {\r\n    this.trained = false; // Training is ignored with this flag set\r\n  }\r\n\r\n  doTraining(p) {\r\n    // Compute training weights and measures\r\n    this.trainingPoints = this.findTrainingPoints(p);\r\n\r\n    if (this.trainingPoints.length < 8) {\r\n      return; // Not enough points, I think. It might crash if length = 0.\r\n    }\r\n\r\n    const buffer = [];\r\n    this.calculateTraining(\r\n      buffer, this.edgeGran, this.greyscale, this.edgeTraining);\r\n    this.calculateTraining(\r\n      buffer, this.gradGran, this.gradient, this.gradTraining);\r\n    this.calculateTraining(\r\n      buffer, this.insideGran, this.inside, this.insideTraining);\r\n    this.calculateTraining(\r\n      buffer, this.outsideGran, this.outside, this.outsideTraining);\r\n\r\n    if (this.trainingPoints.length < this.gradPointsNeeded) {\r\n      // If we have two few training points, the gradient weight map might not\r\n      // be smooth enough, so average with normal weights.\r\n      this.addInStaticGrad(this.trainingPoints.length, this.gradPointsNeeded);\r\n    }\r\n\r\n    this.trained = true;\r\n  }\r\n\r\n  calculateTraining(\r\n    buffer, granularity, input, output) {\r\n    let i = 0;\r\n    // Build a map of raw-weights to trained-weights by favoring input values\r\n    buffer.length = granularity;\r\n    for (i = 0; i < granularity; i++) {\r\n      buffer[i] = 0;\r\n    }\r\n\r\n    let maxVal = 1;\r\n    for (i = 0; i < this.trainingPoints.length; i++) {\r\n      const p = this.trainingPoints[i];\r\n      const idx = this.getTrainingIdx(granularity, input[p.y][p.x]);\r\n      buffer[idx] += 1;\r\n\r\n      maxVal = Math.max(maxVal, buffer[idx]);\r\n    }\r\n\r\n    // Invert and scale.\r\n    for (i = 0; i < granularity; i++) {\r\n      buffer[i] = 1 - buffer[i] / maxVal;\r\n    }\r\n\r\n    // Blur it, as suggested. Gets rid of static.\r\n    gaussianBlur(buffer, output);\r\n  }\r\n\r\n  addInStaticGrad(have, need) {\r\n    // Average gradient raw-weights to trained-weights map with standard weight\r\n    // map so that we don't end up with something to spiky\r\n    for (let i = 0; i < this.gradGran; i++) {\r\n      this.gradTraining[i] = Math.min(\r\n        this.gradTraining[i],\r\n        1 - i * (need - have) / (need * this.gradGran)\r\n      );\r\n    }\r\n  }\r\n\r\n  gradDirection(px, py, qx, qy) {\r\n    return gradDirection(this.gradX, this.gradY, px, py, qx, qy);\r\n  }\r\n\r\n  dist(px, py, qx, qy) {\r\n    // The grand culmunation of most of the code: the weighted distance function\r\n    let grad = this.gradient[qy][qx];\r\n\r\n    if (px === qx || py === qy) {\r\n      // The distance is Euclidean-ish; non-diagonal edges should be shorter\r\n      grad *= Math.SQRT1_2;\r\n    }\r\n\r\n    const lap = this.laplace[qy][qx];\r\n    const dir = this.gradDirection(px, py, qx, qy);\r\n\r\n    if (this.trained) {\r\n      // Apply training magic\r\n      const gradT = this.getTrainedGrad(grad);\r\n      const edgeT = this.getTrainedEdge(this.greyscale.data[py][px]);\r\n      const insideT = this.getTrainedInside(this.inside[py][px]);\r\n      const outsideT = this.getTrainedOutside(this.outside[py][px]);\r\n\r\n      return 0.3 * gradT + 0.3 * lap + 0.1 * (dir + edgeT + insideT + outsideT);\r\n    } else {\r\n      // Normal weights\r\n      return 0.43 * grad + 0.43 * lap + 0.11 * dir;\r\n    }\r\n  }\r\n\r\n  adj(p) {\r\n    const list = [];\r\n\r\n    const sx = Math.max(p.x - 1, 0);\r\n    const sy = Math.max(p.y - 1, 0);\r\n    const ex = Math.min(p.x + 1, this.greyscale.data[0].length - 1);\r\n    const ey = Math.min(p.y + 1, this.greyscale.data.length - 1);\r\n\r\n    let idx = 0;\r\n    for (let y = sy; y <= ey; y++) {\r\n      for (let x = sx; x <= ex; x++) {\r\n        if (x !== p.x || y !== p.y) {\r\n          list[idx++] = {x: x, y: y};\r\n        }\r\n      }\r\n    }\r\n\r\n    return list;\r\n  }\r\n\r\n  #costFunction = (p) => {\r\n    return Math.round(this.searchGran * this.cost[p.y][p.x]);\r\n  };\r\n\r\n  setPoint(sp) {\r\n    this.setWorking(true);\r\n\r\n    this.curPoint = sp;\r\n\r\n    let x = 0;\r\n    let y = 0;\r\n\r\n    this.visited = [];\r\n    for (y = 0; y < this.height; y++) {\r\n      this.visited[y] = [];\r\n      for (x = 0; x < this.width; x++) {\r\n        this.visited[y][x] = false;\r\n      }\r\n    }\r\n\r\n    this.parents = [];\r\n    for (y = 0; y < this.height; y++) {\r\n      this.parents[y] = [];\r\n    }\r\n\r\n    this.cost = [];\r\n    for (y = 0; y < this.height; y++) {\r\n      this.cost[y] = [];\r\n      for (x = 0; x < this.width; x++) {\r\n        this.cost[y][x] = Number.MAX_VALUE;\r\n      }\r\n    }\r\n    this.cost[sp.y][sp.x] = 0;\r\n\r\n    this.pq = new BucketQueue(this.searchGranBits, this.#costFunction);\r\n    this.pq.push(sp);\r\n  }\r\n\r\n  doWork() {\r\n    if (!this.working) {\r\n      return;\r\n    }\r\n\r\n    this.timeout = null;\r\n\r\n    let pointCount = 0;\r\n    const newPoints = [];\r\n    while (!this.pq.isEmpty() && pointCount < this.pointsPerPost) {\r\n      const p = this.pq.pop();\r\n      newPoints.push(p);\r\n      newPoints.push(this.parents[p.y][p.x]);\r\n\r\n      this.visited[p.y][p.x] = true;\r\n\r\n      const adjList = this.adj(p);\r\n      for (let i = 0; i < adjList.length; i++) {\r\n        const q = adjList[i];\r\n\r\n        const pqCost = this.cost[p.y][p.x] + this.dist(p.x, p.y, q.x, q.y);\r\n\r\n        if (pqCost < this.cost[q.y][q.x]) {\r\n          if (this.cost[q.y][q.x] !== Number.MAX_VALUE) {\r\n            // Already in PQ, must remove it so we can re-add it.\r\n            this.pq.remove(q);\r\n          }\r\n\r\n          this.cost[q.y][q.x] = pqCost;\r\n          this.parents[q.y][q.x] = p;\r\n          this.pq.push(q);\r\n        }\r\n      }\r\n\r\n      pointCount++;\r\n    }\r\n\r\n    return newPoints;\r\n  }\r\n\r\n} // Scissors class\r\n","import {i18n} from '../utils/i18n';\r\nimport {getStats} from './stats';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Point2D} from '../math/point';\r\nimport {ViewController} from '../app/viewController';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Mulitply the three inputs if the last two are not null.\r\n *\r\n * @param {number} a The first input.\r\n * @param {number} b The second input.\r\n * @param {number} c The third input.\r\n * @returns {number} The multiplication of the three inputs or\r\n *  null if one of the last two is null.\r\n */\r\nfunction mulABC(a, b, c) {\r\n  let res = null;\r\n  if (b !== null && c !== null) {\r\n    res = a * b * c;\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * Circle shape.\r\n */\r\nexport class Circle {\r\n\r\n  /**\r\n   * Circle centre.\r\n   *\r\n   * @type {Point2D}\r\n   */\r\n  #centre;\r\n\r\n  /**\r\n   * Circle radius.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #radius;\r\n\r\n  /**\r\n   * @param {Point2D} centre A Point2D representing the centre\r\n   *   of the circle.\r\n   * @param {number} radius The radius of the circle.\r\n   */\r\n  constructor(centre, radius) {\r\n    this.#centre = centre;\r\n    this.#radius = radius;\r\n  }\r\n\r\n  /**\r\n   * Get the centre (point) of the circle.\r\n   *\r\n   * @returns {Point2D} The center (point) of the circle.\r\n   */\r\n  getCenter() {\r\n    return this.#centre;\r\n  }\r\n\r\n  /**\r\n   * Get the radius of the circle.\r\n   *\r\n   * @returns {number} The radius of the circle.\r\n   */\r\n  getRadius() {\r\n    return this.#radius;\r\n  }\r\n\r\n\r\n  /**\r\n   * Check for equality.\r\n   *\r\n   * @param {Circle} rhs The object to compare to.\r\n   * @returns {boolean} True if both objects are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      this.getCenter().equals(rhs.getCenter()) &&\r\n      this.getRadius() === rhs.getRadius();\r\n  }\r\n\r\n  /**\r\n   * Get the surface of the circle.\r\n   *\r\n   * @returns {number} The surface of the circle.\r\n   */\r\n  getSurface() {\r\n    return Math.PI * this.getRadius() * this.getRadius();\r\n  }\r\n\r\n  /**\r\n   * Get the surface of the circle according to a spacing.\r\n   *\r\n   * @param {number} spacingX The X spacing.\r\n   * @param {number} spacingY The Y spacing.\r\n   * @returns {number} The surface of the circle multiplied by the given\r\n   *  spacing or null for null spacings.\r\n   */\r\n  getWorldSurface(spacingX, spacingY) {\r\n    return mulABC(this.getSurface(), spacingX, spacingY);\r\n  }\r\n\r\n  /**\r\n   * Get the rounded limits of the circle.\r\n   * (see https://en.wikipedia.org/wiki/Circle#Equations)\r\n   * Circle formula: x*x + y*y = r*r\r\n   * => y = (+-) sqrt(r*r - x*x)\r\n   *\r\n   * @returns {Array} The rounded limits.\r\n   */\r\n  getRound() {\r\n    const centerX = this.getCenter().getX();\r\n    const centerY = this.getCenter().getY();\r\n    const radius = this.getRadius();\r\n    const rSquare = Math.pow(radius, 2);\r\n    // Y bounds\r\n    const minY = centerY - radius;\r\n    const maxY = centerY + radius;\r\n    const regions = [];\r\n    // loop through lines and store limits\r\n    for (let y = minY; y < maxY; ++y) {\r\n      const diff = rSquare - Math.pow(y - centerY, 2);\r\n      // remove small values (possibly negative)\r\n      if (Math.abs(diff) < 1e-7) {\r\n        continue;\r\n      }\r\n      const transX = Math.sqrt(diff);\r\n      // remove small values\r\n      if (transX < 0.5) {\r\n        continue;\r\n      }\r\n      regions.push([\r\n        [Math.round(centerX - transX), Math.round(y)],\r\n        [Math.round(centerX + transX), Math.round(y)]\r\n      ]);\r\n    }\r\n    return regions;\r\n  }\r\n\r\n  /**\r\n   * Quantify an circle according to view information.\r\n   *\r\n   * @param {ViewController} viewController The associated view\r\n   *   controller.\r\n   * @param {Array} flags A list of stat values to calculate.\r\n   * @returns {object} A quantification object.\r\n   */\r\n  quantify(viewController, flags) {\r\n    const quant = {};\r\n    // surface\r\n    const spacing = viewController.get2DSpacing();\r\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\r\n    if (surface !== null) {\r\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\r\n    }\r\n\r\n    // pixel quantification\r\n    if (viewController.canQuantifyImage()) {\r\n      const regions = this.getRound();\r\n      if (regions.length !== 0) {\r\n        const values = viewController.getImageVariableRegionValues(regions);\r\n        const quantif = getStats(values, flags);\r\n        quant.min = {value: quantif.min, unit: ''};\r\n        quant.max = {value: quantif.max, unit: ''};\r\n        quant.mean = {value: quantif.mean, unit: ''};\r\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\r\n        if (typeof quantif.median !== 'undefined') {\r\n          quant.median = {value: quantif.median, unit: ''};\r\n        }\r\n        if (typeof quantif.p25 !== 'undefined') {\r\n          quant.p25 = {value: quantif.p25, unit: ''};\r\n        }\r\n        if (typeof quantif.p75 !== 'undefined') {\r\n          quant.p75 = {value: quantif.p75, unit: ''};\r\n        }\r\n      }\r\n    }\r\n\r\n    // return\r\n    return quant;\r\n  }\r\n\r\n} // Circle class\r\n","import {i18n} from '../utils/i18n';\r\nimport {getStats} from './stats';\r\nimport {Index} from './index';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Point2D} from '../math/point';\r\nimport {ViewController} from '../app/viewController';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Mulitply the three inputs if the last two are not null.\r\n *\r\n * @param {number} a The first input.\r\n * @param {number} b The second input.\r\n * @param {number} c The third input.\r\n * @returns {number} The multiplication of the three inputs or\r\n *  null if one of the last two is null.\r\n */\r\nfunction mulABC(a, b, c) {\r\n  let res = null;\r\n  if (b !== null && c !== null) {\r\n    res = a * b * c;\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * Ellipse shape.\r\n */\r\nexport class Ellipse {\r\n\r\n  /**\r\n   * Ellipse centre.\r\n   *\r\n   * @type {Point2D}\r\n   */\r\n  #centre;\r\n\r\n  /**\r\n   * Ellipse horizontal radius.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #a;\r\n\r\n  /**\r\n   * Ellipse vertical radius.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #b;\r\n\r\n  /**\r\n   * @param {Point2D} centre A Point2D representing the centre\r\n   *   of the ellipse.\r\n   * @param {number} a The radius of the ellipse on the horizontal axe.\r\n   * @param {number} b The radius of the ellipse on the vertical axe.\r\n   */\r\n  constructor(centre, a, b) {\r\n    this.#centre = centre;\r\n    this.#a = a;\r\n    this.#b = b;\r\n  }\r\n\r\n  /**\r\n   * Get the centre (point) of the ellipse.\r\n   *\r\n   * @returns {Point2D} The center (point) of the ellipse.\r\n   */\r\n  getCenter() {\r\n    return this.#centre;\r\n  }\r\n\r\n  /**\r\n   * Get the radius of the ellipse on the horizontal axe.\r\n   *\r\n   * @returns {number} The radius of the ellipse on the horizontal axe.\r\n   */\r\n  getA() {\r\n    return this.#a;\r\n  }\r\n\r\n  /**\r\n   * Get the radius of the ellipse on the vertical axe.\r\n   *\r\n   * @returns {number} The radius of the ellipse on the vertical axe.\r\n   */\r\n  getB() {\r\n    return this.#b;\r\n  }\r\n\r\n  /**\r\n   * Check for equality.\r\n   *\r\n   * @param {Ellipse} rhs The object to compare to.\r\n   * @returns {boolean} True if both objects are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      this.getCenter().equals(rhs.getCenter()) &&\r\n      this.getA() === rhs.getA() &&\r\n      this.getB() === rhs.getB();\r\n  }\r\n\r\n  /**\r\n   * Get the surface of the ellipse.\r\n   *\r\n   * @returns {number} The surface of the ellipse.\r\n   */\r\n  getSurface() {\r\n    return Math.PI * this.getA() * this.getB();\r\n  }\r\n\r\n  /**\r\n   * Get the surface of the ellipse according to a spacing.\r\n   *\r\n   * @param {number} spacingX The X spacing.\r\n   * @param {number} spacingY The Y spacing.\r\n   * @returns {number} The surface of the ellipse multiplied by the given\r\n   *  spacing or null for null spacings.\r\n   */\r\n  getWorldSurface(spacingX, spacingY) {\r\n    return mulABC(this.getSurface(), spacingX, spacingY);\r\n  }\r\n\r\n  /**\r\n   * Get the rounded limits of the ellipse.\r\n   * (see https://en.wikipedia.org/wiki/Ellipse#Standard_equation)\r\n   * Ellipse formula: x*x / a*a + y*y / b*b = 1\r\n   * => y = (+-)(b/a) * sqrt(a*a - x*x)\r\n   *\r\n   * @returns {Array} The rounded limits.\r\n   */\r\n  getRound() {\r\n    const centerX = this.getCenter().getX();\r\n    const centerY = this.getCenter().getY();\r\n    const radiusX = this.getA();\r\n    const radiusY = this.getB();\r\n    const radiusRatio = radiusX / radiusY;\r\n    const rySquare = Math.pow(radiusY, 2);\r\n    // Y bounds\r\n    const minY = centerY - radiusY;\r\n    const maxY = centerY + radiusY;\r\n    const regions = [];\r\n    // loop through lines and store limits\r\n    for (let y = minY; y < maxY; ++y) {\r\n      const diff = rySquare - Math.pow(y - centerY, 2);\r\n      // remove small values (possibly negative)\r\n      if (Math.abs(diff) < 1e-7) {\r\n        continue;\r\n      }\r\n      const transX = radiusRatio * Math.sqrt(diff);\r\n      // remove small values\r\n      if (transX < 0.5) {\r\n        continue;\r\n      }\r\n      regions.push([\r\n        [Math.round(centerX - transX), Math.round(y)],\r\n        [Math.round(centerX + transX), Math.round(y)]\r\n      ]);\r\n    }\r\n    return regions;\r\n  }\r\n\r\n  /**\r\n   * Quantify an ellipse according to view information.\r\n   *\r\n   * @param {ViewController} viewController The associated view\r\n   *   controller.\r\n   * @param {Array} flags A list of stat values to calculate.\r\n   * @returns {object} A quantification object.\r\n   */\r\n  quantify(viewController, flags) {\r\n    const quant = {};\r\n    // surface\r\n    const spacing = viewController.get2DSpacing();\r\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\r\n    if (surface !== null) {\r\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\r\n    }\r\n\r\n    // pixel quantification\r\n    if (viewController.canQuantifyImage()) {\r\n      const regions = this.getRound();\r\n      if (regions.length !== 0) {\r\n        const values = viewController.getImageVariableRegionValues(regions);\r\n        const quantif = getStats(values, flags);\r\n        quant.min = {value: quantif.min, unit: ''};\r\n        quant.max = {value: quantif.max, unit: ''};\r\n        quant.mean = {value: quantif.mean, unit: ''};\r\n        quant.stdDev = {value: quantif.stdDev, unit: ''};\r\n        if (typeof quantif.median !== 'undefined') {\r\n          quant.median = {value: quantif.median, unit: ''};\r\n        }\r\n        if (typeof quantif.p25 !== 'undefined') {\r\n          quant.p25 = {value: quantif.p25, unit: ''};\r\n        }\r\n        if (typeof quantif.p75 !== 'undefined') {\r\n          quant.p75 = {value: quantif.p75, unit: ''};\r\n        }\r\n      }\r\n    }\r\n\r\n    // return\r\n    return quant;\r\n  }\r\n\r\n} // Ellipse class\r\n\r\n/**\r\n * Get the indices that form a ellpise.\r\n *\r\n * @param {Index} center The ellipse center.\r\n * @param {Array} radius The 2 ellipse radiuses.\r\n * @param {Array} dir The 2 ellipse directions.\r\n * @returns {Array} The indices of the ellipse.\r\n */\r\nexport function getEllipseIndices(center, radius, dir) {\r\n  const centerValues = center.getValues();\r\n  // keep all values for possible extra dimensions\r\n  const values = centerValues.slice();\r\n  const indices = [];\r\n  const radiusI = radius[0];\r\n  const radiusJ = radius[1];\r\n  const radiusRatio = radiusI / radiusJ;\r\n  const radiusJ2 = Math.pow(radiusJ, 2);\r\n  const di = dir[0];\r\n  const dj = dir[1];\r\n  // deduce 4 positions from top right\r\n  for (let j = 0; j < radiusJ; ++j) {\r\n    // right triangle formed by radiuses, j and len\r\n    // ellipse: i*i / a*a + j*j / b*b = 1\r\n    // -> i = a/b * sqrt(b*b - j*j)\r\n    const len = Math.round(\r\n      radiusRatio * Math.sqrt(radiusJ2 - Math.pow(j, 2)));\r\n    const jmax = centerValues[dj] + j;\r\n    const jmin = centerValues[dj] - j;\r\n    for (let i = 0; i < len; ++i) {\r\n      const imax = centerValues[di] + i;\r\n      const imin = centerValues[di] - i;\r\n\r\n      // right\r\n      values[di] = imax;\r\n      // right - top\r\n      values[dj] = jmax;\r\n      indices.push(new Index(values.slice()));\r\n      // right - bottom\r\n      if (jmin !== jmax) {\r\n        values[dj] = jmin;\r\n        indices.push(new Index(values.slice()));\r\n      }\r\n\r\n      // left\r\n      if (imin !== imax) {\r\n        values[di] = imin;\r\n        // left - top\r\n        values[dj] = jmax;\r\n        indices.push(new Index(values.slice()));\r\n        // left - bottom\r\n        if (jmin !== jmax) {\r\n          values[dj] = jmin;\r\n          indices.push(new Index(values.slice()));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return indices;\r\n}\r\n","import {Point2D} from './point';\r\nimport {getStats} from './stats';\r\nimport {i18n} from '../utils/i18n';\r\n\r\n/**\r\n * Mulitply the three inputs if the last two are not null.\r\n *\r\n * @param {number} a The first input.\r\n * @param {number} b The second input.\r\n * @param {number} c The third input.\r\n * @returns {number} The multiplication of the three inputs or\r\n *  null if one of the last two is null.\r\n */\r\nfunction mulABC(a, b, c) {\r\n  let res = null;\r\n  if (b !== null && c !== null) {\r\n    res = a * b * c;\r\n  }\r\n  return res;\r\n}\r\n\r\n/**\r\n * Rectangle shape.\r\n */\r\nexport class Rectangle {\r\n\r\n  /**\r\n   * Rectangle begin point.\r\n   *\r\n   * @type {Point2D}\r\n   */\r\n  #begin;\r\n\r\n  /**\r\n   * Rectangle end point.\r\n   *\r\n   * @type {Point2D}\r\n   */\r\n  #end;\r\n\r\n  /**\r\n   * @param {Point2D} begin A Point2D representing the beginning\r\n   *   of the rectangle.\r\n   * @param {Point2D} end A Point2D representing the end\r\n   *   of the rectangle.\r\n   */\r\n  constructor(begin, end) {\r\n    this.#begin = new Point2D(\r\n      Math.min(begin.getX(), end.getX()),\r\n      Math.min(begin.getY(), end.getY())\r\n    );\r\n    this.#end = new Point2D(\r\n      Math.max(begin.getX(), end.getX()),\r\n      Math.max(begin.getY(), end.getY())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the begin point of the rectangle.\r\n   *\r\n   * @returns {Point2D} The begin point of the rectangle\r\n   */\r\n  getBegin() {\r\n    return this.#begin;\r\n  }\r\n\r\n  /**\r\n   * Get the end point of the rectangle.\r\n   *\r\n   * @returns {Point2D} The end point of the rectangle\r\n   */\r\n  getEnd() {\r\n    return this.#end;\r\n  }\r\n\r\n  /**\r\n   * Check for equality.\r\n   *\r\n   * @param {Rectangle} rhs The object to compare to.\r\n   * @returns {boolean} True if both objects are equal.\r\n   */\r\n  equals(rhs) {\r\n    return rhs !== null &&\r\n      this.getBegin().equals(rhs.getBegin()) &&\r\n      this.getEnd().equals(rhs.getEnd());\r\n  }\r\n\r\n  /**\r\n   * Get the surface of the rectangle.\r\n   *\r\n   * @returns {number} The surface of the rectangle.\r\n   */\r\n  getSurface() {\r\n    const begin = this.getBegin();\r\n    const end = this.getEnd();\r\n    return Math.abs(end.getX() - begin.getX()) *\r\n      Math.abs(end.getY() - begin.getY());\r\n  }\r\n\r\n  /**\r\n   * Get the surface of the rectangle according to a spacing.\r\n   *\r\n   * @param {number} spacingX The X spacing.\r\n   * @param {number} spacingY The Y spacing.\r\n   * @returns {number} The surface of the rectangle multiplied by the given\r\n   *  spacing or null for null spacings.\r\n   */\r\n  getWorldSurface(spacingX, spacingY) {\r\n    return mulABC(this.getSurface(), spacingX, spacingY);\r\n  }\r\n\r\n  /**\r\n   * Get the real width of the rectangle.\r\n   *\r\n   * @returns {number} The real width of the rectangle.\r\n   */\r\n  getRealWidth() {\r\n    return this.getEnd().getX() - this.getBegin().getX();\r\n  }\r\n\r\n  /**\r\n   * Get the real height of the rectangle.\r\n   *\r\n   * @returns {number} The real height of the rectangle.\r\n   */\r\n  getRealHeight() {\r\n    return this.getEnd().getY() - this.getBegin().getY();\r\n  }\r\n\r\n  /**\r\n   * Get the width of the rectangle.\r\n   *\r\n   * @returns {number} The width of the rectangle.\r\n   */\r\n  getWidth() {\r\n    return Math.abs(this.getRealWidth());\r\n  }\r\n\r\n  /**\r\n   * Get the height of the rectangle.\r\n   *\r\n   * @returns {number} The height of the rectangle.\r\n   */\r\n  getHeight() {\r\n    return Math.abs(this.getRealHeight());\r\n  }\r\n\r\n  /**\r\n   * Get the rounded limits of the rectangle.\r\n   *\r\n   * @returns {object} The rounded limits.\r\n   */\r\n  getRound() {\r\n    return {\r\n      min: this.getBegin().getRound(),\r\n      max: this.getEnd().getRound()\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Quantify a rectangle according to view information.\r\n   *\r\n   * @param {object} viewController The associated view controller.\r\n   * @param {Array} flags A list of stat values to calculate.\r\n   * @returns {object} A quantification object.\r\n   */\r\n  quantify(viewController, flags) {\r\n    const quant = {};\r\n    // surface\r\n    const spacing = viewController.get2DSpacing();\r\n    const surface = this.getWorldSurface(spacing[0], spacing[1]);\r\n    if (surface !== null) {\r\n      quant.surface = {value: surface / 100, unit: i18n.t('unit.cm2')};\r\n    }\r\n\r\n    // pixel quantification\r\n    if (viewController.canQuantifyImage()) {\r\n      const round = this.getRound();\r\n      const values = viewController.getImageRegionValues(round.min, round.max);\r\n      const quantif = getStats(values, flags);\r\n      quant.min = {value: quantif.min, unit: ''};\r\n      quant.max = {value: quantif.max, unit: ''};\r\n      quant.mean = {value: quantif.mean, unit: ''};\r\n      quant.stdDev = {value: quantif.stdDev, unit: ''};\r\n      if (typeof quantif.median !== 'undefined') {\r\n        quant.median = {value: quantif.median, unit: ''};\r\n      }\r\n      if (typeof quantif.p25 !== 'undefined') {\r\n        quant.p25 = {value: quantif.p25, unit: ''};\r\n      }\r\n      if (typeof quantif.p75 !== 'undefined') {\r\n        quant.p75 = {value: quantif.p75, unit: ''};\r\n      }\r\n    }\r\n\r\n    // return\r\n    return quant;\r\n  }\r\n\r\n} // Rectangle class\r\n","// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {Image} from './image';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Threshold an image between an input minimum and maximum.\r\n */\r\nexport class Threshold {\r\n  /**\r\n   * Threshold minimum.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #min = 0;\r\n\r\n  /**\r\n   * Threshold maximum.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #max = 0;\r\n\r\n  /**\r\n   * Get the threshold minimum.\r\n   *\r\n   * @returns {number} The threshold minimum.\r\n   */\r\n  getMin() {\r\n    return this.#min;\r\n  }\r\n\r\n  /**\r\n   * Set the threshold minimum.\r\n   *\r\n   * @param {number} val The threshold minimum.\r\n   */\r\n  setMin(val) {\r\n    this.#min = val;\r\n  }\r\n\r\n  /**\r\n   * Get the threshold maximum.\r\n   *\r\n   * @returns {number} The threshold maximum.\r\n   */\r\n  getMax() {\r\n    return this.#max;\r\n  }\r\n\r\n  /**\r\n   * Set the threshold maximum.\r\n   *\r\n   * @param {number} val The threshold maximum.\r\n   */\r\n  setMax(val) {\r\n    this.#max = val;\r\n  }\r\n\r\n  /**\r\n   * Get the name of the filter.\r\n   *\r\n   * @returns {string} The name of the filter.\r\n   */\r\n  getName() {\r\n    return 'Threshold';\r\n  }\r\n\r\n  /**\r\n   * Original image.\r\n   *\r\n   * @type {Image}\r\n   */\r\n  #originalImage = null;\r\n\r\n  /**\r\n   * Set the original image.\r\n   *\r\n   * @param {Image} image The original image.\r\n   */\r\n  setOriginalImage(image) {\r\n    this.#originalImage = image;\r\n  }\r\n\r\n  /**\r\n   * Get the original image.\r\n   *\r\n   * @returns {Image} image The original image.\r\n   */\r\n  getOriginalImage() {\r\n    return this.#originalImage;\r\n  }\r\n\r\n  /**\r\n   * Transform the main image using this filter.\r\n   *\r\n   * @returns {Image} The transformed image.\r\n   */\r\n  update() {\r\n    const image = this.getOriginalImage();\r\n    const imageMin = image.getDataRange().min;\r\n    const threshFunction = (value) => {\r\n      if (value < this.getMin() || value > this.getMax()) {\r\n        return imageMin;\r\n      } else {\r\n        return value;\r\n      }\r\n    };\r\n    return image.transform(threshFunction);\r\n  }\r\n\r\n} // class Threshold\r\n\r\n/**\r\n * Sharpen an image using a sharpen convolution matrix.\r\n */\r\nexport class Sharpen {\r\n  /**\r\n   * Get the name of the filter.\r\n   *\r\n   * @returns {string} The name of the filter.\r\n   */\r\n  getName() {\r\n    return 'Sharpen';\r\n  }\r\n\r\n  /**\r\n   * Original image.\r\n   *\r\n   * @type {Image}\r\n   */\r\n  #originalImage = null;\r\n\r\n  /**\r\n   * Set the original image.\r\n   *\r\n   * @param {Image} image The original image.\r\n   */\r\n  setOriginalImage(image) {\r\n    this.#originalImage = image;\r\n  }\r\n\r\n  /**\r\n   * Get the original image.\r\n   *\r\n   * @returns {Image} image The original image.\r\n   */\r\n  getOriginalImage() {\r\n    return this.#originalImage;\r\n  }\r\n\r\n  /**\r\n   * Transform the main image using this filter.\r\n   *\r\n   * @returns {Image} The transformed image.\r\n   */\r\n  update() {\r\n    const image = this.getOriginalImage();\r\n    /* eslint-disable array-element-newline */\r\n    return image.convolute2D([\r\n      0, -1, 0,\r\n      -1, 5, -1,\r\n      0, -1, 0\r\n    ]);\r\n    /* eslint-enable array-element-newline */\r\n  }\r\n\r\n} // class Sharpen\r\n\r\n/**\r\n * Apply a Sobel filter to an image.\r\n */\r\nexport class Sobel {\r\n  /**\r\n   * Get the name of the filter.\r\n   *\r\n   * @returns {string} The name of the filter.\r\n   */\r\n  getName() {\r\n    return 'Sobel';\r\n  }\r\n\r\n  /**\r\n   * Original image.\r\n   *\r\n   * @type {Image}\r\n   */\r\n  #originalImage = null;\r\n\r\n  /**\r\n   * Set the original image.\r\n   *\r\n   * @param {Image} image The original image.\r\n   */\r\n  setOriginalImage(image) {\r\n    this.#originalImage = image;\r\n  }\r\n\r\n  /**\r\n   * Get the original image.\r\n   *\r\n   * @returns {Image} image The original image.\r\n   */\r\n  getOriginalImage() {\r\n    return this.#originalImage;\r\n  }\r\n\r\n  /**\r\n   * Transform the main image using this filter.\r\n   *\r\n   * @returns {Image} The transformed image.\r\n   */\r\n  update() {\r\n    const image = this.getOriginalImage();\r\n    /* eslint-disable array-element-newline */\r\n    const gradX = image.convolute2D([\r\n      1, 0, -1,\r\n      2, 0, -2,\r\n      1, 0, -1\r\n    ]);\r\n    const gradY = image.convolute2D([\r\n      1, 2, 1,\r\n      0, 0, 0,\r\n      -1, -2, -1\r\n    ]);\r\n    /* eslint-enable array-element-newline */\r\n    return gradX.compose(gradY, function (x, y) {\r\n      return Math.sqrt(x * x + y * y);\r\n    });\r\n  }\r\n\r\n} // class Sobel\r\n","import {ListenerHandler} from '../utils/listen';\r\nimport {\r\n  Threshold as ThresholdFilter,\r\n  Sobel as SobelFilter,\r\n  Sharpen as SharpenFilter\r\n} from '../image/filter';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Filter tool.\r\n */\r\nexport class Filter {\r\n\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Filter list\r\n   *\r\n   * @type {object}\r\n   */\r\n  #filterList = null;\r\n\r\n  /**\r\n   * Selected filter.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #selectedFilter = 0;\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Activate the tool.\r\n   *\r\n   * @param {boolean} bool Flag to activate or not.\r\n   */\r\n  activate(bool) {\r\n    // setup event listening\r\n    for (const key in this.#filterList) {\r\n      if (bool) {\r\n        this.#filterList[key].addEventListener('filterrun', this.#fireEvent);\r\n        this.#filterList[key].addEventListener('filter-undo', this.#fireEvent);\r\n      } else {\r\n        this.#filterList[key].removeEventListener(\r\n          'filterrun', this.#fireEvent);\r\n        this.#filterList[key].removeEventListener(\r\n          'filter-undo', this.#fireEvent);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the tool options.\r\n   *\r\n   * @param {object} options The list of filter names amd classes.\r\n   */\r\n  setOptions(options) {\r\n    this.#filterList = {};\r\n    // try to instanciate filters from the options\r\n    for (const key in options) {\r\n      this.#filterList[key] = new options[key](this.#app);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the type of tool options: here 'instance' since the filter\r\n   * list contains instances of each possible filter.\r\n   *\r\n   * @returns {string} The type.\r\n   */\r\n  getOptionsType() {\r\n    return 'instance';\r\n  }\r\n\r\n  /**\r\n   * Initialise the filter. Called once the image is loaded.\r\n   */\r\n  init() {\r\n    // setup event listening\r\n    for (const key in this.#filterList) {\r\n      this.#filterList[key].init();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle keydown event.\r\n   *\r\n   * @param {object} event The keydown event.\r\n   */\r\n  keydown = (event) => {\r\n    event.context = 'Filter';\r\n    this.#app.onKeydown(event);\r\n  };\r\n\r\n  /**\r\n   * Get the list of event names that this tool can fire.\r\n   *\r\n   * @returns {Array} The list of event names.\r\n   */\r\n  getEventNames() {\r\n    return ['filterrun', 'filterundo'];\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Get the selected filter.\r\n   *\r\n   * @returns {object} The selected filter.\r\n   */\r\n  getSelectedFilter() {\r\n    return this.#selectedFilter;\r\n  }\r\n\r\n  /**\r\n   * Set the tool live features: filter name.\r\n   *\r\n   * @param {object} features The list of features.\r\n   */\r\n  setFeatures(features) {\r\n    if (typeof features.filterName !== 'undefined') {\r\n      // check if we have it\r\n      if (!this.hasFilter(features.filterName)) {\r\n        throw new Error('Unknown filter: \\'' + features.filterName + '\\'');\r\n      }\r\n      // de-activate last selected\r\n      if (this.#selectedFilter) {\r\n        this.#selectedFilter.activate(false);\r\n      }\r\n      // enable new one\r\n      this.#selectedFilter = this.#filterList[features.filterName];\r\n      // activate the selected filter\r\n      this.#selectedFilter.activate(true);\r\n    }\r\n    if (typeof features.run !== 'undefined' && features.run) {\r\n      let args = {};\r\n      if (typeof features.runArgs !== 'undefined') {\r\n        args = features.runArgs;\r\n      }\r\n      this.getSelectedFilter().run(args);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the list of filters.\r\n   *\r\n   * @returns {Array} The list of filter objects.\r\n   */\r\n  getFilterList() {\r\n    return this.#filterList;\r\n  }\r\n\r\n  /**\r\n   * Check if a filter is in the filter list.\r\n   *\r\n   * @param {string} name The name to check.\r\n   * @returns {string} The filter list element for the given name.\r\n   */\r\n  hasFilter(name) {\r\n    return this.#filterList[name];\r\n  }\r\n\r\n} // class Filter\r\n\r\n/**\r\n * Threshold filter tool.\r\n */\r\nexport class Threshold {\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Associated filter.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #filter = new ThresholdFilter();\r\n\r\n  /**\r\n   * Flag to know wether to reset the image or not.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #resetImage = true;\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Activate the filter.\r\n   *\r\n   * @param {boolean} bool Flag to activate or not.\r\n   */\r\n  activate(bool) {\r\n    // reset the image when the tool is activated\r\n    if (bool) {\r\n      this.#resetImage = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialise the filter. Called once the image is loaded.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Run the filter.\r\n   *\r\n   * @param {*} args The filter arguments.\r\n   */\r\n  run(args) {\r\n    this.#filter.setMin(args.min);\r\n    this.#filter.setMax(args.max);\r\n    // reset the image if asked\r\n    if (this.#resetImage) {\r\n      this.#filter.setOriginalImage(this.#app.getLastImage());\r\n      this.#resetImage = false;\r\n    }\r\n    const command = new RunFilterCommand(this.#filter, this.#app);\r\n    command.onExecute = this.#fireEvent;\r\n    command.onUndo = this.#fireEvent;\r\n    command.execute();\r\n    // save command in undo stack\r\n    this.#app.addToUndoStack(command);\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *  event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n} // class Threshold\r\n\r\n/**\r\n * Sharpen filter tool.\r\n */\r\nexport class Sharpen {\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Activate the filter.\r\n   *\r\n   * @param {boolean} _bool Flag to activate or not.\r\n   */\r\n  activate(_bool) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Initialise the filter. Called once the image is loaded.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Run the filter.\r\n   *\r\n   * @param {*} _args The filter arguments.\r\n   */\r\n  run(_args) {\r\n    const filter = new SharpenFilter();\r\n    filter.setOriginalImage(this.#app.getLastImage());\r\n    const command = new RunFilterCommand(filter, this.#app);\r\n    command.onExecute = this.#fireEvent;\r\n    command.onUndo = this.#fireEvent;\r\n    command.execute();\r\n    // save command in undo stack\r\n    this.#app.addToUndoStack(command);\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *    event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n} // filter.Sharpen\r\n\r\n/**\r\n * Sobel filter tool.\r\n */\r\nexport class Sobel {\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Activate the filter.\r\n   *\r\n   * @param {boolean} _bool Flag to activate or not.\r\n   */\r\n  activate(_bool) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Initialise the filter. Called once the image is loaded.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Run the filter.\r\n   *\r\n   * @param {*} _args The filter arguments.\r\n   */\r\n  run(_args) {\r\n    const filter = new SobelFilter();\r\n    filter.setOriginalImage(this.#app.getLastImage());\r\n    const command = new RunFilterCommand(filter, this.#app);\r\n    command.onExecute = this.#fireEvent;\r\n    command.onUndo = this.#fireEvent;\r\n    command.execute();\r\n    // save command in undo stack\r\n    this.#app.addToUndoStack(command);\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *  event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n} // class filter.Sobel\r\n\r\n/**\r\n * Run filter command.\r\n */\r\nexport class RunFilterCommand {\r\n\r\n  /**\r\n   * The filter to run.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #filter;\r\n\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * @param {object} filter The filter to run.\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(filter, app) {\r\n    this.#filter = filter;\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Get the command name.\r\n   *\r\n   * @returns {string} The command name.\r\n   */\r\n  getName() {\r\n    return 'Filter-' + this.#filter.getName();\r\n  }\r\n\r\n  /**\r\n   * Execute the command.\r\n   *\r\n   * @fires RunFilterCommand#filterrun\r\n   */\r\n  execute() {\r\n    // run filter and set app image\r\n    this.#app.setLastImage(this.#filter.update());\r\n    // update display\r\n    this.#app.render(0); //todo: fix\r\n    /**\r\n     * Filter run event.\r\n     *\r\n     * @event RunFilterCommand#filterrun\r\n     * @type {object}\r\n     * @property {string} type The event type: filterrun.\r\n     * @property {number} id The id of the run command.\r\n     */\r\n    const event = {\r\n      type: 'filterrun',\r\n      id: this.getName()\r\n    };\r\n    // callback\r\n    this.onExecute(event);\r\n  }\r\n\r\n  /**\r\n   * Undo the command.\r\n   *\r\n   * @fires RunFilterCommand#filterundo\r\n   */\r\n  undo() {\r\n    // reset the image\r\n    this.#app.setLastImage(this.#filter.getOriginalImage());\r\n    // update display\r\n    this.#app.render(0); //todo: fix\r\n    /**\r\n     * Filter undo event.\r\n     *\r\n     * @event RunFilterCommand#filterundo\r\n     * @type {object}\r\n     * @property {string} type The event type: filterundo.\r\n     * @property {number} id The id of the undone run command.\r\n     */\r\n    const event = {\r\n      type: 'filterundo',\r\n      id: this.getName()\r\n    }; // callback\r\n    this.onUndo(event);\r\n  }\r\n\r\n  /**\r\n   * Handle an execute event.\r\n   *\r\n   * @param {object} _event The execute event with type and id.\r\n   */\r\n  onExecute(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n  /**\r\n   * Handle an undo event.\r\n   *\r\n   * @param {object} _event The undo event with type and id.\r\n   */\r\n  onUndo(_event) {\r\n    // default does nothing.\r\n  }\r\n\r\n} // RunFilterCommand class\r\n","import {WindowLevel} from './windowLevel';\r\nimport {Scroll} from './scroll';\r\nimport {ZoomAndPan} from './zoomPan';\r\nimport {Opacity} from './opacity';\r\nimport {Draw} from './draw';\r\nimport {Floodfill} from './floodfill';\r\nimport {Livewire} from './livewire';\r\n\r\nimport {ArrowFactory} from './arrow';\r\nimport {CircleFactory} from './circle';\r\nimport {EllipseFactory} from './ellipse';\r\nimport {FreeHandFactory} from './freeHand';\r\nimport {ProtractorFactory} from './protractor';\r\nimport {RectangleFactory} from './rectangle';\r\nimport {RoiFactory} from './roi';\r\nimport {RulerFactory} from './ruler';\r\n\r\nimport {Filter, Threshold, Sobel, Sharpen} from './filter';\r\n\r\nexport const toolList = {\r\n  WindowLevel,\r\n  Scroll,\r\n  ZoomAndPan,\r\n  Opacity,\r\n  Draw,\r\n  Filter,\r\n  Floodfill,\r\n  Livewire\r\n};\r\n\r\nexport const toolOptions = {\r\n  draw: {\r\n    ArrowFactory,\r\n    CircleFactory,\r\n    EllipseFactory,\r\n    FreeHandFactory,\r\n    ProtractorFactory,\r\n    RectangleFactory,\r\n    RoiFactory,\r\n    RulerFactory\r\n  },\r\n  filter: {\r\n    Threshold,\r\n    Sobel,\r\n    Sharpen\r\n  }\r\n};","import {ScrollWheel} from './scrollWheel';\r\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\r\nimport {\r\n  WindowCenterAndWidth,\r\n  validateWindowWidth\r\n} from '../image/windowCenterAndWidth';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * WindowLevel tool: handle window/level related events.\r\n *\r\n * @example\r\n * // create the dwv app\r\n * const app = new dwv.App();\r\n * // initialise\r\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\r\n * const viewConfigs = {'*': [viewConfig0]};\r\n * const options = new dwv.AppOptions(viewConfigs);\r\n * options.tools = {WindowLevel: new dwv.ToolConfig()};\r\n * app.init(options);\r\n * // activate tool\r\n * app.addEventListener('load', function () {\r\n *   app.setTool('WindowLevel');\r\n * });\r\n * // load dicom data\r\n * app.loadURLs([\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\r\n * ]);\r\n */\r\nexport class WindowLevel {\r\n  /**\r\n   * Mouse move sensitivity.\r\n   *\r\n   * @type {Number}\r\n   */\r\n  sensitivity = .001;\r\n\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * Interaction start flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #started = false;\r\n\r\n  /**\r\n   * Scroll wheel handler.\r\n   *\r\n   * @type {ScrollWheel}\r\n   */\r\n  #scrollWhell;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n    this.#scrollWhell = new ScrollWheel(app);\r\n  }\r\n\r\n  /**\r\n   * Handle mouse down event.\r\n   *\r\n   * @param {object} event The mouse down event.\r\n   */\r\n  mousedown = (event) => {\r\n    // set start flag\r\n    this.#started = true;\r\n    // store initial position\r\n    this.x0 = event._x;\r\n    this.y0 = event._y;\r\n  };\r\n\r\n  /**\r\n   * Handle mouse move event.\r\n   *\r\n   * @param {object} event The mouse move event.\r\n   */\r\n  mousemove = (event) => {\r\n    // check start flag\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewController =\r\n      layerGroup.getActiveViewLayer().getViewController();\r\n\r\n    // difference to last position\r\n    const diffX = event._x - this.x0;\r\n    const diffY = this.y0 - event._y;\r\n    // data range\r\n    const range = viewController.getImageRescaledDataRange();\r\n    // 1/1000 seems to give reasonable results...\r\n    const pixelToIntensity = (range.max - range.min) * this.sensitivity;\r\n\r\n    // calculate new window level\r\n    const center = parseInt(viewController.getWindowLevel().center, 10);\r\n    const width = parseInt(viewController.getWindowLevel().width, 10);\r\n    const windowCenter = center + Math.round(diffY * pixelToIntensity);\r\n    let windowWidth = width + Math.round(diffX * pixelToIntensity);\r\n    // bound window width\r\n    windowWidth = validateWindowWidth(windowWidth);\r\n\r\n    // add the manual preset to the view\r\n    viewController.addWindowLevelPresets({\r\n      manual: {\r\n        wl: [new WindowCenterAndWidth(windowCenter, windowWidth)],\r\n        name: 'manual'\r\n      }\r\n    });\r\n    viewController.setWindowLevelPreset('manual');\r\n\r\n    // store position\r\n    this.x0 = event._x;\r\n    this.y0 = event._y;\r\n  };\r\n\r\n  /**\r\n   * Handle mouse up event.\r\n   *\r\n   * @param {object} _event The mouse up event.\r\n   */\r\n  mouseup = (_event) => {\r\n    // set start flag\r\n    if (this.#started) {\r\n      this.#started = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse out event.\r\n   *\r\n   * @param {object} event The mouse out event.\r\n   */\r\n  mouseout = (event) => {\r\n    // treat as mouse up\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch start event.\r\n   *\r\n   * @param {object} event The touch start event.\r\n   */\r\n  touchstart = (event) => {\r\n    this.mousedown(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch move event.\r\n   *\r\n   * @param {object} event The touch move event.\r\n   */\r\n  touchmove = (event) => {\r\n    this.mousemove(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch end event.\r\n   *\r\n   * @param {object} event The touch end event.\r\n   */\r\n  touchend = (event) => {\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle double click event.\r\n   *\r\n   * @param {object} event The double click event.\r\n   */\r\n  dblclick = (event) => {\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\r\n    const viewController = viewLayer.getViewController();\r\n    const image = this.#app.getImage(viewLayer.getDataIndex());\r\n\r\n    // update view controller\r\n    viewController.setWindowLevel(\r\n      image.getRescaledValueAtIndex(\r\n        viewController.getCurrentIndex().getWithNew2D(\r\n          index.get(0),\r\n          index.get(1)\r\n        )\r\n      ),\r\n      parseInt(viewController.getWindowLevel().width, 10));\r\n  };\r\n\r\n  /**\r\n   * Handle mouse wheel event.\r\n   *\r\n   * @param {object} event The mouse wheel event.\r\n   */\r\n  wheel = (event) => {\r\n    this.#scrollWhell.wheel(event);\r\n  };\r\n\r\n  /**\r\n   * Handle key down event.\r\n   *\r\n   * @param {object} event The key down event.\r\n   */\r\n  keydown = (event) => {\r\n    event.context = 'WindowLevel';\r\n    this.#app.onKeydown(event);\r\n  };\r\n\r\n  /**\r\n   * Activate the tool.\r\n   *\r\n   * @param {boolean} _bool The flag to activate or not.\r\n   */\r\n  activate(_bool) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Initialise the tool.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n} // WindowLevel class\r\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\r\nimport {precisionRound} from '../utils/string';\r\nimport {ScrollWheel} from './scrollWheel';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Scroll class.\r\n *\r\n * @example\r\n * // create the dwv app\r\n * const app = new dwv.App();\r\n * // initialise\r\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\r\n * const viewConfigs = {'*': [viewConfig0]};\r\n * const options = new dwv.AppOptions(viewConfigs);\r\n * options.tools = {Scroll: new dwv.ToolConfig()};\r\n * app.init(options);\r\n * // activate tool\r\n * app.addEventListener('load', function () {\r\n *   app.setTool('Scroll');\r\n * });\r\n * // load dicom data\r\n * app.loadURLs([\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\r\n * ]);\r\n * @example <caption>Example with slider</caption>\r\n * // create the dwv app\r\n * const app = new dwv.App();\r\n * // initialise\r\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\r\n * const viewConfigs = {'*': [viewConfig0]};\r\n * const options = new dwv.AppOptions(viewConfigs);\r\n * options.tools = {Scroll: new dwv.ToolConfig()};\r\n * app.init(options);\r\n * // create range\r\n * const range = document.createElement('input');\r\n * range.type = 'range';\r\n * range.min = 0;\r\n * range.id = 'sliceRange';\r\n * document.body.appendChild(range);\r\n * // update app on slider change\r\n * range.oninput = function () {\r\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\r\n *   const vc = lg.getActiveViewLayer().getViewController();\r\n *   const index = vc.getCurrentIndex();\r\n *   const values = index.getValues();\r\n *   values[2] = this.value;\r\n *   vc.setCurrentIndex(new dwv.Index(values));\r\n * }\r\n * // activate tool and update range max on load\r\n * app.addEventListener('load', function () {\r\n *   app.setTool('Scroll');\r\n *   const size = app.getImage(0).getGeometry().getSize();\r\n *   range.max = size.get(2) - 1;\r\n * });\r\n * // update slider on slice change (for ex via mouse wheel)\r\n * app.addEventListener('positionchange', function () {\r\n *   const lg = app.getLayerGroupByDivId('layerGroup0');\r\n *   const vc = lg.getActiveViewLayer().getViewController();\r\n *   range.value = vc.getCurrentIndex().get(2);\r\n * });\r\n * // load dicom data\r\n * app.loadURLs([\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm',\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323707.dcm',\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323563.dcm'\r\n * ]);\r\n */\r\nexport class Scroll {\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * Interaction start flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #started = false;\r\n\r\n  /**\r\n   * Scroll wheel handler.\r\n   *\r\n   * @type {ScrollWheel}\r\n   */\r\n  #scrollWhell;\r\n\r\n  /**\r\n   * Touch timer ID (created by setTimeout).\r\n   *\r\n   * @type {number}\r\n   */\r\n  #touchTimerID;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n    this.#scrollWhell = new ScrollWheel(app);\r\n  }\r\n\r\n  /**\r\n   * Option to show or not a value tooltip on mousemove.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #displayTooltip = false;\r\n\r\n  /**\r\n   * Handle mouse down event.\r\n   *\r\n   * @param {object} event The mouse down event.\r\n   */\r\n  mousedown = (event) => {\r\n    // optional tooltip\r\n    this.#removeTooltipDiv();\r\n\r\n    // stop viewer if playing\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const viewController = viewLayer.getViewController();\r\n    if (viewController.isPlaying()) {\r\n      viewController.stop();\r\n    }\r\n    // start flag\r\n    this.#started = true;\r\n    // first position\r\n    this.x0 = event._x;\r\n    this.y0 = event._y;\r\n\r\n    // update controller position\r\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\r\n    const position = viewController.getPositionFromPlanePoint(\r\n      planePos.x, planePos.y);\r\n    viewController.setCurrentPosition(position);\r\n  };\r\n\r\n  /**\r\n   * Handle mouse move event.\r\n   *\r\n   * @param {object} event The mouse move event.\r\n   */\r\n  mousemove = (event) => {\r\n    if (!this.#started) {\r\n      // optional tooltip\r\n      if (this.#displayTooltip) {\r\n        this.#showTooltip(event);\r\n      }\r\n      return;\r\n    }\r\n\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const viewController = viewLayer.getViewController();\r\n\r\n    // difference to last Y position\r\n    const diffY = event._y - this.y0;\r\n    const yMove = (Math.abs(diffY) > 15);\r\n    // do not trigger for small moves\r\n    if (yMove && viewController.canScroll()) {\r\n      // update view controller\r\n      if (diffY > 0) {\r\n        viewController.decrementScrollIndex();\r\n      } else {\r\n        viewController.incrementScrollIndex();\r\n      }\r\n    }\r\n\r\n    // difference to last X position\r\n    const diffX = event._x - this.x0;\r\n    const xMove = (Math.abs(diffX) > 15);\r\n    // do not trigger for small moves\r\n    const imageSize = viewController.getImageSize();\r\n    if (xMove && imageSize.moreThanOne(3)) {\r\n      // update view controller\r\n      if (diffX > 0) {\r\n        viewController.incrementIndex(3);\r\n      } else {\r\n        viewController.decrementIndex(3);\r\n      }\r\n    }\r\n\r\n    // reset origin point\r\n    if (xMove) {\r\n      this.x0 = event._x;\r\n    }\r\n    if (yMove) {\r\n      this.y0 = event._y;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse up event.\r\n   *\r\n   * @param {object} _event The mouse up event.\r\n   */\r\n  mouseup = (_event) => {\r\n    if (this.#started) {\r\n      // stop recording\r\n      this.#started = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse out event.\r\n   *\r\n   * @param {object} event The mouse out event.\r\n   */\r\n  mouseout = (event) => {\r\n    this.mouseup(event);\r\n    // remove possible tooltip div\r\n    this.#removeTooltipDiv();\r\n  };\r\n\r\n  /**\r\n   * Handle touch start event.\r\n   *\r\n   * @param {object} event The touch start event.\r\n   */\r\n  touchstart = (event) => {\r\n    // long touch triggers the dblclick\r\n    // @ts-ignore\r\n    this.#touchTimerID = setTimeout(this.dblclick, 500);\r\n    // call mouse equivalent\r\n    this.mousedown(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch move event.\r\n   *\r\n   * @param {object} event The touch move event.\r\n   */\r\n  touchmove = (event) => {\r\n    // abort timer if move\r\n    if (this.#touchTimerID !== null) {\r\n      clearTimeout(this.#touchTimerID);\r\n      this.#touchTimerID = null;\r\n    }\r\n    // call mouse equivalent\r\n    this.mousemove(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch end event.\r\n   *\r\n   * @param {object} event The touch end event.\r\n   */\r\n  touchend = (event) => {\r\n    // abort timer\r\n    if (this.#touchTimerID !== null) {\r\n      clearTimeout(this.#touchTimerID);\r\n      this.#touchTimerID = null;\r\n    }\r\n    // call mouse equivalent\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle mouse wheel event.\r\n   *\r\n   * @param {object} event The mouse wheel event.\r\n   */\r\n  wheel = (event) => {\r\n    this.#scrollWhell.wheel(event);\r\n  };\r\n\r\n  /**\r\n   * Handle key down event.\r\n   *\r\n   * @param {object} event The key down event.\r\n   */\r\n  keydown = (event) => {\r\n    event.context = 'Scroll';\r\n    this.#app.onKeydown(event);\r\n  };\r\n\r\n  /**\r\n   * Handle double click.\r\n   *\r\n   * @param {object} event The key down event.\r\n   */\r\n  dblclick = (event) => {\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewController =\r\n      layerGroup.getActiveViewLayer().getViewController();\r\n    viewController.play();\r\n  };\r\n\r\n  /**\r\n   * Displays a tooltip in a temparary `span`.\r\n   * Works with css to hide/show the span only on mouse hover.\r\n   *\r\n   * @param {object} event The mouse move event.\r\n   */\r\n  #showTooltip(event) {\r\n    // remove previous div\r\n    this.#removeTooltipDiv();\r\n\r\n    // get image value at position\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const viewController = viewLayer.getViewController();\r\n    const planePos = viewLayer.displayToPlanePos(event._x, event._y);\r\n    const position = viewController.getPositionFromPlanePoint(\r\n      planePos.x, planePos.y);\r\n    const value = viewController.getRescaledImageValue(position);\r\n\r\n    // create\r\n    if (typeof value !== 'undefined') {\r\n      const span = document.createElement('span');\r\n      span.id = 'scroll-tooltip';\r\n      // place span in layer group to avoid upper layer opacity\r\n      const layerDiv = document.getElementById(viewLayer.getId());\r\n      layerDiv.parentElement.appendChild(span);\r\n      // position tooltip\r\n      span.style.left = (event._x + 10) + 'px';\r\n      span.style.top = (event._y + 10) + 'px';\r\n      let text = precisionRound(value, 3).toString();\r\n      if (typeof viewController.getPixelUnit() !== 'undefined') {\r\n        text += ' ' + viewController.getPixelUnit();\r\n      }\r\n      span.appendChild(document.createTextNode(text));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the tooltip html div.\r\n   */\r\n  #removeTooltipDiv() {\r\n    const div = document.getElementById('scroll-tooltip');\r\n    if (div) {\r\n      div.remove();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the tool.\r\n   *\r\n   * @param {boolean} _bool The flag to activate or not.\r\n   */\r\n  activate(_bool) {\r\n    // remove tooltip html when deactivating\r\n    if (!_bool) {\r\n      this.#removeTooltipDiv();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the tool live features: disaply tooltip.\r\n   *\r\n   * @param {object} features The list of features.\r\n   */\r\n  setFeatures(features) {\r\n    if (typeof features.displayTooltip !== 'undefined') {\r\n      this.#displayTooltip = features.displayTooltip;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialise the tool.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n} // Scroll class\r\n","import {Point2D} from '../math/point';\r\nimport {Line} from '../math/line';\r\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * ZoomAndPan class.\r\n *\r\n * @example\r\n * // create the dwv app\r\n * const app = new dwv.App();\r\n * // initialise\r\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\r\n * const viewConfigs = {'*': [viewConfig0]};\r\n * const options = new dwv.AppOptions(viewConfigs);\r\n * options.tools = {ZoomAndPan: new dwv.ToolConfig()};\r\n * app.init(options);\r\n * // activate tool\r\n * app.addEventListener('load', function () {\r\n *   app.setTool('ZoomAndPan');\r\n * });\r\n * // load dicom data\r\n * app.loadURLs([\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\r\n * ]);\r\n */\r\nexport class ZoomAndPan {\r\n\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * Interaction start flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #started = false;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Handle mouse down event.\r\n   *\r\n   * @param {object} event The mouse down event.\r\n   */\r\n  mousedown = (event) => {\r\n    this.#started = true;\r\n    // first position\r\n    this.x0 = event._x;\r\n    this.y0 = event._y;\r\n  };\r\n\r\n  /**\r\n   * Handle two touch down event.\r\n   *\r\n   * @param {object} event The touch down event.\r\n   */\r\n  twotouchdown = (event) => {\r\n    this.#started = true;\r\n    // store first point\r\n    this.x0 = event._x;\r\n    this.y0 = event._y;\r\n    // first line\r\n    const point0 = new Point2D(event._x, event._y);\r\n    const point1 = new Point2D(event._x1, event._y1);\r\n    this.line0 = new Line(point0, point1);\r\n    this.midPoint = this.line0.getMidpoint();\r\n  };\r\n\r\n  /**\r\n   * Handle mouse move event.\r\n   *\r\n   * @param {object} event The mouse move event.\r\n   */\r\n  mousemove = (event) => {\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n    // calculate translation\r\n    const tx = event._x - this.x0;\r\n    const ty = event._y - this.y0;\r\n    // apply translation\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const viewController = viewLayer.getViewController();\r\n    const planeOffset = viewLayer.displayToPlaneScale(tx, ty);\r\n    const offset3D = viewController.getOffset3DFromPlaneOffset(planeOffset);\r\n    layerGroup.addTranslation({\r\n      x: offset3D.getX(),\r\n      y: offset3D.getY(),\r\n      z: offset3D.getZ()\r\n    });\r\n    layerGroup.draw();\r\n    // reset origin point\r\n    this.x0 = event._x;\r\n    this.y0 = event._y;\r\n  };\r\n\r\n  /**\r\n   * Handle two touch move event.\r\n   *\r\n   * @param {object} event The touch move event.\r\n   */\r\n  twotouchmove = (event) => {\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n    const point0 = new Point2D(event._x, event._y);\r\n    const point1 = new Point2D(event._x1, event._y1);\r\n    const newLine = new Line(point0, point1);\r\n    const lineRatio = newLine.getLength() / this.line0.getLength();\r\n\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const viewController = viewLayer.getViewController();\r\n\r\n    if (lineRatio === 1) {\r\n      // scroll mode\r\n      // difference  to last position\r\n      const diffY = event._y - this.y0;\r\n      // do not trigger for small moves\r\n      if (Math.abs(diffY) < 15) {\r\n        return;\r\n      }\r\n      // update view controller\r\n      if (viewController.canScroll()) {\r\n        if (diffY > 0) {\r\n          viewController.incrementScrollIndex();\r\n        } else {\r\n          viewController.decrementScrollIndex();\r\n        }\r\n      }\r\n    } else {\r\n      // zoom mode\r\n      const zoom = (lineRatio - 1) / 10;\r\n      if (Math.abs(zoom) % 0.1 <= 0.05) {\r\n        const planePos = viewLayer.displayToMainPlanePos(\r\n          this.midPoint.getX(), this.midPoint.getY());\r\n        const center = viewController.getPlanePositionFromPlanePoint(planePos);\r\n        layerGroup.addScale(zoom, center);\r\n        layerGroup.draw();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse up event.\r\n   *\r\n   * @param {object} _event The mouse up event.\r\n   */\r\n  mouseup = (_event) => {\r\n    if (this.#started) {\r\n      // stop recording\r\n      this.#started = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse out event.\r\n   *\r\n   * @param {object} event The mouse out event.\r\n   */\r\n  mouseout = (event) => {\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch start event.\r\n   *\r\n   * @param {object} event The touch start event.\r\n   */\r\n  touchstart = (event) => {\r\n    const touches = event.targetTouches;\r\n    if (touches.length === 1) {\r\n      this.mousedown(event);\r\n    } else if (touches.length === 2) {\r\n      this.twotouchdown(event);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle touch move event.\r\n   *\r\n   * @param {object} event The touch move event.\r\n   */\r\n  touchmove = (event) => {\r\n    const touches = event.targetTouches;\r\n    if (touches.length === 1) {\r\n      this.mousemove(event);\r\n    } else if (touches.length === 2) {\r\n      this.twotouchmove(event);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle touch end event.\r\n   *\r\n   * @param {object} event The touch end event.\r\n   */\r\n  touchend = (event) => {\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle mouse wheel event.\r\n   *\r\n   * @param {object} event The mouse wheel event.\r\n   */\r\n  wheel = (event) => {\r\n    // prevent default page scroll\r\n    event.preventDefault();\r\n\r\n    const step = -event.deltaY / 500;\r\n\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const viewController = viewLayer.getViewController();\r\n    const planePos = viewLayer.displayToMainPlanePos(event._x, event._y);\r\n    const center = viewController.getPlanePositionFromPlanePoint(planePos);\r\n    layerGroup.addScale(step, center);\r\n    layerGroup.draw();\r\n  };\r\n\r\n  /**\r\n   * Handle key down event.\r\n   *\r\n   * @param {object} event The key down event.\r\n   */\r\n  keydown = (event) => {\r\n    event.context = 'ZoomAndPan';\r\n    this.#app.onKeydown(event);\r\n  };\r\n\r\n  /**\r\n   * Activate the tool.\r\n   *\r\n   * @param {boolean} _bool The flag to activate or not.\r\n   */\r\n  activate(_bool) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Initialise the tool.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n} // ZoomAndPan class\r\n","import {getLayerDetailsFromEvent} from '../gui/layerGroup';\r\nimport {ScrollWheel} from './scrollWheel';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Opacity class.\r\n *\r\n * @example\r\n * // create the dwv app\r\n * const app = new dwv.App();\r\n * // initialise\r\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\r\n * const viewConfigs = {'*': [viewConfig0]};\r\n * const options = new dwv.AppOptions(viewConfigs);\r\n * options.tools = {Opacity: new dwv.ToolConfig()};\r\n * app.init(options);\r\n * // activate tool\r\n * app.addEventListener('load', function () {\r\n *   app.setTool('Opacity');\r\n * });\r\n * // load dicom data\r\n * app.loadURLs([\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\r\n * ]);\r\n */\r\nexport class Opacity {\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * Interaction start flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #started = false;\r\n\r\n  /**\r\n   * Scroll wheel handler.\r\n   *\r\n   * @type {ScrollWheel}\r\n   */\r\n  #scrollWhell;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n    this.#scrollWhell = new ScrollWheel(app);\r\n  }\r\n\r\n  /**\r\n   * Handle mouse down event.\r\n   *\r\n   * @param {object} event The mouse down event.\r\n   */\r\n  mousedown = (event) => {\r\n    // start flag\r\n    this.#started = true;\r\n    // first position\r\n    this.x0 = event._x;\r\n    this.y0 = event._y;\r\n  };\r\n\r\n  /**\r\n   * Handle mouse move event.\r\n   *\r\n   * @param {object} event The mouse move event.\r\n   */\r\n  mousemove = (event) => {\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n\r\n    // difference to last X position\r\n    const diffX = event._x - this.x0;\r\n    const xMove = (Math.abs(diffX) > 15);\r\n    // do not trigger for small moves\r\n    if (xMove) {\r\n      const layerDetails = getLayerDetailsFromEvent(event);\r\n      const layerGroup =\r\n        this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n      const viewLayer = layerGroup.getActiveViewLayer();\r\n      const op = viewLayer.getOpacity();\r\n      viewLayer.setOpacity(op + (diffX / 200));\r\n      viewLayer.draw();\r\n\r\n      // reset origin point\r\n      this.x0 = event._x;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse up event.\r\n   *\r\n   * @param {object} _event The mouse up event.\r\n   */\r\n  mouseup = (_event) => {\r\n    if (this.#started) {\r\n      // stop recording\r\n      this.#started = false;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse out event.\r\n   *\r\n   * @param {object} event The mouse out event.\r\n   */\r\n  mouseout = (event) => {\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch start event.\r\n   *\r\n   * @param {object} event The touch start event.\r\n   */\r\n  touchstart = (event) => {\r\n    // call mouse equivalent\r\n    this.mousedown(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch move event.\r\n   *\r\n   * @param {object} event The touch move event.\r\n   */\r\n  touchmove = (event) => {\r\n    // call mouse equivalent\r\n    this.mousemove(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch end event.\r\n   *\r\n   * @param {object} event The touch end event.\r\n   */\r\n  touchend = (event) => {\r\n    // call mouse equivalent\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle mouse wheel event.\r\n   *\r\n   * @param {object} event The mouse wheel event.\r\n   */\r\n  wheel = (event) => {\r\n    this.#scrollWhell.wheel(event);\r\n  };\r\n\r\n  /**\r\n   * Handle key down event.\r\n   *\r\n   * @param {object} event The key down event.\r\n   */\r\n  keydown = (event) => {\r\n    event.context = 'Opacity';\r\n    this.#app.onKeydown(event);\r\n  };\r\n\r\n  /**\r\n   * Activate the tool.\r\n   *\r\n   * @param {boolean} _bool The flag to activate or not.\r\n   */\r\n  activate(_bool) {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Initialise the tool.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n} // Opacity class\r\n","import {DrawGroupCommand} from '../tools/drawCommands';\r\nimport {RoiFactory} from '../tools/roi';\r\nimport {guid} from '../math/stats';\r\nimport {Point2D} from '../math/point';\r\nimport {Style} from '../gui/style';\r\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\r\nimport {ListenerHandler} from '../utils/listen';\r\nimport {logger} from '../utils/logger';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * The magic wand namespace.\r\n *\r\n * @external MagicWand\r\n * @see https://github.com/Tamersoul/magic-wand-js\r\n */\r\nimport MagicWand from 'magic-wand-tool';\r\n\r\n/**\r\n * Floodfill painting tool.\r\n */\r\nexport class Floodfill {\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Original variables from external library. Used as in the lib example.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #blurRadius = 5;\r\n  /**\r\n   * Original variables from external library. Used as in the lib example.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #simplifyTolerant = 0;\r\n\r\n  /**\r\n   * Original variables from external library. Used as in the lib example.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #simplifyCount = 2000;\r\n\r\n  /**\r\n   * Canvas info\r\n   *\r\n   * @type {object}\r\n   */\r\n  #imageInfo = null;\r\n\r\n  /**\r\n   * Object created by MagicWand lib containing border points\r\n   *\r\n   * @type {object}\r\n   */\r\n  #mask = null;\r\n\r\n  /**\r\n   * threshold default tolerance of the tool border\r\n   *\r\n   * @type {number}\r\n   */\r\n  #initialthreshold = 10;\r\n\r\n  /**\r\n   * threshold tolerance of the tool border\r\n   *\r\n   * @type {number}\r\n   */\r\n  #currentthreshold = null;\r\n\r\n  /**\r\n   * Interaction start flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #started = false;\r\n  /**\r\n   * Draw command.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #command = null;\r\n\r\n  /**\r\n   * Current shape group.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #shapeGroup = null;\r\n\r\n  /**\r\n   * Coordinates of the fist mousedown event.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #initialpoint;\r\n\r\n  /**\r\n   * Floodfill border.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #border = null;\r\n\r\n  /**\r\n   * List of parent points.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #parentPoints = [];\r\n\r\n  /**\r\n   * Assistant variable to paint border on all slices.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #extender = false;\r\n\r\n  /**\r\n   * Timeout for painting on mousemove.\r\n   *\r\n   */\r\n  #painterTimeout;\r\n\r\n  /**\r\n   * Drawing style.\r\n   *\r\n   * @type {Style}\r\n   */\r\n  #style = new Style();\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Set extend option for painting border on all slices.\r\n   *\r\n   * @param {boolean} bool The option to set\r\n   */\r\n  setExtend(bool) {\r\n    this.#extender = bool;\r\n  }\r\n\r\n  /**\r\n   * Get extend option for painting border on all slices.\r\n   *\r\n   * @returns {boolean} The actual value of of the variable to use Floodfill\r\n   *   on museup.\r\n   */\r\n  getExtend() {\r\n    return this.#extender;\r\n  }\r\n\r\n  /**\r\n   * Get (x, y) coordinates referenced to the canvas\r\n   *\r\n   * @param {object} event The original event.\r\n   * @returns {object} The coordinates as a {x,y}.\r\n   */\r\n  #getCoord = (event) => {\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\r\n    return {\r\n      x: index.get(0),\r\n      y: index.get(1)\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Calculate border.\r\n   *\r\n   * @param {object} points The input points.\r\n   * @param {number} threshold The threshold of the floodfill.\r\n   * @param {boolean} simple Return first points or a list.\r\n   * @returns {Array} The parent points.\r\n   */\r\n  #calcBorder(points, threshold, simple) {\r\n\r\n    this.#parentPoints = [];\r\n    const image = {\r\n      data: this.#imageInfo.data,\r\n      width: this.#imageInfo.width,\r\n      height: this.#imageInfo.height,\r\n      bytes: 4\r\n    };\r\n\r\n    this.#mask = MagicWand.floodFill(image, points.x, points.y, threshold);\r\n    this.#mask = MagicWand.gaussBlurOnlyBorder(this.#mask, this.#blurRadius);\r\n\r\n    let cs = MagicWand.traceContours(this.#mask);\r\n    cs = MagicWand.simplifyContours(\r\n      cs, this.#simplifyTolerant, this.#simplifyCount);\r\n\r\n    if (cs.length > 0 && cs[0].points[0].x) {\r\n      if (simple) {\r\n        return cs[0].points;\r\n      }\r\n      for (let j = 0, icsl = cs[0].points.length; j < icsl; j++) {\r\n        this.#parentPoints.push(new Point2D(\r\n          cs[0].points[j].x,\r\n          cs[0].points[j].y\r\n        ));\r\n      }\r\n      return this.#parentPoints;\r\n    } else {\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Paint Floodfill.\r\n   *\r\n   * @param {object} point The start point.\r\n   * @param {number} threshold The border threshold.\r\n   * @param {object} layerGroup The origin layer group.\r\n   * @returns {boolean} False if no border.\r\n   */\r\n  #paintBorder(point, threshold, layerGroup) {\r\n    // Calculate the border\r\n    this.#border = this.#calcBorder(point, threshold, false);\r\n    // Paint the border\r\n    if (this.#border) {\r\n      const factory = new RoiFactory();\r\n      this.#shapeGroup = factory.create(this.#border, this.#style);\r\n      this.#shapeGroup.id(guid());\r\n\r\n      const drawLayer = layerGroup.getActiveDrawLayer();\r\n      const drawController = drawLayer.getDrawController();\r\n\r\n      // get the position group\r\n      const posGroup = drawController.getCurrentPosGroup();\r\n      // add shape group to position group\r\n      posGroup.add(this.#shapeGroup);\r\n\r\n      // draw shape command\r\n      this.#command = new DrawGroupCommand(this.#shapeGroup, 'floodfill',\r\n        drawLayer.getKonvaLayer());\r\n      this.#command.onExecute = this.#fireEvent;\r\n      this.#command.onUndo = this.#fireEvent;\r\n      // // draw\r\n      this.#command.execute();\r\n      // save it in undo stack\r\n      this.#app.addToUndoStack(this.#command);\r\n\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create Floodfill in all the prev and next slices while border is found\r\n   *\r\n   * @param {number} ini The first slice to extend to.\r\n   * @param {number} end The last slice to extend to.\r\n   * @param {object} layerGroup The origin layer group.\r\n   */\r\n  extend(ini, end, layerGroup) {\r\n    //avoid errors\r\n    if (!this.#initialpoint) {\r\n      throw '\\'initialpoint\\' not found. User must click before use extend!';\r\n    }\r\n    // remove previous draw\r\n    if (this.#shapeGroup) {\r\n      this.#shapeGroup.destroy();\r\n    }\r\n\r\n    const viewController =\r\n      layerGroup.getActiveViewLayer().getViewController();\r\n\r\n    const pos = viewController.getCurrentIndex();\r\n    const imageSize = viewController.getImageSize();\r\n    const threshold = this.#currentthreshold || this.#initialthreshold;\r\n\r\n    // Iterate over the next images and paint border on each slice.\r\n    for (let i = pos.get(2),\r\n      len = end\r\n        ? end : imageSize.get(2);\r\n      i < len; i++) {\r\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\r\n        break;\r\n      }\r\n      viewController.incrementIndex(2);\r\n    }\r\n    viewController.setCurrentPosition(pos);\r\n\r\n    // Iterate over the prev images and paint border on each slice.\r\n    for (let j = pos.get(2), jl = ini ? ini : 0; j > jl; j--) {\r\n      if (!this.#paintBorder(this.#initialpoint, threshold, layerGroup)) {\r\n        break;\r\n      }\r\n      viewController.decrementIndex(2);\r\n    }\r\n    viewController.setCurrentPosition(pos);\r\n  }\r\n\r\n  /**\r\n   * Modify tolerance threshold and redraw ROI.\r\n   *\r\n   * @param {number} modifyThreshold The new threshold.\r\n   * @param {object} shape The shape to update.\r\n   */\r\n  modifyThreshold(modifyThreshold, shape) {\r\n\r\n    if (!shape && this.#shapeGroup) {\r\n      shape = this.#shapeGroup.getChildren(function (node) {\r\n        return node.name() === 'shape';\r\n      })[0];\r\n    } else {\r\n      throw 'No shape found';\r\n    }\r\n\r\n    clearTimeout(this.#painterTimeout);\r\n    this.#painterTimeout = setTimeout(() => {\r\n      this.#border = this.#calcBorder(\r\n        this.#initialpoint, modifyThreshold, true);\r\n      if (!this.#border) {\r\n        return false;\r\n      }\r\n      const arr = [];\r\n      for (let i = 0, bl = this.#border.length; i < bl; ++i) {\r\n        arr.push(this.#border[i].x);\r\n        arr.push(this.#border[i].y);\r\n      }\r\n      shape.setPoints(arr);\r\n      const shapeLayer = shape.getLayer();\r\n      shapeLayer.draw();\r\n      this.onThresholdChange(modifyThreshold);\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Event fired when threshold change\r\n   *\r\n   * @param {number} _value Current threshold\r\n   */\r\n  onThresholdChange(_value) {\r\n    // Defaults do nothing\r\n  }\r\n\r\n  /**\r\n   * Handle mouse down event.\r\n   *\r\n   * @param {object} event The mouse down event.\r\n   */\r\n  mousedown = (event) => {\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const drawLayer = layerGroup.getActiveDrawLayer();\r\n\r\n    this.#imageInfo = viewLayer.getImageData();\r\n    if (!this.#imageInfo) {\r\n      logger.error('No image found');\r\n      return;\r\n    }\r\n\r\n    // update zoom scale\r\n    this.#style.setZoomScale(\r\n      drawLayer.getKonvaLayer().getAbsoluteScale());\r\n\r\n    this.#started = true;\r\n    this.#initialpoint = this.#getCoord(event);\r\n    this.#paintBorder(this.#initialpoint, this.#initialthreshold, layerGroup);\r\n    this.onThresholdChange(this.#initialthreshold);\r\n  };\r\n\r\n  /**\r\n   * Handle mouse move event.\r\n   *\r\n   * @param {object} event The mouse move event.\r\n   */\r\n  mousemove = (event) => {\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n    const movedpoint = this.#getCoord(event);\r\n    this.#currentthreshold = Math.round(Math.sqrt(\r\n      Math.pow((this.#initialpoint.x - movedpoint.x), 2) +\r\n      Math.pow((this.#initialpoint.y - movedpoint.y), 2)) / 2);\r\n    this.#currentthreshold = this.#currentthreshold < this.#initialthreshold\r\n      ? this.#initialthreshold\r\n      : this.#currentthreshold - this.#initialthreshold;\r\n    this.modifyThreshold(this.#currentthreshold);\r\n  };\r\n\r\n  /**\r\n   * Handle mouse up event.\r\n   *\r\n   * @param {object} _event The mouse up event.\r\n   */\r\n  mouseup = (_event) => {\r\n    this.#started = false;\r\n    // TODO: re-activate\r\n    // if (this.#extender) {\r\n    //   const layerDetails = getLayerDetailsFromEvent(event);\r\n    //   const layerGroup =\r\n    //     this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    //   this.extend(layerGroup);\r\n    // }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse out event.\r\n   *\r\n   * @param {object} event The mouse out event.\r\n   */\r\n  mouseout = (event) => {\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch start event.\r\n   *\r\n   * @param {object} event The touch start event.\r\n   */\r\n  touchstart = (event) => {\r\n    // treat as mouse down\r\n    this.mousedown(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch move event.\r\n   *\r\n   * @param {object} event The touch move event.\r\n   */\r\n  touchmove = (event) => {\r\n    // treat as mouse move\r\n    this.mousemove(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch end event.\r\n   *\r\n   * @param {object} event The touch end event.\r\n   */\r\n  touchend = (event) => {\r\n    // treat as mouse up\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle key down event.\r\n   *\r\n   * @param {object} event The key down event.\r\n   */\r\n  keydown = (event) => {\r\n    event.context = 'Floodfill';\r\n    this.#app.onKeydown(event);\r\n  };\r\n\r\n  /**\r\n   * Activate the tool.\r\n   *\r\n   * @param {boolean} bool The flag to activate or not.\r\n   */\r\n  activate(bool) {\r\n    if (bool) {\r\n      // init with the app window scale\r\n      this.#style.setBaseScale(this.#app.getBaseScale());\r\n      // set the default to the first in the list\r\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialise the tool.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Get the list of event names that this tool can fire.\r\n   *\r\n   * @returns {Array} The list of event names.\r\n   */\r\n  getEventNames() {\r\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Set the tool live features: shape colour.\r\n   *\r\n   * @param {object} features The list of features.\r\n   */\r\n  setFeatures(features) {\r\n    if (typeof features.shapeColour !== 'undefined') {\r\n      this.#style.setLineColour(features.shapeColour);\r\n    }\r\n  }\r\n\r\n} // Floodfill class\r\n","import {Style} from '../gui/style';\r\nimport {Point2D} from '../math/point';\r\nimport {Path} from '../math/path';\r\nimport {Scissors} from '../math/scissors';\r\nimport {guid} from '../math/stats';\r\nimport {getLayerDetailsFromEvent} from '../gui/layerGroup';\r\nimport {ListenerHandler} from '../utils/listen';\r\nimport {RoiFactory} from '../tools/roi';\r\nimport {DrawGroupCommand} from '../tools/drawCommands';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {App} from '../app/application';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * Livewire painting tool.\r\n */\r\nexport class Livewire {\r\n  /**\r\n   * Associated app.\r\n   *\r\n   * @type {App}\r\n   */\r\n  #app;\r\n\r\n  /**\r\n   * @param {App} app The associated application.\r\n   */\r\n  constructor(app) {\r\n    this.#app = app;\r\n  }\r\n\r\n  /**\r\n   * Interaction start flag.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #started = false;\r\n\r\n  /**\r\n   * Draw command.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #command = null;\r\n\r\n  /**\r\n   * Current shape group.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #shapeGroup = null;\r\n\r\n  /**\r\n   * Drawing style.\r\n   *\r\n   * @type {Style}\r\n   */\r\n  #style = new Style();\r\n\r\n  /**\r\n   * Path storage. Paths are stored in reverse order.\r\n   *\r\n   * @type {Path}\r\n   */\r\n  #path = new Path();\r\n\r\n  /**\r\n   * Current path storage. Paths are stored in reverse order.\r\n   *\r\n   * @type {Path}\r\n   */\r\n  #currentPath = new Path();\r\n\r\n  /**\r\n   * List of parent points.\r\n   *\r\n   * @type {Array}\r\n   */\r\n  #parentPoints = [];\r\n\r\n  /**\r\n   * Tolerance.\r\n   *\r\n   * @type {number}\r\n   */\r\n  #tolerance = 5;\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Clear the parent points list.\r\n   *\r\n   * @param {object} imageSize The image size.\r\n   */\r\n  #clearParentPoints(imageSize) {\r\n    const nrows = imageSize.get(1);\r\n    for (let i = 0; i < nrows; ++i) {\r\n      this.#parentPoints[i] = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the stored paths.\r\n   */\r\n  #clearPaths() {\r\n    this.#path = new Path();\r\n    this.#currentPath = new Path();\r\n  }\r\n\r\n  /**\r\n   * Scissor representation.\r\n   *\r\n   * @type {Scissors}\r\n   */\r\n  #scissors = new Scissors();\r\n\r\n  /**\r\n   * Finish a livewire (roi) shape.\r\n   */\r\n  #finishShape() {\r\n    // fire creation event (was not propagated during draw)\r\n    this.#fireEvent({\r\n      type: 'drawcreate',\r\n      id: this.#shapeGroup.id()\r\n    });\r\n    // listen\r\n    this.#command.onExecute = this.#fireEvent;\r\n    this.#command.onUndo = this.#fireEvent;\r\n    // save command in undo stack\r\n    this.#app.addToUndoStack(this.#command);\r\n    // set flag\r\n    this.#started = false;\r\n  }\r\n\r\n  /**\r\n   * Handle mouse down event.\r\n   *\r\n   * @param {object} event The mouse down event.\r\n   */\r\n  mousedown = (event) => {\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const imageSize = viewLayer.getViewController().getImageSize();\r\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\r\n\r\n    // first time\r\n    if (!this.#started) {\r\n      this.#started = true;\r\n      this.x0 = index.get(0);\r\n      this.y0 = index.get(1);\r\n      // clear vars\r\n      this.#clearPaths();\r\n      this.#clearParentPoints(imageSize);\r\n      this.#shapeGroup = null;\r\n      // update zoom scale\r\n      const drawLayer = layerGroup.getActiveDrawLayer();\r\n      this.#style.setZoomScale(\r\n        drawLayer.getKonvaLayer().getAbsoluteScale());\r\n      // do the training from the first point\r\n      const p = {x: index.get(0), y: index.get(1)};\r\n      this.#scissors.doTraining(p);\r\n      // add the initial point to the path\r\n      const p0 = new Point2D(index.get(0), index.get(1));\r\n      this.#path.addPoint(p0);\r\n      this.#path.addControlPoint(p0);\r\n    } else {\r\n      // final point: at 'tolerance' of the initial point\r\n      if ((Math.abs(index.get(0) - this.x0) < this.#tolerance) &&\r\n        (Math.abs(index.get(1) - this.y0) < this.#tolerance)) {\r\n        // finish\r\n        this.#finishShape();\r\n      } else {\r\n        // anchor point\r\n        this.#path = this.#currentPath;\r\n        this.#clearParentPoints(imageSize);\r\n        const pn = {x: index.get(0), y: index.get(1)};\r\n        this.#scissors.doTraining(pn);\r\n        this.#path.addControlPoint(this.#currentPath.getPoint(0));\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle mouse move event.\r\n   *\r\n   * @param {object} event The mouse move event.\r\n   */\r\n  mousemove = (event) => {\r\n    if (!this.#started) {\r\n      return;\r\n    }\r\n    const layerDetails = getLayerDetailsFromEvent(event);\r\n    const layerGroup = this.#app.getLayerGroupByDivId(layerDetails.groupDivId);\r\n    const viewLayer = layerGroup.getActiveViewLayer();\r\n    const index = viewLayer.displayToPlaneIndex(event._x, event._y);\r\n\r\n    // set the point to find the path to\r\n    let p = {x: index.get(0), y: index.get(1)};\r\n    this.#scissors.setPoint(p);\r\n    // do the work\r\n    let results = [];\r\n    let stop = false;\r\n    while (!this.#parentPoints[p.y][p.x] && !stop) {\r\n      results = this.#scissors.doWork();\r\n\r\n      if (results.length === 0) {\r\n        stop = true;\r\n      } else {\r\n        // fill parents\r\n        for (let i = 0; i < results.length - 1; i += 2) {\r\n          const _p = results[i];\r\n          const _q = results[i + 1];\r\n          this.#parentPoints[_p.y][_p.x] = _q;\r\n        }\r\n      }\r\n    }\r\n\r\n    // get the path\r\n    this.#currentPath = new Path();\r\n    stop = false;\r\n    while (p && !stop) {\r\n      this.#currentPath.addPoint(new Point2D(p.x, p.y));\r\n      if (!this.#parentPoints[p.y]) {\r\n        stop = true;\r\n      } else {\r\n        if (!this.#parentPoints[p.y][p.x]) {\r\n          stop = true;\r\n        } else {\r\n          p = this.#parentPoints[p.y][p.x];\r\n        }\r\n      }\r\n    }\r\n    this.#currentPath.appenPath(this.#path);\r\n\r\n    // remove previous draw\r\n    if (this.#shapeGroup) {\r\n      this.#shapeGroup.destroy();\r\n    }\r\n    // create shape\r\n    const factory = new RoiFactory();\r\n    this.#shapeGroup = factory.create(\r\n      this.#currentPath.pointArray, this.#style);\r\n    this.#shapeGroup.id(guid());\r\n\r\n    const drawLayer = layerGroup.getActiveDrawLayer();\r\n    const drawController = drawLayer.getDrawController();\r\n\r\n    // get the position group\r\n    const posGroup = drawController.getCurrentPosGroup();\r\n    // add shape group to position group\r\n    posGroup.add(this.#shapeGroup);\r\n\r\n    // draw shape command\r\n    this.#command = new DrawGroupCommand(this.#shapeGroup, 'livewire',\r\n      drawLayer.getKonvaLayer());\r\n    // draw\r\n    this.#command.execute();\r\n  };\r\n\r\n  /**\r\n   * Handle mouse up event.\r\n   *\r\n   * @param {object} _event The mouse up event.\r\n   */\r\n  mouseup(_event) {\r\n    // nothing to do\r\n  }\r\n\r\n  /**\r\n   * Handle mouse out event.\r\n   *\r\n   * @param {object} event The mouse out event.\r\n   */\r\n  mouseout = (event) => {\r\n    // treat as mouse up\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle double click event.\r\n   *\r\n   * @param {object} _event The double click event.\r\n   */\r\n  dblclick = (_event) => {\r\n    this.#finishShape();\r\n  };\r\n\r\n  /**\r\n   * Handle touch start event.\r\n   *\r\n   * @param {object} event The touch start event.\r\n   */\r\n  touchstart = (event) => {\r\n    // treat as mouse down\r\n    this.mousedown(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch move event.\r\n   *\r\n   * @param {object} event The touch move event.\r\n   */\r\n  touchmove = (event) => {\r\n    // treat as mouse move\r\n    this.mousemove(event);\r\n  };\r\n\r\n  /**\r\n   * Handle touch end event.\r\n   *\r\n   * @param {object} event The touch end event.\r\n   */\r\n  touchend = (event) => {\r\n    // treat as mouse up\r\n    this.mouseup(event);\r\n  };\r\n\r\n  /**\r\n   * Handle key down event.\r\n   *\r\n   * @param {object} event The key down event.\r\n   */\r\n  keydown = (event) => {\r\n    event.context = 'Livewire';\r\n    this.#app.onKeydown(event);\r\n  };\r\n\r\n  /**\r\n   * Activate the tool.\r\n   *\r\n   * @param {boolean} bool The flag to activate or not.\r\n   */\r\n  activate(bool) {\r\n    // start scissors if displayed\r\n    if (bool) {\r\n      const layerGroup = this.#app.getActiveLayerGroup();\r\n      const viewLayer = layerGroup.getActiveViewLayer();\r\n\r\n      //scissors = new Scissors();\r\n      const imageSize = viewLayer.getViewController().getImageSize();\r\n      this.#scissors.setDimensions(\r\n        imageSize.get(0),\r\n        imageSize.get(1));\r\n      this.#scissors.setData(viewLayer.getImageData().data);\r\n\r\n      // init with the app window scale\r\n      this.#style.setBaseScale(this.#app.getBaseScale());\r\n      // set the default to the first in the list\r\n      this.setFeatures({shapeColour: this.#style.getLineColour()});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialise the tool.\r\n   */\r\n  init() {\r\n    // does nothing\r\n  }\r\n\r\n  /**\r\n   * Get the list of event names that this tool can fire.\r\n   *\r\n   * @returns {Array} The list of event names.\r\n   */\r\n  getEventNames() {\r\n    return ['drawcreate', 'drawchange', 'drawmove', 'drawdelete'];\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *    event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Set the tool live features: shape colour.\r\n   *\r\n   * @param {object} features The list of features.\r\n   */\r\n  setFeatures(features) {\r\n    if (typeof features.shapeColour !== 'undefined') {\r\n      this.#style.setLineColour(features.shapeColour);\r\n    }\r\n  }\r\n\r\n} // Livewire class\r\n","import {Point2D} from '../math/point';\r\nimport {Line, getPerpendicularLine, getAngle} from '../math/line';\r\nimport {getDefaultAnchor} from './editor';\r\n\r\n// external\r\nimport Konva from 'konva';\r\n\r\n/**\r\n * Default draw label text.\r\n */\r\nconst defaultArrowLabelText = '';\r\n\r\n/**\r\n * Arrow factory.\r\n */\r\nexport class ArrowFactory {\r\n  /**\r\n   * Get the name of the shape group.\r\n   *\r\n   * @returns {string} The name.\r\n   */\r\n  getGroupName() {\r\n    return 'line-group';\r\n  }\r\n\r\n  /**\r\n   * Get the number of points needed to build the shape.\r\n   *\r\n   * @returns {number} The number of points.\r\n   */\r\n  getNPoints() {\r\n    return 2;\r\n  }\r\n\r\n  /**\r\n   * Get the timeout between point storage.\r\n   *\r\n   * @returns {number} The timeout in milliseconds.\r\n   */\r\n  getTimeout() {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Is the input group a group of this factory?\r\n   *\r\n   * @param {object} group The group to test.\r\n   * @returns {boolean} True if the group is from this fcatory.\r\n   */\r\n  isFactoryGroup(group) {\r\n    return this.getGroupName() === group.name();\r\n  }\r\n\r\n  /**\r\n   * Create an arrow shape to be displayed.\r\n   *\r\n   * @param {Array} points The points from which to extract the line.\r\n   * @param {object} style The drawing style.\r\n   * @param {object} _viewController The associated view controller.\r\n   * @returns {object} The Konva object.\r\n   */\r\n  create(points, style, _viewController) {\r\n    // physical shape\r\n    const line = new Line(points[0], points[1]);\r\n    // draw shape\r\n    const kshape = new Konva.Line({\r\n      points: [line.getBegin().getX(),\r\n        line.getBegin().getY(),\r\n        line.getEnd().getX(),\r\n        line.getEnd().getY()],\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape'\r\n    });\r\n    // larger hitfunc\r\n    const linePerp0 = getPerpendicularLine(\r\n      line, points[0], style.scale(10));\r\n    const linePerp1 = getPerpendicularLine(\r\n      line, points[1], style.scale(10));\r\n    kshape.hitFunc(function (context) {\r\n      context.beginPath();\r\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\r\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\r\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\r\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\r\n      context.closePath();\r\n      context.fillStrokeShape(kshape);\r\n    });\r\n    // triangle\r\n    const beginTy = new Point2D(\r\n      line.getBegin().getX(),\r\n      line.getBegin().getY() - 10);\r\n    const verticalLine = new Line(line.getBegin(), beginTy);\r\n    const angle = getAngle(line, verticalLine);\r\n    const angleRad = angle * Math.PI / 180;\r\n    const radius = 5 * style.getScaledStrokeWidth();\r\n    const kpoly = new Konva.RegularPolygon({\r\n      x: line.getBegin().getX() + radius * Math.sin(angleRad),\r\n      y: line.getBegin().getY() + radius * Math.cos(angleRad),\r\n      sides: 3,\r\n      radius: radius,\r\n      rotation: -angle,\r\n      fill: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape-triangle'\r\n    });\r\n    // quantification\r\n    const ktext = new Konva.Text({\r\n      fontSize: style.getFontSize(),\r\n      fontFamily: style.getFontFamily(),\r\n      fill: style.getLineColour(),\r\n      padding: style.getTextPadding(),\r\n      shadowColor: style.getShadowLineColour(),\r\n      shadowOffset: style.getShadowOffset(),\r\n      name: 'text'\r\n    });\r\n    let textExpr = '';\r\n    // TODO: allow override?\r\n    // if (typeof arrowLabelText !== 'undefined') {\r\n    //   textExpr = arrowLabelText;\r\n    // } else {\r\n    textExpr = defaultArrowLabelText;\r\n    // }\r\n    ktext.setText(textExpr);\r\n    // augment text with meta data\r\n    // @ts-ignore\r\n    ktext.meta = {\r\n      textExpr: textExpr,\r\n      quantification: {}\r\n    };\r\n    // label\r\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\r\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\r\n    const klabel = new Konva.Label({\r\n      x: line.getEnd().getX() + dX * ktext.width(),\r\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\r\n      scale: style.applyZoomScale(1),\r\n      visible: textExpr.length !== 0,\r\n      name: 'label'\r\n    });\r\n    klabel.add(ktext);\r\n    klabel.add(new Konva.Tag({\r\n      fill: style.getLineColour(),\r\n      opacity: style.getTagOpacity()\r\n    }));\r\n\r\n    // return group\r\n    const group = new Konva.Group();\r\n    group.name(this.getGroupName());\r\n    group.add(klabel);\r\n    group.add(kpoly);\r\n    group.add(kshape);\r\n    group.visible(true); // dont inherit\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Get anchors to update an arrow shape.\r\n   *\r\n   * @param {object} shape The associated shape.\r\n   * @param {object} style The application style.\r\n   * @returns {Array} A list of anchors.\r\n   */\r\n  getAnchors(shape, style) {\r\n    const points = shape.points();\r\n\r\n    const anchors = [];\r\n    anchors.push(getDefaultAnchor(\r\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\r\n    ));\r\n    return anchors;\r\n  }\r\n\r\n  /**\r\n   * Update an arrow shape.\r\n   *\r\n   * @param {object} anchor The active anchor.\r\n   * @param {object} style The app style.\r\n   * @param {object} _viewController The associated view controller.\r\n   */\r\n  update(anchor, style, _viewController) {\r\n    // parent group\r\n    const group = anchor.getParent();\r\n    // associated shape\r\n    const kline = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n      // associated triangle shape\r\n    const ktriangle = group.getChildren(function (node) {\r\n      return node.name() === 'shape-triangle';\r\n    })[0];\r\n      // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n      // find special points\r\n    const begin = group.getChildren(function (node) {\r\n      return node.id() === 'begin';\r\n    })[0];\r\n    const end = group.getChildren(function (node) {\r\n      return node.id() === 'end';\r\n    })[0];\r\n      // update special points\r\n    switch (anchor.id()) {\r\n    case 'begin':\r\n      begin.x(anchor.x());\r\n      begin.y(anchor.y());\r\n      break;\r\n    case 'end':\r\n      end.x(anchor.x());\r\n      end.y(anchor.y());\r\n      break;\r\n    }\r\n    // update shape and compensate for possible drag\r\n    // note: shape.position() and shape.size() won't work...\r\n    const bx = begin.x() - kline.x();\r\n    const by = begin.y() - kline.y();\r\n    const ex = end.x() - kline.x();\r\n    const ey = end.y() - kline.y();\r\n    kline.points([bx, by, ex, ey]);\r\n    // new line\r\n    const p2d0 = new Point2D(begin.x(), begin.y());\r\n    const p2d1 = new Point2D(end.x(), end.y());\r\n    const line = new Line(p2d0, p2d1);\r\n    // larger hitfunc\r\n    const p2b = new Point2D(bx, by);\r\n    const p2e = new Point2D(ex, ey);\r\n    const linePerp0 = getPerpendicularLine(line, p2b, 10);\r\n    const linePerp1 = getPerpendicularLine(line, p2e, 10);\r\n    kline.hitFunc(function (context) {\r\n      context.beginPath();\r\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\r\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\r\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\r\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\r\n      context.closePath();\r\n      context.fillStrokeShape(kline);\r\n    });\r\n    // udate triangle\r\n    const beginTy = new Point2D(\r\n      line.getBegin().getX(),\r\n      line.getBegin().getY() - 10);\r\n    const verticalLine = new Line(line.getBegin(), beginTy);\r\n    const angle = getAngle(line, verticalLine);\r\n    const angleRad = angle * Math.PI / 180;\r\n    ktriangle.x(\r\n      line.getBegin().getX() + ktriangle.radius() * Math.sin(angleRad));\r\n    ktriangle.y(\r\n      line.getBegin().getY() + ktriangle.radius() * Math.cos(angleRad));\r\n    ktriangle.rotation(-angle);\r\n\r\n    // update text\r\n    const ktext = klabel.getText();\r\n    ktext.setText(ktext.meta.textExpr);\r\n    // update position\r\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\r\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\r\n    const textPos = {\r\n      x: line.getEnd().getX() + dX * ktext.width(),\r\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\r\n    };\r\n    klabel.position(textPos);\r\n  }\r\n\r\n} // class ArrowFactory\r\n","import {Circle} from '../math/circle';\r\nimport {Point2D} from '../math/point';\r\nimport {getFlags, replaceFlags} from '../utils/string';\r\nimport {logger} from '../utils/logger';\r\nimport {getDefaultAnchor} from './editor';\r\nimport {DRAW_DEBUG} from './draw';\r\n// external\r\nimport Konva from 'konva';\r\n\r\n/**\r\n * Default draw label text.\r\n */\r\nconst defaultCircleLabelText = '{surface}';\r\n\r\n/**\r\n * Circle factory.\r\n */\r\nexport class CircleFactory {\r\n  /**\r\n   * Get the name of the shape group.\r\n   *\r\n   * @returns {string} The name.\r\n   */\r\n  getGroupName() {\r\n    return 'circle-group';\r\n  }\r\n\r\n  /**\r\n   * Get the number of points needed to build the shape.\r\n   *\r\n   * @returns {number} The number of points.\r\n   */\r\n  getNPoints() {\r\n    return 2;\r\n  }\r\n\r\n  /**\r\n   * Get the timeout between point storage.\r\n   *\r\n   * @returns {number} The timeout in milliseconds.\r\n   */\r\n  getTimeout() {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Is the input group a group of this factory?\r\n   *\r\n   * @param {object} group The group to test.\r\n   * @returns {boolean} True if the group is from this fcatory.\r\n   */\r\n  isFactoryGroup(group) {\r\n    return this.getGroupName() === group.name();\r\n  }\r\n\r\n  /**\r\n   * Create a circle shape to be displayed.\r\n   *\r\n   * @param {Array} points The points from which to extract the circle.\r\n   * @param {object} style The drawing style.\r\n   * @param {object} viewController The associated view controller.\r\n   * @returns {object} The Konva group.\r\n   */\r\n  create(\r\n    points, style, viewController) {\r\n    // calculate radius\r\n    const a = Math.abs(points[0].getX() - points[1].getX());\r\n    const b = Math.abs(points[0].getY() - points[1].getY());\r\n    const radius = Math.round(Math.sqrt(a * a + b * b));\r\n    // physical shape\r\n    const circle = new Circle(points[0], radius);\r\n    // draw shape\r\n    const kshape = new Konva.Circle({\r\n      x: circle.getCenter().getX(),\r\n      y: circle.getCenter().getY(),\r\n      radius: circle.getRadius(),\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape'\r\n    });\r\n    // quantification\r\n    const ktext = new Konva.Text({\r\n      fontSize: style.getFontSize(),\r\n      fontFamily: style.getFontFamily(),\r\n      fill: style.getLineColour(),\r\n      padding: style.getTextPadding(),\r\n      shadowColor: style.getShadowLineColour(),\r\n      shadowOffset: style.getShadowOffset(),\r\n      name: 'text'\r\n    });\r\n    let textExpr = '';\r\n    // TODO: allow override?\r\n    // if (typeof circleLabelText !== 'undefined') {\r\n    //   textExpr = circleLabelText;\r\n    // } else {\r\n    textExpr = defaultCircleLabelText;\r\n    // }\r\n    const quant = circle.quantify(\r\n      viewController,\r\n      getFlags(textExpr));\r\n    ktext.setText(replaceFlags(textExpr, quant));\r\n    // augment text with meta data\r\n    // @ts-ignore\r\n    ktext.meta = {\r\n      textExpr: textExpr,\r\n      quantification: quant\r\n    };\r\n    // label\r\n    const klabel = new Konva.Label({\r\n      x: circle.getCenter().getX(),\r\n      y: circle.getCenter().getY(),\r\n      scale: style.applyZoomScale(1),\r\n      visible: textExpr.length !== 0,\r\n      name: 'label'\r\n    });\r\n    klabel.add(ktext);\r\n    klabel.add(new Konva.Tag({\r\n      fill: style.getLineColour(),\r\n      opacity: style.getTagOpacity()\r\n    }));\r\n\r\n    // debug shadow\r\n    let kshadow;\r\n    if (DRAW_DEBUG) {\r\n      kshadow = this.#getShadowCircle(circle);\r\n    }\r\n\r\n    // return group\r\n    const group = new Konva.Group();\r\n    group.name(this.getGroupName());\r\n    if (kshadow) {\r\n      group.add(kshadow);\r\n    }\r\n    group.add(klabel);\r\n    group.add(kshape);\r\n    group.visible(true); // dont inherit\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Get anchors to update a circle shape.\r\n   *\r\n   * @param {object} shape The associated shape.\r\n   * @param {object} style The application style.\r\n   * @returns {Array} A list of anchors.\r\n   */\r\n  getAnchors(shape, style) {\r\n    const centerX = shape.x();\r\n    const centerY = shape.y();\r\n    const radius = shape.radius();\r\n\r\n    const anchors = [];\r\n    anchors.push(getDefaultAnchor(\r\n      centerX - radius, centerY, 'left', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      centerX + radius, centerY, 'right', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      centerX, centerY - radius, 'bottom', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      centerX, centerY + radius, 'top', style\r\n    ));\r\n    return anchors;\r\n  }\r\n\r\n  /**\r\n   * Update a circle shape.\r\n   *\r\n   * @param {object} anchor The active anchor.\r\n   * @param {object} _style The app style.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  update(anchor, _style, viewController) {\r\n    // parent group\r\n    const group = anchor.getParent();\r\n    // associated shape\r\n    const kcircle = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n    // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n    // find special points\r\n    const left = group.getChildren(function (node) {\r\n      return node.id() === 'left';\r\n    })[0];\r\n    const right = group.getChildren(function (node) {\r\n      return node.id() === 'right';\r\n    })[0];\r\n    const bottom = group.getChildren(function (node) {\r\n      return node.id() === 'bottom';\r\n    })[0];\r\n    const top = group.getChildren(function (node) {\r\n      return node.id() === 'top';\r\n    })[0];\r\n    // debug shadow\r\n    let kshadow;\r\n    if (DRAW_DEBUG) {\r\n      kshadow = group.getChildren(function (node) {\r\n        return node.name() === 'shadow';\r\n      })[0];\r\n    }\r\n\r\n    // circle center\r\n    const center = {\r\n      x: kcircle.x(),\r\n      y: kcircle.y()\r\n    };\r\n\r\n    let radius;\r\n\r\n    // update 'self' (undo case) and special points\r\n    switch (anchor.id()) {\r\n    case 'left':\r\n      radius = center.x - anchor.x();\r\n      // force y\r\n      left.y(right.y());\r\n      // update others\r\n      right.x(center.x + radius);\r\n      bottom.y(center.y - radius);\r\n      top.y(center.y + radius);\r\n      break;\r\n    case 'right':\r\n      radius = anchor.x() - center.x;\r\n      // force y\r\n      right.y(left.y());\r\n      // update others\r\n      left.x(center.x - radius);\r\n      bottom.y(center.y - radius);\r\n      top.y(center.y + radius);\r\n      break;\r\n    case 'bottom':\r\n      radius = center.y - anchor.y();\r\n      // force x\r\n      bottom.x(top.x());\r\n      // update others\r\n      left.x(center.x - radius);\r\n      right.x(center.x + radius);\r\n      top.y(center.y + radius);\r\n      break;\r\n    case 'top':\r\n      radius = anchor.y() - center.y;\r\n      // force x\r\n      top.x(bottom.x());\r\n      // update others\r\n      left.x(center.x - radius);\r\n      right.x(center.x + radius);\r\n      bottom.y(center.y - radius);\r\n      break;\r\n    default :\r\n      logger.error('Unhandled anchor id: ' + anchor.id());\r\n      break;\r\n    }\r\n\r\n    // update shape: just update the radius\r\n    kcircle.radius(Math.abs(radius));\r\n    // new circle\r\n    const centerPoint = new Point2D(\r\n      group.x() + center.x,\r\n      group.y() + center.y\r\n    );\r\n    const circle = new Circle(centerPoint, radius);\r\n\r\n    // debug shadow\r\n    if (kshadow) {\r\n      // remove previous\r\n      kshadow.destroy();\r\n      // add new\r\n      group.add(this.#getShadowCircle(circle, group));\r\n    }\r\n\r\n    // update label position\r\n    const textPos = {x: center.x, y: center.y};\r\n    klabel.position(textPos);\r\n\r\n    // update quantification\r\n    this.#updateCircleQuantification(group, viewController);\r\n  }\r\n\r\n  /**\r\n   * Update the quantification of a Circle.\r\n   *\r\n   * @param {object} group The group with the shape.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  updateQuantification(group, viewController) {\r\n    this.#updateCircleQuantification(group, viewController);\r\n  }\r\n\r\n  /**\r\n   * Update the quantification of a Circle (as a static\r\n   *   function to be used in update).\r\n   *\r\n   * @param {object} group The group with the shape.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  #updateCircleQuantification(\r\n    group, viewController) {\r\n    // associated shape\r\n    const kcircle = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n    // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n\r\n    // positions: add possible group offset\r\n    const centerPoint = new Point2D(\r\n      group.x() + kcircle.x(),\r\n      group.y() + kcircle.y()\r\n    );\r\n    // circle\r\n    const circle = new Circle(centerPoint, kcircle.radius());\r\n\r\n    // update text\r\n    const ktext = klabel.getText();\r\n    const quantification = circle.quantify(\r\n      viewController,\r\n      getFlags(ktext.meta.textExpr));\r\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\r\n    // update meta\r\n    ktext.meta.quantification = quantification;\r\n  }\r\n\r\n  /**\r\n   * Get the debug shadow.\r\n   *\r\n   * @param {Circle} circle The circle to shadow.\r\n   * @param {object} group The associated group.\r\n   * @returns {object} The shadow konva group.\r\n   */\r\n  #getShadowCircle(circle, group) {\r\n    // possible group offset\r\n    let offsetX = 0;\r\n    let offsetY = 0;\r\n    if (typeof group !== 'undefined') {\r\n      offsetX = group.x();\r\n      offsetY = group.y();\r\n    }\r\n    const kshadow = new Konva.Group();\r\n    kshadow.name('shadow');\r\n    const regions = circle.getRound();\r\n    for (let i = 0; i < regions.length; ++i) {\r\n      const region = regions[i];\r\n      const minX = region[0][0];\r\n      const minY = region[0][1];\r\n      const maxX = region[1][0];\r\n      const pixelLine = new Konva.Rect({\r\n        x: minX - offsetX,\r\n        y: minY - offsetY,\r\n        width: maxX - minX,\r\n        height: 1,\r\n        fill: 'grey',\r\n        strokeWidth: 0,\r\n        strokeScaleEnabled: false,\r\n        opacity: 0.3,\r\n        name: 'shadow-element'\r\n      });\r\n      kshadow.add(pixelLine);\r\n    }\r\n    return kshadow;\r\n  }\r\n\r\n} // class CircleFactory\r\n","import {DRAW_DEBUG} from './draw';\r\nimport {getDefaultAnchor} from './editor';\r\nimport {Ellipse} from '../math/ellipse';\r\nimport {Point2D} from '../math/point';\r\nimport {logger} from '../utils/logger';\r\nimport {getFlags, replaceFlags} from '../utils/string';\r\n// external\r\nimport Konva from 'konva';\r\n\r\n/**\r\n * Default draw label text.\r\n */\r\nconst defaultEllipseLabelText = '{surface}';\r\n\r\n/**\r\n * Ellipse factory.\r\n */\r\nexport class EllipseFactory {\r\n  /**\r\n   * Get the name of the shape group.\r\n   *\r\n   * @returns {string} The name.\r\n   */\r\n  getGroupName() {\r\n    return 'ellipse-group';\r\n  }\r\n\r\n  /**\r\n   * Get the number of points needed to build the shape.\r\n   *\r\n   * @returns {number} The number of points.\r\n   */\r\n  getNPoints() {\r\n    return 2;\r\n  }\r\n\r\n  /**\r\n   * Get the timeout between point storage.\r\n   *\r\n   * @returns {number} The timeout in milliseconds.\r\n   */\r\n  getTimeout() {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Is the input group a group of this factory?\r\n   *\r\n   * @param {object} group The group to test.\r\n   * @returns {boolean} True if the group is from this fcatory.\r\n   */\r\n  isFactoryGroup(group) {\r\n    return this.getGroupName() === group.name();\r\n  }\r\n\r\n  /**\r\n   * Create an ellipse shape to be displayed.\r\n   *\r\n   * @param {Array} points The points from which to extract the ellipse.\r\n   * @param {object} style The drawing style.\r\n   * @param {object} viewController The associated view controller.\r\n   * @returns {object} The Konva group.\r\n   */\r\n  create(\r\n    points, style, viewController) {\r\n    // calculate radius\r\n    const a = Math.abs(points[0].getX() - points[1].getX());\r\n    const b = Math.abs(points[0].getY() - points[1].getY());\r\n    // physical shape\r\n    const ellipse = new Ellipse(points[0], a, b);\r\n    // draw shape\r\n    const radius = {x: ellipse.getA(), y: ellipse.getB()};\r\n    const kshape = new Konva.Ellipse({\r\n      x: ellipse.getCenter().getX(),\r\n      y: ellipse.getCenter().getY(),\r\n      radius: radius,\r\n      radiusX: radius.x,\r\n      radiusY: radius.y,\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape'\r\n    });\r\n    // quantification\r\n    const ktext = new Konva.Text({\r\n      fontSize: style.getFontSize(),\r\n      fontFamily: style.getFontFamily(),\r\n      fill: style.getLineColour(),\r\n      padding: style.getTextPadding(),\r\n      shadowColor: style.getShadowLineColour(),\r\n      shadowOffset: style.getShadowOffset(),\r\n      name: 'text'\r\n    });\r\n    let textExpr = '';\r\n    // TODO: allow override?\r\n    // if (typeof ellipseLabelText !== 'undefined') {\r\n    //   textExpr = ellipseLabelText;\r\n    // } else {\r\n    textExpr = defaultEllipseLabelText;\r\n    // }\r\n    const quant = ellipse.quantify(\r\n      viewController,\r\n      getFlags(textExpr));\r\n    ktext.setText(replaceFlags(textExpr, quant));\r\n    // augment text with meta\r\n    // @ts-ignore\r\n    ktext.meta = {\r\n      textExpr: textExpr,\r\n      quantification: quant\r\n    };\r\n    // label\r\n    const klabel = new Konva.Label({\r\n      x: ellipse.getCenter().getX(),\r\n      y: ellipse.getCenter().getY(),\r\n      scale: style.applyZoomScale(1),\r\n      visible: textExpr.length !== 0,\r\n      name: 'label'\r\n    });\r\n    klabel.add(ktext);\r\n    klabel.add(new Konva.Tag({\r\n      fill: style.getLineColour(),\r\n      opacity: style.getTagOpacity()\r\n    }));\r\n\r\n    // debug shadow\r\n    let kshadow;\r\n    if (DRAW_DEBUG) {\r\n      kshadow = this.#getShadowEllipse(ellipse);\r\n    }\r\n\r\n    // return group\r\n    const group = new Konva.Group();\r\n    group.name(this.getGroupName());\r\n    if (kshadow) {\r\n      group.add(kshadow);\r\n    }\r\n    group.add(klabel);\r\n    group.add(kshape);\r\n    group.visible(true); // dont inherit\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Get anchors to update an ellipse shape.\r\n   *\r\n   * @param {object} shape The associated shape.\r\n   * @param {object} style The application style.\r\n   * @returns {Array} A list of anchors.\r\n   */\r\n  getAnchors(shape, style) {\r\n    const ellipseX = shape.x();\r\n    const ellipseY = shape.y();\r\n    const radius = shape.radius();\r\n\r\n    const anchors = [];\r\n    anchors.push(getDefaultAnchor(\r\n      ellipseX - radius.x, ellipseY - radius.y, 'topLeft', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      ellipseX + radius.x, ellipseY - radius.y, 'topRight', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      ellipseX + radius.x, ellipseY + radius.y, 'bottomRight', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      ellipseX - radius.x, ellipseY + radius.y, 'bottomLeft', style\r\n    ));\r\n    return anchors;\r\n  }\r\n\r\n  /**\r\n   * Update an ellipse shape.\r\n   *\r\n   * @param {object} anchor The active anchor.\r\n   * @param {object} _style The app style.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  update(anchor, _style, viewController) {\r\n    // parent group\r\n    const group = anchor.getParent();\r\n    // associated shape\r\n    const kellipse = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n      // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n      // find special points\r\n    const topLeft = group.getChildren(function (node) {\r\n      return node.id() === 'topLeft';\r\n    })[0];\r\n    const topRight = group.getChildren(function (node) {\r\n      return node.id() === 'topRight';\r\n    })[0];\r\n    const bottomRight = group.getChildren(function (node) {\r\n      return node.id() === 'bottomRight';\r\n    })[0];\r\n    const bottomLeft = group.getChildren(function (node) {\r\n      return node.id() === 'bottomLeft';\r\n    })[0];\r\n    // debug shadow\r\n    let kshadow;\r\n    if (DRAW_DEBUG) {\r\n      kshadow = group.getChildren(function (node) {\r\n        return node.name() === 'shadow';\r\n      })[0];\r\n    }\r\n\r\n    // update 'self' (undo case) and special points\r\n    switch (anchor.id()) {\r\n    case 'topLeft':\r\n      topLeft.x(anchor.x());\r\n      topLeft.y(anchor.y());\r\n      topRight.y(anchor.y());\r\n      bottomLeft.x(anchor.x());\r\n      break;\r\n    case 'topRight':\r\n      topRight.x(anchor.x());\r\n      topRight.y(anchor.y());\r\n      topLeft.y(anchor.y());\r\n      bottomRight.x(anchor.x());\r\n      break;\r\n    case 'bottomRight':\r\n      bottomRight.x(anchor.x());\r\n      bottomRight.y(anchor.y());\r\n      bottomLeft.y(anchor.y());\r\n      topRight.x(anchor.x());\r\n      break;\r\n    case 'bottomLeft':\r\n      bottomLeft.x(anchor.x());\r\n      bottomLeft.y(anchor.y());\r\n      bottomRight.y(anchor.y());\r\n      topLeft.x(anchor.x());\r\n      break;\r\n    default :\r\n      logger.error('Unhandled anchor id: ' + anchor.id());\r\n      break;\r\n    }\r\n    // update shape\r\n    const radiusX = (topRight.x() - topLeft.x()) / 2;\r\n    const radiusY = (bottomRight.y() - topRight.y()) / 2;\r\n    const center = {\r\n      x: topLeft.x() + radiusX,\r\n      y: topRight.y() + radiusY\r\n    };\r\n    kellipse.position(center);\r\n    const radiusAbs = {x: Math.abs(radiusX), y: Math.abs(radiusY)};\r\n    if (radiusAbs) {\r\n      kellipse.radius(radiusAbs);\r\n    }\r\n    // new ellipse\r\n    const centerPoint = new Point2D(\r\n      group.x() + center.x,\r\n      group.y() + center.y\r\n    );\r\n    const ellipse = new Ellipse(centerPoint, radiusAbs.x, radiusAbs.y);\r\n\r\n    // debug shadow\r\n    if (kshadow) {\r\n      // remove previous\r\n      kshadow.destroy();\r\n      // add new\r\n      group.add(this.#getShadowEllipse(ellipse, group));\r\n    }\r\n\r\n    // update label position\r\n    const textPos = {x: center.x, y: center.y};\r\n    klabel.position(textPos);\r\n\r\n    // update quantification\r\n    this.#updateEllipseQuantification(group, viewController);\r\n  }\r\n\r\n  /**\r\n   * Update the quantification of an Ellipse.\r\n   *\r\n   * @param {object} group The group with the shape.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  updateQuantification(group, viewController) {\r\n    this.#updateEllipseQuantification(group, viewController);\r\n  }\r\n\r\n  /**\r\n   * Update the quantification of an Ellipse (as a static\r\n   *   function to be used in update).\r\n   *\r\n   * @param {object} group The group with the shape.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  #updateEllipseQuantification(group, viewController) {\r\n    // associated shape\r\n    const kellipse = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n    // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n\r\n    // positions: add possible group offset\r\n    const centerPoint = new Point2D(\r\n      group.x() + kellipse.x(),\r\n      group.y() + kellipse.y()\r\n    );\r\n    // circle\r\n    const ellipse = new Ellipse(\r\n      centerPoint, kellipse.radius().x, kellipse.radius().y);\r\n\r\n    // update text\r\n    const ktext = klabel.getText();\r\n    const quantification = ellipse.quantify(\r\n      viewController,\r\n      getFlags(ktext.meta.textExpr));\r\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\r\n    // update meta\r\n    ktext.meta.quantification = quantification;\r\n  }\r\n\r\n  /**\r\n   * Get the debug shadow.\r\n   *\r\n   * @param {Ellipse} ellipse The ellipse to shadow.\r\n   * @param {object} group The associated group.\r\n   * @returns {object} The shadow konva group.\r\n   */\r\n  #getShadowEllipse(ellipse, group) {\r\n    // possible group offset\r\n    let offsetX = 0;\r\n    let offsetY = 0;\r\n    if (typeof group !== 'undefined') {\r\n      offsetX = group.x();\r\n      offsetY = group.y();\r\n    }\r\n    const kshadow = new Konva.Group();\r\n    kshadow.name('shadow');\r\n    const regions = ellipse.getRound();\r\n    for (let i = 0; i < regions.length; ++i) {\r\n      const region = regions[i];\r\n      const minX = region[0][0];\r\n      const minY = region[0][1];\r\n      const maxX = region[1][0];\r\n      const pixelLine = new Konva.Rect({\r\n        x: minX - offsetX,\r\n        y: minY - offsetY,\r\n        width: maxX - minX,\r\n        height: 1,\r\n        fill: 'grey',\r\n        strokeWidth: 0,\r\n        strokeScaleEnabled: false,\r\n        opacity: 0.3,\r\n        name: 'shadow-element'\r\n      });\r\n      kshadow.add(pixelLine);\r\n    }\r\n    return kshadow;\r\n  }\r\n\r\n} // class EllipseFactory\r\n","import {getDefaultAnchor} from './editor';\r\n// external\r\nimport Konva from 'konva';\r\n\r\n/**\r\n * Default draw label text.\r\n */\r\nconst defaultFreeHandLabelText = '';\r\n\r\n/**\r\n * FreeHand factory.\r\n */\r\nexport class FreeHandFactory {\r\n  /**\r\n   * Get the name of the shape group.\r\n   *\r\n   * @returns {string} The name.\r\n   */\r\n  getGroupName() {\r\n    return 'freeHand-group';\r\n  }\r\n\r\n  /**\r\n   * Get the number of points needed to build the shape.\r\n   *\r\n   * @returns {number|undefined} The number of points.\r\n   */\r\n  getNPoints() {\r\n    // undefined to end with double click\r\n    return undefined;\r\n  }\r\n\r\n  /**\r\n   * Get the timeout between point storage.\r\n   *\r\n   * @returns {number} The timeout in milliseconds.\r\n   */\r\n  getTimeout() {\r\n    return 25;\r\n  }\r\n\r\n  /**\r\n   * Is the input group a group of this factory?\r\n   *\r\n   * @param {object} group The group to test.\r\n   * @returns {boolean} True if the group is from this fcatory.\r\n   */\r\n  isFactoryGroup(group) {\r\n    return this.getGroupName() === group.name();\r\n  }\r\n\r\n  /**\r\n   * Create a roi shape to be displayed.\r\n   *\r\n   * @param {Array} points The points from which to extract the line.\r\n   * @param {object} style The drawing style.\r\n   * @param {object} _viewController The associated view controller.\r\n   * @returns {object} The Konva group.\r\n   */\r\n  create(\r\n    points, style, _viewController) {\r\n    // points stored the Konvajs way\r\n    const arr = [];\r\n    for (let i = 0; i < points.length; ++i) {\r\n      arr.push(points[i].getX());\r\n      arr.push(points[i].getY());\r\n    }\r\n    // draw shape\r\n    const kshape = new Konva.Line({\r\n      points: arr,\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape',\r\n      tension: 0.5\r\n    });\r\n\r\n    // text\r\n    const ktext = new Konva.Text({\r\n      fontSize: style.getFontSize(),\r\n      fontFamily: style.getFontFamily(),\r\n      fill: style.getLineColour(),\r\n      name: 'text'\r\n    });\r\n    let textExpr = '';\r\n    // TODO: allow override?\r\n    // if (typeof freeHandLabelText !== 'undefined') {\r\n    //   textExpr = freeHandLabelText;\r\n    // } else {\r\n    textExpr = defaultFreeHandLabelText;\r\n    // }\r\n    ktext.setText(textExpr);\r\n    // augment text with meta\r\n    // @ts-ignore\r\n    ktext.meta = {\r\n      textExpr: textExpr,\r\n      quantification: {}\r\n    };\r\n\r\n    // label\r\n    const klabel = new Konva.Label({\r\n      x: points[0].getX(),\r\n      y: points[0].getY() + style.scale(10),\r\n      scale: style.applyZoomScale(1),\r\n      visible: textExpr.length !== 0,\r\n      name: 'label'\r\n    });\r\n    klabel.add(ktext);\r\n    klabel.add(new Konva.Tag({\r\n      fill: style.getLineColour(),\r\n      opacity: style.getTagOpacity()\r\n    }));\r\n\r\n    // return group\r\n    const group = new Konva.Group();\r\n    group.name(this.getGroupName());\r\n    group.add(klabel);\r\n    group.add(kshape);\r\n    group.visible(true); // dont inherit\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Get anchors to update a free hand shape.\r\n   *\r\n   * @param {object} shape The associated shape.\r\n   * @param {object} style The application style.\r\n   * @returns {Array} A list of anchors.\r\n   */\r\n  getAnchors(shape, style) {\r\n    const points = shape.points();\r\n\r\n    const anchors = [];\r\n    for (let i = 0; i < points.length; i = i + 2) {\r\n      const px = points[i] + shape.x();\r\n      const py = points[i + 1] + shape.y();\r\n      const name = i.toString();\r\n      anchors.push(getDefaultAnchor(\r\n        px, py, name, style\r\n      ));\r\n    }\r\n    return anchors;\r\n  }\r\n\r\n  /**\r\n   * Update a FreeHand shape.\r\n   *\r\n   * @param {object} anchor The active anchor.\r\n   * @param {object} style The app style.\r\n   * @param {object} _viewController The associated view controller.\r\n   */\r\n  update(anchor, style, _viewController) {\r\n    // parent group\r\n    const group = anchor.getParent();\r\n    // associated shape\r\n    const kline = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n      // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n\r\n    // update self\r\n    const point = group.getChildren(function (node) {\r\n      return node.id() === anchor.id();\r\n    })[0];\r\n    point.x(anchor.x());\r\n    point.y(anchor.y());\r\n    // update the roi point and compensate for possible drag\r\n    // (the anchor id is the index of the point in the list)\r\n    const points = kline.points();\r\n    points[anchor.id()] = anchor.x() - kline.x();\r\n    points[anchor.id() + 1] = anchor.y() - kline.y();\r\n    // concat to make Konva think it is a new array\r\n    kline.points(points.concat());\r\n\r\n    // update text\r\n    const ktext = klabel.getText();\r\n    ktext.setText(ktext.meta.textExpr);\r\n    // update position\r\n    const textPos = {\r\n      x: points[0] + kline.x(),\r\n      y: points[1] + kline.y() + style.scale(10)\r\n    };\r\n    klabel.position(textPos);\r\n  }\r\n\r\n} // class FreeHandFactory\r\n","import {Line, getAngle} from '../math/line';\r\nimport {Point2D} from '../math/point';\r\nimport {replaceFlags} from '../utils/string';\r\nimport {i18n} from '../utils/i18n';\r\nimport {getDefaultAnchor} from './editor';\r\n// external\r\nimport Konva from 'konva';\r\n\r\n/**\r\n * Default draw label text.\r\n */\r\nconst defaultProtractorLabelText = '{angle}';\r\n\r\n/**\r\n * Protractor factory.\r\n */\r\nexport class ProtractorFactory {\r\n  /**\r\n   * Get the name of the shape group.\r\n   *\r\n   * @returns {string} The name.\r\n   */\r\n  getGroupName() {\r\n    return 'protractor-group';\r\n  }\r\n\r\n  /**\r\n   * Get the number of points needed to build the shape.\r\n   *\r\n   * @returns {number} The number of points.\r\n   */\r\n  getNPoints() {\r\n    return 3;\r\n  }\r\n\r\n  /**\r\n   * Get the timeout between point storage.\r\n   *\r\n   * @returns {number} The timeout in milliseconds.\r\n   */\r\n  getTimeout() {\r\n    return 500;\r\n  }\r\n\r\n  /**\r\n   * Is the input group a group of this factory?\r\n   *\r\n   * @param {object} group The group to test.\r\n   * @returns {boolean} True if the group is from this fcatory.\r\n   */\r\n  isFactoryGroup(group) {\r\n    return this.getGroupName() === group.name();\r\n  }\r\n\r\n  /**\r\n   * Create a protractor shape to be displayed.\r\n   *\r\n   * @param {Array} points The points from which to extract the protractor.\r\n   * @param {object} style The drawing style.\r\n   * @param {object} _viewController The associated view controller.\r\n   * @returns {object} The Konva group.\r\n   */\r\n  create(points, style, _viewController) {\r\n    // physical shape\r\n    const line0 = new Line(points[0], points[1]);\r\n    // points stored the Konvajs way\r\n    const pointsArray = [];\r\n    for (let i = 0; i < points.length; ++i) {\r\n      pointsArray.push(points[i].getX());\r\n      pointsArray.push(points[i].getY());\r\n    }\r\n    // draw shape\r\n    const kshape = new Konva.Line({\r\n      points: pointsArray,\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape'\r\n    });\r\n    const group = new Konva.Group();\r\n    group.name(this.getGroupName());\r\n    // text and decoration\r\n    if (points.length === 3) {\r\n      const line1 = new Line(points[1], points[2]);\r\n      // larger hitfunc\r\n      kshape.hitFunc(function (context) {\r\n        context.beginPath();\r\n        context.moveTo(points[0].getX(), points[0].getY());\r\n        context.lineTo(points[1].getX(), points[1].getY());\r\n        context.lineTo(points[2].getX(), points[2].getY());\r\n        context.closePath();\r\n        context.fillStrokeShape(kshape);\r\n      });\r\n      // quantification\r\n      let angle = getAngle(line0, line1);\r\n      let inclination = line0.getInclination();\r\n      if (angle > 180) {\r\n        angle = 360 - angle;\r\n        inclination += angle;\r\n      }\r\n\r\n      // quantification\r\n      const ktext = new Konva.Text({\r\n        fontSize: style.getFontSize(),\r\n        fontFamily: style.getFontFamily(),\r\n        fill: style.getLineColour(),\r\n        padding: style.getTextPadding(),\r\n        shadowColor: style.getShadowLineColour(),\r\n        shadowOffset: style.getShadowOffset(),\r\n        name: 'text'\r\n      });\r\n      let textExpr = '';\r\n      // TODO: allow override?\r\n      // if (typeof protractorLabelText !== 'undefined') {\r\n      //   textExpr = protractorLabelText;\r\n      // } else {\r\n      textExpr = defaultProtractorLabelText;\r\n      // }\r\n      const quant = {\r\n        angle: {\r\n          value: angle,\r\n          unit: i18n.t('unit.degree')\r\n        }\r\n      };\r\n      ktext.setText(replaceFlags(textExpr, quant));\r\n      // augment text with meta\r\n      // @ts-ignore\r\n      ktext.meta = {\r\n        textExpr: textExpr,\r\n        quantification: quant\r\n      };\r\n\r\n      // label\r\n      const midX =\r\n        (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\r\n      const midY =\r\n        (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\r\n      const klabel = new Konva.Label({\r\n        x: midX,\r\n        y: midY - style.applyZoomScale(15).y,\r\n        scale: style.applyZoomScale(1),\r\n        visible: textExpr.length !== 0,\r\n        name: 'label'\r\n      });\r\n      klabel.add(ktext);\r\n      klabel.add(new Konva.Tag({\r\n        fill: style.getLineColour(),\r\n        opacity: style.getTagOpacity()\r\n      }));\r\n\r\n      // arc\r\n      const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\r\n      const karc = new Konva.Arc({\r\n        innerRadius: radius,\r\n        outerRadius: radius,\r\n        stroke: style.getLineColour(),\r\n        strokeWidth: style.getStrokeWidth(),\r\n        strokeScaleEnabled: false,\r\n        angle: angle,\r\n        rotation: -inclination,\r\n        x: points[1].getX(),\r\n        y: points[1].getY(),\r\n        name: 'shape-arc'\r\n      });\r\n      // add to group\r\n      group.add(klabel);\r\n      group.add(karc);\r\n    }\r\n    // add shape to group\r\n    group.add(kshape);\r\n    group.visible(true); // dont inherit\r\n    // return group\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Get anchors to update a protractor shape.\r\n   *\r\n   * @param {object} shape The associated shape.\r\n   * @param {object} style The application style.\r\n   * @returns {Array} A list of anchors.\r\n   */\r\n  getAnchors(shape, style) {\r\n    const points = shape.points();\r\n\r\n    const anchors = [];\r\n    anchors.push(getDefaultAnchor(\r\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      points[2] + shape.x(), points[3] + shape.y(), 'mid', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      points[4] + shape.x(), points[5] + shape.y(), 'end', style\r\n    ));\r\n    return anchors;\r\n  }\r\n\r\n  /**\r\n   * Update a protractor shape.\r\n   *\r\n   * @param {object} anchor The active anchor.\r\n   * @param {object} style The app style.\r\n   * @param {object} _viewController The associated view controller.\r\n   */\r\n  update(anchor, style, _viewController) {\r\n    // parent group\r\n    const group = anchor.getParent();\r\n    // associated shape\r\n    const kline = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n      // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n      // associated arc\r\n    const karc = group.getChildren(function (node) {\r\n      return node.name() === 'shape-arc';\r\n    })[0];\r\n      // find special points\r\n    const begin = group.getChildren(function (node) {\r\n      return node.id() === 'begin';\r\n    })[0];\r\n    const mid = group.getChildren(function (node) {\r\n      return node.id() === 'mid';\r\n    })[0];\r\n    const end = group.getChildren(function (node) {\r\n      return node.id() === 'end';\r\n    })[0];\r\n      // update special points\r\n    switch (anchor.id()) {\r\n    case 'begin':\r\n      begin.x(anchor.x());\r\n      begin.y(anchor.y());\r\n      break;\r\n    case 'mid':\r\n      mid.x(anchor.x());\r\n      mid.y(anchor.y());\r\n      break;\r\n    case 'end':\r\n      end.x(anchor.x());\r\n      end.y(anchor.y());\r\n      break;\r\n    }\r\n    // update shape and compensate for possible drag\r\n    // note: shape.position() and shape.size() won't work...\r\n    const bx = begin.x() - kline.x();\r\n    const by = begin.y() - kline.y();\r\n    const mx = mid.x() - kline.x();\r\n    const my = mid.y() - kline.y();\r\n    const ex = end.x() - kline.x();\r\n    const ey = end.y() - kline.y();\r\n    kline.points([bx, by, mx, my, ex, ey]);\r\n    // larger hitfunc\r\n    kline.hitFunc(function (context) {\r\n      context.beginPath();\r\n      context.moveTo(bx, by);\r\n      context.lineTo(mx, my);\r\n      context.lineTo(ex, ey);\r\n      context.closePath();\r\n      context.fillStrokeShape(kline);\r\n    });\r\n    // update text\r\n    const p2d0 = new Point2D(begin.x(), begin.y());\r\n    const p2d1 = new Point2D(mid.x(), mid.y());\r\n    const p2d2 = new Point2D(end.x(), end.y());\r\n    const line0 = new Line(p2d0, p2d1);\r\n    const line1 = new Line(p2d1, p2d2);\r\n    let angle = getAngle(line0, line1);\r\n    let inclination = line0.getInclination();\r\n    if (angle > 180) {\r\n      angle = 360 - angle;\r\n      inclination += angle;\r\n    }\r\n\r\n    // update text\r\n    const ktext = klabel.getText();\r\n    const quantification = {\r\n      angle: {value: angle, unit: i18n.t('unit.degree')}\r\n    };\r\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\r\n    // update meta\r\n    ktext.meta.quantification = quantification;\r\n    // update position\r\n    const midX = (line0.getMidpoint().getX() + line1.getMidpoint().getX()) / 2;\r\n    const midY = (line0.getMidpoint().getY() + line1.getMidpoint().getY()) / 2;\r\n    const textPos = {\r\n      x: midX,\r\n      y: midY - style.applyZoomScale(15).y\r\n    };\r\n    klabel.position(textPos);\r\n\r\n    // arc\r\n    const radius = Math.min(line0.getLength(), line1.getLength()) * 33 / 100;\r\n    karc.innerRadius(radius);\r\n    karc.outerRadius(radius);\r\n    karc.angle(angle);\r\n    karc.rotation(-inclination);\r\n    const arcPos = {x: mid.x(), y: mid.y()};\r\n    karc.position(arcPos);\r\n  }\r\n\r\n} // class ProtractorFactory\r\n","import {Rectangle} from '../math/rectangle';\r\nimport {Point2D} from '../math/point';\r\nimport {getFlags, replaceFlags} from '../utils/string';\r\nimport {logger} from '../utils/logger';\r\nimport {DRAW_DEBUG} from './draw';\r\nimport {getDefaultAnchor} from './editor';\r\n// external\r\nimport Konva from 'konva';\r\n\r\n/**\r\n * Default draw label text.\r\n */\r\nconst defaultRectangleLabelText = '{surface}';\r\n\r\n/**\r\n * Rectangle factory.\r\n */\r\nexport class RectangleFactory {\r\n  /**\r\n   * Get the name of the shape group.\r\n   *\r\n   * @returns {string} The name.\r\n   */\r\n  getGroupName() {\r\n    return 'rectangle-group';\r\n  }\r\n\r\n  /**\r\n   * Get the number of points needed to build the shape.\r\n   *\r\n   * @returns {number} The number of points.\r\n   */\r\n  getNPoints() {\r\n    return 2;\r\n  }\r\n\r\n  /**\r\n   * Get the timeout between point storage.\r\n   *\r\n   * @returns {number} The timeout in milliseconds.\r\n   */\r\n  getTimeout() {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Is the input group a group of this factory?\r\n   *\r\n   * @param {object} group The group to test.\r\n   * @returns {boolean} True if the group is from this fcatory.\r\n   */\r\n  isFactoryGroup(group) {\r\n    return this.getGroupName() === group.name();\r\n  }\r\n\r\n  /**\r\n   * Create a rectangle shape to be displayed.\r\n   *\r\n   * @param {Array} points The points from which to extract the rectangle.\r\n   * @param {object} style The drawing style.\r\n   * @param {object} viewController The associated view controller.\r\n   * @returns {object} The Konva group.\r\n   */\r\n  create(points, style, viewController) {\r\n    // physical shape\r\n    const rectangle = new Rectangle(points[0], points[1]);\r\n    // draw shape\r\n    const kshape = new Konva.Rect({\r\n      x: rectangle.getBegin().getX(),\r\n      y: rectangle.getBegin().getY(),\r\n      width: rectangle.getWidth(),\r\n      height: rectangle.getHeight(),\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape'\r\n    });\r\n    // label text\r\n    const ktext = new Konva.Text({\r\n      fontSize: style.getFontSize(),\r\n      fontFamily: style.getFontFamily(),\r\n      fill: style.getLineColour(),\r\n      padding: style.getTextPadding(),\r\n      shadowColor: style.getShadowLineColour(),\r\n      shadowOffset: style.getShadowOffset(),\r\n      name: 'text'\r\n    });\r\n    let textExpr = '';\r\n    // TODO: allow override?\r\n    // if (typeof rectangleLabelText !== 'undefined') {\r\n    //   textExpr = rectangleLabelText;\r\n    // } else {\r\n    textExpr = defaultRectangleLabelText;\r\n    // }\r\n    const quant = rectangle.quantify(\r\n      viewController,\r\n      getFlags(textExpr));\r\n    ktext.setText(replaceFlags(textExpr, quant));\r\n    // augment text with meta\r\n    // @ts-ignore\r\n    ktext.meta = {\r\n      textExpr: textExpr,\r\n      quantification: quant\r\n    };\r\n    // label\r\n    const klabel = new Konva.Label({\r\n      x: rectangle.getBegin().getX(),\r\n      y: rectangle.getEnd().getY(),\r\n      scale: style.applyZoomScale(1),\r\n      visible: textExpr.length !== 0,\r\n      name: 'label'\r\n    });\r\n    klabel.add(ktext);\r\n    klabel.add(new Konva.Tag({\r\n      fill: style.getLineColour(),\r\n      opacity: style.getTagOpacity()\r\n    }));\r\n\r\n    // debug shadow\r\n    let kshadow;\r\n    if (DRAW_DEBUG) {\r\n      kshadow = this.#getShadowRectangle(rectangle);\r\n    }\r\n\r\n    // return group\r\n    const group = new Konva.Group();\r\n    group.name(this.getGroupName());\r\n    if (kshadow) {\r\n      group.add(kshadow);\r\n    }\r\n    group.add(klabel);\r\n    group.add(kshape);\r\n    group.visible(true); // dont inherit\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Get anchors to update a rectangle shape.\r\n   *\r\n   * @param {object} shape The associated shape.\r\n   * @param {object} style The application style.\r\n   * @returns {Array} A list of anchors.\r\n   */\r\n  getAnchors(shape, style) {\r\n    const rectX = shape.x();\r\n    const rectY = shape.y();\r\n    const rectWidth = shape.width();\r\n    const rectHeight = shape.height();\r\n\r\n    const anchors = [];\r\n    anchors.push(getDefaultAnchor(\r\n      rectX, rectY, 'topLeft', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      rectX + rectWidth, rectY, 'topRight', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      rectX + rectWidth, rectY + rectHeight, 'bottomRight', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      rectX, rectY + rectHeight, 'bottomLeft', style\r\n    ));\r\n    return anchors;\r\n  }\r\n\r\n  /**\r\n   * Update a rectangle shape.\r\n   *\r\n   * @param {object} anchor The active anchor.\r\n   * @param {object} style The app style.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  update(anchor, style, viewController) {\r\n    // parent group\r\n    const group = anchor.getParent();\r\n    // associated shape\r\n    const krect = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n    // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n      // find special points\r\n    const topLeft = group.getChildren(function (node) {\r\n      return node.id() === 'topLeft';\r\n    })[0];\r\n    const topRight = group.getChildren(function (node) {\r\n      return node.id() === 'topRight';\r\n    })[0];\r\n    const bottomRight = group.getChildren(function (node) {\r\n      return node.id() === 'bottomRight';\r\n    })[0];\r\n    const bottomLeft = group.getChildren(function (node) {\r\n      return node.id() === 'bottomLeft';\r\n    })[0];\r\n    // debug shadow\r\n    let kshadow;\r\n    if (DRAW_DEBUG) {\r\n      kshadow = group.getChildren(function (node) {\r\n        return node.name() === 'shadow';\r\n      })[0];\r\n    }\r\n\r\n    // update 'self' (undo case) and special points\r\n    switch (anchor.id()) {\r\n    case 'topLeft':\r\n      topLeft.x(anchor.x());\r\n      topLeft.y(anchor.y());\r\n      topRight.y(anchor.y());\r\n      bottomLeft.x(anchor.x());\r\n      break;\r\n    case 'topRight':\r\n      topRight.x(anchor.x());\r\n      topRight.y(anchor.y());\r\n      topLeft.y(anchor.y());\r\n      bottomRight.x(anchor.x());\r\n      break;\r\n    case 'bottomRight':\r\n      bottomRight.x(anchor.x());\r\n      bottomRight.y(anchor.y());\r\n      bottomLeft.y(anchor.y());\r\n      topRight.x(anchor.x());\r\n      break;\r\n    case 'bottomLeft':\r\n      bottomLeft.x(anchor.x());\r\n      bottomLeft.y(anchor.y());\r\n      bottomRight.y(anchor.y());\r\n      topLeft.x(anchor.x());\r\n      break;\r\n    default :\r\n      logger.error('Unhandled anchor id: ' + anchor.id());\r\n      break;\r\n    }\r\n    // update shape\r\n    krect.position(topLeft.position());\r\n    const width = topRight.x() - topLeft.x();\r\n    const height = bottomLeft.y() - topLeft.y();\r\n    if (width && height) {\r\n      krect.size({width: width, height: height});\r\n    }\r\n    // positions: add possible group offset\r\n    const p2d0 = new Point2D(\r\n      group.x() + topLeft.x(),\r\n      group.y() + topLeft.y()\r\n    );\r\n    const p2d1 = new Point2D(\r\n      group.x() + bottomRight.x(),\r\n      group.y() + bottomRight.y()\r\n    );\r\n    // new rect\r\n    const rect = new Rectangle(p2d0, p2d1);\r\n\r\n    // debug shadow based on round (used in quantification)\r\n    if (kshadow) {\r\n      const round = rect.getRound();\r\n      const rWidth = round.max.getX() - round.min.getX();\r\n      const rHeight = round.max.getY() - round.min.getY();\r\n      kshadow.position({\r\n        x: round.min.getX() - group.x(),\r\n        y: round.min.getY() - group.y()\r\n      });\r\n      kshadow.size({width: rWidth, height: rHeight});\r\n    }\r\n\r\n    // update label position\r\n    const textPos = {\r\n      x: rect.getBegin().getX() - group.x(),\r\n      y: rect.getEnd().getY() - group.y()\r\n    };\r\n    klabel.position(textPos);\r\n\r\n    // update quantification\r\n    this.#updateRectangleQuantification(group, viewController);\r\n  }\r\n\r\n  /**\r\n   * Update the quantification of a Rectangle.\r\n   *\r\n   * @param {object} group The group with the shape.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  updateQuantification(group, viewController) {\r\n    this.#updateRectangleQuantification(group, viewController);\r\n  }\r\n\r\n  /**\r\n   * Update the quantification of a Rectangle (as a static\r\n   *   function to be used in update).\r\n   *\r\n   * @param {object} group The group with the shape.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  #updateRectangleQuantification(group, viewController) {\r\n    // associated shape\r\n    const krect = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n    // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n\r\n    // positions: add possible group offset\r\n    const p2d0 = new Point2D(\r\n      group.x() + krect.x(),\r\n      group.y() + krect.y()\r\n    );\r\n    const p2d1 = new Point2D(\r\n      p2d0.getX() + krect.width(),\r\n      p2d0.getY() + krect.height()\r\n    );\r\n    // rectangle\r\n    const rect = new Rectangle(p2d0, p2d1);\r\n\r\n    // update text\r\n    const ktext = klabel.getText();\r\n    const quantification = rect.quantify(\r\n      viewController,\r\n      getFlags(ktext.meta.textExpr));\r\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\r\n    // update meta\r\n    ktext.meta.quantification = quantification;\r\n  }\r\n\r\n  /**\r\n   * Get the debug shadow.\r\n   *\r\n   * @param {object} rectangle The rectangle to shadow.\r\n   * @returns {object} The shadow konva shape.\r\n   */\r\n  #getShadowRectangle(rectangle) {\r\n    const round = rectangle.getRound();\r\n    const rWidth = round.max.getX() - round.min.getX();\r\n    const rHeight = round.max.getY() - round.min.getY();\r\n    return new Konva.Rect({\r\n      x: round.min.getX(),\r\n      y: round.min.getY(),\r\n      width: rWidth,\r\n      height: rHeight,\r\n      fill: 'grey',\r\n      strokeWidth: 0,\r\n      strokeScaleEnabled: false,\r\n      opacity: 0.3,\r\n      name: 'shadow'\r\n    });\r\n  }\r\n\r\n} // class RectangleFactory\r\n","import {Line, getPerpendicularLine} from '../math/line';\r\nimport {Point2D} from '../math/point';\r\nimport {replaceFlags} from '../utils/string';\r\nimport {getDefaultAnchor} from './editor';\r\n// external\r\nimport Konva from 'konva';\r\n\r\n/**\r\n * Default draw label text.\r\n */\r\nconst defaultRulerLabelText = '{length}';\r\n\r\n/**\r\n * Ruler factory.\r\n */\r\nexport class RulerFactory {\r\n  /**\r\n   * Get the name of the shape group.\r\n   *\r\n   * @returns {string} The name.\r\n   */\r\n  getGroupName() {\r\n    return 'ruler-group';\r\n  }\r\n\r\n  /**\r\n   * Get the number of points needed to build the shape.\r\n   *\r\n   * @returns {number} The number of points.\r\n   */\r\n  getNPoints() {\r\n    return 2;\r\n  }\r\n\r\n  /**\r\n   * Get the timeout between point storage.\r\n   *\r\n   * @returns {number} The timeout in milliseconds.\r\n   */\r\n  getTimeout() {\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Is the input group a group of this factory?\r\n   *\r\n   * @param {object} group The group to test.\r\n   * @returns {boolean} True if the group is from this fcatory.\r\n   */\r\n  isFactoryGroup(group) {\r\n    return this.getGroupName() === group.name();\r\n  }\r\n\r\n  /**\r\n   * Create a ruler shape to be displayed.\r\n   *\r\n   * @param {Array} points The points from which to extract the line.\r\n   * @param {object} style The drawing style.\r\n   * @param {object} viewController The associated view controller.\r\n   * @returns {object} The Konva group.\r\n   */\r\n  create(points, style, viewController) {\r\n    // physical shape\r\n    const line = new Line(points[0], points[1]);\r\n    // draw shape\r\n    const kshape = new Konva.Line({\r\n      points: [line.getBegin().getX(),\r\n        line.getBegin().getY(),\r\n        line.getEnd().getX(),\r\n        line.getEnd().getY()],\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape'\r\n    });\r\n\r\n    const tickLen = style.scale(10);\r\n\r\n    // tick begin\r\n    const linePerp0 = getPerpendicularLine(line, points[0], tickLen);\r\n    const ktick0 = new Konva.Line({\r\n      points: [linePerp0.getBegin().getX(),\r\n        linePerp0.getBegin().getY(),\r\n        linePerp0.getEnd().getX(),\r\n        linePerp0.getEnd().getY()],\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape-tick0'\r\n    });\r\n\r\n    // tick end\r\n    const linePerp1 = getPerpendicularLine(line, points[1], tickLen);\r\n    const ktick1 = new Konva.Line({\r\n      points: [linePerp1.getBegin().getX(),\r\n        linePerp1.getBegin().getY(),\r\n        linePerp1.getEnd().getX(),\r\n        linePerp1.getEnd().getY()],\r\n      stroke: style.getLineColour(),\r\n      strokeWidth: style.getStrokeWidth(),\r\n      strokeScaleEnabled: false,\r\n      name: 'shape-tick1'\r\n    });\r\n\r\n    // larger hitfunc\r\n    kshape.hitFunc(function (context) {\r\n      context.beginPath();\r\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\r\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\r\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\r\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\r\n      context.closePath();\r\n      context.fillStrokeShape(kshape);\r\n    });\r\n\r\n    // quantification\r\n    const ktext = new Konva.Text({\r\n      fontSize: style.getFontSize(),\r\n      fontFamily: style.getFontFamily(),\r\n      fill: style.getLineColour(),\r\n      padding: style.getTextPadding(),\r\n      shadowColor: style.getShadowLineColour(),\r\n      shadowOffset: style.getShadowOffset(),\r\n      name: 'text'\r\n    });\r\n    let textExpr = '';\r\n    // TODO: allow override?\r\n    // if (typeof rulerLabelText !== 'undefined') {\r\n    //   textExpr = rulerLabelText;\r\n    // } else {\r\n    textExpr = defaultRulerLabelText;\r\n    // }\r\n    const quant = line.quantify(viewController);\r\n    ktext.setText(replaceFlags(textExpr, quant));\r\n    // augment text with meta\r\n    // @ts-ignore\r\n    ktext.meta = {\r\n      textExpr: textExpr,\r\n      quantification: quant\r\n    };\r\n\r\n    // label\r\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\r\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\r\n    const klabel = new Konva.Label({\r\n      x: line.getEnd().getX() + dX * ktext.width(),\r\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y,\r\n      scale: style.applyZoomScale(1),\r\n      visible: textExpr.length !== 0,\r\n      name: 'label'\r\n    });\r\n    klabel.add(ktext);\r\n    klabel.add(new Konva.Tag({\r\n      fill: style.getLineColour(),\r\n      opacity: style.getTagOpacity()\r\n    }));\r\n\r\n    // return group\r\n    const group = new Konva.Group();\r\n    group.name(this.getGroupName());\r\n    group.add(klabel);\r\n    group.add(ktick0);\r\n    group.add(ktick1);\r\n    group.add(kshape);\r\n    group.visible(true); // dont inherit\r\n    return group;\r\n  }\r\n\r\n  /**\r\n   * Get anchors to update a ruler shape.\r\n   *\r\n   * @param {object} shape The associated shape.\r\n   * @param {object} style The application style.\r\n   * @returns {Array} A list of anchors.\r\n   */\r\n  getAnchors(shape, style) {\r\n    const points = shape.points();\r\n\r\n    const anchors = [];\r\n    anchors.push(getDefaultAnchor(\r\n      points[0] + shape.x(), points[1] + shape.y(), 'begin', style\r\n    ));\r\n    anchors.push(getDefaultAnchor(\r\n      points[2] + shape.x(), points[3] + shape.y(), 'end', style\r\n    ));\r\n    return anchors;\r\n  }\r\n\r\n  /**\r\n   * Update a ruler shape.\r\n   *\r\n   * @param {object} anchor The active anchor.\r\n   * @param {object} style The app style.\r\n   * @param {object} viewController The associated view controller.\r\n   */\r\n  update(anchor, style, viewController) {\r\n    // parent group\r\n    const group = anchor.getParent();\r\n    // associated shape\r\n    const kline = group.getChildren(function (node) {\r\n      return node.name() === 'shape';\r\n    })[0];\r\n      // associated tick0\r\n    const ktick0 = group.getChildren(function (node) {\r\n      return node.name() === 'shape-tick0';\r\n    })[0];\r\n      // associated tick1\r\n    const ktick1 = group.getChildren(function (node) {\r\n      return node.name() === 'shape-tick1';\r\n    })[0];\r\n      // associated label\r\n    const klabel = group.getChildren(function (node) {\r\n      return node.name() === 'label';\r\n    })[0];\r\n      // find special points\r\n    const begin = group.getChildren(function (node) {\r\n      return node.id() === 'begin';\r\n    })[0];\r\n    const end = group.getChildren(function (node) {\r\n      return node.id() === 'end';\r\n    })[0];\r\n      // update special points\r\n    switch (anchor.id()) {\r\n    case 'begin':\r\n      begin.x(anchor.x());\r\n      begin.y(anchor.y());\r\n      break;\r\n    case 'end':\r\n      end.x(anchor.x());\r\n      end.y(anchor.y());\r\n      break;\r\n    }\r\n    // update shape and compensate for possible drag\r\n    // note: shape.position() and shape.size() won't work...\r\n    const bx = begin.x() - kline.x();\r\n    const by = begin.y() - kline.y();\r\n    const ex = end.x() - kline.x();\r\n    const ey = end.y() - kline.y();\r\n    kline.points([bx, by, ex, ey]);\r\n    // new line\r\n    const p2d0 = new Point2D(begin.x(), begin.y());\r\n    const p2d1 = new Point2D(end.x(), end.y());\r\n    const line = new Line(p2d0, p2d1);\r\n    // tick\r\n    const p2b = new Point2D(bx, by);\r\n    const p2e = new Point2D(ex, ey);\r\n    const linePerp0 = getPerpendicularLine(line, p2b, style.scale(10));\r\n    ktick0.points([linePerp0.getBegin().getX(),\r\n      linePerp0.getBegin().getY(),\r\n      linePerp0.getEnd().getX(),\r\n      linePerp0.getEnd().getY()]);\r\n    const linePerp1 = getPerpendicularLine(line, p2e, style.scale(10));\r\n    ktick1.points([linePerp1.getBegin().getX(),\r\n      linePerp1.getBegin().getY(),\r\n      linePerp1.getEnd().getX(),\r\n      linePerp1.getEnd().getY()]);\r\n    // larger hitfunc\r\n    kline.hitFunc(function (context) {\r\n      context.beginPath();\r\n      context.moveTo(linePerp0.getBegin().getX(), linePerp0.getBegin().getY());\r\n      context.lineTo(linePerp0.getEnd().getX(), linePerp0.getEnd().getY());\r\n      context.lineTo(linePerp1.getEnd().getX(), linePerp1.getEnd().getY());\r\n      context.lineTo(linePerp1.getBegin().getX(), linePerp1.getBegin().getY());\r\n      context.closePath();\r\n      context.fillStrokeShape(kline);\r\n    });\r\n\r\n    // update text\r\n    const ktext = klabel.getText();\r\n    const quantification = line.quantify(viewController);\r\n    ktext.setText(replaceFlags(ktext.meta.textExpr, quantification));\r\n    // update meta\r\n    ktext.meta.quantification = quantification;\r\n    // update position\r\n    const dX = line.getBegin().getX() > line.getEnd().getX() ? 0 : -1;\r\n    const dY = line.getBegin().getY() > line.getEnd().getY() ? -1 : 0;\r\n    const textPos = {\r\n      x: line.getEnd().getX() + dX * ktext.width(),\r\n      y: line.getEnd().getY() + dY * style.applyZoomScale(15).y\r\n    };\r\n    klabel.position(textPos);\r\n  }\r\n\r\n} // class RulerFactory\r\n","import {viewEventNames} from '../image/view';\r\nimport {ViewFactory} from '../image/viewFactory';\r\nimport {luts} from '../image/luts';\r\nimport {getMatrixFromName} from '../math/matrix';\r\nimport {Point3D} from '../math/point';\r\nimport {Stage} from '../gui/stage';\r\nimport {Style} from '../gui/style';\r\nimport {getViewOrientation} from '../gui/layerGroup';\r\nimport {ListenerHandler} from '../utils/listen';\r\nimport {State} from '../io/state';\r\nimport {logger} from '../utils/logger';\r\nimport {getUriQuery, decodeQuery} from '../utils/uri';\r\nimport {UndoStack} from '../tools/undo';\r\nimport {ToolboxController} from './toolboxController';\r\nimport {LoadController} from './loadController';\r\nimport {DataController} from './dataController';\r\n\r\nimport {toolList, toolOptions} from '../tools';\r\nimport {binderList} from '../gui/stage';\r\n\r\n// doc imports\r\n/* eslint-disable no-unused-vars */\r\nimport {LayerGroup} from '../gui/layerGroup';\r\nimport {ViewLayer} from '../gui/viewLayer';\r\nimport {DrawLayer} from '../gui/drawLayer';\r\nimport {Image} from '../image/image';\r\nimport {ColourMap} from '../image/luts';\r\n/* eslint-enable no-unused-vars */\r\n\r\n/**\r\n * View configuration: mainly defines the ´divId´\r\n * of the associated HTML div.\r\n */\r\nexport class ViewConfig {\r\n  /**\r\n   * Associated HTML div id.\r\n   *\r\n   * @type {string}\r\n   */\r\n  divId;\r\n  /**\r\n   * Optional orientation of the data; 'axial', 'coronal' or 'sagittal'.\r\n   * If undefined, will use the data aquisition plane.\r\n   *\r\n   * @type {string|undefined}\r\n   */\r\n  orientation;\r\n  /**\r\n   * Optional view colour map.\r\n   *\r\n   * @type {ColourMap|undefined}\r\n   */\r\n  colourMap;\r\n  /**\r\n   * Optional layer opacity; in [0, 1] range.\r\n   *\r\n   * @type {number|undefined}\r\n   */\r\n  opacity;\r\n\r\n  /**\r\n   * @param {string} divId The associated HTML div id.\r\n   */\r\n  constructor(divId) {\r\n    this.divId = divId;\r\n  }\r\n}\r\n\r\n/**\r\n * Tool configuration.\r\n */\r\nexport class ToolConfig {\r\n  /**\r\n   * Optional tool options.\r\n   * For Draw: list of shape names.\r\n   * For Filter: list of filter names.\r\n   *\r\n   * @type {string[]|undefined}\r\n   */\r\n  options;\r\n\r\n  /**\r\n   * @param {string[]} [options] Optional tool options.\r\n   */\r\n  constructor(options) {\r\n    this.options = options;\r\n  }\r\n}\r\n\r\n/**\r\n * Application options.\r\n */\r\nexport class AppOptions {\r\n  /**\r\n   * DataId indexed object containing the data view configurations.\r\n   *\r\n   * @type {Object<string, ViewConfig[]>}\r\n   */\r\n  dataViewConfigs;\r\n  /**\r\n   * Tool name indexed object containing individual tool configurations.\r\n   *\r\n   * @type {Object<string, ToolConfig>|undefined}\r\n   */\r\n  tools;\r\n  /**\r\n   * Optional array of layerGroup binder names.\r\n   *\r\n   * @type {string[]|undefined}\r\n   */\r\n  binders;\r\n  /**\r\n   * Optional boolean flag to trigger the first data render\r\n   *   after the first loaded data or not. Defaults to true;\r\n   *\r\n   * @type {boolean|undefined}\r\n   */\r\n  viewOnFirstLoadItem;\r\n  /**\r\n   * Optional default chraracter set string used for DICOM parsing if\r\n   * not passed in DICOM file.\r\n   * Valid values: https://developer.mozilla.org/en-US/docs/Web/API/Encoding_API/Encodings\r\n   *\r\n   * @type {string|undefined}\r\n   */\r\n  defaultCharacterSet;\r\n\r\n  /**\r\n   * @param {Object<string, ViewConfig[]>} dataViewConfigs DataId\r\n   *   indexed object containing the data view configurations.\r\n   */\r\n  constructor(dataViewConfigs) {\r\n    this.dataViewConfigs = dataViewConfigs;\r\n  }\r\n}\r\n\r\n/**\r\n * List of ViewConfigs indexed by dataIds.\r\n *\r\n * @typedef {Object<string, ViewConfig[]>} DataViewConfigs\r\n */\r\n\r\n/**\r\n * Main application class.\r\n *\r\n * @example\r\n * // create the dwv app\r\n * const app = new dwv.App();\r\n * // initialise\r\n * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\r\n * const viewConfigs = {'*': [viewConfig0]};\r\n * const options = new dwv.AppOptions(viewConfigs);\r\n * app.init(options);\r\n * // load dicom data\r\n * app.loadURLs([\r\n *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\r\n * ]);\r\n */\r\nexport class App {\r\n\r\n  /**\r\n   * App options.\r\n   *\r\n   * @type {AppOptions}\r\n   */\r\n  #options = null;\r\n\r\n  /**\r\n   * Data controller.\r\n   *\r\n   * @type {DataController}\r\n   */\r\n  #dataController = null;\r\n\r\n  /**\r\n   * Toolbox controller.\r\n   *\r\n   * @type {ToolboxController}\r\n   */\r\n  #toolboxController = null;\r\n\r\n  /**\r\n   * Load controller.\r\n   *\r\n   * @type {LoadController}\r\n   */\r\n  #loadController = null;\r\n\r\n  /**\r\n   * Stage.\r\n   *\r\n   * @type {Stage}\r\n   */\r\n  #stage = null;\r\n\r\n  /**\r\n   * Undo stack.\r\n   *\r\n   * @type {UndoStack}\r\n   */\r\n  #undoStack = null;\r\n\r\n  /**\r\n   * Style.\r\n   *\r\n   * @type {Style}\r\n   */\r\n  #style = new Style();\r\n\r\n  /**\r\n   * Listener handler.\r\n   *\r\n   * @type {object}\r\n   */\r\n  #listenerHandler = new ListenerHandler();\r\n\r\n  /**\r\n   * Get the image.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @returns {Image} The associated image.\r\n   */\r\n  getImage(index) {\r\n    return this.#dataController.get(index).image;\r\n  }\r\n\r\n  /**\r\n   * Get the last loaded image.\r\n   *\r\n   * @returns {Image} The image.\r\n   */\r\n  getLastImage() {\r\n    return this.#dataController.get(this.#dataController.length() - 1).image;\r\n  }\r\n\r\n  /**\r\n   * Set the image at the given index.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @param {Image} img The associated image.\r\n   */\r\n  setImage(index, img) {\r\n    this.#dataController.setImage(index, img);\r\n  }\r\n\r\n  /**\r\n   * Set the last image.\r\n   *\r\n   * @param {Image} img The associated image.\r\n   */\r\n  setLastImage(img) {\r\n    this.#dataController.setImage(this.#dataController.length() - 1, img);\r\n  }\r\n\r\n  /**\r\n   * Add a new image.\r\n   *\r\n   * @param {Image} image The new image.\r\n   * @param {object} meta The image meta.\r\n   * @returns {number} The new image id.\r\n   */\r\n  addNewImage(image, meta) {\r\n    const id = this.#dataController.length();\r\n\r\n    // load start event\r\n    this.#fireEvent({\r\n      type: 'loadstart',\r\n      loadtype: 'image',\r\n      source: 'internal',\r\n      loadid: id\r\n    });\r\n\r\n    // add image to data controller\r\n    this.#dataController.addNew(id, image, meta);\r\n\r\n    // load item event\r\n    this.#fireEvent({\r\n      type: 'loaditem',\r\n      loadtype: 'image',\r\n      data: meta,\r\n      source: 'internal',\r\n      loadid: id,\r\n      isfirstitem: true\r\n    });\r\n\r\n    // optional render\r\n    if (this.#options.viewOnFirstLoadItem) {\r\n      this.render(id);\r\n    }\r\n\r\n    // load events\r\n    this.#fireEvent({\r\n      type: 'load',\r\n      loadtype: 'image',\r\n      source: 'internal',\r\n      loadid: id\r\n    });\r\n    this.#fireEvent({\r\n      type: 'loadend',\r\n      loadtype: 'image',\r\n      source: 'internal',\r\n      loadid: id\r\n    });\r\n\r\n    return id;\r\n  }\r\n\r\n  /**\r\n   * Get the meta data.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @returns {object} The list of meta data.\r\n   */\r\n  getMetaData(index) {\r\n    return this.#dataController.get(index).meta;\r\n  }\r\n\r\n  /**\r\n   * Get the number of loaded data.\r\n   *\r\n   * @returns {number} The number.\r\n   */\r\n  getNumberOfLoadedData() {\r\n    return this.#dataController.length();\r\n  }\r\n\r\n  /**\r\n   * Can the data be scrolled?\r\n   *\r\n   * @returns {boolean} True if the data has a third dimension greater than one.\r\n   */\r\n  canScroll() {\r\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\r\n    const controller = viewLayer.getViewController();\r\n    return controller.canScroll();\r\n  }\r\n\r\n  /**\r\n   * Can window and level be applied to the data?\r\n   *\r\n   * @returns {boolean} True if the data is monochrome.\r\n   */\r\n  canWindowLevel() {\r\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\r\n    const controller = viewLayer.getViewController();\r\n    return controller.canWindowLevel();\r\n  }\r\n\r\n  /**\r\n   * Get the layer scale on top of the base scale.\r\n   *\r\n   * @returns {object} The scale as {x,y}.\r\n   */\r\n  getAddedScale() {\r\n    return this.#stage.getActiveLayerGroup().getAddedScale();\r\n  }\r\n\r\n  /**\r\n   * Get the base scale.\r\n   *\r\n   * @returns {object} The scale as {x,y}.\r\n   */\r\n  getBaseScale() {\r\n    return this.#stage.getActiveLayerGroup().getBaseScale();\r\n  }\r\n\r\n  /**\r\n   * Get the layer offset.\r\n   *\r\n   * @returns {object} The offset.\r\n   */\r\n  getOffset() {\r\n    return this.#stage.getActiveLayerGroup().getOffset();\r\n  }\r\n\r\n  /**\r\n   * Get the toolbox controller.\r\n   *\r\n   * @returns {ToolboxController} The controller.\r\n   */\r\n  getToolboxController() {\r\n    return this.#toolboxController;\r\n  }\r\n\r\n  /**\r\n   * Get the active layer group.\r\n   * The layer is available after the first loaded item.\r\n   *\r\n   * @returns {LayerGroup} The layer group.\r\n   */\r\n  getActiveLayerGroup() {\r\n    return this.#stage.getActiveLayerGroup();\r\n  }\r\n\r\n  /**\r\n   * Get the view layers associated to a data index.\r\n   * The layer are available after the first loaded item.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @returns {ViewLayer[]} The layers.\r\n   */\r\n  getViewLayersByDataIndex(index) {\r\n    return this.#stage.getViewLayersByDataIndex(index);\r\n  }\r\n\r\n  /**\r\n   * Get the draw layers associated to a data index.\r\n   * The layer are available after the first loaded item.\r\n   *\r\n   * @param {number} index The data index.\r\n   * @returns {DrawLayer[]} The layers.\r\n   */\r\n  getDrawLayersByDataIndex(index) {\r\n    return this.#stage.getDrawLayersByDataIndex(index);\r\n  }\r\n\r\n  /**\r\n   * Get a layer group by div id.\r\n   * The layer is available after the first loaded item.\r\n   *\r\n   * @param {string} divId The div id.\r\n   * @returns {LayerGroup} The layer group.\r\n   */\r\n  getLayerGroupByDivId(divId) {\r\n    return this.#stage.getLayerGroupByDivId(divId);\r\n  }\r\n\r\n  /**\r\n   * Get the number of layer groups.\r\n   *\r\n   * @returns {number} The number of groups.\r\n   */\r\n  getNumberOfLayerGroups() {\r\n    return this.#stage.getNumberOfLayerGroups();\r\n  }\r\n\r\n  /**\r\n   * Get the app style.\r\n   *\r\n   * @returns {object} The app style.\r\n   */\r\n  getStyle() {\r\n    return this.#style;\r\n  }\r\n\r\n  /**\r\n   * Add a command to the undo stack.\r\n   *\r\n   * @param {object} cmd The command to add.\r\n   * @fires UndoStack#undoadd\r\n   * @function\r\n   */\r\n  addToUndoStack = (cmd) => {\r\n    if (this.#undoStack !== null) {\r\n      this.#undoStack.add(cmd);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Initialise the application.\r\n   *\r\n   * @param {AppOptions} opt The application options\r\n   * @example\r\n   * // create the dwv app\r\n   * const app = new dwv.App();\r\n   * // initialise\r\n   * const viewConfig0 = new dwv.ViewConfig('layerGroup0');\r\n   * const viewConfigs = {'*': [viewConfig0]};\r\n   * const options = new dwv.AppOptions(viewConfigs);\r\n   * options.viewOnFirstLoadItem = false;\r\n   * app.init(options);\r\n   * // render button\r\n   * const button = document.createElement('button');\r\n   * button.id = 'render';\r\n   * button.disabled = true;\r\n   * button.appendChild(document.createTextNode('render'));\r\n   * document.body.appendChild(button);\r\n   * app.addEventListener('load', function () {\r\n   *   const button = document.getElementById('render');\r\n   *   button.disabled = false;\r\n   *   button.onclick = function () {\r\n   *     // render data #0\r\n   *     app.render(0);\r\n   *   };\r\n   * });\r\n   * // load dicom data\r\n   * app.loadURLs([\r\n   *   'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm'\r\n   * ]);\r\n   */\r\n  init(opt) {\r\n    // store\r\n    this.#options = opt;\r\n    // defaults\r\n    if (typeof this.#options.viewOnFirstLoadItem === 'undefined') {\r\n      this.#options.viewOnFirstLoadItem = true;\r\n    }\r\n\r\n    // undo stack\r\n    this.#undoStack = new UndoStack();\r\n    this.#undoStack.addEventListener('undoadd', this.#fireEvent);\r\n    this.#undoStack.addEventListener('undo', this.#fireEvent);\r\n    this.#undoStack.addEventListener('redo', this.#fireEvent);\r\n\r\n    // tools\r\n    if (typeof this.#options.tools !== 'undefined') {\r\n      // setup the tool list\r\n      const appToolList = {};\r\n      const keys = Object.keys(this.#options.tools);\r\n      for (let t = 0; t < keys.length; ++t) {\r\n        const toolName = keys[t];\r\n        // find the tool in the Tools list\r\n        if (typeof toolList[toolName] !== 'undefined') {\r\n          // create tool instance\r\n          appToolList[toolName] = new toolList[toolName](this);\r\n          // register listeners\r\n          if (typeof appToolList[toolName].addEventListener !== 'undefined') {\r\n            const names = appToolList[toolName].getEventNames();\r\n            for (let j = 0; j < names.length; ++j) {\r\n              appToolList[toolName].addEventListener(names[j], this.#fireEvent);\r\n            }\r\n          }\r\n          // tool options\r\n          const toolParams = this.#options.tools[toolName];\r\n          if (typeof toolParams.options !== 'undefined' &&\r\n            toolParams.options.length !== 0) {\r\n            let type = 'raw';\r\n            if (typeof appToolList[toolName].getOptionsType !== 'undefined') {\r\n              type = appToolList[toolName].getOptionsType();\r\n            }\r\n            let appToolOptions;\r\n            if (type === 'instance' || type === 'factory') {\r\n              appToolOptions = {};\r\n              for (let i = 0; i < toolParams.options.length; ++i) {\r\n                const optionName = toolParams.options[i];\r\n                let optionClassName = optionName;\r\n                if (type === 'factory') {\r\n                  optionClassName += 'Factory';\r\n                }\r\n                const toolNamespace = toolName.charAt(0).toLowerCase() +\r\n                  toolName.slice(1);\r\n                if (typeof toolOptions[toolNamespace][optionClassName] !==\r\n                  'undefined') {\r\n                  appToolOptions[optionName] =\r\n                    toolOptions[toolNamespace][optionClassName];\r\n                } else {\r\n                  logger.warn('Could not find option class for: ' +\r\n                    optionName);\r\n                }\r\n              }\r\n            } else {\r\n              appToolOptions = toolParams.options;\r\n            }\r\n            appToolList[toolName].setOptions(appToolOptions);\r\n          }\r\n        } else {\r\n          logger.warn('Could not initialise unknown tool: ' + toolName);\r\n        }\r\n      }\r\n      // add tools to the controller\r\n      this.#toolboxController = new ToolboxController(appToolList);\r\n    }\r\n\r\n    // create load controller\r\n    this.#loadController =\r\n      new LoadController(this.#options.defaultCharacterSet);\r\n    this.#loadController.onloadstart = this.#onloadstart;\r\n    this.#loadController.onprogress = this.#onloadprogress;\r\n    this.#loadController.onloaditem = this.#onloaditem;\r\n    this.#loadController.onload = this.#onload;\r\n    this.#loadController.onloadend = this.#onloadend;\r\n    this.#loadController.onerror = this.#onloaderror;\r\n    this.#loadController.onabort = this.#onloadabort;\r\n\r\n    // create data controller\r\n    this.#dataController = new DataController();\r\n    // create stage\r\n    this.#stage = new Stage();\r\n    if (typeof this.#options.binders !== 'undefined') {\r\n      this.#stage.setBinders(this.#options.binders);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the application.\r\n   */\r\n  reset() {\r\n    // clear objects\r\n    this.#dataController.reset();\r\n    this.#stage.empty();\r\n    // reset undo/redo\r\n    if (this.#undoStack) {\r\n      this.#undoStack = new UndoStack();\r\n      this.#undoStack.addEventListener('undoadd', this.#fireEvent);\r\n      this.#undoStack.addEventListener('undo', this.#fireEvent);\r\n      this.#undoStack.addEventListener('redo', this.#fireEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the layout of the application.\r\n   */\r\n  resetLayout() {\r\n    this.#stage.reset();\r\n    this.#stage.draw();\r\n  }\r\n\r\n  /**\r\n   * Add an event listener to this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type, will be called with the fired event.\r\n   */\r\n  addEventListener(type, callback) {\r\n    this.#listenerHandler.add(type, callback);\r\n  }\r\n\r\n  /**\r\n   * Remove an event listener from this class.\r\n   *\r\n   * @param {string} type The event type.\r\n   * @param {Function} callback The function associated with the provided\r\n   *   event type.\r\n   */\r\n  removeEventListener(type, callback) {\r\n    this.#listenerHandler.remove(type, callback);\r\n  }\r\n\r\n  // load API [begin] -------------------------------------------------------\r\n\r\n  /**\r\n   * Load a list of files. Can be image files or a state file.\r\n   *\r\n   * @param {File[]} files The list of files to load.\r\n   * @fires App#loadstart\r\n   * @fires App#loadprogress\r\n   * @fires App#loaditem\r\n   * @fires App#loadend\r\n   * @fires App#loaderror\r\n   * @fires App#loadabort\r\n   * @function\r\n   */\r\n  loadFiles = (files) => {\r\n    if (files.length === 0) {\r\n      logger.warn('Ignoring empty input file list.');\r\n      return;\r\n    }\r\n    this.#loadController.loadFiles(files);\r\n  };\r\n\r\n  /**\r\n   * Load a list of URLs. Can be image files or a state file.\r\n   *\r\n   * @param {string[]} urls The list of urls to load.\r\n   * @param {object} [options] The options object, can contain:\r\n   *  - requestHeaders: an array of {name, value} to use as request headers\r\n   *  - withCredentials: boolean xhr.withCredentials flag to pass to the request\r\n   *  - batchSize: the size of the request url batch\r\n   * @fires App#loadstart\r\n   * @fires App#loadprogress\r\n   * @fires App#loaditem\r\n   * @fires App#loadend\r\n   * @fires App#loaderror\r\n   * @fires App#loadabort\r\n   * @function\r\n   */\r\n  loadURLs = (urls, options) => {\r\n    if (urls.length === 0) {\r\n      logger.warn('Ignoring empty input url list.');\r\n      return;\r\n    }\r\n    this.#loadController.loadURLs(urls, options);\r\n  };\r\n\r\n  /**\r\n   * Load from an input uri.\r\n   *\r\n   * @param {string} uri The input uri, for example: 'window.location.href'.\r\n   * @param {object} [options] Optional url request options.\r\n   * @function\r\n   */\r\n  loadFromUri = (uri, options) => {\r\n    const query = getUriQuery(uri);\r\n\r\n    // load end callback: loads the state.\r\n    const onLoadEnd = (/*event*/) => {\r\n      this.removeEventListener('loadend', onLoadEnd);\r\n      this.loadURLs([query.state]);\r\n    };\r\n\r\n    // check query\r\n    if (query && typeof query.input !== 'undefined') {\r\n      // optional display state\r\n      if (typeof query.state !== 'undefined') {\r\n        // queue after main data load\r\n        this.addEventListener('loadend', onLoadEnd);\r\n      }\r\n      // load base image\r\n      decodeQuery(query, this.loadURLs, options);\r\n    }\r\n    // no else to allow for empty uris\r\n  };\r\n\r\n  /**\r\n   * Load a list of ArrayBuffers.\r\n   *\r\n   * @param {Array} data The list of ArrayBuffers to load\r\n   *   in the form of [{name: \"\", filename: \"\", data: data}].\r\n   * @fires App#loadstart\r\n   * @fires App#loadprogress\r\n   * @fires App#loaditem\r\n   * @fires App#loadend\r\n   * @fires App#loaderror\r\n   * @fires App#loadabort\r\n   * @function\r\n   */\r\n  loadImageObject = (data) => {\r\n    this.#loadController.loadImageObject(data);\r\n  };\r\n\r\n  /**\r\n   * Abort the current load.\r\n   */\r\n  abortLoad() {\r\n    this.#loadController.abort();\r\n  }\r\n\r\n  // load API [end] ---------------------------------------------------------\r\n\r\n  /**\r\n   * Fit the display to the data of each layer group.\r\n   * To be called once the image is loaded.\r\n   */\r\n  fitToContainer() {\r\n    this.#stage.syncLayerGroupScale();\r\n  }\r\n\r\n  /**\r\n   * Init the Window/Level display\r\n   */\r\n  initWLDisplay() {\r\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\r\n    const controller = viewLayer.getViewController();\r\n    controller.initialise();\r\n  }\r\n\r\n  /**\r\n   * Get the layer group configuration from a data index.\r\n   * Defaults to div id 'layerGroup' if no association object has been set.\r\n   *\r\n   * @param {number} dataIndex The data index.\r\n   * @returns {ViewConfig[]} The list of associated configs.\r\n   */\r\n  #getViewConfigs(dataIndex) {\r\n    // check options\r\n    if (this.#options.dataViewConfigs === null ||\r\n      typeof this.#options.dataViewConfigs === 'undefined') {\r\n      throw new Error('No available data view configuration');\r\n    }\r\n    let configs = [];\r\n    if (typeof this.#options.dataViewConfigs['*'] !== 'undefined') {\r\n      configs = this.#options.dataViewConfigs['*'];\r\n    } else if (\r\n      typeof this.#options.dataViewConfigs[dataIndex] !== 'undefined') {\r\n      configs = this.#options.dataViewConfigs[dataIndex];\r\n    }\r\n    return configs;\r\n  }\r\n\r\n  /**\r\n   * Get the data view config.\r\n   * Carefull, returns a reference, do not modify without resetting.\r\n   *\r\n   * @returns {Object<string, ViewConfig[]>} The configuration list.\r\n   */\r\n  getDataViewConfigs() {\r\n    return this.#options.dataViewConfigs;\r\n  }\r\n\r\n  /**\r\n   * Set the data view configuration.\r\n   * Resets the stage and recreates all the views.\r\n   *\r\n   * @param {Object<string, ViewConfig[]>} configs The configuration list.\r\n   */\r\n  setDataViewConfigs(configs) {\r\n    // clean up\r\n    this.#stage.empty();\r\n    // set new\r\n    this.#options.dataViewConfigs = configs;\r\n    // create layer groups\r\n    this.#createLayerGroups(configs);\r\n  }\r\n\r\n  /**\r\n   * Create layer groups according to a data view config:\r\n   * adds them to stage and bind them.\r\n   *\r\n   * @param {DataViewConfigs} dataViewConfigs The data view config.\r\n   */\r\n  #createLayerGroups(dataViewConfigs) {\r\n    const dataKeys = Object.keys(dataViewConfigs);\r\n    const divIds = [];\r\n    for (let i = 0; i < dataKeys.length; ++i) {\r\n      const viewConfigs = dataViewConfigs[dataKeys[i]];\r\n      for (let j = 0; j < viewConfigs.length; ++j) {\r\n        const viewConfig = viewConfigs[j];\r\n        // view configs can contain the same divIds, avoid duplicating\r\n        if (!divIds.includes(viewConfig.divId)) {\r\n          // create new layer group\r\n          const element = document.getElementById(viewConfig.divId);\r\n          const layerGroup = this.#stage.addLayerGroup(element);\r\n          // bind events\r\n          this.#bindLayerGroupToApp(layerGroup);\r\n          // optional orientation\r\n          if (typeof viewConfig.orientation !== 'undefined') {\r\n            layerGroup.setTargetOrientation(\r\n              getMatrixFromName(viewConfig.orientation));\r\n          }\r\n          divIds.push(viewConfig.divId);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the layer groups binders.\r\n   *\r\n   * @param {Array} list The list of binder names.\r\n   */\r\n  setLayerGroupsBinders(list) {\r\n    // create instances\r\n    const instances = [];\r\n    for (let i = 0; i < list.length; ++i) {\r\n      if (typeof binderList[list[i]] !== 'undefined') {\r\n        instances.push(new binderList[list[i]]);\r\n      }\r\n    }\r\n    // pass to stage\r\n    this.#stage.setBinders(instances);\r\n  }\r\n\r\n  /**\r\n   * Render the current data.\r\n   *\r\n   * @param {number} dataIndex The data index to render.\r\n   */\r\n  render(dataIndex) {\r\n    if (typeof dataIndex === 'undefined' || dataIndex === null) {\r\n      throw new Error('Cannot render without data index');\r\n    }\r\n\r\n    // create layer groups if not done yet\r\n    // (create all to allow for ratio sync)\r\n    if (this.#stage.getNumberOfLayerGroups() === 0) {\r\n      this.#createLayerGroups(this.#options.dataViewConfigs);\r\n    }\r\n\r\n    // loop on all configs\r\n    const viewConfigs = this.#getViewConfigs(dataIndex);\r\n    // nothing to do if no view config\r\n    if (viewConfigs.length === 0) {\r\n      logger.info('Not rendering data: ' + dataIndex +\r\n        ' (no data view config)');\r\n      return;\r\n    }\r\n    for (let i = 0; i < viewConfigs.length; ++i) {\r\n      const config = viewConfigs[i];\r\n      const layerGroup =\r\n      this.#stage.getLayerGroupByDivId(config.divId);\r\n      // layer group must exist\r\n      if (!layerGroup) {\r\n        throw new Error('No layer group for ' + config.divId);\r\n      }\r\n      // initialise or add view\r\n      // warn: needs a loaded DOM\r\n      if (layerGroup.getViewLayersByDataIndex(dataIndex).length === 0) {\r\n        if (layerGroup.getNumberOfLayers() === 0) {\r\n          this.#initialiseBaseLayers(dataIndex, config);\r\n        } else {\r\n          this.#addViewLayer(dataIndex, config);\r\n        }\r\n      }\r\n      // draw\r\n      layerGroup.draw();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Zoom to the layers.\r\n   *\r\n   * @param {number} step The step to add to the current zoom.\r\n   * @param {number} cx The zoom center X coordinate.\r\n   * @param {number} cy The zoom center Y coordinate.\r\n   */\r\n  zoom(step, cx, cy) {\r\n    const layerGroup = this.#stage.getActiveLayerGroup();\r\n    const viewController = layerGroup.getActiveViewLayer().getViewController();\r\n    const k = viewController.getCurrentScrollPosition();\r\n    const center = new Point3D(cx, cy, k);\r\n    layerGroup.addScale(step, center);\r\n    layerGroup.draw();\r\n  }\r\n\r\n  /**\r\n   * Apply a translation to the layers.\r\n   *\r\n   * @param {number} tx The translation along X.\r\n   * @param {number} ty The translation along Y.\r\n   */\r\n  translate(tx, ty) {\r\n    const layerGroup = this.#stage.getActiveLayerGroup();\r\n    layerGroup.addTranslation({x: tx, y: ty});\r\n    layerGroup.draw();\r\n  }\r\n\r\n  /**\r\n   * Set the image layer opacity.\r\n   *\r\n   * @param {number} alpha The opacity ([0:1] range).\r\n   */\r\n  setOpacity(alpha) {\r\n    const viewLayer = this.#stage.getActiveLayerGroup().getActiveViewLayer();\r\n    viewLayer.setOpacity(alpha);\r\n    viewLayer.draw();\r\n  }\r\n\r\n  /**\r\n   * Set the drawings on the current stage.\r\n   *\r\n   * @param {Array} drawings An array of drawings.\r\n   * @param {Array} drawingsDetails An array of drawings details.\r\n   */\r\n  setDrawings(drawings, drawingsDetails) {\r\n    const layerGroup = this.#stage.getActiveLayerGroup();\r\n    const viewController =\r\n      layerGroup.getActiveViewLayer().getViewController();\r\n    const drawController =\r\n      layerGroup.getActiveDrawLayer().getDrawController();\r\n\r\n    drawController.setDrawings(\r\n      drawings, drawingsDetails, this.#fireEvent, this.addToUndoStack);\r\n\r\n    drawController.activateDrawLayer(\r\n      viewController.getCurrentOrientedIndex(),\r\n      viewController.getScrollIndex());\r\n  }\r\n\r\n  /**\r\n   * Get the JSON state of the app.\r\n   *\r\n   * @returns {string} The state of the app as a JSON string.\r\n   */\r\n  getJsonState() {\r\n    const state = new State();\r\n    return state.toJSON(this);\r\n  }\r\n\r\n  /**\r\n   * Apply a JSON state to this app.\r\n   *\r\n   * @param {string} jsonState The state of the app as a JSON string.\r\n   */\r\n  applyJsonState(jsonState) {\r\n    const state = new State();\r\n    state.apply(this, state.fromJSON(jsonState));\r\n  }\r\n\r\n  // Handler Methods -----------------------------------------------------------\r\n\r\n  /**\r\n   * Handle resize: fit the display to the window.\r\n   * To be called once the image is loaded.\r\n   * Can be connected to a window 'resize' event.\r\n   *\r\n   * @function\r\n   */\r\n  onResize = () => {\r\n    this.fitToContainer();\r\n  };\r\n\r\n  /**\r\n   * Key down callback. Meant to be used in tools.\r\n   *\r\n   * @param {KeyboardEvent} event The key down event.\r\n   * @fires App#keydown\r\n   * @function\r\n   */\r\n  onKeydown = (event) => {\r\n    /**\r\n     * Key down event.\r\n     *\r\n     * @event App#keydown\r\n     * @type {KeyboardEvent}\r\n     * @property {string} type The event type: keydown.\r\n     * @property {string} context The tool where the event originated.\r\n     */\r\n    this.#fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Key down event handler example.\r\n   * - CRTL-Z: undo\r\n   * - CRTL-Y: redo\r\n   * - CRTL-ARROW_LEFT: next element on fourth dim\r\n   * - CRTL-ARROW_UP: next element on third dim\r\n   * - CRTL-ARROW_RIGHT: previous element on fourth dim\r\n   * - CRTL-ARROW_DOWN: previous element on third dim\r\n   *\r\n   * @param {KeyboardEvent} event The key down event.\r\n   * @fires UndoStack#undo\r\n   * @fires UndoStack#redo\r\n   * @function\r\n   */\r\n  defaultOnKeydown = (event) => {\r\n    if (event.ctrlKey) {\r\n      if (event.shiftKey) {\r\n        const viewController =\r\n          this.#stage.getActiveLayerGroup()\r\n            .getActiveViewLayer().getViewController();\r\n        const size = viewController.getImageSize();\r\n        if (event.key === 'ArrowLeft') { // crtl-shift-arrow-left\r\n          if (size.moreThanOne(3)) {\r\n            viewController.decrementIndex(3);\r\n          }\r\n        } else if (event.key === 'ArrowUp') { // crtl-shift-arrow-up\r\n          if (viewController.canScroll()) {\r\n            viewController.incrementScrollIndex();\r\n          }\r\n        } else if (event.key === 'ArrowRight') { // crtl-shift-arrow-right\r\n          if (size.moreThanOne(3)) {\r\n            viewController.incrementIndex(3);\r\n          }\r\n        } else if (event.key === 'ArrowDown') { // crtl-shift-arrow-down\r\n          if (viewController.canScroll()) {\r\n            viewController.decrementScrollIndex();\r\n          }\r\n        }\r\n      } else if (event.key === 'y') { // crtl-y\r\n        this.#undoStack.redo();\r\n      } else if (event.key === 'z') { // crtl-z\r\n        this.#undoStack.undo();\r\n      } else if (event.key === ' ') { // crtl-space\r\n        for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\r\n          this.#stage.getLayerGroup(i).setShowCrosshair(\r\n            !this.#stage.getLayerGroup(i).getShowCrosshair()\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Internal members shortcuts-----------------------------------------------\r\n\r\n  /**\r\n   * Reset the display\r\n   */\r\n  resetDisplay() {\r\n    this.resetLayout();\r\n    this.initWLDisplay();\r\n  }\r\n\r\n  /**\r\n   * Reset the app zoom.s\r\n   */\r\n  resetZoom() {\r\n    this.resetLayout();\r\n  }\r\n\r\n  /**\r\n   * Set the colour map.\r\n   *\r\n   * @param {string} name The colour map name.\r\n   */\r\n  setColourMap(name) {\r\n    const viewController =\r\n      this.#stage.getActiveLayerGroup()\r\n        .getActiveViewLayer().getViewController();\r\n    viewController.setColourMapFromName(name);\r\n  }\r\n\r\n  /**\r\n   * Set the window/level preset.\r\n   *\r\n   * @param {object} preset The window/level preset.\r\n   */\r\n  setWindowLevelPreset(preset) {\r\n    const viewController =\r\n      this.#stage.getActiveLayerGroup()\r\n        .getActiveViewLayer().getViewController();\r\n    viewController.setWindowLevelPreset(preset);\r\n  }\r\n\r\n  /**\r\n   * Set the tool\r\n   *\r\n   * @param {string} tool The tool.\r\n   */\r\n  setTool(tool) {\r\n    // bind tool to active layer\r\n    for (let i = 0; i < this.#stage.getNumberOfLayerGroups(); ++i) {\r\n      const layerGroup = this.#stage.getLayerGroup(i);\r\n      // draw or view layer\r\n      let layer = null;\r\n      if (tool === 'Draw' ||\r\n        tool === 'Livewire' ||\r\n        tool === 'Floodfill') {\r\n        layer = layerGroup.getActiveDrawLayer();\r\n      } else {\r\n        layer = layerGroup.getActiveViewLayer();\r\n      }\r\n      if (layer) {\r\n        this.#toolboxController.bindLayer(layer, layerGroup.getDivId());\r\n      }\r\n    }\r\n\r\n    // set toolbox tool\r\n    this.#toolboxController.setSelectedTool(tool);\r\n  }\r\n\r\n  /**\r\n   * Set the tool live features.\r\n   *\r\n   * @param {object} list The list of features.\r\n   */\r\n  setToolFeatures(list) {\r\n    this.#toolboxController.setToolFeatures(list);\r\n  }\r\n\r\n  /**\r\n   * Undo the last action\r\n   *\r\n   * @fires UndoStack#undo\r\n   */\r\n  undo() {\r\n    this.#undoStack.undo();\r\n  }\r\n\r\n  /**\r\n   * Redo the last action\r\n   *\r\n   * @fires UndoStack#redo\r\n   */\r\n  redo() {\r\n    this.#undoStack.redo();\r\n  }\r\n\r\n  /**\r\n   * Get the undo stack size.\r\n   *\r\n   * @returns {number} The size of the stack.\r\n   */\r\n  getStackSize() {\r\n    return this.#undoStack.getStackSize();\r\n  }\r\n\r\n  /**\r\n   * Get the current undo stack index.\r\n   *\r\n   * @returns {number} The stack index.\r\n   */\r\n  getCurrentStackIndex() {\r\n    return this.#undoStack.getCurrentStackIndex();\r\n  }\r\n\r\n  // Private Methods -----------------------------------------------------------\r\n\r\n  /**\r\n   * Fire an event: call all associated listeners with the input event object.\r\n   *\r\n   * @param {object} event The event to fire.\r\n   */\r\n  #fireEvent = (event) => {\r\n    this.#listenerHandler.fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Data load start callback.\r\n   *\r\n   * @param {object} event The load start event.\r\n   */\r\n  #onloadstart = (event) => {\r\n    /**\r\n     * Load start event.\r\n     *\r\n     * @event App#loadstart\r\n     * @type {object}\r\n     * @property {string} type The event type: loadstart.\r\n     * @property {string} loadType The load type: image or state.\r\n     * @property {*} source The load source: string for an url,\r\n     *   File for a file.\r\n     */\r\n    event.type = 'loadstart';\r\n    this.#fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Data load progress callback.\r\n   *\r\n   * @param {object} event The progress event.\r\n   */\r\n  #onloadprogress = (event) => {\r\n    /**\r\n     * Load progress event.\r\n     *\r\n     * @event App#loadprogress\r\n     * @type {object}\r\n     * @property {string} type The event type: loadprogress.\r\n     * @property {string} loadType The load type: image or state.\r\n     * @property {*} source The load source: string for an url,\r\n     *   File for a file.\r\n     * @property {number} loaded The loaded percentage.\r\n     * @property {number} total The total percentage.\r\n     */\r\n    event.type = 'loadprogress';\r\n    this.#fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Data load callback.\r\n   *\r\n   * @param {object} event The load event.\r\n   */\r\n  #onloaditem = (event) => {\r\n    // check event\r\n    if (typeof event.data === 'undefined') {\r\n      logger.error('Missing loaditem event data.');\r\n    }\r\n    if (typeof event.loadtype === 'undefined') {\r\n      logger.error('Missing loaditem event load type.');\r\n    }\r\n\r\n    const isFirstLoadItem = event.isfirstitem;\r\n\r\n    let eventMetaData = null;\r\n    if (event.loadtype === 'image') {\r\n      if (isFirstLoadItem) {\r\n        this.#dataController.addNew(\r\n          event.loadid, event.data.image, event.data.info);\r\n      } else {\r\n        this.#dataController.update(\r\n          event.loadid, event.data.image, event.data.info);\r\n      }\r\n      eventMetaData = event.data.info;\r\n    } else if (event.loadtype === 'state') {\r\n      this.applyJsonState(event.data);\r\n      eventMetaData = 'state';\r\n    }\r\n\r\n    /**\r\n     * Load item event: fired when a load item is successfull.\r\n     *\r\n     * @event App#loaditem\r\n     * @type {object}\r\n     * @property {string} type The event type: loaditem.\r\n     * @property {string} loadType The load type: image or state.\r\n     * @property {*} source The load source: string for an url,\r\n     *   File for a file.\r\n     * @property {object} data The loaded meta data.\r\n     */\r\n    this.#fireEvent({\r\n      type: 'loaditem',\r\n      data: eventMetaData,\r\n      source: event.source,\r\n      loadtype: event.loadtype,\r\n      loadid: event.loadid,\r\n      isfirstitem: event.isfirstitem,\r\n      warn: event.warn\r\n    });\r\n\r\n    // render if first and flag allows\r\n    if (event.loadtype === 'image' &&\r\n    this.#getViewConfigs(event.loadid).length !== 0 &&\r\n      isFirstLoadItem && this.#options.viewOnFirstLoadItem) {\r\n      this.render(event.loadid);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Data load callback.\r\n   *\r\n   * @param {object} event The load event.\r\n   */\r\n  #onload = (event) => {\r\n    /**\r\n     * Load event: fired when a load finishes successfully.\r\n     *\r\n     * @event App#load\r\n     * @type {object}\r\n     * @property {string} type The event type: load.\r\n     * @property {string} loadType The load type: image or state.\r\n     */\r\n    event.type = 'load';\r\n    this.#fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Data load end callback.\r\n   *\r\n   * @param {object} event The load end event.\r\n   */\r\n  #onloadend = (event) => {\r\n    /**\r\n     * Main load end event: fired when the load finishes,\r\n     *   successfully or not.\r\n     *\r\n     * @event App#loadend\r\n     * @type {object}\r\n     * @property {string} type The event type: loadend.\r\n     * @property {string} loadType The load type: image or state.\r\n     * @property {*} source The load source: string for an url,\r\n     *   File for a file.\r\n     */\r\n    event.type = 'loadend';\r\n    this.#fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Data load error callback.\r\n   *\r\n   * @param {object} event The error event.\r\n   */\r\n  #onloaderror = (event) => {\r\n    /**\r\n     * Load error event.\r\n     *\r\n     * @event App#loaderror\r\n     * @type {object}\r\n     * @property {string} type The event type: error.\r\n     * @property {string} loadType The load type: image or state.\r\n     * @property {*} source The load source: string for an url,\r\n     *   File for a file.\r\n     * @property {object} error The error.\r\n     * @property {object} target The event target.\r\n     */\r\n    event.type = 'loaderror';\r\n    this.#fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Data load abort callback.\r\n   *\r\n   * @param {object} event The abort event.\r\n   */\r\n  #onloadabort = (event) => {\r\n    /**\r\n     * Load abort event.\r\n     *\r\n     * @event App#loadabort\r\n     * @type {object}\r\n     * @property {string} type The event type: abort.\r\n     * @property {string} loadType The load type: image or state.\r\n     * @property {*} source The load source: string for an url,\r\n     *   File for a file.\r\n     */\r\n    event.type = 'loadabort';\r\n    this.#fireEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Bind layer group events to app.\r\n   *\r\n   * @param {object} group The layer group.\r\n   */\r\n  #bindLayerGroupToApp(group) {\r\n    // propagate layer group events\r\n    group.addEventListener('zoomchange', this.#fireEvent);\r\n    group.addEventListener('offsetchange', this.#fireEvent);\r\n    // propagate viewLayer events\r\n    group.addEventListener('renderstart', this.#fireEvent);\r\n    group.addEventListener('renderend', this.#fireEvent);\r\n    // propagate view events\r\n    for (let j = 0; j < viewEventNames.length; ++j) {\r\n      group.addEventListener(viewEventNames[j], this.#fireEvent);\r\n    }\r\n    // propagate drawLayer events\r\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\r\n      group.addEventListener('drawcreate', this.#fireEvent);\r\n      group.addEventListener('drawdelete', this.#fireEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialise the layers.\r\n   * To be called once the DICOM data has been loaded.\r\n   *\r\n   * @param {number} dataIndex The data index.\r\n   * @param {ViewConfig} viewConfig The view config.\r\n   */\r\n  #initialiseBaseLayers(dataIndex, viewConfig) {\r\n    // add layers\r\n    this.#addViewLayer(dataIndex, viewConfig);\r\n\r\n    // initialise the toolbox\r\n    if (this.#toolboxController) {\r\n      this.#toolboxController.init();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a view layer.\r\n   *\r\n   * @param {number} dataIndex The data index.\r\n   * @param {ViewConfig} viewConfig The data view config.\r\n   */\r\n  #addViewLayer(dataIndex, viewConfig) {\r\n    const data = this.#dataController.get(dataIndex);\r\n    if (!data) {\r\n      throw new Error('Cannot initialise layer with data id: ' + dataIndex);\r\n    }\r\n    const layerGroup = this.#stage.getLayerGroupByDivId(viewConfig.divId);\r\n    if (!layerGroup) {\r\n      throw new Error('Cannot initialise layer with group id: ' +\r\n        viewConfig.divId);\r\n    }\r\n    const imageGeometry = data.image.getGeometry();\r\n\r\n    // un-bind\r\n    this.#stage.unbindLayerGroups();\r\n\r\n    // create and setup view\r\n    const viewFactory = new ViewFactory();\r\n    const view = viewFactory.create(data.meta, data.image);\r\n    const viewOrientation = getViewOrientation(\r\n      imageGeometry.getOrientation(),\r\n      layerGroup.getTargetOrientation()\r\n    );\r\n    view.setOrientation(viewOrientation);\r\n\r\n    // make pixel of value 0 transparent for segmentation\r\n    // (assuming RGB data)\r\n    if (data.image.getMeta().Modality === 'SEG') {\r\n      view.setAlphaFunction(function (value /*, index*/) {\r\n        if (value[0] === 0 &&\r\n          value[1] === 0 &&\r\n          value[2] === 0) {\r\n          return 0;\r\n        } else {\r\n          return 0xff;\r\n        }\r\n      });\r\n    }\r\n\r\n    // colour map\r\n    if (typeof viewConfig.colourMap !== 'undefined') {\r\n      view.setColourMap(viewConfig.colourMap);\r\n    }\r\n\r\n    const isBaseLayer = layerGroup.getNumberOfLayers() === 0;\r\n\r\n    // opacity\r\n    let opacity = 1;\r\n    // do we have more than one layer\r\n    // (the layer has not been added to the layer group yet)\r\n    if (!isBaseLayer) {\r\n      opacity = 0.5;\r\n      // set color map if non was provided\r\n      if (typeof viewConfig.colourMap === 'undefined') {\r\n        view.setColourMap(luts.rainbow);\r\n      }\r\n    }\r\n\r\n    // view layer\r\n    const viewLayer = layerGroup.addViewLayer();\r\n    viewLayer.setView(view, dataIndex);\r\n    const size2D = imageGeometry.getSize(viewOrientation).get2D();\r\n    const spacing2D = imageGeometry.getSpacing(viewOrientation).get2D();\r\n    viewLayer.initialise(size2D, spacing2D, opacity);\r\n    const viewController = viewLayer.getViewController();\r\n\r\n    // listen to controller events\r\n    if (data.image.getMeta().Modality === 'SEG') {\r\n      viewController.addEventListener('masksegmentdelete', this.#fireEvent);\r\n      viewController.addEventListener('masksegmentredraw', this.#fireEvent);\r\n    }\r\n\r\n    // listen to image changes\r\n    this.#dataController.addEventListener('imageset', viewLayer.onimageset);\r\n    this.#dataController.addEventListener('imagechange', (event) => {\r\n      viewLayer.onimagechange(event);\r\n      this.render(event.dataid);\r\n    });\r\n\r\n    // bind\r\n    this.#stage.bindLayerGroups();\r\n    if (this.#toolboxController) {\r\n      this.#toolboxController.bindLayer(viewLayer, layerGroup.getDivId());\r\n    }\r\n\r\n    // optional draw layer\r\n    let drawLayer;\r\n    if (this.#toolboxController && this.#toolboxController.hasTool('Draw')) {\r\n      drawLayer = layerGroup.addDrawLayer();\r\n      drawLayer.initialise(size2D, spacing2D, dataIndex);\r\n      drawLayer.setPlaneHelper(viewLayer.getViewController().getPlaneHelper());\r\n    }\r\n\r\n    // sync layers position\r\n    const value = [\r\n      viewController.getCurrentIndex().getValues(),\r\n      viewController.getCurrentPosition().getValues()\r\n    ];\r\n    layerGroup.updateLayersToPositionChange({\r\n      value: value,\r\n      srclayerid: viewLayer.getId()\r\n    });\r\n\r\n    // sync layer groups\r\n    this.#stage.syncLayerGroupScale();\r\n\r\n    // major orientation axis\r\n    const major = imageGeometry.getOrientation().getThirdColMajorDirection();\r\n\r\n    // view layer offset (done before scale)\r\n    viewLayer.setOffset(layerGroup.getOffset());\r\n    // extra flip offset for oriented views...\r\n    if (typeof viewConfig.orientation !== 'undefined') {\r\n      if (major === 2) {\r\n        // flip offset Y for axial aquired data\r\n        if (viewConfig.orientation !== 'axial') {\r\n          viewLayer.addFlipOffsetY();\r\n          if (typeof drawLayer !== 'undefined') {\r\n            drawLayer.addFlipOffsetY();\r\n          }\r\n        }\r\n      } else if (major === 0) {\r\n        // flip offset X for sagittal aquired data\r\n        if (viewConfig.orientation !== 'sagittal') {\r\n          viewLayer.addFlipOffsetX();\r\n          if (typeof drawLayer !== 'undefined') {\r\n            drawLayer.addFlipOffsetX();\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // view layer scale\r\n    // only flip scale for base layers\r\n    if (isBaseLayer) {\r\n      if (typeof viewConfig.orientation !== 'undefined') {\r\n        if (major === 0 || major === 2) {\r\n          // scale flip Z for oriented views...\r\n          layerGroup.flipScaleZ();\r\n        } else {\r\n          viewLayer.setScale(layerGroup.getScale());\r\n          if (typeof drawLayer !== 'undefined') {\r\n            drawLayer.setScale(layerGroup.getScale());\r\n          }\r\n        }\r\n      } else {\r\n        if (major === 0) {\r\n          // scale flip Z for sagittal and undefined target orientation\r\n          layerGroup.flipScaleZ();\r\n        } else {\r\n          viewLayer.setScale(layerGroup.getScale());\r\n          if (typeof drawLayer !== 'undefined') {\r\n            drawLayer.setScale(layerGroup.getScale());\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      viewLayer.setScale(layerGroup.getScale());\r\n      if (typeof drawLayer !== 'undefined') {\r\n        drawLayer.setScale(layerGroup.getScale());\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n} // class App\r\n","/**\r\n * Data writer.\r\n */\r\nexport class DataWriter {\r\n\r\n  /**\r\n   * Is the endianness Little Endian.\r\n   *\r\n   * @type {boolean}\r\n   */\r\n  #isLittleEndian = true;\r\n\r\n  /**\r\n   * The main data view.\r\n   *\r\n   * @type {DataView}\r\n   */\r\n  #view;\r\n\r\n  /**\r\n   * @param {ArrayBuffer} buffer The input array buffer.\r\n   * @param {boolean} [isLittleEndian] Flag to tell if the data is\r\n   *   little or big endian.\r\n   */\r\n  constructor(buffer, isLittleEndian) {\r\n    // Set endian flag if not defined.\r\n    if (typeof isLittleEndian !== 'undefined') {\r\n      this.#isLittleEndian = isLittleEndian;\r\n    }\r\n    this.#view = new DataView(buffer);\r\n  }\r\n\r\n  /**\r\n   * Write Uint8 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {number} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeUint8(byteOffset, value) {\r\n    this.#view.setUint8(byteOffset, value);\r\n    return byteOffset + Uint8Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write Int8 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {number} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeInt8(byteOffset, value) {\r\n    this.#view.setInt8(byteOffset, value);\r\n    return byteOffset + Int8Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write Uint16 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {number} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeUint16(byteOffset, value) {\r\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\r\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write Int16 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {number} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeInt16(byteOffset, value) {\r\n    this.#view.setInt16(byteOffset, value, this.#isLittleEndian);\r\n    return byteOffset + Int16Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write Uint32 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {number} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeUint32(byteOffset, value) {\r\n    this.#view.setUint32(byteOffset, value, this.#isLittleEndian);\r\n    return byteOffset + Uint32Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write Uint64 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {bigint} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeUint64(byteOffset, value) {\r\n    this.#view.setBigUint64(byteOffset, value, this.#isLittleEndian);\r\n    return byteOffset + BigUint64Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write Int32 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {number} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeInt32(byteOffset, value) {\r\n    this.#view.setInt32(byteOffset, value, this.#isLittleEndian);\r\n    return byteOffset + Int32Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write Int64 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {bigint} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeInt64(byteOffset, value) {\r\n    this.#view.setBigInt64(byteOffset, value, this.#isLittleEndian);\r\n    return byteOffset + BigInt64Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write Float32 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {number} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeFloat32(byteOffset, value) {\r\n    this.#view.setFloat32(byteOffset, value, this.#isLittleEndian);\r\n    return byteOffset + Float32Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write Float64 data.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {number} value The data to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeFloat64(byteOffset, value) {\r\n    this.#view.setFloat64(byteOffset, value, this.#isLittleEndian);\r\n    return byteOffset + Float64Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write string data of length 4 as hexadecimal (no '0x' prefix).\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {string} str The hexadecimal string to write ('####').\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeHex(byteOffset, str) {\r\n    // remove first two chars and parse\r\n    const value = parseInt(str, 16);\r\n    this.#view.setUint16(byteOffset, value, this.#isLittleEndian);\r\n    return byteOffset + Uint16Array.BYTES_PER_ELEMENT;\r\n  }\r\n\r\n  /**\r\n   * Write a boolean array as binary.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeBinaryArray(byteOffset, array) {\r\n    if (array.length % 8 !== 0) {\r\n      throw new Error('Cannot write boolean array as binary.');\r\n    }\r\n    let byte = null;\r\n    let val = null;\r\n    for (let i = 0, len = array.length; i < len; i += 8) {\r\n      byte = 0;\r\n      for (let j = 0; j < 8; ++j) {\r\n        val = array[i + j] === 0 ? 0 : 1;\r\n        byte += val << j;\r\n      }\r\n      byteOffset = this.writeUint8(byteOffset, byte);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Uint8 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array|Uint8Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeUint8Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeUint8(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Int8 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeInt8Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeInt8(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Uint16 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeUint16Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeUint16(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Int16 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeInt16Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeInt16(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Uint32 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeUint32Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeUint32(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Uint64 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeUint64Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeUint64(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Int32 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeInt32Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeInt32(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Int64 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeInt64Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeInt64(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Float32 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeFloat32Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeFloat32(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write Float64 array.\r\n   *\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} array The array to write.\r\n   * @returns {number} The new offset position.\r\n   */\r\n  writeFloat64Array(byteOffset, array) {\r\n    for (let i = 0, len = array.length; i < len; ++i) {\r\n      byteOffset = this.writeFloat64(byteOffset, array[i]);\r\n    }\r\n    return byteOffset;\r\n  }\r\n\r\n} // class DataWriter\r\n","import {\r\n  is32bitVLVR,\r\n  isCharSetStringVR,\r\n  vrTypes\r\n} from './dictionary';\r\nimport {\r\n  Tag,\r\n  getTagFromDictionary,\r\n  getTagFromKey,\r\n  getItemTag,\r\n  getItemDelimitationItemTag,\r\n  getSequenceDelimitationItemTag,\r\n  getFileMetaInformationGroupLengthTag,\r\n  isPixelDataTag,\r\n  isItemTag,\r\n  tagCompareFunction\r\n} from './dicomTag';\r\nimport {\r\n  getDwvVersion,\r\n  isImplicitTransferSyntax,\r\n  isBigEndianTransferSyntax,\r\n  getDataElementPrefixByteSize\r\n} from './dicomParser';\r\nimport {DataElement} from './dataElement';\r\nimport {DataWriter} from './dataWriter';\r\nimport {logger} from '../utils/logger';\r\n\r\n/**\r\n * Get the dwv UID prefix.\r\n * Issued by Medical Connections Ltd (www.medicalconnections.co.uk)\r\n *   on 25/10/2017.\r\n *\r\n * @returns {string} The dwv UID prefix.\r\n */\r\nfunction getDwvUIDPrefix() {\r\n  return '1.2.826.0.1.3680043.9.7278.1';\r\n}\r\n\r\n// local generated uid counter\r\nlet _uidCount = 0;\r\n\r\n/**\r\n * Writer rule.\r\n */\r\nexport class WriterRule {\r\n  /**\r\n   * Rule action: `copy`, `remove`, `clear` or `replace`.\r\n   *\r\n   * @type {string}\r\n   */\r\n  action;\r\n  /**\r\n   * Optional value to use for replace action.\r\n   *\r\n   * @type {any|undefined}\r\n   */\r\n  value;\r\n\r\n  /**\r\n   * @param {string} action The rule action.\r\n   */\r\n  constructor(action) {\r\n    this.action = action;\r\n  }\r\n}\r\n\r\n/**\r\n * Get a UID for a DICOM tag.\r\n * Note: Use https://github.com/uuidjs/uuid?\r\n *\r\n * @see http://dicom.nema.org/dicom/2013/output/chtml/part05/chapter_9.html\r\n * @see http://dicomiseasy.blogspot.com/2011/12/chapter-4-dicom-objects-in-chapter-3.html\r\n * @see https://stackoverflow.com/questions/46304306/how-to-generate-unique-dicom-uid\r\n * @param {string} tagName The input tag.\r\n * @returns {string} The corresponding UID.\r\n */\r\nexport function getUID(tagName) {\r\n  const prefix = getDwvUIDPrefix() + '.';\r\n  let uid = '';\r\n  if (tagName === 'ImplementationClassUID') {\r\n    uid = prefix + getDwvVersion();\r\n  } else {\r\n    // date (only numbers), do not keep milliseconds\r\n    const date = (new Date()).toISOString().replace(/\\D/g, '');\r\n    const datePart = '.' + date.substring(0, 14);\r\n    // count\r\n    _uidCount += 1;\r\n    const countPart = '.' + _uidCount;\r\n\r\n    // uid = prefix . tag . date . count\r\n    uid = prefix;\r\n\r\n    // limit tag part to not exceed 64 length\r\n    const nonTagLength = prefix.length + countPart.length + datePart.length;\r\n    const leni = Math.min(tagName.length, 64 - nonTagLength);\r\n    if (leni > 1) {\r\n      let tagNumber = '';\r\n      for (let i = 0; i < leni; ++i) {\r\n        tagNumber += tagName.charCodeAt(i);\r\n      }\r\n      uid += tagNumber.substring(0, leni);\r\n    }\r\n\r\n    // finish\r\n    uid += datePart + countPart;\r\n  }\r\n  return uid;\r\n}\r\n\r\n/**\r\n * Return true if the input number is even.\r\n *\r\n * @param {number} number The number to check.\r\n * @returns {boolean} True is the number is even.\r\n */\r\nfunction isEven(number) {\r\n  return number % 2 === 0;\r\n}\r\n\r\n/**\r\n * Is the input VR a VR that stores data in a typed array.\r\n * TODO: include ox and xs?\r\n *\r\n * @param {string} vr The element VR.\r\n * @returns {boolean} True if the VR is a typed array one.\r\n */\r\nfunction isTypedArrayVr(vr) {\r\n  const vrType = vrTypes[vr];\r\n  return typeof vrType !== 'undefined' &&\r\n    vrType !== 'string';\r\n}\r\n\r\n/**\r\n * Is the input VR a string VR.\r\n *\r\n * @param {string} vr The element VR.\r\n * @returns {boolean} True if the VR is a string one.\r\n */\r\nfunction isStringVr(vr) {\r\n  const vrType = vrTypes[vr];\r\n  return typeof vrType !== 'undefined' &&\r\n    vrType === 'string';\r\n}\r\n\r\n/**\r\n * Is the input VR a VR that could need padding.\r\n * see http://dicom.nema.org/dicom/2013/output/chtml/part05/sect_6.2.html\r\n *\r\n * @param {string} vr The element VR.\r\n * @returns {boolean} True if the VR needs padding.\r\n */\r\nfunction isVrToPad(vr) {\r\n  return isStringVr(vr) || vr === 'OB';\r\n}\r\n\r\n/**\r\n * Get the VR specific padding value.\r\n *\r\n * @param {string} vr The element VR.\r\n * @returns {string} The value used to pad.\r\n */\r\nfunction getVrPad(vr) {\r\n  let pad = '';\r\n  if (isStringVr(vr)) {\r\n    if (vr === 'UI') {\r\n      pad = '\\0';\r\n    } else {\r\n      pad = ' ';\r\n    }\r\n  }\r\n  return pad;\r\n}\r\n\r\n/**\r\n * Push a value at the end of an input Uint8Array.\r\n *\r\n * @param {Array|Uint8Array} arr The input array.\r\n * @param {Array|Uint8Array} value The value to push.\r\n * @returns {Uint8Array} The new array.\r\n */\r\nfunction uint8ArrayPush(arr, value) {\r\n  const newArr = new Uint8Array(arr.length + 1);\r\n  newArr.set(arr);\r\n  newArr.set(value, arr.length);\r\n  return newArr;\r\n}\r\n\r\n/**\r\n * Pad an input OB value.\r\n *\r\n * @param {Array|Uint8Array} value The input value.\r\n * @returns {Array|Uint8Array} The padded input.\r\n */\r\nfunction padOBValue(value) {\r\n  if (value !== null &&\r\n    typeof value !== 'undefined' &&\r\n    typeof value.length !== 'undefined') {\r\n    // calculate size and pad if needed\r\n    if (value.length !== 0 &&\r\n      typeof value[0].length !== 'undefined') {\r\n      // handle array of array\r\n      let size = 0;\r\n      for (let i = 0; i < value.length; ++i) {\r\n        size += value[i].length;\r\n      }\r\n      if (!isEven(size)) {\r\n        value[value.length - 1] = uint8ArrayPush(\r\n          value[value.length - 1], [0]);\r\n      }\r\n    } else {\r\n      if (!isEven(value.length)) {\r\n        value = uint8ArrayPush(value, [0]);\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Cannot pad undefined or null OB value.');\r\n  }\r\n  // uint8ArrayPush may create a new array so we\r\n  // need to return it\r\n  return value;\r\n}\r\n\r\n/**\r\n * Helper method to flatten an array of typed arrays to 2D typed array\r\n *\r\n * @param {Array} initialArray array of typed arrays\r\n * @returns {object} a typed array containing all values\r\n */\r\nfunction flattenArrayOfTypedArrays(initialArray) {\r\n  const initialArrayLength = initialArray.length;\r\n  const arrayLength = initialArray[0].length;\r\n  // If this is not a array of arrays, just return the initial one:\r\n  if (typeof arrayLength === 'undefined') {\r\n    return initialArray;\r\n  }\r\n\r\n  const flattenendArrayLength = initialArrayLength * arrayLength;\r\n\r\n  const flattenedArray = new initialArray[0].constructor(flattenendArrayLength);\r\n\r\n  for (let i = 0; i < initialArrayLength; i++) {\r\n    const indexFlattenedArray = i * arrayLength;\r\n    flattenedArray.set(initialArray[i], indexFlattenedArray);\r\n  }\r\n  return flattenedArray;\r\n}\r\n\r\n/**\r\n * Default text encoder.\r\n */\r\nclass DefaultTextEncoder {\r\n  /**\r\n   * Encode an input string.\r\n   *\r\n   * @param {string} str The string to encode.\r\n   * @returns {Uint8Array} The encoded string.\r\n   */\r\n  encode(str) {\r\n    const result = new Uint8Array(str.length);\r\n    for (let i = 0, leni = str.length; i < leni; ++i) {\r\n      result[i] = str.charCodeAt(i);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n * DICOM writer.\r\n *\r\n * @example\r\n * // add link to html\r\n * const link = document.createElement(\"a\");\r\n * link.appendChild(document.createTextNode(\"download\"));\r\n * const div = document.getElementById(\"dwv\");\r\n * div.appendChild(link);\r\n * // XMLHttpRequest onload callback\r\n * const onload = function (event) {\r\n *   const parser = new dwv.DicomParser();\r\n *   parser.parse(event.target.response);\r\n *   // create writer\r\n *   const writer = new dwv.DicomWriter();\r\n *   // get buffer using default rules\r\n *   const dicomBuffer = writer.getBuffer(parser.getDicomElements());\r\n *   // create blob\r\n *   const blob = new Blob([dicomBuffer], {type: 'application/dicom'});\r\n *   // add blob to download link\r\n *   link.href = URL.createObjectURL(blob);\r\n *   link.download = \"anonym.dcm\";\r\n * };\r\n * // DICOM file request\r\n * const request = new XMLHttpRequest();\r\n * const url = 'https://raw.githubusercontent.com/ivmartel/dwv/master/tests/data/bbmri-53323851.dcm';\r\n * request.open('GET', url);\r\n * request.responseType = 'arraybuffer';\r\n * request.onload = onload;\r\n * request.send();\r\n */\r\nexport class DicomWriter {\r\n\r\n  // flag to use VR=UN for private sequences, default to false\r\n  // (mainly used in tests)\r\n  #useUnVrForPrivateSq = false;\r\n\r\n  /**\r\n   * Set the use UN VR for private sequence flag.\r\n   *\r\n   * @param {boolean} flag True to use UN VR.\r\n   */\r\n  setUseUnVrForPrivateSq(flag) {\r\n    this.#useUnVrForPrivateSq = flag;\r\n  }\r\n\r\n  /**\r\n   * Possible tag actions.\r\n   *\r\n   * @type {Object<string, Function>}\r\n   */\r\n  #actions = {\r\n    copy: function (item) {\r\n      return item;\r\n    },\r\n    remove: function () {\r\n      return null;\r\n    },\r\n    clear: function (item) {\r\n      item.value = [];\r\n      return item;\r\n    },\r\n    replace: function (item, value) {\r\n      item.value = [value];\r\n      return item;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Default rules: just copy\r\n   *\r\n   * @type {Object<string, WriterRule>}\r\n   */\r\n  #defaultRules = {\r\n    default: {action: 'copy', value: null}\r\n  };\r\n\r\n  /**\r\n   * Writing rules.\r\n   *\r\n   * @type {Object<string, WriterRule>}\r\n   */\r\n  #rules = this.#defaultRules;\r\n\r\n  /**\r\n   * Set the writing rules.\r\n   * List of writer rules indexed by either `default`, tagName or groupName.\r\n   * Each DICOM element will be checked to see if a rule is applicable.\r\n   * First checked by tagName and then by groupName,\r\n   * if nothing is found the default rule is applied.\r\n   *\r\n   * @param {Object<string, WriterRule>} rules The input rules.\r\n   */\r\n  setRules(rules) {\r\n    this.#rules = rules;\r\n  }\r\n\r\n  /**\r\n   * Default text encoder.\r\n   *\r\n   * @type {DefaultTextEncoder}\r\n   */\r\n  #defaultTextEncoder = new DefaultTextEncoder();\r\n\r\n  /**\r\n   * Special text encoder.\r\n   *\r\n   * @type {DefaultTextEncoder|TextEncoder}\r\n   */\r\n  #textEncoder = this.#defaultTextEncoder;\r\n\r\n  /**\r\n   * Encode string data.\r\n   *\r\n   * @param {string} str The string to encode.\r\n   * @returns {Uint8Array} The encoded string.\r\n   */\r\n  #encodeString(str) {\r\n    return this.#defaultTextEncoder.encode(str);\r\n  }\r\n\r\n  /**\r\n   * Encode data as a UTF-8.\r\n   *\r\n   * @param {string} str The string to write.\r\n   * @returns {Uint8Array} The encoded string.\r\n   */\r\n  #encodeSpecialString(str) {\r\n    return this.#textEncoder.encode(str);\r\n  }\r\n\r\n  /**\r\n   * Use a TextEncoder instead of the default text decoder.\r\n   */\r\n  useSpecialTextEncoder() {\r\n    /**\r\n     * The text encoder.\r\n     *\r\n     * @external TextEncoder\r\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/TextEncoder\r\n     */\r\n    this.#textEncoder = new TextEncoder();\r\n  }\r\n\r\n  /**\r\n   * Use default anonymisation rules.\r\n   */\r\n  useDefaultAnonymisationRules() {\r\n    this.setRules({\r\n      default: {action: 'remove', value: null},\r\n      PatientName: {action: 'replace', value: 'Anonymized'}, // tag\r\n      'Meta Element': {action: 'copy', value: null}, // group '0002'\r\n      Acquisition: {action: 'copy', value: null}, // group '0018'\r\n      'Image Presentation': {action: 'copy', value: null}, // group '0028'\r\n      Procedure: {action: 'copy', value: null}, // group '0040'\r\n      'Pixel Data': {action: 'copy', value: null} // group '7fe0'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the element to write according to the class rules.\r\n   * Priority order: tagName, groupName, default.\r\n   *\r\n   * @param {DataElement} element The element to check\r\n   * @returns {DataElement|null} The element to write, can be null.\r\n   */\r\n  getElementToWrite(element) {\r\n    // get group and tag string name\r\n    const groupName = element.tag.getGroupName();\r\n    const tagName = element.tag.getNameFromDictionary();\r\n\r\n    // apply rules:\r\n    let rule;\r\n    if (typeof this.#rules[element.tag.getKey()] !== 'undefined') {\r\n      // 1. tag itself\r\n      rule = this.#rules[element.tag.getKey()];\r\n    } else if (typeof tagName !== 'undefined' &&\r\n      typeof this.#rules[tagName] !== 'undefined') {\r\n      // 2. tag name\r\n      rule = this.#rules[tagName];\r\n    } else if (typeof this.#rules[groupName] !== 'undefined') {\r\n      // 3. group name\r\n      rule = this.#rules[groupName];\r\n    } else {\r\n      // 4. default\r\n      rule = this.#rules['default'];\r\n    }\r\n    // apply action on element and return\r\n    return this.#actions[rule.action](element, rule.value);\r\n  }\r\n\r\n  /**\r\n   * Write a list of items.\r\n   *\r\n   * @param {DataWriter} writer The raw data writer.\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} items The list of items to write.\r\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\r\n   * @returns {number} The new offset position.\r\n   */\r\n  #writeDataElementItems(\r\n    writer, byteOffset, items, isImplicit) {\r\n    let item = null;\r\n    for (let i = 0; i < items.length; ++i) {\r\n      item = items[i];\r\n      const itemKeys = Object.keys(item);\r\n      if (itemKeys.length === 0) {\r\n        continue;\r\n      }\r\n      // item element (create new to not modify original)\r\n      let undefinedLength = false;\r\n      if (typeof item['FFFEE000'].undefinedLength !== 'undefined') {\r\n        undefinedLength = item['FFFEE000'].undefinedLength;\r\n      }\r\n      // const itemElement = {\r\n      //   tag: getItemTag(),\r\n      //   vr: 'NONE',\r\n      //   vl: undefinedLength ? 0xffffffff : item['FFFEE000'].vl,\r\n      //   value: []\r\n      // };\r\n      const itemElement = new DataElement('NONE');\r\n      itemElement.vl = undefinedLength ? 0xffffffff : item['FFFEE000'].vl,\r\n      itemElement.tag = getItemTag();\r\n      itemElement.value = [];\r\n      byteOffset = this.#writeDataElement(\r\n        writer, itemElement, byteOffset, isImplicit);\r\n      // write rest\r\n      for (let m = 0; m < itemKeys.length; ++m) {\r\n        if (itemKeys[m] !== 'FFFEE000' && itemKeys[m] !== 'FFFEE00D') {\r\n          byteOffset = this.#writeDataElement(\r\n            writer, item[itemKeys[m]], byteOffset, isImplicit);\r\n        }\r\n      }\r\n      // item delimitation\r\n      if (undefinedLength) {\r\n        // const itemDelimElement = {\r\n        //   tag: getItemDelimitationItemTag(),\r\n        //   vr: 'NONE',\r\n        //   vl: 0,\r\n        //   value: []\r\n        // };\r\n        const itemDelimElement = new DataElement('NONE');\r\n        itemDelimElement.vl = 0;\r\n        itemDelimElement.tag = getItemDelimitationItemTag();\r\n        itemDelimElement.value = [];\r\n        byteOffset = this.#writeDataElement(\r\n          writer, itemDelimElement, byteOffset, isImplicit);\r\n      }\r\n    }\r\n\r\n    // return new offset\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write data with a specific Value Representation (VR).\r\n   *\r\n   * @param {DataWriter} writer The raw data writer.\r\n   * @param {DataElement} element The element to write.\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} value The array to write.\r\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\r\n   * @returns {number} The new offset position.\r\n   */\r\n  #writeDataElementValue(\r\n    writer, element, byteOffset, value, isImplicit) {\r\n\r\n    const startOffset = byteOffset;\r\n\r\n    if (element.vr === 'NONE') {\r\n      // nothing to do!\r\n    } else if (value instanceof Uint8Array) {\r\n      // binary data has been expanded 8 times at read\r\n      if (value.length === 8 * element.vl) {\r\n        byteOffset = writer.writeBinaryArray(byteOffset, value);\r\n      } else {\r\n        byteOffset = writer.writeUint8Array(byteOffset, value);\r\n      }\r\n    } else if (value instanceof Int8Array) {\r\n      byteOffset = writer.writeInt8Array(byteOffset, value);\r\n    } else if (value instanceof Uint16Array) {\r\n      byteOffset = writer.writeUint16Array(byteOffset, value);\r\n    } else if (value instanceof Int16Array) {\r\n      byteOffset = writer.writeInt16Array(byteOffset, value);\r\n    } else if (value instanceof Uint32Array) {\r\n      byteOffset = writer.writeUint32Array(byteOffset, value);\r\n    } else if (value instanceof Int32Array) {\r\n      byteOffset = writer.writeInt32Array(byteOffset, value);\r\n    } else if (value instanceof BigUint64Array) {\r\n      byteOffset = writer.writeUint64Array(byteOffset, value);\r\n    } else if (value instanceof BigInt64Array) {\r\n      byteOffset = writer.writeInt64Array(byteOffset, value);\r\n    } else {\r\n      // switch according to VR if input type is undefined\r\n      const vrType = vrTypes[element.vr];\r\n      if (typeof vrType !== 'undefined') {\r\n        if (vrType === 'Uint8') {\r\n          byteOffset = writer.writeUint8Array(byteOffset, value);\r\n        } else if (vrType === 'Uint16') {\r\n          byteOffset = writer.writeUint16Array(byteOffset, value);\r\n        } else if (vrType === 'Int16') {\r\n          byteOffset = writer.writeInt16Array(byteOffset, value);\r\n        } else if (vrType === 'Uint32') {\r\n          byteOffset = writer.writeUint32Array(byteOffset, value);\r\n        } else if (vrType === 'Int32') {\r\n          byteOffset = writer.writeInt32Array(byteOffset, value);\r\n        } else if (vrType === 'Uint64') {\r\n          byteOffset = writer.writeUint64Array(byteOffset, value);\r\n        } else if (vrType === 'Int64') {\r\n          byteOffset = writer.writeInt64Array(byteOffset, value);\r\n        } else if (vrType === 'Float32') {\r\n          byteOffset = writer.writeFloat32Array(byteOffset, value);\r\n        } else if (vrType === 'Float64') {\r\n          byteOffset = writer.writeFloat64Array(byteOffset, value);\r\n        } else if (vrType === 'string') {\r\n          byteOffset = writer.writeUint8Array(byteOffset, value);\r\n        } else {\r\n          throw Error('Unknown VR type: ' + vrType);\r\n        }\r\n      } else if (element.vr === 'SQ') {\r\n        byteOffset = this.#writeDataElementItems(\r\n          writer, byteOffset, value, isImplicit);\r\n      } else if (element.vr === 'AT') {\r\n        for (let i = 0; i < value.length; ++i) {\r\n          const hexString = value[i] + '';\r\n          const hexString1 = hexString.substring(1, 5);\r\n          const hexString2 = hexString.substring(6, 10);\r\n          const dec1 = parseInt(hexString1, 16);\r\n          const dec2 = parseInt(hexString2, 16);\r\n          const atValue = [dec1, dec2];\r\n          byteOffset = writer.writeUint16Array(byteOffset, atValue);\r\n        }\r\n      } else {\r\n        logger.warn('Unknown VR: ' + element.vr);\r\n      }\r\n    }\r\n\r\n    if (element.vr !== 'SQ' && element.vr !== 'NONE') {\r\n      const diff = byteOffset - startOffset;\r\n      if (diff !== element.vl) {\r\n        logger.warn('Offset difference and VL are not equal: ' +\r\n          diff + ' != ' + element.vl + ', vr:' + element.vr);\r\n      }\r\n    }\r\n\r\n    // return new offset\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write a pixel data element.\r\n   *\r\n   * @param {DataWriter} writer The raw data writer.\r\n   * @param {DataElement} element The element to write.\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {Array} value The array to write.\r\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\r\n   * @returns {number} The new offset position.\r\n   */\r\n  #writePixelDataElementValue(\r\n    writer, element, byteOffset, value, isImplicit) {\r\n    // undefined length flag\r\n    let undefinedLength = false;\r\n    if (typeof element.undefinedLength !== 'undefined') {\r\n      undefinedLength = element.undefinedLength;\r\n    }\r\n    // explicit length\r\n    if (!undefinedLength) {\r\n      let finalValue = value[0];\r\n      // flatten multi frame\r\n      if (value.length > 1) {\r\n        finalValue = flattenArrayOfTypedArrays(value);\r\n      }\r\n      // write\r\n      byteOffset = this.#writeDataElementValue(\r\n        writer, element, byteOffset, finalValue, isImplicit);\r\n    } else {\r\n      // pixel data as sequence\r\n      const item = {};\r\n      // first item: basic offset table\r\n      item['FFFEE000'] = {\r\n        tag: getItemTag(),\r\n        vr: 'NONE',\r\n        vl: 0,\r\n        value: []\r\n      };\r\n      // data\r\n      for (let i = 0; i < value.length; ++i) {\r\n        item[i] = {\r\n          tag: getItemTag(),\r\n          vr: element.vr,\r\n          vl: value[i].length,\r\n          value: value[i]\r\n        };\r\n      }\r\n      // write\r\n      byteOffset = this.#writeDataElementItems(\r\n        writer, byteOffset, [item], isImplicit);\r\n    }\r\n\r\n    // return new offset\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Write a data element.\r\n   *\r\n   * @param {DataWriter} writer The raw data writer.\r\n   * @param {DataElement} element The DICOM data element to write.\r\n   * @param {number} byteOffset The offset to start writing from.\r\n   * @param {boolean} isImplicit Is the DICOM VR implicit?\r\n   * @returns {number} The new offset position.\r\n   */\r\n  #writeDataElement(\r\n    writer, element, byteOffset, isImplicit) {\r\n    const isTagWithVR = element.tag.isWithVR();\r\n    const is32bitVL = (isImplicit || !isTagWithVR)\r\n      ? true : is32bitVLVR(element.vr);\r\n    // group\r\n    byteOffset = writer.writeHex(byteOffset, element.tag.getGroup());\r\n    // element\r\n    byteOffset = writer.writeHex(byteOffset, element.tag.getElement());\r\n    // VR\r\n    let vr = element.vr;\r\n    // use VR=UN for private sequence\r\n    if (this.#useUnVrForPrivateSq &&\r\n      element.tag.isPrivate() &&\r\n      vr === 'SQ') {\r\n      logger.warn('Write element using VR=UN for private sequence.');\r\n      vr = 'UN';\r\n    }\r\n    if (isTagWithVR && !isImplicit) {\r\n      byteOffset = writer.writeUint8Array(byteOffset, this.#encodeString(vr));\r\n      // reserved 2 bytes for 32bit VL\r\n      if (is32bitVL) {\r\n        byteOffset += 2;\r\n      }\r\n    }\r\n\r\n    let undefinedLengthSequence = false;\r\n    if (element.vr === 'SQ' ||\r\n      isPixelDataTag(element.tag)) {\r\n      if (typeof element.undefinedLength !== 'undefined') {\r\n        undefinedLengthSequence = element.undefinedLength;\r\n      }\r\n    }\r\n    let undefinedLengthItem = false;\r\n    if (isItemTag(element.tag)) {\r\n      if (typeof element.undefinedLength !== 'undefined') {\r\n        undefinedLengthItem = element.undefinedLength;\r\n      }\r\n    }\r\n\r\n    // update vl for sequence or item with undefined length\r\n    let vl = element.vl;\r\n    if (undefinedLengthSequence || undefinedLengthItem) {\r\n      vl = 0xffffffff;\r\n    }\r\n    // VL\r\n    if (is32bitVL) {\r\n      byteOffset = writer.writeUint32(byteOffset, vl);\r\n    } else {\r\n      byteOffset = writer.writeUint16(byteOffset, vl);\r\n    }\r\n\r\n    // value\r\n    let value = element.value;\r\n    // check value\r\n    if (typeof value === 'undefined') {\r\n      value = [];\r\n    }\r\n    // write\r\n    if (isPixelDataTag(element.tag)) {\r\n      byteOffset = this.#writePixelDataElementValue(\r\n        writer, element, byteOffset, value, isImplicit);\r\n    } else {\r\n      byteOffset = this.#writeDataElementValue(\r\n        writer, element, byteOffset, value, isImplicit);\r\n    }\r\n\r\n    // sequence delimitation item for sequence with undefined length\r\n    if (undefinedLengthSequence) {\r\n      // const seqDelimElement = {\r\n      //   tag: getSequenceDelimitationItemTag(),\r\n      //   vr: 'NONE',\r\n      //   vl: 0,\r\n      //   value: []\r\n      // };\r\n      const seqDelimElement = new DataElement('NONE');\r\n      seqDelimElement.vl = 0;\r\n      seqDelimElement.tag = getSequenceDelimitationItemTag();\r\n      seqDelimElement.value = [];\r\n      byteOffset = this.#writeDataElement(\r\n        writer, seqDelimElement, byteOffset, isImplicit);\r\n    }\r\n\r\n    // return new offset\r\n    return byteOffset;\r\n  }\r\n\r\n  /**\r\n   * Get the ArrayBuffer corresponding to input DICOM elements.\r\n   *\r\n   * @param {Object<string, DataElement>} dataElements The elements to write.\r\n   * @returns {ArrayBuffer} The elements as a buffer.\r\n   */\r\n  getBuffer(dataElements) {\r\n    // Transfer Syntax\r\n    // const el = dataElements['00020010'];\r\n    // el.value = 1;\r\n    // el.vl = 'a';\r\n    const syntax = dataElements['00020010'].value[0];\r\n    const isImplicit = isImplicitTransferSyntax(syntax);\r\n    const isBigEndian = isBigEndianTransferSyntax(syntax);\r\n    // Specific CharacterSet\r\n    if (typeof dataElements['00080005'] !== 'undefined') {\r\n      const oldscs = dataElements['00080005'].value[0];\r\n      // force UTF-8 if not default character set\r\n      if (typeof oldscs !== 'undefined' && oldscs !== 'ISO-IR 6') {\r\n        logger.debug('Change charset to UTF, was: ' + oldscs);\r\n        this.useSpecialTextEncoder();\r\n        dataElements['00080005'].value = ['ISO_IR 192'];\r\n      }\r\n    }\r\n    // Bits Allocated (for image data)\r\n    let bitsAllocated;\r\n    if (typeof dataElements['00280100'] !== 'undefined') {\r\n      bitsAllocated = dataElements['00280100'].value[0];\r\n    }\r\n\r\n    // calculate buffer size and split elements (meta and non meta)\r\n    let totalSize = 128 + 4; // DICM\r\n    let localSize = 0;\r\n    const metaElements = [];\r\n    const rawElements = [];\r\n    let element;\r\n    let groupName;\r\n    let metaLength = 0;\r\n    // FileMetaInformationGroupLength\r\n    const fmiglTag = getFileMetaInformationGroupLengthTag();\r\n    // FileMetaInformationVersion\r\n    const fmivTag = new Tag('0002', '0001');\r\n    // ImplementationClassUID\r\n    const icUIDTag = new Tag('0002', '0012');\r\n    // ImplementationVersionName\r\n    const ivnTag = new Tag('0002', '0013');\r\n\r\n    // loop through elements to get the buffer size\r\n    const keys = Object.keys(dataElements);\r\n    for (let i = 0, leni = keys.length; i < leni; ++i) {\r\n      const originalElement = dataElements[keys[i]];\r\n      originalElement.tag = getTagFromKey(keys[i]);\r\n      element = this.getElementToWrite(originalElement);\r\n      if (element !== null &&\r\n        !fmiglTag.equals(element.tag) &&\r\n        !fmivTag.equals(element.tag) &&\r\n        !icUIDTag.equals(element.tag) &&\r\n        !ivnTag.equals(element.tag)) {\r\n        localSize = 0;\r\n\r\n        // XB7 2020-04-17\r\n        // Check if UN can be converted to correct VR.\r\n        // This check must be done BEFORE calculating totalSize,\r\n        // otherwise there may be extra null bytes at the end of the file\r\n        // (dcmdump may crash because of these bytes)\r\n        checkUnknownVR(element);\r\n\r\n        // update value and vl\r\n        this.#setElementValue(\r\n          element, element.value, isImplicit, bitsAllocated);\r\n\r\n        // tag group name\r\n        groupName = element.tag.getGroupName();\r\n\r\n        // prefix\r\n        if (groupName === 'Meta Element') {\r\n          localSize += getDataElementPrefixByteSize(element.vr, false);\r\n        } else {\r\n          localSize += getDataElementPrefixByteSize(\r\n            element.vr, isImplicit);\r\n        }\r\n\r\n        // value\r\n        localSize += element.vl;\r\n\r\n        // sort elements\r\n        if (groupName === 'Meta Element') {\r\n          metaElements.push(element);\r\n          metaLength += localSize;\r\n        } else {\r\n          rawElements.push(element);\r\n        }\r\n\r\n        // add to total size\r\n        totalSize += localSize;\r\n      }\r\n    }\r\n\r\n    // FileMetaInformationVersion\r\n    const fmiv = getDataElement('FileMetaInformationVersion');\r\n    let fmivSize = getDataElementPrefixByteSize(fmiv.vr, false);\r\n    fmivSize += this.#setElementValue(fmiv, [0, 1], false);\r\n    metaElements.push(fmiv);\r\n    metaLength += fmivSize;\r\n    totalSize += fmivSize;\r\n    // ImplementationClassUID\r\n    const icUID = getDataElement('ImplementationClassUID');\r\n    let icUIDSize = getDataElementPrefixByteSize(icUID.vr, false);\r\n    icUIDSize += this.#setElementValue(\r\n      icUID, [getUID('ImplementationClassUID')], false);\r\n    metaElements.push(icUID);\r\n    metaLength += icUIDSize;\r\n    totalSize += icUIDSize;\r\n    // ImplementationVersionName\r\n    const ivn = getDataElement('ImplementationVersionName');\r\n    let ivnSize = getDataElementPrefixByteSize(ivn.vr, false);\r\n    const ivnValue = 'DWV_' + getDwvVersion();\r\n    ivnSize += this.#setElementValue(ivn, [ivnValue], false);\r\n    metaElements.push(ivn);\r\n    metaLength += ivnSize;\r\n    totalSize += ivnSize;\r\n\r\n    // sort elements\r\n    const elemSortFunc = function (a, b) {\r\n      return tagCompareFunction(a.tag, b.tag);\r\n    };\r\n    metaElements.sort(elemSortFunc);\r\n    rawElements.sort(elemSortFunc);\r\n\r\n    // create the FileMetaInformationGroupLength element\r\n    const fmigl = getDataElement('FileMetaInformationGroupLength');\r\n    let fmiglSize = getDataElementPrefixByteSize(fmigl.vr, false);\r\n    fmiglSize += this.#setElementValue(\r\n      fmigl, new Uint32Array([metaLength]), false);\r\n    totalSize += fmiglSize;\r\n\r\n    // create buffer\r\n    const buffer = new ArrayBuffer(totalSize);\r\n    const metaWriter = new DataWriter(buffer);\r\n    const dataWriter = new DataWriter(buffer, !isBigEndian);\r\n\r\n    let offset = 128;\r\n    // DICM\r\n    offset = metaWriter.writeUint8Array(offset, this.#encodeString('DICM'));\r\n    // FileMetaInformationGroupLength\r\n    offset = this.#writeDataElement(metaWriter, fmigl, offset, false);\r\n    // write meta\r\n    for (let j = 0, lenj = metaElements.length; j < lenj; ++j) {\r\n      offset = this.#writeDataElement(\r\n        metaWriter, metaElements[j], offset, false);\r\n    }\r\n\r\n    // check meta position\r\n    const preambleSize = 128 + 4;\r\n    const metaOffset = preambleSize + fmiglSize + metaLength;\r\n    if (offset !== metaOffset) {\r\n      logger.warn('Bad size calculation... meta offset: ' + offset +\r\n        ', calculated size:' + metaOffset +\r\n        ' (diff:' + (offset - metaOffset) + ')');\r\n    }\r\n\r\n    // write non meta\r\n    for (let k = 0, lenk = rawElements.length; k < lenk; ++k) {\r\n      offset = this.#writeDataElement(\r\n        dataWriter, rawElements[k], offset, isImplicit);\r\n    }\r\n\r\n    // check final position\r\n    if (offset !== totalSize) {\r\n      logger.warn('Bad size calculation... final offset: ' + offset +\r\n        ', calculated size:' + totalSize +\r\n        ' (diff:' + (offset - totalSize) + ')');\r\n    }\r\n    // return\r\n    return buffer;\r\n  }\r\n\r\n  /**\r\n   * Set a DICOM element value according to its VR (Value Representation).\r\n   *\r\n   * @param {DataElement} element The DICOM element to set the value.\r\n   * @param {object} value The value to set.\r\n   * @param {boolean} isImplicit Does the data use implicit VR?\r\n   * @param {number} [bitsAllocated] Bits allocated used for pixel data.\r\n   * @returns {number} The total element size.\r\n   */\r\n  #setElementValue(\r\n    element, value, isImplicit, bitsAllocated) {\r\n    // byte size of the element\r\n    let size = 0;\r\n    // special sequence case\r\n    if (element.vr === 'SQ') {\r\n\r\n      if (value !== null && value !== 0) {\r\n        const newItems = [];\r\n        let name;\r\n\r\n        // explicit or undefined length sequence\r\n        let undefinedLength = false;\r\n        if (typeof element.undefinedLength !== 'undefined') {\r\n          undefinedLength = element.undefinedLength;\r\n          delete element.undefinedLength;\r\n        }\r\n\r\n        // items\r\n        for (let i = 0; i < value.length; ++i) {\r\n          const oldItemElements = value[i];\r\n          const newItemElements = {};\r\n          let subSize = 0;\r\n\r\n          // check data\r\n          if (oldItemElements === null || oldItemElements === 0) {\r\n            continue;\r\n          }\r\n\r\n          // elements\r\n          const itemKeys = Object.keys(oldItemElements);\r\n          for (let j = 0, lenj = itemKeys.length; j < lenj; ++j) {\r\n            const itemKey = itemKeys[j];\r\n            const subElement = oldItemElements[itemKey];\r\n            subElement.tag = getTagFromKey(itemKey);\r\n\r\n            if (isItemTag(subElement.tag)) {\r\n              continue;\r\n            }\r\n            // set item value\r\n            subSize += this.#setElementValue(\r\n              subElement, subElement.value, isImplicit, bitsAllocated);\r\n            newItemElements[itemKey] = subElement;\r\n            // add prefix size\r\n            subSize += getDataElementPrefixByteSize(\r\n              subElement.vr, isImplicit);\r\n          }\r\n\r\n          // add item element (used to store its size)\r\n          const itemElement = {\r\n            tag: getItemTag(),\r\n            vr: 'NONE',\r\n            vl: subSize,\r\n            value: []\r\n          };\r\n          if (undefinedLength) {\r\n            itemElement.undefinedLength = undefinedLength;\r\n          }\r\n          name = itemElement.tag.getKey();\r\n          newItemElements[name] = itemElement;\r\n          subSize += getDataElementPrefixByteSize(\r\n            itemElement.vr, isImplicit);\r\n\r\n          // add item delimitation size\r\n          if (undefinedLength) {\r\n            subSize += getDataElementPrefixByteSize(\r\n              'NONE', isImplicit);\r\n          }\r\n\r\n          size += subSize;\r\n          newItems.push(newItemElements);\r\n        }\r\n\r\n        // add sequence delimitation size\r\n        if (undefinedLength) {\r\n          size += getDataElementPrefixByteSize('NONE', isImplicit);\r\n        }\r\n\r\n        // update sequence element\r\n        element.value = newItems;\r\n        element.vl = size;\r\n        if (undefinedLength) {\r\n          element.undefinedLength = undefinedLength;\r\n        }\r\n      }\r\n    } else {\r\n      // pad if necessary\r\n      if (isVrToPad(element.vr)) {\r\n        const padStr = getVrPad(element.vr);\r\n        // encode string\r\n        // TODO: not sure for UN...\r\n        if (isStringVr(element.vr)) {\r\n          let pad;\r\n          if (isCharSetStringVR(element.vr)) {\r\n            value = this.#encodeSpecialString(value.join('\\\\'));\r\n            pad = this.#encodeSpecialString(padStr);\r\n          } else {\r\n            value = this.#encodeString(value.join('\\\\'));\r\n            pad = this.#encodeString(padStr);\r\n          }\r\n          if (!isEven(value.length)) {\r\n            value = uint8ArrayPush(value, pad);\r\n          }\r\n        } else if (element.vr === 'OB') {\r\n          value = padOBValue(value);\r\n        }\r\n      }\r\n\r\n      // calculate byte size\r\n      size = 0;\r\n      if (element.vr === 'AT') {\r\n        size = 4 * value.length;\r\n      } else if (element.vr === 'xs') {\r\n        size = value.length * Uint16Array.BYTES_PER_ELEMENT;\r\n      } else if (isTypedArrayVr(element.vr) || element.vr === 'ox') {\r\n        if (isPixelDataTag(element.tag) &&\r\n          Array.isArray(value)) {\r\n          size = 0;\r\n          for (let b = 0; b < value.length; ++b) {\r\n            size += value[b].length;\r\n          }\r\n        } else {\r\n          size = value.length;\r\n        }\r\n\r\n        // convert size to bytes\r\n        const vrType = vrTypes[element.vr];\r\n        if (isPixelDataTag(element.tag) || element.vr === 'ox') {\r\n          if (element.undefinedLength) {\r\n            const itemPrefixSize =\r\n              getDataElementPrefixByteSize('NONE', isImplicit);\r\n            // offset table\r\n            size += itemPrefixSize;\r\n            // pixel items\r\n            size += itemPrefixSize * value.length;\r\n            // add sequence delimitation size\r\n            size += itemPrefixSize;\r\n          } else {\r\n            // use bitsAllocated for pixel data\r\n            // no need to multiply for 8 bits\r\n            if (typeof bitsAllocated !== 'undefined') {\r\n              if (bitsAllocated === 1) {\r\n                // binary data\r\n                size /= 8;\r\n              } else if (bitsAllocated === 16) {\r\n                size *= Uint16Array.BYTES_PER_ELEMENT;\r\n              }\r\n            }\r\n          }\r\n        } else if (typeof vrType !== 'undefined') {\r\n          const bpe = getBpeForVrType(vrType);\r\n          if (typeof bpe !== 'undefined') {\r\n            size *= bpe;\r\n          } else {\r\n            throw Error('Unknown bytes per element for VR type: ' + vrType);\r\n          }\r\n        } else {\r\n          throw Error('Unsupported element: ' + element.vr);\r\n        }\r\n      } else {\r\n        size = value.length;\r\n      }\r\n\r\n      element.value = value;\r\n      element.vl = size;\r\n    }\r\n\r\n    // return the size of that data\r\n    return size;\r\n  }\r\n\r\n} // class DicomWriter\r\n\r\n/**\r\n * Fix for broken DICOM elements: Replace \"UN\" with correct VR if the\r\n * element exists in dictionary\r\n *\r\n * @param {DataElement} element The DICOM element.\r\n */\r\nfunction checkUnknownVR(element) {\r\n  if (element.vr === 'UN') {\r\n    const dictVr = element.tag.getVrFromDictionary();\r\n    if (typeof dictVr !== 'undefined' && element.vr !== dictVr) {\r\n      element.vr = dictVr;\r\n      logger.info('Element ' + element.tag.getGroup() +\r\n        ' ' + element.tag.getElement() +\r\n        ' VR changed from UN to ' + element.vr);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Get a DICOM element from its tag name (value set separatly).\r\n *\r\n * @param {string} tagName The string tag name.\r\n * @returns {DataElement} The DICOM element.\r\n */\r\nfunction getDataElement(tagName) {\r\n  const tag = getTagFromDictionary(tagName);\r\n  const element = new DataElement(tag.getVrFromDictionary());\r\n  element.tag = tag;\r\n  return element;\r\n}\r\n\r\n/**\r\n * Get the number of bytes per element for a given VR type.\r\n *\r\n * @param {string} vrType The VR type as defined in the dictionary.\r\n * @returns {number} The bytes per element.\r\n */\r\nfunction getBpeForVrType(vrType) {\r\n  let bpe;\r\n  if (vrType === 'Uint8') {\r\n    bpe = Uint8Array.BYTES_PER_ELEMENT;\r\n  } else if (vrType === 'Uint16') {\r\n    bpe = Uint16Array.BYTES_PER_ELEMENT;\r\n  } else if (vrType === 'Int16') {\r\n    bpe = Int16Array.BYTES_PER_ELEMENT;\r\n  } else if (vrType === 'Uint32') {\r\n    bpe = Uint32Array.BYTES_PER_ELEMENT;\r\n  } else if (vrType === 'Int32') {\r\n    bpe = Int32Array.BYTES_PER_ELEMENT;\r\n  } else if (vrType === 'Float32') {\r\n    bpe = Float32Array.BYTES_PER_ELEMENT;\r\n  } else if (vrType === 'Float64') {\r\n    bpe = Float64Array.BYTES_PER_ELEMENT;\r\n  } else if (vrType === 'Uint64') {\r\n    bpe = BigUint64Array.BYTES_PER_ELEMENT;\r\n  } else if (vrType === 'Int64') {\r\n    bpe = BigInt64Array.BYTES_PER_ELEMENT;\r\n  }\r\n  return bpe;\r\n}\r\n\r\n/**\r\n * Get the DICOM elements from a 'simple' DICOM json tags object.\r\n * The json is a simplified version of the oficial DICOM json with\r\n * tag names instead of keys and direct values (no value property) for\r\n * simple tags. See synthetic test data (in tests/dicom) for examples.\r\n *\r\n * @param {Object<string, any>} jsonTags The DICOM\r\n *   json tags object.\r\n * @returns {Object<string, DataElement>} The DICOM elements.\r\n */\r\nexport function getElementsFromJSONTags(jsonTags) {\r\n  const keys = Object.keys(jsonTags);\r\n  const dataElements = {};\r\n  for (let k = 0, len = keys.length; k < len; ++k) {\r\n    // get the DICOM element definition from its name\r\n    const tag = getTagFromDictionary(keys[k]);\r\n    if (typeof tag === 'undefined') {\r\n      continue;\r\n    }\r\n    const vr = tag.getVrFromDictionary();\r\n    // tag value\r\n    let value;\r\n    let undefinedLength = false;\r\n    const jsonTag = jsonTags[keys[k]];\r\n    if (vr === 'SQ') {\r\n      const items = [];\r\n      if (typeof jsonTag.undefinedLength !== 'undefined') {\r\n        undefinedLength = jsonTag.undefinedLength;\r\n      }\r\n      if (typeof jsonTag.value !== 'undefined' &&\r\n        jsonTag.value !== null) {\r\n        for (let i = 0; i < jsonTag.value.length; ++i) {\r\n          items.push(getElementsFromJSONTags(jsonTag.value[i]));\r\n        }\r\n      } else {\r\n        logger.trace('Undefined or null jsonTag SQ value.');\r\n      }\r\n      value = items;\r\n    } else {\r\n      if (Array.isArray(jsonTag)) {\r\n        value = jsonTag;\r\n      } else {\r\n        value = [jsonTag];\r\n      }\r\n    }\r\n    // create element\r\n    const dataElement = new DataElement(vr);\r\n    dataElement.tag = tag;\r\n    dataElement.value = value;\r\n    if (undefinedLength) {\r\n      dataElement.undefinedLength = undefinedLength;\r\n    }\r\n    // store\r\n    dataElements[tag.getKey()] = dataElement;\r\n  }\r\n  // return\r\n  // @ts-expect-error\r\n  return dataElements;\r\n}\r\n"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE__436__","__WEBPACK_EXTERNAL_MODULE__626__","__WEBPACK_EXTERNAL_MODULE__812__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","Index","constructor","values","Error","length","every","val","isNaN","i","toString","getValues","slice","canCompare","rhs","equals","leni","compare","diffDims","push","add","getWithNew2D","j","l","lenl","toStringId","dims","ii","res","getIndexFromStringId","inputStr","strIds","split","dim","pointLength","parseInt","substring","Array","fill","RescaleLut","rsi","bitsStored","Math","pow","getRSI","isReady","initialise","Float32Array","apply","getLength","getValue","offset","defaultPresets","CT","mediastinum","center","width","lung","bone","brain","head","WindowCenterAndWidth","c","getCenter","getWidth","setRange","min","max","setSignedOffset","WindowLut","rescaleLut","isSigned","getWindowLevel","getRescaleLut","setWindowLevel","wl","size","getSlope","update","Uint8ClampedArray","lut_range_max","buildLut","func","lut","id","invId","ColourMap","red","green","blue","luts","plain","invPlain","rainbow","hot","third","hot_iron","pet","hot_metal_blue","pet_20step","logger","levels","TRACE","DEBUG","INFO","WARN","ERROR","level","trace","msg","console","debug","info","warn","error","getShadowColour","hexColour","hexStr","rgbTriplet","g","b","isDarkColour","d65","x","y","z","colourNameToHex","name","dict","Yellow","Red","White","Green","Blue","Lime","Fuchsia","Black","Vector3D","getX","getY","getZ","norm","sqrt","crossProduct","vector3D","dotProduct","BIG_EPSILON","Number","EPSILON","isSimilar","tol","abs","Matrix33","row","col","getInverse","m","m00","m01","m02","m10","m11","m12","m20","m21","m22","a1212","a2012","a0112","det","getMatrixInverse","p","str","multiply","tmp","k","getAbs","multiplyArray3D","array3D","multiplyVector3D","multiplyPoint3D","point3D","Point3D","multiplyIndex3D","index3D","getRowAbsMax","absMax","index","indexOf","getColAbsMax","asOneAndZeros","sign","getThirdColMajorDirection","getIdentityMat33","getCoronalMat33","getMatrixFromName","matrix","Point2D","getDistance","point2D","getRound","round","minus","Point","get3D","values0","values1","mergeWith3D","dictionary","addTagsToDictionary","group","tags","tagGroups","vr32bitVL","OB","OD","OF","OL","OV","OW","SQ","SV","UC","UN","UR","UT","UV","ox","is32bitVLVR","vr","vrCharSetString","SH","LO","ST","LT","PN","isCharSetStringVR","vrTypes","AE","AS","AT","CS","DA","DS","DT","FL","FD","IS","SL","SS","TM","UI","UL","US","Tag","element","getGroup","getElement","getKey","getNameFromDictionary","getGroupName","isWithVR","isPrivate","getInfoFromDictionary","getVrFromDictionary","getTagFromKey","getItemTag","isItemTag","tag","isSequenceDelimitationItemTag","getPixelDataTag","isPixelDataTag","getTagFromDictionary","tagName","keys0","keys","keys1","foundTag","k0","lenK0","k1","lenK1","flipArrayEndianness","array","blen","byteLength","u8","Uint8Array","buffer","byteOffset","bpe","BYTES_PER_ELEMENT","DataReader","Int8Array","Int16Array","isNativeLittleEndian","isLittleEndian","DataView","readUint16","getUint16","readInt16","getInt16","readUint32","getUint32","readBigUint64","getBigUint64","readInt32","getInt32","readBigInt64","getBigInt64","readFloat32","getFloat32","readFloat64","getFloat64","readBinaryArray","bitArray","byteArrayLength","data","bitNumber","bitIndex","floor","readUint8Array","readInt8Array","readUint16Array","Uint16Array","arraySize","readInt16Array","readUint32Array","Uint32Array","readUint64Array","BigUint64Array","readInt32Array","Int32Array","readInt64Array","BigInt64Array","readFloat32Array","readFloat64Array","Float64Array","readHex","toUpperCase","startsWith","search","rawPos","pos","endsWith","getFlags","flags","regex","match","exec","replaceFlags","valueObj","valueStr","toPrecision","unit","flag","replace","getFileExtension","filePath","ext","pathSplit","toLowerCase","pop","test","includes","stringToUint8Array","arr","charCodeAt","precisionRound","number","precision","factor","delta","arraySortEquals","arr0","arr1","arrayEquals","sort","uint8ArrayToString","String","fromCharCode","findInArraySubset","callbackFn","start","end","getFindArrayInArrayCallback","buildMultipart","parts","boundary","lineBreak","partsSize","headers","headerStr","partKeys","header","trailer","set","DataElement","vl","undefinedLength","startOffset","endOffset","items","getDwvVersion","hasDicomPrefix","reduce","previous","current","ZWS","DefaultTextDecoder","decode","result","getReverseOrientation","ori","rlabels","L","R","A","P","H","F","rori","getOrientationName","orientation","isImplicitTransferSyntax","syntax","isBigEndianTransferSyntax","isJpegBaselineTransferSyntax","isJpegLosslessTransferSyntax","isJpeg2000TransferSyntax","isRleTransferSyntax","getTypedArray","bitsAllocated","pixelRepresentation","RangeError","powerOf2","log","getDataElementPrefixByteSize","isImplicit","DicomParser","getDefaultCharacterSet","setDefaultCharacterSet","characterSet","setDecoderCharacterSet","TextDecoder","getDicomElements","reader","implicit","itemData","item","isSeqDelim","isItemDelim","offsetTableVl","readTagRes","is32bitVL","concat","isKnownVR","pixItemData","sqEndOffset","vrType","from","stream","lastIndex","trim","cleanString","raw","stri","stri1","subElement","elements","parse","dataElement","metaReader","dataReader","magicword","metaEnd","tsElement","firstDataElement","oEightGroupLittleEndian","vr0","vr1","guessTransferSyntax","isReadSupportedTransferSyntax","isJpegRetiredTransferSyntax","isJpeglsTransferSyntax","getTransferSyntaxName","charSetTerm","label","getUtfLabel","numberOfFrames","pixItems","nItemPerFrame","newPixItems","f","newBuffer","fragOffset","ListenerHandler","type","callback","remove","splice","fireEvent","event","stack","range","dataAccessor","maxIter","increment","blockMaxIter","blockIncrement","reverse1","reverse2","nextIndex","finalBlockIncrement","mainCount","blockCount","next","done","getIteratorValues","iterator","ival","getSliceIterator","image","position","isRescaled","viewOrientation","getGeometry","getSize","dirMax2Index","posValues","posStart","map","indexToOffset","getRescaledValueAtOffset","getValueAtOffset","ncols","nrows","nslices","sliceSize","getDimSize","ncomp","getNumberOfComponents","isPlanar","getPlanarConfiguration","getRange","iters","r0","r1","r2","range3d","rangeObj","dirMax0","dirMax2","simpleRange","componentIncrement","nextIndex1","nextIndex2","simpleRange3d","colourRange","colours","nextColourIndex","colour","RescaleSlopeAndIntercept","slope","intercept","getIntercept","isID","Size","moreThanOne","dimension","canScroll3D","canScroll","getTotalSize","isInBounds","dirs","offsetToIndex","off","dimSize","get2D","Spacing","Geometry","origin","spacing","time","getInitialTime","getCurrentTotalNumberOfSlices","count","hasSlicesAtTime","getCurrentNumberOfSlicesBeforeTime","getOrigin","getOrigins","includesOrigin","getOrientedArray3D","geoSliceSpacing","getSliceGeometrySpacing","getSpacing","orientedValues","getRealSpacing","getOrientation","getSliceIndex","point","localOrigins","closestSliceIndex","minDist","dist","closestOrigin","pointDir","appendOrigin","appendFrame","sizeValues","spacingValues","isIndexInBounds","worldToIndex","indexToWorld","orientedPoint3D","pointToWorld","worldToPoint","getDeOrientedArray3D","origins","withCheck","invOrientation","origin1","origin2","sliceSpacing","deltas","diff","sumReducer","sum","mean","toFixed","getImage2DSize","rows","columns","TagValueExtractor","getTime","_elements","ImageFactory","checkElements","dataElements","create","pixelBuffer","numberOfFiles","size2D","frames","rowSpacing","columnSpacing","parseFloat","getPixelSpacing","jpeg2000","jpegBase","jpegLoss","imagePositionPatient","slicePosition","imageOrientationPatient","orientationMatrix","rowCosines","colCosines","normal","geometry","sopInstanceUid","siu","samplesPerPixel","spp","bufferSize","Image","photometricInterpretation","photo","setPhotometricInterpretation","planarConfiguration","setPlanarConfiguration","rescaleSlope","rescaleIntercept","setRescaleSlopeAndIntercept","meta","modality","Modality","sopClassUID","SOPClassUID","studyUID","StudyInstanceUID","seriesUID","SeriesInstanceUID","bits","BitsStored","pixelRep","PixelRepresentation","IsSigned","pixelUnit","getPixelUnit","frameOfReferenceUID","FrameOfReferenceUID","windowPresets","windowCenter","windowWidth","windowCWExplanation","getPhotometricInterpretation","redLutElement","greenLutElement","blueLutElement","redLut","greenLut","blueLut","descriptor","doScale","descSize","vlSize","scaleTo8","clone","paletteLut","recommendedDisplayFrameRate","RecommendedDisplayFrameRate","setMeta","equalPosPat","pos1","pos2","JSON","stringify","checkTag","tagDefinition","tagValue","isArray","enum","RequiredDicomSegTags","getCode","code","meaning","longValue","urnValue","schemeDesignator","getSegment","segment","algorithmType","algorithmName","displayValue","cielabElement","rgb","triplet","gammaFunc","ciexyzToSrgb","invLabFunc","illuminant","l0","cielabToCiexyz","cielabToSrgb","propertyCategoryCode","propertyTypeCode","trackingId","trackingUid","getSpacingFromMeasure","pixelSpacing","getSegmentFrameInfo","derivationImages","derivationImageSq","sourceImages","sourceImageSq","sourceImage","referencedSOPClassUID","referencedSOPInstanceUID","dimIndex","refSegmentNumber","imagePosPat","frameInfo","framePlaneOrientationSeq","frameImageOrientation","framePixelMeasuresSeq","frameSpacing","MaskFactory","_dicomElements","framesElem","orgSq","orgUID","indices","indexSqElem","indexSq","indexPointer","indexOrg","DimensionOrganizationUID","DimensionIndexPointer","DimensionDescriptionLabel","organizations","getDimensionOrganization","segSequence","segments","storeAsRGB","sharedFunctionalGroupsSeq","funcGroup0","planeOrientationSeq","pixelMeasuresSeq","includesPosPat","some","arrVal","findIndexPosPat","findIndex","perFrameFuncGroupSequence","frameInfos","framePosPats","p1","p2","getComparePosPat","point3DFromArray","frameOrigins","newSpacing","tmpGeometry","isNotSmall","REAL_WORLD_EPSILON","posPats","sliceIndex","frameOrigin","distPrevious","numberOfSlices","uids","getFindSegmentFunc","mul","sliceOffset","frameOffset","pixelValue","find","reqTag","getDefaultDicomSegJson","StudyDate","StudyTime","StudyID","SeriesNumber","ReferringPhysicianName","PatientName","PatientID","PatientBirthDate","PatientSex","Manufacturer","ManufacturerModelName","DeviceSerialNumber","SoftwareVersions","DimensionOrganizationSequence","DimensionIndexSequence","custom","SOPInstanceUID","lossyImageCompression","LossyImageCompression","createImage","createMaskImage","imageUids","getImageUid","uid","getSecondaryOffset","getBuffer","canQuantify","canWindowLevel","nFiles","getRescaleSlopeAndIntercept","isConstantRSI","inRsi","isIdentityRSI","interp","config","getMeta","getOffsets","offsets","equal","hasValues","finalValues","v1","equalFunc","getEqualCallback","valuesToFind","indicesToRemove","v","clonedBuffer","copy","tmpBuffer","appendSlice","rhsSize","timeId","isNewFrame","volumeGeometry","sliceGeometry","fullBufferSize","fullSliceIndex","indexOffset","maxOffset","subarray","numberOfImages","rhsPresets","pkey","rhsPreset","windowPreset","perslice","appendFrameBuffer","frameBuffer","frameIndex","frameSize","getDataRange","calculateDataRange","getRescaledDataRange","calculateRescaledDataRange","getHistogram","calculateHistogram","dataRange","rescaledDataRange","histogram","addEventListener","removeEventListener","setAtOffsets","setAtOffsetsAndGetOriginals","offsetsLists","originalColoursLists","previousColour","originalColours","currentColour","setAtOffsetsWithIterator","getValueAtIndex","getRescaledValue","getRescaledValueAtIndex","resmin","resmax","rmin","rmax","rvalue","histo","convolute2D","weights","newImage","imgSize","dimOffset","convoluteBuffer","componentOffset","wOff","wOff00","wOff0x","wOff0n","wOffx0","wOffxn","wOffn0","wOffnx","wOffnn","pixelOffset","newValue","wOffFinal","wi","transform","operator","compose","ViewFactory","view","View","setDefaultColourMap","minmax","preset","setWindowPresets","init","viewEventNames","createView","getCurrentIndex","setCurrentIndex","getImage","setImage","inImage","setOrientation","mat33","setInitialIndex","getPlaybackMilliseconds","_value","_index","getAlphaFunction","setAlphaFunction","getCurrentWindowLut","currentIndex","setWindowLevelPresetById","wlut","windowLut","addWindowLut","lutWl","wc","ww","skipGenerate","getWindowPresets","getWindowPresetsNames","presets","addWindowPresets","getColourMap","setColourMap","getCurrentPosition","canSetPosition","getScrollIndex","originIndex","setCurrentPosition","silent","valid","minLen","maxLen","posEvent","imageUid","pixValue","newWl","isNewWidth","isNewCenter","setWindowLevelPreset","getWindowLevelMinMax","setWindowLevelMinMax","generateImageData","photoInterpretation","alphaFunc","colourMap","pxValue","generateImageDataMonochrome","is16BitsStored","to8","generateImageDataPaletteColor","generateImageDataRgb","cb","cr","generateImageDataYbrFull","incrementIndex","incr","newIndex","decrementIndex","decrementScrollIndex","incrementScrollIndex","PlaneHelper","imageOrientation","targetOrientation","getTargetOrientation","getOffset3DFromPlaneOffset","offset2D","planeOffset","getTargetDeOrientedVector3D","getPlaneOffsetFromOffset3D","offset3D","getTargetOrientedVector3D","vector","planeVector","getTargetDeOrientedPoint3D","planePoint","getImageOrientedVector3D","getImageOrientedPoint3D","getImageDeOrientedVector3D","getImageDeOrientedPoint3D","getTargetOrientedPositiveXYZ","getNativeScrollIndex","MaskSegmentHelper","mask","hasSegment","segmentNumber","maskHasSegments","numbers","unknowns","getSegments","setSegments","list","setHiddenSegments","isHidden","addToHidden","removeFromHidden","getAlphaFunc","hiddenColours","deleteSegment","cmdCallback","exeCallback","delcmd","DeleteSegmentCommand","onExecute","onUndo","isValid","execute","getName","segmentnumber","undo","_event","ViewController","getPlaneHelper","isMask","getMaskSegmentHelper","applyHiddenSegments","setViewAlphaFunction","getPositionFromPlanePoint","getWindowLevelPresetsNames","addWindowLevelPresets","isPlaying","getCurrentOrientedIndex","getCurrentScrollIndexValue","getCurrentScrollPosition","scrollIndex","img","get2DSpacing","getRescaledImageValue","getImageRegionValues","rescaled","sliceValues","sliceOrigin","iter","rangeNumberOfColumns","regionSize","regionOffset","regionElementCount","rangeRegion","getRegionSliceIterator","getImageVariableRegionValues","regions","offsetRegions","region","regionIndex","regionCount","rangeRegions","getVariableRegionSliceIterator","canQuantifyImage","getImageSize","getImageWorldSize","getImageRescaledDataRange","equalImageMeta","imageMeta","metaKeys","metaKey","getPlanePositionFromPosition","getPlanePositionFromPlanePoint","play","milliseconds","setInterval","canDoMore","stop","clearInterval","setColourMapFromName","dataid","InteractionEventNames","customUI","openRoiDialog","textExpr","prompt","getTouchesPositions","touches","offsetLeft","offsetTop","target","offsetParent","positions","pageX","pageY","getEventOffset","targetTouches","changedTouches","offsetX","offsetY","canCreateCanvas","height","testCvs","document","createElement","cropCvs","testCtx","getContext","cropCtx","fillRect","drawImage","getImageData","ViewLayer","containerDiv","className","getDataIndex","enableImageSmoothing","setView","getViewController","onimageset","onimagechange","getId","getBaseSize","getOpacity","setOpacity","alpha","addFlipOffsetX","addFlipOffsetY","setScale","newScale","helper","orientedNewScale","finalNewScale","resetOffset","worldCenter","newOffset","getScaledOffset","newZoomOffset","setBaseOffset","scrollOffset","needsUpdate","setOffset","planeNewOffset","displayToPlaneIndex","planePos","displayToPlanePos","displayToPlaneScale","deScaled","planePosToDisplay","displayToMainPlanePos","display","style","isVisible","draw","layerid","globalAlpha","clear","setTransform","imageSmoothingEnabled","appendChild","alert","clearRect","createImageData","fitToContainer","fitScale1D","fitSize","fitOffset","needsDraw","previousFitScale","previousScale","newFitScale","newViewOffset","newFlipOffset","bindInteraction","pointerEvents","names","passive","unbindInteraction","srclayerid","putImageData","dims3D","indexScrollIndex","filter","save","restore","Style","getFontFamily","getFontSize","getStrokeWidth","getTextColour","getLineColour","setLineColour","setBaseScale","scale","setZoomScale","getBaseScale","getZoomScale","applyZoomScale","getShadowOffset","getTagOpacity","getTextPadding","getFontStr","getLineHeight","getScaledFontSize","getScaledStrokeWidth","getShadowLineColour","getShapeDisplayName","shape","displayName","Konva","points","DrawGroupCommand","layer","getParent","MoveGroupCommand","translation","move","minusTrans","ChangeGroupCommand","startAnchor","endAnchor","viewController","DeleteGroupCommand","isNodeNameShape","node","isNodeNameShapeExtra","isNodeNameLabel","isPositionNode","isNodeWithId","canNodeChangeColour","DrawController","konvaLayer","getCurrentPosGroup","posGroups","getChildren","posGroup","visible","reset","findOne","activateDrawLayer","getDrawDisplayDetails","groups","lenj","collec","text","shapeExtrakids","closed","extraName0","color","stroke","getDrawStoreDetails","drawingsDetails","posKids","anchors","texts","setDrawings","drawings","statePosGroups","statePosGroup","statePosKids","stateGroup","cmd","details","getText","setText","quantification","updateDraw","drawDetails","shapes","shapesExtra","shadowColor","kids","setVisible","deleteDrawGroup","shapeDisplayName","deleteDraw","deleteDraws","DrawLayer","getKonvaStage","getKonvaLayer","getLayers","getDrawController","setPlaneHelper","opacity","container","listening","getContent","setAttribute","isGroupVisible","toggleGroupVisibility","ratioX","ratioY","labels","getLayerDetailsFromEvent","layerDiv","closest","idString","groupDivId","layerId","getLayerDetailsFromLayerDivId","indexCenter","LayerGroup","setTargetOrientation","getShowCrosshair","setShowCrosshair","getDivId","getScale","getAddedScale","getOffset","getNumberOfLayers","getActiveViewLayer","getViewLayersByDataIndex","searchViewLayers","getViewDataIndices","getActiveDrawLayer","getDrawLayersByDataIndex","setActiveViewLayer","setActiveViewLayerByDataIndex","setActiveDrawLayer","setActiveDrawLayerByDataIndex","addViewLayer","viewLayerIndex","div","append","addDrawLayer","viewLayer","updateLayersToPositionChange","drawLayer","empty","getElementsByClassName","layer0","p2D","displayPos","lineH","offsetWidth","left","top","lineV","offsetHeight","getElementById","baseViewLayerOrigin0","baseViewLayerOrigin","hasSetOffset","vc","origin0","scrollDiff","planeDiff","hasSetPos","calculateFitScale","maxSize","getMaxSize","setFitScale","scaleIn","containerSize","flipScaleZ","addScale","scaleStep","addTranslation","binderList","WindowLevelBinder","getEventType","getCallback","layerGroup","viewLayers","PositionBinder","pointValues","currentPos","currentDims","inputDims","ZoomBinder","OffsetBinder","OpacityBinder","Stage","getLayerGroup","getNumberOfLayerGroups","getActiveLayerGroup","addLayerGroup","htmlElement","isBound","unbindLayerGroups","bindLayerGroups","getLayerGroupByDivId","setBinders","syncLayerGroupScale","minScale","hasScale","binder","binderObj","elem","State","toJSON","app","drawController","version","toObject","fromJSON","json","baseScale","scaleCenter","originX","originY","oldTx","oldTy","render","v02DAndD","inputDrawings","newDrawings","drawGroups","drawGroup","lenk","lenf","newFrameDrawings","leng","kshape","ktick0","ktick1","karcs","ktexts","ktext","klabel","txtLen","quant","surface","angle","longText","v01Tov02DrawingsAndDetails","v02Tov03Drawings","v03Tov04DrawingsDetails","v04Tov05Data","v04Tov05Drawings","groupDetails","v02Tov03DrawingsDetails","groupShapes","parentGroup","groupDrawings","currentPosition","draggable","forEach","gnode","detail","children","ids","attrs","sliceNumber","frameNumber","newId","getUrlFromUri","uri","URL","window","location","splitUri","sepIndex","base","hashIndex","query","pairs","pair","splitKeyValueString","UndoStack","getStackSize","getCurrentStackIndex","command","redo","ToolboxController","toolList","getToolList","hasTool","getSelectedTool","getSelectedToolEventHandler","eventType","setSelectedTool","activate","setToolFeatures","setFeatures","bindLayer","layerGroupDivId","applySelectedTool","_x","_y","_x1","_y1","augmentEventOffsets","MultiProgressHandler","setNumberOfDimensions","num","setNToLoad","onprogress","lengthComputable","subindex","percent","loaded","total","source","lenprog","getMonoProgressHandler","getUndefinedMonoProgressHandler","UrlsLoader","request","loader","onload","onloadend","load","options","onloadstart","status","onerror","responseURL","statusText","response","mproghandler","loaders","loaderList","foundLoader","canLoadUrl","setOptions","defaultCharacterSet","onloaditem","onabort","lastRunRequestIndex","requestOnLoadEnd","send","XMLHttpRequest","open","requestHeaders","setRequestHeader","withCredentials","loadUrlAs","responseType","batchSize","dicomDirUrl","urls","parser","dirSeq","records","series","study","recType","refFileIds","join","getFileListFromDicomDir","rootUrl","fullUrls","abort","readyState","isLoading","ThreadPool","poolSize","taskQueue","freeThreads","WorkerThread","runningThreads","addWorkerTask","workerTask","onworkstart","workerThread","shift","run","onworkend","onTaskEnd","onwork","handleWorkerError","onworkitem","parentPool","random","runningTask","worker","Worker","script","onmessage","postMessage","startMessage","terminate","itemNumber","numberOfItems","dataIndex","WorkerTask","message","hasJpegBaselineDecoder","JpegImage","hasJpegLosslessDecoder","jpeg","lossless","hasJpeg2000Decoder","JpxImage","decoderScripts","rle","AsynchPixelBufferDecoder","_numberOfData","pixelMeta","ondecodestart","ondecodeditem","ondecoded","ondecodeend","SynchPixelBufferDecoder","algoName","numberOfData","decoder","decodedBuffer","buf","Decoder","decoded","getData","tiles","dwvdecoder","RleDecoder","PixelBufferDecoder","DicomBufferToView","opt","decodedData","fullSize","convert","dicomParser","warning","algo","getSyntaxDecompressionName","needDecompression","columnsElement","rowsElement","samplesPerPixelElement","planarConfigurationElement","MemoryLoader","canLoadMemory","filename","imageDataToBuffer","imageData","dataLen","getDefaultImage","imageBuffer","imageSize","imageSpacing","canLoadFile","file","url","isDicom","urlObjext","pathname","hasNoExt","hasDcmExt","contentType","searchParams","mem","loadFileAs","fileContentTypes","ArrayBuffer","_opt","isJson","Text","memoryIO","progress","u8Array","partHeaderEndCb","partHeaderEndIndex","lines","boundaryStr","boundaryCb","boundaryLen","nextBoundaryIndex","part","partHeaderLines","line","semiColonIndex","dataBeginIndex","dataEndIndex","parseMultipart","_file","isMultipart","_mem","dataType","imageType","Blob","createObjectURL","domImage","canvas","ctx","lastModified","getViewFromDOMImage","src","isImage","hasImageExt","DataURL","bytes","videoDataStr","btoa","video","onloadedmetadata","videoWidth","videoHeight","ceil","duration","onseeked","imgBuffer","storeFrame","nextTime","currentTime","getViewFromDOMVideo","isVideo","content","unzipPercent","async","then","JSZip","zip","isZip","FilesLoader","FileReader","readAsText","readAsDataURL","readAsArrayBuffer","LoadController","loadFiles","files","loadURLs","loadImageObject","fileIO","urlIO","loadType","eventInfo","loadtype","loadId","loadid","isFirstItem","eventInfoItem","isfirstitem","DataController","addNew","dataToUpdate","idKey","obj1","obj2","valueKey","mergedObj1","merged","id1","id2","keys2","value1","subValue1","value2","subValue2","mergeObjects","ScrollWheel","wheel","scrollMin","deltaMode","deltaY","preventDefault","up","layerDetails","i18n","t","props","mm","cm2","degree","Line","begin","getBegin","getEnd","getDeltaX","getDeltaY","getWorldLength","spacingX","spacingY","wlen","dxs","dys","getMidpoint","getInclination","atan2","PI","quantify","getAngle","line0","line1","dx0","dy0","dx1","dy1","dot","getPerpendicularLine","beginX","beginY","endX","endY","dx","getStats","includesFullStatsFlags","stats","getSimpleStats","median","getPercentile","p25","p75","getFullStats","sumSqr","variance","stdDev","ratio","i0","v0","guid","getDefaultAnchor","radius","absRadius","strokeWidth","strokeScaleEnabled","radiusX","radiusY","dragOnTop","ShapeEditor","setFactoryList","setShape","inshape","isFactoryGroup","setViewController","getShape","isActive","setDrawEventCallback","enable","getLayer","disable","resetAnchors","anchor","setAnchorsActive","getAnchors","getStyle","parent","on","cancelBubble","evt","stageSize","boundNodePosition","validateAnchorPosition","chgcmd","addToUndoStack","moveToTop","changed","ROI","getPoint","addPoint","addPoints","RoiFactory","getNPoints","getTimeout","_viewController","roi","fontSize","fontFamily","px","py","kroi","textPos","Path","inputPointArray","inputControlPointIndexArray","pointArray","controlPointIndexArray","isControlPoint","addControlPoint","newPointArray","appenPath","other","oldSize","indexArray","BucketQueue","cost_functor","bucketCount","loc","cost","buckets","buildArray","bucket","getBucket","ret","isEmpty","newSize","__twothirdpi","gradUnitVector","gradX","gradY","out","oy","gvm","Scissors","curPoint","searchGranBits","searchGran","pointsPerPost","greyscale","laplace","gradient","parents","working","trained","trainingPoints","edgeWidth","trainingLength","edgeGran","edgeTraining","gradPointsNeeded","gradGran","gradTraining","insideGran","insideTraining","outsideGran","outsideTraining","getTrainingIdx","granularity","getTrainedEdge","edge","getTrainedGrad","grad","getTrainedInside","inside","getTrainedOutside","outside","setWorking","setDimensions","setData","dy","gradMagnitude","lap","computeGreyscale","computeLaplace","computeGradient","computeGradX","computeGradY","sides","guv","ix","iy","computeSides","findTrainingPoints","resetTraining","doTraining","calculateTraining","addInStaticGrad","input","output","maxVal","idx","len","gaussianBlur","have","need","gradDirection","qx","qy","__dgpuv","__gdquv","dp","dq","SQRT1_2","acos","dir","adj","sx","sy","ex","ey","setPoint","sp","visited","MAX_VALUE","pq","doWork","timeout","pointCount","newPoints","adjList","q","pqCost","Circle","centre","getRadius","getSurface","getWorldSurface","mulABC","centerX","centerY","rSquare","maxY","transX","quantif","Ellipse","getA","getB","radiusRatio","rySquare","Rectangle","getRealWidth","getRealHeight","getHeight","Threshold","getMin","setMin","getMax","setMax","setOriginalImage","getOriginalImage","imageMin","Sharpen","Sobel","RunFilterCommand","setLastImage","WindowLevel","sensitivity","mousedown","x0","y0","mousemove","diffX","diffY","pixelToIntensity","manual","mouseup","mouseout","touchstart","touchmove","touchend","dblclick","keydown","context","onKeydown","_bool","Scroll","yMove","xMove","setTimeout","clearTimeout","span","parentElement","createTextNode","features","displayTooltip","ZoomAndPan","twotouchdown","point0","point1","midPoint","tx","ty","twotouchmove","lineRatio","zoom","step","Opacity","op","Draw","trashLine1","trashLine2","stage","getIntersection","selectedShape","timer","shapeGroup","destroy","tmpPoints","finalPoints","finalShapeGroup","setShapeOn","body","cursor","lineColour","shapeGroups","ashape","mouseOnShape","dragStartPos","invscale","anchorMin","minX","minY","getAnchorMin","validateGroupPosition","updateQuantification","eventPos","trashHalfWidth","scaleX","trashHalfHeight","scaleY","tshape","mvcmd","currentTarget","groupId","getOptionsType","shapeColour","shapeName","hasShape","mouseOverCursor","getEventNames","listener","Filter","bool","getSelectedFilter","filterName","hasFilter","args","runArgs","getFilterList","Floodfill","setExtend","getExtend","threshold","simple","MagicWand","cs","icsl","extend","ini","jl","modifyThreshold","bl","setPoints","onThresholdChange","getAbsoluteScale","movedpoint","Livewire","pn","p0","results","_p","_q","toolOptions","ArrowFactory","linePerp0","linePerp1","hitFunc","beginPath","moveTo","lineTo","closePath","fillStrokeShape","beginTy","verticalLine","angleRad","kpoly","sin","cos","rotation","padding","shadowOffset","dX","dY","kline","ktriangle","bx","by","p2d0","p2d1","p2b","p2e","CircleFactory","circle","_style","kcircle","right","bottom","centerPoint","kshadow","maxX","pixelLine","EllipseFactory","ellipse","ellipseX","ellipseY","kellipse","topLeft","topRight","bottomRight","bottomLeft","radiusAbs","FreeHandFactory","tension","ProtractorFactory","pointsArray","inclination","midX","midY","karc","innerRadius","outerRadius","mid","mx","my","p2d2","arcPos","RectangleFactory","rectangle","rectX","rectY","rectWidth","rectHeight","krect","rect","rWidth","rHeight","RulerFactory","tickLen","ThresholdFilter","getLastImage","_args","SobelFilter","SharpenFilter","ViewConfig","divId","ToolConfig","AppOptions","dataViewConfigs","tools","binders","viewOnFirstLoadItem","App","addNewImage","getMetaData","getNumberOfLoadedData","getToolboxController","appToolList","toolName","toolParams","appToolOptions","optionName","optionClassName","toolNamespace","charAt","resetLayout","loadFromUri","getUriQuery","onLoadEnd","state","protocol","host","decodeURIComponent","manifest","rootURL","getElementsByTagName","getAttribute","patientList","studyList","seriesList","instanceList","link","decodeManifest","responseXML","decodeManifestQuery","replaceMode","repeatKeyReplaceMode","queryUri","inputQueryPairs","repeatKey","repeatList","baseUrl","gotOneArg","decodeKeyValueUri","dwvReplaceMode","decodeQuery","abortLoad","initWLDisplay","configs","getDataViewConfigs","setDataViewConfigs","dataKeys","divIds","viewConfigs","viewConfig","setLayerGroupsBinders","instances","cx","cy","translate","getJsonState","applyJsonState","jsonState","onResize","defaultOnKeydown","ctrlKey","shiftKey","resetDisplay","resetZoom","setTool","tool","isFirstLoadItem","eventMetaData","imageGeometry","getViewOrientation","isBaseLayer","spacing2D","major","DataWriter","writeUint8","setUint8","writeInt8","setInt8","writeUint16","setUint16","writeInt16","setInt16","writeUint32","setUint32","writeUint64","setBigUint64","writeInt32","setInt32","writeInt64","setBigInt64","writeFloat32","setFloat32","writeFloat64","setFloat64","writeHex","writeBinaryArray","byte","writeUint8Array","writeInt8Array","writeUint16Array","writeInt16Array","writeUint32Array","writeUint64Array","writeInt32Array","writeInt64Array","writeFloat32Array","writeFloat64Array","_uidCount","WriterRule","action","getUID","prefix","getDwvUIDPrefix","datePart","Date","toISOString","countPart","nonTagLength","tagNumber","isEven","isStringVr","uint8ArrayPush","newArr","DefaultTextEncoder","encode","DicomWriter","setUseUnVrForPrivateSq","default","setRules","rules","useSpecialTextEncoder","TextEncoder","useDefaultAnonymisationRules","Acquisition","Procedure","getElementToWrite","groupName","rule","writer","itemKeys","itemElement","itemDelimElement","hexString","hexString1","hexString2","atValue","finalValue","initialArray","initialArrayLength","arrayLength","flattenendArrayLength","flattenedArray","indexFlattenedArray","flattenArrayOfTypedArrays","isTagWithVR","undefinedLengthSequence","undefinedLengthItem","seqDelimElement","isBigEndian","oldscs","totalSize","localSize","metaElements","rawElements","metaLength","fmiglTag","fmivTag","icUIDTag","ivnTag","originalElement","checkUnknownVR","fmiv","getDataElement","fmivSize","icUID","icUIDSize","ivn","ivnSize","elemSortFunc","tagCompareFunction","fmigl","fmiglSize","metaWriter","dataWriter","metaOffset","newItems","oldItemElements","newItemElements","subSize","itemKey","padStr","pad","getVrPad","padOBValue","isTypedArrayVr","itemPrefixSize","getBpeForVrType","dictVr","getElementsFromJSONTags","jsonTags","jsonTag"],"sourceRoot":""}